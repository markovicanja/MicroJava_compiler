INFO  12:17:36,109 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:17:36,153 - #2 program
INFO  12:17:36,154 - #20 MJProgram
INFO  12:17:36,154 - #20 abc
INFO  12:17:36,154 - #20 a
INFO  12:17:36,155 - #40 ;
INFO  12:17:36,155 - #7 const
INFO  12:17:36,155 - #20 int
INFO  12:17:36,155 - #20 cnst
INFO  12:17:36,155 - #37 =
INFO  12:17:36,155 - #21 1
INFO  12:17:36,156 - #40 ;
INFO  12:17:36,156 - #47 {
INFO  12:17:36,156 - #20 int
INFO  12:17:36,156 - #20 fun
INFO  12:17:36,156 - #43 (
INFO  12:17:36,157 - #20 int
INFO  12:17:36,157 - #20 x
INFO  12:17:36,157 - #44 )
INFO  12:17:36,157 - #47 {
INFO  12:17:36,157 - #48 }
INFO  12:17:36,157 - #16 void
INFO  12:17:36,157 - #20 main
INFO  12:17:36,157 - #43 (
INFO  12:17:36,157 - #44 )
INFO  12:17:36,157 - #20 int
INFO  12:17:36,157 - #20 b
INFO  12:17:36,157 - #40 ;
INFO  12:17:36,158 - #20 char
INFO  12:17:36,158 - #20 b
INFO  12:17:36,158 - #40 ;
INFO  12:17:36,158 - #20 int
INFO  12:17:36,159 - #20 num
INFO  12:17:36,159 - #40 ;
INFO  12:17:36,159 - #20 char
INFO  12:17:36,159 - #20 character
INFO  12:17:36,159 - #40 ;
INFO  12:17:36,159 - #20 bool
INFO  12:17:36,159 - #20 boolean
INFO  12:17:36,159 - #40 ;
INFO  12:17:36,159 - #20 int
INFO  12:17:36,159 - #20 niz
INFO  12:17:36,159 - #45 [
INFO  12:17:36,159 - #46 ]
INFO  12:17:36,159 - #40 ;
INFO  12:17:36,159 - #47 {
INFO  12:17:36,159 - #20 a
INFO  12:17:36,160 - #37 =
INFO  12:17:36,160 - #21 1
INFO  12:17:36,160 - #40 ;
INFO  12:17:36,160 - #20 num
INFO  12:17:36,161 - #37 =
INFO  12:17:36,161 - #22 a
INFO  12:17:36,161 - #40 ;
INFO  12:17:36,161 - #20 num
INFO  12:17:36,161 - #37 =
INFO  12:17:36,161 - #23 true
INFO  12:17:36,161 - #40 ;
INFO  12:17:36,161 - #20 character
INFO  12:17:36,161 - #37 =
INFO  12:17:36,161 - #21 1
INFO  12:17:36,161 - #40 ;
INFO  12:17:36,161 - #20 character
INFO  12:17:36,161 - #37 =
INFO  12:17:36,162 - #23 true
INFO  12:17:36,162 - #40 ;
INFO  12:17:36,162 - #20 boolean
INFO  12:17:36,162 - #37 =
INFO  12:17:36,162 - #21 1
INFO  12:17:36,162 - #40 ;
INFO  12:17:36,162 - #20 boolean
INFO  12:17:36,162 - #37 =
INFO  12:17:36,162 - #22 a
INFO  12:17:36,162 - #40 ;
INFO  12:17:36,162 - #20 cnst
INFO  12:17:36,162 - #37 =
INFO  12:17:36,162 - #21 2
INFO  12:17:36,162 - #40 ;
INFO  12:17:36,163 - #20 character
INFO  12:17:36,163 - #38 ++
INFO  12:17:36,163 - #40 ;
INFO  12:17:36,163 - #20 boolean
INFO  12:17:36,163 - #39 --
INFO  12:17:36,163 - #40 ;
INFO  12:17:36,163 - #20 fun
INFO  12:17:36,163 - #43 (
INFO  12:17:36,163 - #21 1
INFO  12:17:36,163 - #41 ,
INFO  12:17:36,164 - #21 2
INFO  12:17:36,164 - #44 )
INFO  12:17:36,164 - #40 ;
INFO  12:17:36,164 - #20 character
INFO  12:17:36,164 - #37 =
INFO  12:17:36,164 - #25 -
INFO  12:17:36,164 - #22 a
INFO  12:17:36,164 - #40 ;
INFO  12:17:36,165 - #20 niz
INFO  12:17:36,165 - #37 =
INFO  12:17:36,165 - #12 new
INFO  12:17:36,165 - #20 int
INFO  12:17:36,165 - #45 [
INFO  12:17:36,165 - #22 a
INFO  12:17:36,165 - #46 ]
INFO  12:17:36,165 - #40 ;
INFO  12:17:36,165 - #48 }
INFO  12:17:36,165 - #48 }
INFO  12:17:36,166 - 

================SINTAKSNO STABLO====================


INFO  12:17:36,168 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementSingle(
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       a
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementSingle]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorCharConst(
                                             a
                                            ) [FactorCharConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   num
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorBoolConst(
                                           true
                                          ) [FactorBoolConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 character
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         1
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               character
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorBoolConst(
                                       true
                                      ) [FactorBoolConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             boolean
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     1
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           boolean
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorCharConst(
                                   a
                                  ) [FactorCharConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         cnst
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 2
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       character
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorDecrement(
                    DesignatorSimple(
                     boolean
                    ) [DesignatorSimple]
                  ) [DesignatorDecrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorMethodCall0(
                  DesignatorSimple(
                   fun
                  ) [DesignatorSimple]
                  ActParsMulti(
                    ActParsSingle(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [ActParsSingle]
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [ActParsMulti]
                ) [DesignatorMethodCall0]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 character
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprNegSingle(
                      TermSingle(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermSingle]
                    ) [ExprNegSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               niz
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNewArray(
                        Type(
                         int
                        ) [Type]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorCharConst(
                               a
                              ) [FactorCharConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [FactorNewArray]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  12:17:36,168 - 

================SEMANTICKA OBRADA====================


ERROR 12:17:36,176 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  12:17:36,176 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  12:17:36,177 - Deklarisana konstanta 'cnst' na liniji 3
INFO  12:17:36,177 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 12:17:36,177 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  12:17:36,177 - Deklarisana promenljiva 'b' na liniji 10
ERROR 12:17:36,177 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  12:17:36,177 - Deklarisana promenljiva 'num' na liniji 11
INFO  12:17:36,177 - Deklarisana promenljiva 'character' na liniji 11
INFO  12:17:36,177 - Deklarisana promenljiva 'boolean' na liniji 11
INFO  12:17:36,177 - Deklarisan niz 'niz' na liniji 12
ERROR 12:17:36,178 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 14
ERROR 12:17:36,178 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 12:17:36,178 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 12:17:36,178 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 12:17:36,178 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 12:17:36,178 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 12:17:36,178 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 12:17:36,178 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 25
ERROR 12:17:36,178 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 28
ERROR 12:17:36,179 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 29
INFO  12:17:36,179 - Pronadjen poziv funkcije 'fun' na liniji 31
ERROR 12:17:36,179 - Semanticka greska - tip mora da bude int na liniji 34
ERROR 12:17:36,179 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 37
INFO  12:17:36,180 - ===================================
INFO  12:18:08,673 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:18:08,783 - #2 program
INFO  12:18:08,783 - #20 MJProgram
INFO  12:18:08,783 - #20 abc
INFO  12:18:08,785 - #20 a
INFO  12:18:08,785 - #40 ;
INFO  12:18:08,786 - #7 const
INFO  12:18:08,786 - #20 int
INFO  12:18:08,787 - #20 cnst
INFO  12:18:08,787 - #37 =
INFO  12:18:08,787 - #21 1
INFO  12:18:08,787 - #40 ;
INFO  12:18:08,788 - #47 {
INFO  12:18:08,789 - #20 int
INFO  12:18:08,789 - #20 fun
INFO  12:18:08,789 - #43 (
INFO  12:18:08,789 - #20 int
INFO  12:18:08,789 - #20 x
INFO  12:18:08,789 - #44 )
INFO  12:18:08,790 - #47 {
INFO  12:18:08,790 - #48 }
INFO  12:18:08,790 - #16 void
INFO  12:18:08,791 - #20 main
INFO  12:18:08,791 - #43 (
INFO  12:18:08,791 - #20 int
INFO  12:18:08,791 - #20 x
INFO  12:18:08,791 - #44 )
INFO  12:18:08,791 - #20 int
INFO  12:18:08,791 - #20 b
INFO  12:18:08,791 - #40 ;
INFO  12:18:08,792 - #20 char
INFO  12:18:08,792 - #20 b
INFO  12:18:08,792 - #40 ;
INFO  12:18:08,792 - #20 int
INFO  12:18:08,792 - #20 num
INFO  12:18:08,793 - #40 ;
INFO  12:18:08,793 - #20 char
INFO  12:18:08,793 - #20 character
INFO  12:18:08,793 - #40 ;
INFO  12:18:08,793 - #20 bool
INFO  12:18:08,793 - #20 boolean
INFO  12:18:08,793 - #40 ;
INFO  12:18:08,793 - #20 int
INFO  12:18:08,794 - #20 niz
INFO  12:18:08,794 - #45 [
INFO  12:18:08,794 - #46 ]
INFO  12:18:08,794 - #40 ;
INFO  12:18:08,794 - #47 {
INFO  12:18:08,794 - #20 a
INFO  12:18:08,795 - #37 =
INFO  12:18:08,795 - #21 1
INFO  12:18:08,795 - #40 ;
INFO  12:18:08,796 - #20 num
INFO  12:18:08,797 - #37 =
INFO  12:18:08,797 - #22 a
INFO  12:18:08,797 - #40 ;
INFO  12:18:08,797 - #20 num
INFO  12:18:08,797 - #37 =
INFO  12:18:08,797 - #23 true
INFO  12:18:08,797 - #40 ;
INFO  12:18:08,797 - #20 character
INFO  12:18:08,798 - #37 =
INFO  12:18:08,798 - #21 1
INFO  12:18:08,798 - #40 ;
INFO  12:18:08,798 - #20 character
INFO  12:18:08,798 - #37 =
INFO  12:18:08,798 - #23 true
INFO  12:18:08,798 - #40 ;
INFO  12:18:08,798 - #20 boolean
INFO  12:18:08,798 - #37 =
INFO  12:18:08,798 - #21 1
INFO  12:18:08,799 - #40 ;
INFO  12:18:08,799 - #20 boolean
INFO  12:18:08,799 - #37 =
INFO  12:18:08,799 - #22 a
INFO  12:18:08,799 - #40 ;
INFO  12:18:08,799 - #20 cnst
INFO  12:18:08,799 - #37 =
INFO  12:18:08,799 - #21 2
INFO  12:18:08,799 - #40 ;
INFO  12:18:08,799 - #20 character
INFO  12:18:08,800 - #38 ++
INFO  12:18:08,800 - #40 ;
INFO  12:18:08,800 - #20 boolean
INFO  12:18:08,800 - #39 --
INFO  12:18:08,800 - #40 ;
INFO  12:18:08,800 - #20 fun
INFO  12:18:08,801 - #43 (
INFO  12:18:08,801 - #21 1
INFO  12:18:08,801 - #41 ,
INFO  12:18:08,801 - #21 2
INFO  12:18:08,801 - #44 )
INFO  12:18:08,801 - #40 ;
INFO  12:18:08,802 - #20 character
INFO  12:18:08,802 - #37 =
INFO  12:18:08,802 - #25 -
INFO  12:18:08,802 - #22 a
INFO  12:18:08,802 - #40 ;
INFO  12:18:08,802 - #20 niz
INFO  12:18:08,802 - #37 =
INFO  12:18:08,802 - #12 new
INFO  12:18:08,803 - #20 int
INFO  12:18:08,803 - #45 [
INFO  12:18:08,803 - #22 a
INFO  12:18:08,803 - #46 ]
INFO  12:18:08,803 - #40 ;
INFO  12:18:08,803 - #48 }
INFO  12:18:08,803 - #48 }
INFO  12:18:08,805 - 

================SINTAKSNO STABLO====================


INFO  12:18:08,809 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid0(
        MethodVoidName(
         main
        ) [MethodVoidName]
        ParamSingle(
          ParamNormal(
            Type(
             int
            ) [Type]
           x
          ) [ParamNormal]
        ) [ParamSingle]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementSingle(
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       a
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementSingle]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorCharConst(
                                             a
                                            ) [FactorCharConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   num
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorBoolConst(
                                           true
                                          ) [FactorBoolConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 character
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         1
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               character
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorBoolConst(
                                       true
                                      ) [FactorBoolConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             boolean
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     1
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           boolean
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorCharConst(
                                   a
                                  ) [FactorCharConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         cnst
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 2
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       character
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorDecrement(
                    DesignatorSimple(
                     boolean
                    ) [DesignatorSimple]
                  ) [DesignatorDecrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorMethodCall0(
                  DesignatorSimple(
                   fun
                  ) [DesignatorSimple]
                  ActParsMulti(
                    ActParsSingle(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [ActParsSingle]
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [ActParsMulti]
                ) [DesignatorMethodCall0]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 character
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprNegSingle(
                      TermSingle(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermSingle]
                    ) [ExprNegSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               niz
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNewArray(
                        Type(
                         int
                        ) [Type]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorCharConst(
                               a
                              ) [FactorCharConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [FactorNewArray]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid0]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  12:18:08,810 - 

================SEMANTICKA OBRADA====================


ERROR 12:18:08,825 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  12:18:08,825 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  12:18:08,826 - Deklarisana konstanta 'cnst' na liniji 3
INFO  12:18:08,826 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 12:18:08,826 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  12:18:08,826 - Formalni parametar funkcije main: 'x' na liniji 9
INFO  12:18:08,826 - Deklarisana promenljiva 'b' na liniji 10
ERROR 12:18:08,826 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  12:18:08,826 - Deklarisana promenljiva 'num' na liniji 11
INFO  12:18:08,827 - Deklarisana promenljiva 'character' na liniji 11
INFO  12:18:08,827 - Deklarisana promenljiva 'boolean' na liniji 11
INFO  12:18:08,827 - Deklarisan niz 'niz' na liniji 12
ERROR 12:18:08,827 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 14
ERROR 12:18:08,827 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 12:18:08,827 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 12:18:08,827 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 12:18:08,827 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 12:18:08,828 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 12:18:08,828 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 12:18:08,828 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 25
ERROR 12:18:08,828 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 28
ERROR 12:18:08,828 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 29
INFO  12:18:08,828 - Pronadjen poziv funkcije 'fun' na liniji 31
ERROR 12:18:08,828 - Semanticka greska - tip mora da bude int na liniji 34
ERROR 12:18:08,828 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 37
INFO  12:18:08,830 - ===================================
INFO  12:18:19,109 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:18:19,181 - #2 program
INFO  12:18:19,181 - #20 MJProgram
INFO  12:18:19,181 - #20 abc
INFO  12:18:19,182 - #20 a
INFO  12:18:19,183 - #40 ;
INFO  12:18:19,183 - #7 const
INFO  12:18:19,183 - #20 int
INFO  12:18:19,183 - #20 cnst
INFO  12:18:19,183 - #37 =
INFO  12:18:19,184 - #21 1
INFO  12:18:19,184 - #40 ;
INFO  12:18:19,185 - #47 {
INFO  12:18:19,185 - #20 int
INFO  12:18:19,185 - #20 fun
INFO  12:18:19,186 - #43 (
INFO  12:18:19,186 - #20 int
INFO  12:18:19,186 - #20 x
INFO  12:18:19,186 - #44 )
INFO  12:18:19,187 - #47 {
INFO  12:18:19,187 - #48 }
INFO  12:18:19,188 - #20 int
INFO  12:18:19,188 - #20 main
INFO  12:18:19,188 - #43 (
INFO  12:18:19,188 - #44 )
INFO  12:18:19,188 - #20 int
INFO  12:18:19,188 - #20 b
INFO  12:18:19,189 - #40 ;
INFO  12:18:19,189 - #20 char
INFO  12:18:19,189 - #20 b
INFO  12:18:19,189 - #40 ;
INFO  12:18:19,189 - #20 int
INFO  12:18:19,190 - #20 num
INFO  12:18:19,190 - #40 ;
INFO  12:18:19,190 - #20 char
INFO  12:18:19,190 - #20 character
INFO  12:18:19,190 - #40 ;
INFO  12:18:19,190 - #20 bool
INFO  12:18:19,190 - #20 boolean
INFO  12:18:19,190 - #40 ;
INFO  12:18:19,191 - #20 int
INFO  12:18:19,191 - #20 niz
INFO  12:18:19,191 - #45 [
INFO  12:18:19,191 - #46 ]
INFO  12:18:19,191 - #40 ;
INFO  12:18:19,191 - #47 {
INFO  12:18:19,191 - #20 a
INFO  12:18:19,192 - #37 =
INFO  12:18:19,192 - #21 1
INFO  12:18:19,192 - #40 ;
INFO  12:18:19,193 - #20 num
INFO  12:18:19,194 - #37 =
INFO  12:18:19,194 - #22 a
INFO  12:18:19,194 - #40 ;
INFO  12:18:19,194 - #20 num
INFO  12:18:19,195 - #37 =
INFO  12:18:19,195 - #23 true
INFO  12:18:19,195 - #40 ;
INFO  12:18:19,195 - #20 character
INFO  12:18:19,195 - #37 =
INFO  12:18:19,195 - #21 1
INFO  12:18:19,195 - #40 ;
INFO  12:18:19,195 - #20 character
INFO  12:18:19,196 - #37 =
INFO  12:18:19,196 - #23 true
INFO  12:18:19,196 - #40 ;
INFO  12:18:19,196 - #20 boolean
INFO  12:18:19,196 - #37 =
INFO  12:18:19,196 - #21 1
INFO  12:18:19,196 - #40 ;
INFO  12:18:19,196 - #20 boolean
INFO  12:18:19,196 - #37 =
INFO  12:18:19,196 - #22 a
INFO  12:18:19,196 - #40 ;
INFO  12:18:19,197 - #20 cnst
INFO  12:18:19,197 - #37 =
INFO  12:18:19,198 - #21 2
INFO  12:18:19,198 - #40 ;
INFO  12:18:19,198 - #20 character
INFO  12:18:19,198 - #38 ++
INFO  12:18:19,198 - #40 ;
INFO  12:18:19,199 - #20 boolean
INFO  12:18:19,199 - #39 --
INFO  12:18:19,199 - #40 ;
INFO  12:18:19,200 - #20 fun
INFO  12:18:19,200 - #43 (
INFO  12:18:19,201 - #21 1
INFO  12:18:19,201 - #41 ,
INFO  12:18:19,201 - #21 2
INFO  12:18:19,203 - #44 )
INFO  12:18:19,204 - #40 ;
INFO  12:18:19,204 - #20 character
INFO  12:18:19,204 - #37 =
INFO  12:18:19,204 - #25 -
INFO  12:18:19,204 - #22 a
INFO  12:18:19,205 - #40 ;
INFO  12:18:19,205 - #20 niz
INFO  12:18:19,205 - #37 =
INFO  12:18:19,205 - #12 new
INFO  12:18:19,205 - #20 int
INFO  12:18:19,205 - #45 [
INFO  12:18:19,205 - #22 a
INFO  12:18:19,206 - #46 ]
INFO  12:18:19,206 - #40 ;
INFO  12:18:19,206 - #48 }
INFO  12:18:19,206 - #48 }
INFO  12:18:19,207 - 

================SINTAKSNO STABLO====================


INFO  12:18:19,210 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodTypeDeclaration(
      MethodType4(
        MethodTypeName(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementSingle(
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       a
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementSingle]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorCharConst(
                                             a
                                            ) [FactorCharConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   num
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorBoolConst(
                                           true
                                          ) [FactorBoolConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 character
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         1
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               character
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorBoolConst(
                                       true
                                      ) [FactorBoolConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             boolean
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     1
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           boolean
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorCharConst(
                                   a
                                  ) [FactorCharConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         cnst
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 2
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       character
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorDecrement(
                    DesignatorSimple(
                     boolean
                    ) [DesignatorSimple]
                  ) [DesignatorDecrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorMethodCall0(
                  DesignatorSimple(
                   fun
                  ) [DesignatorSimple]
                  ActParsMulti(
                    ActParsSingle(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [ActParsSingle]
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [ActParsMulti]
                ) [DesignatorMethodCall0]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 character
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprNegSingle(
                      TermSingle(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermSingle]
                    ) [ExprNegSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               niz
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNewArray(
                        Type(
                         int
                        ) [Type]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorCharConst(
                               a
                              ) [FactorCharConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [FactorNewArray]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodType4]
    ) [MethodTypeDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  12:18:19,211 - 

================SEMANTICKA OBRADA====================


ERROR 12:18:19,227 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  12:18:19,227 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  12:18:19,227 - Deklarisana konstanta 'cnst' na liniji 3
INFO  12:18:19,228 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 12:18:19,228 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  12:18:19,228 - Deklarisana promenljiva 'b' na liniji 10
ERROR 12:18:19,228 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  12:18:19,228 - Deklarisana promenljiva 'num' na liniji 11
INFO  12:18:19,228 - Deklarisana promenljiva 'character' na liniji 11
INFO  12:18:19,228 - Deklarisana promenljiva 'boolean' na liniji 11
INFO  12:18:19,229 - Deklarisan niz 'niz' na liniji 12
ERROR 12:18:19,229 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 14
ERROR 12:18:19,229 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 12:18:19,229 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 12:18:19,229 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 12:18:19,229 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 12:18:19,229 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 12:18:19,229 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 12:18:19,229 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 25
ERROR 12:18:19,230 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 28
ERROR 12:18:19,230 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 29
INFO  12:18:19,230 - Pronadjen poziv funkcije 'fun' na liniji 31
ERROR 12:18:19,230 - Semanticka greska - tip mora da bude int na liniji 34
ERROR 12:18:19,230 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 37
ERROR 12:18:19,230 - Semanticka greska - metoda 'main' treba da ima povratnu vrednost!
INFO  12:18:19,230 - Semanticka greska - u programu mora postojati metoda 'void main();' na liniji 1
INFO  12:18:19,232 - ===================================
INFO  12:20:04,451 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:20:04,516 - #2 program
INFO  12:20:04,516 - #20 MJProgram
INFO  12:20:04,516 - #20 abc
INFO  12:20:04,517 - #20 a
INFO  12:20:04,518 - #40 ;
INFO  12:20:04,518 - #7 const
INFO  12:20:04,519 - #20 int
INFO  12:20:04,519 - #20 cnst
INFO  12:20:04,519 - #37 =
INFO  12:20:04,519 - #21 1
INFO  12:20:04,519 - #40 ;
INFO  12:20:04,520 - #47 {
INFO  12:20:04,520 - #20 int
INFO  12:20:04,521 - #20 fun
INFO  12:20:04,521 - #43 (
INFO  12:20:04,521 - #20 int
INFO  12:20:04,521 - #20 x
INFO  12:20:04,521 - #44 )
INFO  12:20:04,522 - #47 {
INFO  12:20:04,522 - #48 }
INFO  12:20:04,523 - #16 void
INFO  12:20:04,523 - #20 main
INFO  12:20:04,523 - #43 (
INFO  12:20:04,523 - #20 int
INFO  12:20:04,523 - #20 z
INFO  12:20:04,524 - #44 )
INFO  12:20:04,524 - #20 int
INFO  12:20:04,524 - #20 b
INFO  12:20:04,524 - #40 ;
INFO  12:20:04,524 - #20 char
INFO  12:20:04,524 - #20 b
INFO  12:20:04,524 - #40 ;
INFO  12:20:04,525 - #20 int
INFO  12:20:04,525 - #20 num
INFO  12:20:04,525 - #40 ;
INFO  12:20:04,525 - #20 char
INFO  12:20:04,525 - #20 character
INFO  12:20:04,525 - #40 ;
INFO  12:20:04,525 - #20 bool
INFO  12:20:04,525 - #20 boolean
INFO  12:20:04,525 - #40 ;
INFO  12:20:04,525 - #20 int
INFO  12:20:04,525 - #20 niz
INFO  12:20:04,526 - #45 [
INFO  12:20:04,526 - #46 ]
INFO  12:20:04,526 - #40 ;
INFO  12:20:04,526 - #47 {
INFO  12:20:04,526 - #20 a
INFO  12:20:04,526 - #37 =
INFO  12:20:04,526 - #21 1
INFO  12:20:04,526 - #40 ;
INFO  12:20:04,527 - #20 num
INFO  12:20:04,527 - #37 =
INFO  12:20:04,528 - #22 a
INFO  12:20:04,528 - #40 ;
INFO  12:20:04,528 - #20 num
INFO  12:20:04,528 - #37 =
INFO  12:20:04,528 - #23 true
INFO  12:20:04,528 - #40 ;
INFO  12:20:04,528 - #20 character
INFO  12:20:04,529 - #37 =
INFO  12:20:04,529 - #21 1
INFO  12:20:04,529 - #40 ;
INFO  12:20:04,529 - #20 character
INFO  12:20:04,529 - #37 =
INFO  12:20:04,529 - #23 true
INFO  12:20:04,529 - #40 ;
INFO  12:20:04,529 - #20 boolean
INFO  12:20:04,530 - #37 =
INFO  12:20:04,530 - #21 1
INFO  12:20:04,530 - #40 ;
INFO  12:20:04,530 - #20 boolean
INFO  12:20:04,530 - #37 =
INFO  12:20:04,530 - #22 a
INFO  12:20:04,530 - #40 ;
INFO  12:20:04,530 - #20 cnst
INFO  12:20:04,530 - #37 =
INFO  12:20:04,531 - #21 2
INFO  12:20:04,531 - #40 ;
INFO  12:20:04,531 - #20 character
INFO  12:20:04,531 - #38 ++
INFO  12:20:04,531 - #40 ;
INFO  12:20:04,531 - #20 boolean
INFO  12:20:04,532 - #39 --
INFO  12:20:04,532 - #40 ;
INFO  12:20:04,532 - #20 fun
INFO  12:20:04,532 - #43 (
INFO  12:20:04,532 - #21 1
INFO  12:20:04,533 - #41 ,
INFO  12:20:04,533 - #21 2
INFO  12:20:04,533 - #44 )
INFO  12:20:04,534 - #40 ;
INFO  12:20:04,534 - #20 character
INFO  12:20:04,534 - #37 =
INFO  12:20:04,534 - #25 -
INFO  12:20:04,534 - #22 a
INFO  12:20:04,534 - #40 ;
INFO  12:20:04,535 - #20 niz
INFO  12:20:04,535 - #37 =
INFO  12:20:04,535 - #12 new
INFO  12:20:04,535 - #20 int
INFO  12:20:04,535 - #45 [
INFO  12:20:04,535 - #22 a
INFO  12:20:04,535 - #46 ]
INFO  12:20:04,535 - #40 ;
INFO  12:20:04,535 - #48 }
INFO  12:20:04,535 - #48 }
INFO  12:20:04,537 - 

================SINTAKSNO STABLO====================


INFO  12:20:04,540 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid0(
        MethodVoidName(
         main
        ) [MethodVoidName]
        ParamSingle(
          ParamNormal(
            Type(
             int
            ) [Type]
           z
          ) [ParamNormal]
        ) [ParamSingle]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementSingle(
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       a
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementSingle]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorCharConst(
                                             a
                                            ) [FactorCharConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   num
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorBoolConst(
                                           true
                                          ) [FactorBoolConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 character
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         1
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               character
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorBoolConst(
                                       true
                                      ) [FactorBoolConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             boolean
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     1
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           boolean
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorCharConst(
                                   a
                                  ) [FactorCharConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         cnst
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 2
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       character
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorDecrement(
                    DesignatorSimple(
                     boolean
                    ) [DesignatorSimple]
                  ) [DesignatorDecrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorMethodCall0(
                  DesignatorSimple(
                   fun
                  ) [DesignatorSimple]
                  ActParsMulti(
                    ActParsSingle(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [ActParsSingle]
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [ActParsMulti]
                ) [DesignatorMethodCall0]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 character
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprNegSingle(
                      TermSingle(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermSingle]
                    ) [ExprNegSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               niz
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNewArray(
                        Type(
                         int
                        ) [Type]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorCharConst(
                               a
                              ) [FactorCharConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [FactorNewArray]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid0]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  12:20:04,541 - 

================SEMANTICKA OBRADA====================


ERROR 12:20:04,553 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  12:20:04,553 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  12:20:04,554 - Deklarisana konstanta 'cnst' na liniji 3
INFO  12:20:04,554 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 12:20:04,554 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  12:20:04,554 - Formalni parametar funkcije main: 'z' na liniji 9
INFO  12:20:04,554 - Deklarisana promenljiva 'b' na liniji 10
ERROR 12:20:04,554 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  12:20:04,554 - Deklarisana promenljiva 'num' na liniji 11
INFO  12:20:04,554 - Deklarisana promenljiva 'character' na liniji 11
INFO  12:20:04,554 - Deklarisana promenljiva 'boolean' na liniji 11
INFO  12:20:04,554 - Deklarisan niz 'niz' na liniji 12
ERROR 12:20:04,555 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 14
ERROR 12:20:04,555 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 12:20:04,555 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 12:20:04,555 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 12:20:04,555 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 12:20:04,555 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 12:20:04,555 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 12:20:04,555 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 25
ERROR 12:20:04,555 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 28
ERROR 12:20:04,556 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 29
INFO  12:20:04,556 - Pronadjen poziv funkcije 'fun' na liniji 31
ERROR 12:20:04,556 - Semanticka greska - tip mora da bude int na liniji 34
ERROR 12:20:04,556 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 37
INFO  12:20:04,556 - Semanticka greska - u programu mora postojati metoda 'void main();' na liniji 1
INFO  12:20:04,557 - ===================================
INFO  12:20:10,053 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:20:10,123 - #2 program
INFO  12:20:10,123 - #20 MJProgram
INFO  12:20:10,123 - #20 abc
INFO  12:20:10,124 - #20 a
INFO  12:20:10,125 - #40 ;
INFO  12:20:10,125 - #7 const
INFO  12:20:10,126 - #20 int
INFO  12:20:10,126 - #20 cnst
INFO  12:20:10,126 - #37 =
INFO  12:20:10,127 - #21 1
INFO  12:20:10,127 - #40 ;
INFO  12:20:10,128 - #47 {
INFO  12:20:10,128 - #20 int
INFO  12:20:10,128 - #20 fun
INFO  12:20:10,128 - #43 (
INFO  12:20:10,129 - #20 int
INFO  12:20:10,129 - #20 x
INFO  12:20:10,129 - #44 )
INFO  12:20:10,129 - #47 {
INFO  12:20:10,130 - #48 }
INFO  12:20:10,130 - #16 void
INFO  12:20:10,130 - #20 main
INFO  12:20:10,130 - #43 (
INFO  12:20:10,131 - #44 )
INFO  12:20:10,131 - #20 int
INFO  12:20:10,131 - #20 b
INFO  12:20:10,131 - #40 ;
INFO  12:20:10,131 - #20 char
INFO  12:20:10,132 - #20 b
INFO  12:20:10,132 - #40 ;
INFO  12:20:10,132 - #20 int
INFO  12:20:10,132 - #20 num
INFO  12:20:10,132 - #40 ;
INFO  12:20:10,132 - #20 char
INFO  12:20:10,132 - #20 character
INFO  12:20:10,133 - #40 ;
INFO  12:20:10,133 - #20 bool
INFO  12:20:10,133 - #20 boolean
INFO  12:20:10,133 - #40 ;
INFO  12:20:10,133 - #20 int
INFO  12:20:10,133 - #20 niz
INFO  12:20:10,133 - #45 [
INFO  12:20:10,133 - #46 ]
INFO  12:20:10,133 - #40 ;
INFO  12:20:10,134 - #47 {
INFO  12:20:10,134 - #20 a
INFO  12:20:10,134 - #37 =
INFO  12:20:10,134 - #21 1
INFO  12:20:10,134 - #40 ;
INFO  12:20:10,135 - #20 num
INFO  12:20:10,136 - #37 =
INFO  12:20:10,136 - #22 a
INFO  12:20:10,136 - #40 ;
INFO  12:20:10,136 - #20 num
INFO  12:20:10,136 - #37 =
INFO  12:20:10,136 - #23 true
INFO  12:20:10,136 - #40 ;
INFO  12:20:10,136 - #20 character
INFO  12:20:10,137 - #37 =
INFO  12:20:10,137 - #21 1
INFO  12:20:10,137 - #40 ;
INFO  12:20:10,137 - #20 character
INFO  12:20:10,137 - #37 =
INFO  12:20:10,137 - #23 true
INFO  12:20:10,137 - #40 ;
INFO  12:20:10,138 - #20 boolean
INFO  12:20:10,138 - #37 =
INFO  12:20:10,138 - #21 1
INFO  12:20:10,138 - #40 ;
INFO  12:20:10,138 - #20 boolean
INFO  12:20:10,139 - #37 =
INFO  12:20:10,139 - #22 a
INFO  12:20:10,139 - #40 ;
INFO  12:20:10,139 - #20 cnst
INFO  12:20:10,139 - #37 =
INFO  12:20:10,139 - #21 2
INFO  12:20:10,139 - #40 ;
INFO  12:20:10,140 - #20 character
INFO  12:20:10,140 - #38 ++
INFO  12:20:10,140 - #40 ;
INFO  12:20:10,140 - #20 boolean
INFO  12:20:10,140 - #39 --
INFO  12:20:10,140 - #40 ;
INFO  12:20:10,141 - #20 fun
INFO  12:20:10,141 - #43 (
INFO  12:20:10,141 - #21 1
INFO  12:20:10,141 - #41 ,
INFO  12:20:10,141 - #21 2
INFO  12:20:10,141 - #44 )
INFO  12:20:10,142 - #40 ;
INFO  12:20:10,142 - #20 character
INFO  12:20:10,142 - #37 =
INFO  12:20:10,142 - #25 -
INFO  12:20:10,142 - #22 a
INFO  12:20:10,143 - #40 ;
INFO  12:20:10,143 - #20 niz
INFO  12:20:10,143 - #37 =
INFO  12:20:10,143 - #12 new
INFO  12:20:10,143 - #20 int
INFO  12:20:10,143 - #45 [
INFO  12:20:10,144 - #22 a
INFO  12:20:10,144 - #46 ]
INFO  12:20:10,144 - #40 ;
INFO  12:20:10,144 - #48 }
INFO  12:20:10,144 - #48 }
INFO  12:20:10,145 - 

================SINTAKSNO STABLO====================


INFO  12:20:10,147 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementSingle(
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       a
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementSingle]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorCharConst(
                                             a
                                            ) [FactorCharConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   num
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorBoolConst(
                                           true
                                          ) [FactorBoolConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 character
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         1
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               character
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorBoolConst(
                                       true
                                      ) [FactorBoolConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             boolean
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     1
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           boolean
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorCharConst(
                                   a
                                  ) [FactorCharConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         cnst
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 2
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       character
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorDecrement(
                    DesignatorSimple(
                     boolean
                    ) [DesignatorSimple]
                  ) [DesignatorDecrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorMethodCall0(
                  DesignatorSimple(
                   fun
                  ) [DesignatorSimple]
                  ActParsMulti(
                    ActParsSingle(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [ActParsSingle]
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [ActParsMulti]
                ) [DesignatorMethodCall0]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 character
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprNegSingle(
                      TermSingle(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermSingle]
                    ) [ExprNegSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               niz
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNewArray(
                        Type(
                         int
                        ) [Type]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorCharConst(
                               a
                              ) [FactorCharConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [FactorNewArray]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  12:20:10,149 - 

================SEMANTICKA OBRADA====================


ERROR 12:20:10,162 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  12:20:10,163 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  12:20:10,163 - Deklarisana konstanta 'cnst' na liniji 3
INFO  12:20:10,163 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 12:20:10,164 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  12:20:10,164 - Deklarisana promenljiva 'b' na liniji 10
ERROR 12:20:10,164 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  12:20:10,164 - Deklarisana promenljiva 'num' na liniji 11
INFO  12:20:10,164 - Deklarisana promenljiva 'character' na liniji 11
INFO  12:20:10,164 - Deklarisana promenljiva 'boolean' na liniji 11
INFO  12:20:10,164 - Deklarisan niz 'niz' na liniji 12
ERROR 12:20:10,164 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 14
ERROR 12:20:10,165 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 12:20:10,165 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 12:20:10,165 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 12:20:10,165 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 12:20:10,165 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 12:20:10,165 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 12:20:10,165 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 25
ERROR 12:20:10,165 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 28
ERROR 12:20:10,166 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 29
INFO  12:20:10,166 - Pronadjen poziv funkcije 'fun' na liniji 31
ERROR 12:20:10,166 - Semanticka greska - tip mora da bude int na liniji 34
ERROR 12:20:10,166 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 37
INFO  12:20:10,167 - ===================================
INFO  14:40:08,221 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  14:40:08,289 - #2 program
INFO  14:40:08,289 - #20 MJProgram
INFO  14:40:08,289 - #20 abc
INFO  14:40:08,290 - #20 a
INFO  14:40:08,291 - #40 ;
INFO  14:40:08,291 - #7 const
INFO  14:40:08,291 - #20 int
INFO  14:40:08,291 - #20 cnst
INFO  14:40:08,291 - #37 =
INFO  14:40:08,292 - #21 1
INFO  14:40:08,292 - #40 ;
INFO  14:40:08,293 - #47 {
INFO  14:40:08,293 - #20 int
INFO  14:40:08,293 - #20 fun
INFO  14:40:08,293 - #43 (
INFO  14:40:08,293 - #20 int
INFO  14:40:08,293 - #20 x
INFO  14:40:08,293 - #44 )
INFO  14:40:08,294 - #47 {
INFO  14:40:08,294 - #48 }
INFO  14:40:08,294 - #16 void
INFO  14:40:08,294 - #20 main
INFO  14:40:08,294 - #43 (
INFO  14:40:08,295 - #44 )
INFO  14:40:08,295 - #20 int
INFO  14:40:08,295 - #20 b
INFO  14:40:08,295 - #40 ;
INFO  14:40:08,295 - #20 char
INFO  14:40:08,296 - #21 1
ERROR 14:40:08,296 - 
Sintaksna greska na liniji 14, koloni 13 za simbol "1"!
INFO  14:40:08,296 - #20 b
INFO  14:40:08,296 - #40 ;
INFO  14:40:08,296 - #20 int
INFO  14:40:08,297 - #20 num
INFO  14:40:08,297 - #40 ;
INFO  14:40:08,297 - #20 char
INFO  14:40:08,297 - #20 character
INFO  14:40:08,297 - #40 ;
INFO  14:40:08,297 - #20 bool
INFO  14:40:08,297 - #20 boolean
INFO  14:40:08,297 - #40 ;
INFO  14:40:08,297 - #20 int
INFO  14:40:08,297 - #20 niz
INFO  14:40:08,297 - #45 [
INFO  14:40:08,297 - #46 ]
INFO  14:40:08,297 - #40 ;
INFO  14:40:08,298 - #47 {
INFO  14:40:08,298 - #20 a
INFO  14:40:08,298 - #37 =
INFO  14:40:08,298 - #21 1
INFO  14:40:08,298 - #40 ;
INFO  14:40:08,298 - #20 num
INFO  14:40:08,298 - #37 =
INFO  14:40:08,298 - #22 a
INFO  14:40:08,298 - #40 ;
INFO  14:40:08,298 - #20 num
INFO  14:40:08,299 - #37 =
INFO  14:40:08,299 - #23 true
INFO  14:40:08,299 - #40 ;
INFO  14:40:08,299 - #20 character
INFO  14:40:08,299 - #37 =
INFO  14:40:08,299 - #21 1
INFO  14:40:08,299 - #40 ;
INFO  14:40:08,299 - #20 character
INFO  14:40:08,299 - #37 =
INFO  14:40:08,300 - #23 true
INFO  14:40:08,300 - #40 ;
INFO  14:40:08,300 - #20 boolean
INFO  14:40:08,300 - #37 =
INFO  14:40:08,300 - #21 1
INFO  14:40:08,300 - #40 ;
INFO  14:40:08,300 - #20 boolean
INFO  14:40:08,300 - #37 =
INFO  14:40:08,300 - #22 a
INFO  14:40:08,300 - #40 ;
INFO  14:40:08,301 - #20 cnst
INFO  14:40:08,301 - #37 =
INFO  14:40:08,301 - #21 2
INFO  14:40:08,301 - #40 ;
INFO  14:40:08,301 - #20 character
INFO  14:40:08,301 - #38 ++
INFO  14:40:08,301 - #40 ;
INFO  14:40:08,301 - #20 boolean
INFO  14:40:08,301 - #39 --
INFO  14:40:08,301 - #40 ;
INFO  14:40:08,302 - #20 fun
INFO  14:40:08,302 - #43 (
INFO  14:40:08,302 - #21 1
INFO  14:40:08,302 - #41 ,
INFO  14:40:08,302 - #21 2
INFO  14:40:08,302 - #44 )
INFO  14:40:08,302 - #40 ;
INFO  14:40:08,303 - #20 character
INFO  14:40:08,303 - #37 =
INFO  14:40:08,303 - #25 -
INFO  14:40:08,303 - #22 a
INFO  14:40:08,303 - #40 ;
INFO  14:40:08,303 - #20 niz
INFO  14:40:08,303 - #37 =
INFO  14:40:08,304 - #12 new
INFO  14:40:08,304 - #20 int
INFO  14:40:08,304 - #45 [
INFO  14:40:08,304 - #22 a
INFO  14:40:08,304 - #46 ]
INFO  14:40:08,304 - #40 ;
INFO  14:40:08,304 - #48 }
INFO  14:40:08,304 - #48 }
ERROR 14:40:08,304 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 44, koloni 1!
INFO  14:40:34,547 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  14:40:34,594 - #2 program
INFO  14:40:34,594 - #20 MJProgram
INFO  14:40:34,594 - #20 abc
INFO  14:40:34,595 - #20 a
INFO  14:40:34,595 - #40 ;
INFO  14:40:34,596 - #7 const
INFO  14:40:34,596 - #20 int
INFO  14:40:34,596 - #20 cnst
INFO  14:40:34,596 - #37 =
INFO  14:40:34,596 - #21 1
INFO  14:40:34,596 - #40 ;
INFO  14:40:34,597 - #47 {
INFO  14:40:34,597 - #20 int
INFO  14:40:34,597 - #20 fun
INFO  14:40:34,597 - #43 (
INFO  14:40:34,598 - #20 int
INFO  14:40:34,598 - #20 x
INFO  14:40:34,598 - #44 )
INFO  14:40:34,598 - #47 {
INFO  14:40:34,598 - #48 }
INFO  14:40:34,598 - #16 void
INFO  14:40:34,598 - #20 main
INFO  14:40:34,598 - #43 (
INFO  14:40:34,598 - #44 )
INFO  14:40:34,598 - #20 int
INFO  14:40:34,598 - #20 b
INFO  14:40:34,599 - #40 ;
INFO  14:40:34,599 - #20 char
INFO  14:40:34,599 - #20 b
INFO  14:40:34,599 - #40 ;
INFO  14:40:34,599 - #20 int
INFO  14:40:34,600 - #20 num
INFO  14:40:34,600 - #40 ;
INFO  14:40:34,600 - #20 char
INFO  14:40:34,600 - #20 character
INFO  14:40:34,600 - #40 ;
INFO  14:40:34,600 - #20 bool
INFO  14:40:34,600 - #20 boolean
INFO  14:40:34,600 - #40 ;
INFO  14:40:34,600 - #20 int
INFO  14:40:34,600 - #20 niz
INFO  14:40:34,600 - #45 [
INFO  14:40:34,600 - #46 ]
INFO  14:40:34,600 - #40 ;
INFO  14:40:34,600 - #47 {
INFO  14:40:34,600 - #20 a
INFO  14:40:34,601 - #37 =
INFO  14:40:34,601 - #21 1
INFO  14:40:34,601 - #40 ;
INFO  14:40:34,602 - #20 num
INFO  14:40:34,602 - #37 =
INFO  14:40:34,602 - #22 a
INFO  14:40:34,602 - #40 ;
INFO  14:40:34,602 - #20 num
INFO  14:40:34,603 - #37 =
INFO  14:40:34,603 - #23 true
INFO  14:40:34,603 - #40 ;
INFO  14:40:34,603 - #20 character
INFO  14:40:34,603 - #37 =
INFO  14:40:34,603 - #21 1
INFO  14:40:34,603 - #40 ;
INFO  14:40:34,604 - #20 character
INFO  14:40:34,604 - #37 =
INFO  14:40:34,604 - #23 true
INFO  14:40:34,604 - #40 ;
INFO  14:40:34,604 - #20 boolean
INFO  14:40:34,604 - #37 =
INFO  14:40:34,604 - #21 1
INFO  14:40:34,605 - #40 ;
INFO  14:40:34,605 - #20 boolean
INFO  14:40:34,605 - #37 =
INFO  14:40:34,605 - #22 a
INFO  14:40:34,605 - #40 ;
INFO  14:40:34,605 - #20 cnst
INFO  14:40:34,605 - #37 =
INFO  14:40:34,605 - #21 2
INFO  14:40:34,605 - #40 ;
INFO  14:40:34,605 - #20 character
INFO  14:40:34,606 - #38 ++
INFO  14:40:34,606 - #40 ;
INFO  14:40:34,606 - #20 boolean
INFO  14:40:34,606 - #39 --
INFO  14:40:34,606 - #40 ;
INFO  14:40:34,606 - #20 fun
INFO  14:40:34,606 - #43 (
INFO  14:40:34,606 - #21 1
INFO  14:40:34,606 - #41 ,
INFO  14:40:34,607 - #21 2
INFO  14:40:34,607 - #44 )
INFO  14:40:34,607 - #40 ;
INFO  14:40:34,607 - #20 character
INFO  14:40:34,607 - #37 =
INFO  14:40:34,607 - #25 -
INFO  14:40:34,607 - #22 a
INFO  14:40:34,608 - #40 ;
INFO  14:40:34,608 - #20 niz
INFO  14:40:34,608 - #37 =
INFO  14:40:34,608 - #12 new
INFO  14:40:34,608 - #20 int
INFO  14:40:34,608 - #45 [
INFO  14:40:34,608 - #22 a
INFO  14:40:34,608 - #46 ]
INFO  14:40:34,608 - #40 ;
INFO  14:40:34,608 - #48 }
INFO  14:40:34,608 - #48 }
INFO  14:40:34,609 - 

================SINTAKSNO STABLO====================


INFO  14:40:34,611 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementSingle(
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       a
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementSingle]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorCharConst(
                                             a
                                            ) [FactorCharConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   num
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorBoolConst(
                                           true
                                          ) [FactorBoolConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 character
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         1
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               character
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorBoolConst(
                                       true
                                      ) [FactorBoolConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             boolean
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     1
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           boolean
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorCharConst(
                                   a
                                  ) [FactorCharConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         cnst
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 2
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       character
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorDecrement(
                    DesignatorSimple(
                     boolean
                    ) [DesignatorSimple]
                  ) [DesignatorDecrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorMethodCall0(
                  DesignatorSimple(
                   fun
                  ) [DesignatorSimple]
                  ActParsMulti(
                    ActParsSingle(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [ActParsSingle]
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [ActParsMulti]
                ) [DesignatorMethodCall0]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 character
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprNegSingle(
                      TermSingle(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermSingle]
                    ) [ExprNegSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               niz
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNewArray(
                        Type(
                         int
                        ) [Type]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorCharConst(
                               a
                              ) [FactorCharConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [FactorNewArray]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  14:40:34,612 - 

================SEMANTICKA OBRADA====================


ERROR 14:40:34,622 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  14:40:34,622 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  14:40:34,622 - Deklarisana konstanta 'cnst' na liniji 3
INFO  14:40:34,622 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 14:40:34,622 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  14:40:34,623 - Deklarisana promenljiva 'b' na liniji 14
ERROR 14:40:34,623 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  14:40:34,623 - Deklarisana promenljiva 'num' na liniji 15
INFO  14:40:34,623 - Deklarisana promenljiva 'character' na liniji 15
INFO  14:40:34,623 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  14:40:34,623 - Deklarisan niz 'niz' na liniji 16
ERROR 14:40:34,623 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 14:40:34,623 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 14:40:34,623 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 14:40:34,623 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 14:40:34,623 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 14:40:34,623 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 14:40:34,623 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 14:40:34,623 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 14:40:34,624 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 14:40:34,624 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  14:40:34,624 - Pronadjen poziv funkcije 'fun' na liniji 35
ERROR 14:40:34,624 - Semanticka greska - tip mora da bude int na liniji 38
ERROR 14:40:34,624 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 41
INFO  14:40:34,624 - ===================================
INFO  14:55:29,485 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  14:55:29,532 - #2 program
INFO  14:55:29,533 - #20 MJProgram
INFO  14:55:29,533 - #20 abc
INFO  14:55:29,533 - #20 a
INFO  14:55:29,534 - #40 ;
INFO  14:55:29,534 - #7 const
INFO  14:55:29,534 - #20 int
INFO  14:55:29,534 - #20 cnst
INFO  14:55:29,534 - #37 =
INFO  14:55:29,534 - #21 1
INFO  14:55:29,534 - #40 ;
INFO  14:55:29,535 - #47 {
INFO  14:55:29,535 - #20 int
INFO  14:55:29,535 - #20 fun
INFO  14:55:29,535 - #43 (
INFO  14:55:29,536 - #20 int
INFO  14:55:29,536 - #20 x
INFO  14:55:29,536 - #44 )
INFO  14:55:29,537 - #47 {
INFO  14:55:29,537 - #48 }
INFO  14:55:29,537 - #16 void
INFO  14:55:29,538 - #20 main
INFO  14:55:29,538 - #43 (
INFO  14:55:29,538 - #44 )
INFO  14:55:29,538 - #20 int
INFO  14:55:29,538 - #20 b
INFO  14:55:29,538 - #40 ;
INFO  14:55:29,539 - #20 char
INFO  14:55:29,539 - #20 b
INFO  14:55:29,539 - #40 ;
INFO  14:55:29,539 - #20 int
INFO  14:55:29,540 - #20 num
INFO  14:55:29,540 - #40 ;
INFO  14:55:29,540 - #20 char
INFO  14:55:29,540 - #20 character
INFO  14:55:29,540 - #40 ;
INFO  14:55:29,540 - #20 bool
INFO  14:55:29,540 - #20 boolean
INFO  14:55:29,540 - #40 ;
INFO  14:55:29,540 - #20 int
INFO  14:55:29,540 - #20 niz
INFO  14:55:29,540 - #45 [
INFO  14:55:29,540 - #46 ]
INFO  14:55:29,540 - #40 ;
INFO  14:55:29,541 - #47 {
INFO  14:55:29,541 - #20 a
INFO  14:55:29,541 - #37 =
INFO  14:55:29,541 - #21 1
INFO  14:55:29,541 - #40 ;
INFO  14:55:29,542 - #20 num
INFO  14:55:29,542 - #37 =
INFO  14:55:29,542 - #22 a
INFO  14:55:29,542 - #40 ;
INFO  14:55:29,542 - #20 num
INFO  14:55:29,542 - #37 =
INFO  14:55:29,542 - #23 true
INFO  14:55:29,542 - #40 ;
INFO  14:55:29,542 - #20 character
INFO  14:55:29,542 - #37 =
INFO  14:55:29,542 - #21 1
INFO  14:55:29,542 - #40 ;
INFO  14:55:29,543 - #20 character
INFO  14:55:29,543 - #37 =
INFO  14:55:29,543 - #23 true
INFO  14:55:29,543 - #40 ;
INFO  14:55:29,543 - #20 boolean
INFO  14:55:29,543 - #37 =
INFO  14:55:29,543 - #21 1
INFO  14:55:29,543 - #40 ;
INFO  14:55:29,543 - #20 boolean
INFO  14:55:29,543 - #37 =
INFO  14:55:29,543 - #22 a
INFO  14:55:29,544 - #40 ;
INFO  14:55:29,544 - #20 cnst
INFO  14:55:29,544 - #37 =
INFO  14:55:29,544 - #21 2
INFO  14:55:29,544 - #40 ;
INFO  14:55:29,544 - #20 character
INFO  14:55:29,544 - #38 ++
INFO  14:55:29,544 - #40 ;
INFO  14:55:29,545 - #20 boolean
INFO  14:55:29,545 - #39 --
INFO  14:55:29,545 - #40 ;
INFO  14:55:29,545 - #20 fun
INFO  14:55:29,545 - #43 (
INFO  14:55:29,545 - #21 1
INFO  14:55:29,545 - #41 ,
INFO  14:55:29,545 - #21 2
INFO  14:55:29,545 - #44 )
INFO  14:55:29,546 - #40 ;
INFO  14:55:29,546 - #20 character
INFO  14:55:29,546 - #37 =
INFO  14:55:29,546 - #25 -
INFO  14:55:29,546 - #22 a
INFO  14:55:29,546 - #40 ;
INFO  14:55:29,546 - #20 niz
INFO  14:55:29,546 - #37 =
INFO  14:55:29,547 - #12 new
INFO  14:55:29,547 - #20 int
INFO  14:55:29,547 - #45 [
INFO  14:55:29,547 - #22 a
INFO  14:55:29,547 - #46 ]
INFO  14:55:29,547 - #40 ;
INFO  14:55:29,547 - #10 do
INFO  14:55:29,547 - #47 {
INFO  14:55:29,548 - #20 num
INFO  14:55:29,548 - #38 ++
INFO  14:55:29,548 - #40 ;
INFO  14:55:29,548 - #48 }
INFO  14:55:29,548 - #11 while
INFO  14:55:29,548 - #43 (
INFO  14:55:29,548 - #20 num
INFO  14:55:29,548 - #33 <
INFO  14:55:29,549 - #21 10
INFO  14:55:29,549 - #44 )
INFO  14:55:29,550 - #40 ;
INFO  14:55:29,550 - #48 }
INFO  14:55:29,550 - #48 }
INFO  14:55:29,551 - 

================SINTAKSNO STABLO====================


INFO  14:55:29,554 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementSingle(
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         a
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementSingle]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       num
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorCharConst(
                                               a
                                              ) [FactorCharConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorBoolConst(
                                             true
                                            ) [FactorBoolConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   character
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           1
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 character
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorBoolConst(
                                         true
                                        ) [FactorBoolConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               boolean
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             boolean
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorCharConst(
                                     a
                                    ) [FactorCharConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           cnst
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   2
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorIncrement(
                        DesignatorSimple(
                         character
                        ) [DesignatorSimple]
                      ) [DesignatorIncrement]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorDecrement(
                      DesignatorSimple(
                       boolean
                      ) [DesignatorSimple]
                    ) [DesignatorDecrement]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorMethodCall0(
                    DesignatorSimple(
                     fun
                    ) [DesignatorSimple]
                    ActParsMulti(
                      ActParsSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [ActParsSingle]
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             2
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [ActParsMulti]
                  ) [DesignatorMethodCall0]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   character
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprNegSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprNegSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 niz
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNewArray(
                          Type(
                           int
                          ) [Type]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorCharConst(
                                 a
                                ) [FactorCharConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [FactorNewArray]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDoWhile(
            DoHead(
            ) [DoHead]
            Stmt(
              StatementSingle(
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     num
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementSingle]
            ) [Stmt]
            CondOne(
              CondTermOne(
                CondFactTwo(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                  RelopLT(
                  ) [RelopLT]
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         10
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [CondFactTwo]
              ) [CondTermOne]
            ) [CondOne]
          ) [StmtDoWhile]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  14:55:29,596 - 

================SEMANTICKA OBRADA====================


ERROR 14:55:29,607 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  14:55:29,608 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  14:55:29,608 - Deklarisana konstanta 'cnst' na liniji 3
INFO  14:55:29,608 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 14:55:29,609 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  14:55:29,609 - Deklarisana promenljiva 'b' na liniji 14
ERROR 14:55:29,609 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  14:55:29,609 - Deklarisana promenljiva 'num' na liniji 15
INFO  14:55:29,609 - Deklarisana promenljiva 'character' na liniji 15
INFO  14:55:29,609 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  14:55:29,609 - Deklarisan niz 'niz' na liniji 16
ERROR 14:55:29,609 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 14:55:29,609 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 14:55:29,609 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 14:55:29,609 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 14:55:29,609 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 14:55:29,609 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 14:55:29,609 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 14:55:29,609 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 14:55:29,609 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 14:55:29,610 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  14:55:29,610 - Pronadjen poziv funkcije 'fun' na liniji 35
ERROR 14:55:29,610 - Semanticka greska - tip mora da bude int na liniji 38
ERROR 14:55:29,610 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 41
INFO  14:55:29,611 - ===================================
INFO  14:55:38,575 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  14:55:38,624 - #2 program
INFO  14:55:38,624 - #20 MJProgram
INFO  14:55:38,624 - #20 abc
INFO  14:55:38,625 - #20 a
INFO  14:55:38,625 - #40 ;
INFO  14:55:38,625 - #7 const
INFO  14:55:38,626 - #20 int
INFO  14:55:38,626 - #20 cnst
INFO  14:55:38,626 - #37 =
INFO  14:55:38,626 - #21 1
INFO  14:55:38,626 - #40 ;
INFO  14:55:38,626 - #47 {
INFO  14:55:38,627 - #20 int
INFO  14:55:38,627 - #20 fun
INFO  14:55:38,627 - #43 (
INFO  14:55:38,627 - #20 int
INFO  14:55:38,627 - #20 x
INFO  14:55:38,627 - #44 )
INFO  14:55:38,627 - #47 {
INFO  14:55:38,627 - #48 }
INFO  14:55:38,627 - #16 void
INFO  14:55:38,628 - #20 main
INFO  14:55:38,628 - #43 (
INFO  14:55:38,628 - #44 )
INFO  14:55:38,628 - #20 int
INFO  14:55:38,628 - #20 b
INFO  14:55:38,628 - #40 ;
INFO  14:55:38,629 - #20 char
INFO  14:55:38,629 - #20 b
INFO  14:55:38,629 - #40 ;
INFO  14:55:38,629 - #20 int
INFO  14:55:38,629 - #20 num
INFO  14:55:38,629 - #40 ;
INFO  14:55:38,629 - #20 char
INFO  14:55:38,629 - #20 character
INFO  14:55:38,630 - #40 ;
INFO  14:55:38,630 - #20 bool
INFO  14:55:38,630 - #20 boolean
INFO  14:55:38,630 - #40 ;
INFO  14:55:38,630 - #20 int
INFO  14:55:38,630 - #20 niz
INFO  14:55:38,630 - #45 [
INFO  14:55:38,630 - #46 ]
INFO  14:55:38,630 - #40 ;
INFO  14:55:38,630 - #47 {
INFO  14:55:38,630 - #20 a
INFO  14:55:38,630 - #37 =
INFO  14:55:38,630 - #21 1
INFO  14:55:38,630 - #40 ;
INFO  14:55:38,631 - #20 num
INFO  14:55:38,631 - #37 =
INFO  14:55:38,631 - #22 a
INFO  14:55:38,631 - #40 ;
INFO  14:55:38,631 - #20 num
INFO  14:55:38,632 - #37 =
INFO  14:55:38,632 - #23 true
INFO  14:55:38,632 - #40 ;
INFO  14:55:38,632 - #20 character
INFO  14:55:38,632 - #37 =
INFO  14:55:38,632 - #21 1
INFO  14:55:38,632 - #40 ;
INFO  14:55:38,632 - #20 character
INFO  14:55:38,632 - #37 =
INFO  14:55:38,632 - #23 true
INFO  14:55:38,632 - #40 ;
INFO  14:55:38,632 - #20 boolean
INFO  14:55:38,632 - #37 =
INFO  14:55:38,633 - #21 1
INFO  14:55:38,633 - #40 ;
INFO  14:55:38,633 - #20 boolean
INFO  14:55:38,633 - #37 =
INFO  14:55:38,633 - #22 a
INFO  14:55:38,633 - #40 ;
INFO  14:55:38,633 - #20 cnst
INFO  14:55:38,633 - #37 =
INFO  14:55:38,633 - #21 2
INFO  14:55:38,633 - #40 ;
INFO  14:55:38,633 - #20 character
INFO  14:55:38,633 - #38 ++
INFO  14:55:38,633 - #40 ;
INFO  14:55:38,634 - #20 boolean
INFO  14:55:38,634 - #39 --
INFO  14:55:38,634 - #40 ;
INFO  14:55:38,634 - #20 fun
INFO  14:55:38,635 - #43 (
INFO  14:55:38,635 - #21 1
INFO  14:55:38,635 - #41 ,
INFO  14:55:38,636 - #21 2
INFO  14:55:38,636 - #44 )
INFO  14:55:38,637 - #40 ;
INFO  14:55:38,637 - #20 character
INFO  14:55:38,638 - #37 =
INFO  14:55:38,638 - #25 -
INFO  14:55:38,638 - #22 a
INFO  14:55:38,638 - #40 ;
INFO  14:55:38,638 - #20 niz
INFO  14:55:38,638 - #37 =
INFO  14:55:38,638 - #12 new
INFO  14:55:38,638 - #20 int
INFO  14:55:38,638 - #45 [
INFO  14:55:38,638 - #22 a
INFO  14:55:38,638 - #46 ]
INFO  14:55:38,638 - #40 ;
INFO  14:55:38,639 - #10 do
INFO  14:55:38,639 - #47 {
INFO  14:55:38,639 - #20 num
INFO  14:55:38,640 - #38 ++
INFO  14:55:38,640 - #40 ;
INFO  14:55:38,640 - #3 break
INFO  14:55:38,640 - #40 ;
INFO  14:55:38,640 - #48 }
INFO  14:55:38,640 - #11 while
INFO  14:55:38,640 - #43 (
INFO  14:55:38,640 - #20 num
INFO  14:55:38,640 - #33 <
INFO  14:55:38,640 - #21 10
INFO  14:55:38,641 - #44 )
INFO  14:55:38,641 - #40 ;
INFO  14:55:38,641 - #48 }
INFO  14:55:38,642 - #48 }
INFO  14:55:38,643 - 

================SINTAKSNO STABLO====================


INFO  14:55:38,644 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementSingle(
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         a
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementSingle]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       num
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorCharConst(
                                               a
                                              ) [FactorCharConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorBoolConst(
                                             true
                                            ) [FactorBoolConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   character
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           1
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 character
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorBoolConst(
                                         true
                                        ) [FactorBoolConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               boolean
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             boolean
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorCharConst(
                                     a
                                    ) [FactorCharConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           cnst
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   2
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorIncrement(
                        DesignatorSimple(
                         character
                        ) [DesignatorSimple]
                      ) [DesignatorIncrement]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorDecrement(
                      DesignatorSimple(
                       boolean
                      ) [DesignatorSimple]
                    ) [DesignatorDecrement]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorMethodCall0(
                    DesignatorSimple(
                     fun
                    ) [DesignatorSimple]
                    ActParsMulti(
                      ActParsSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [ActParsSingle]
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             2
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [ActParsMulti]
                  ) [DesignatorMethodCall0]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   character
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprNegSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprNegSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 niz
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNewArray(
                          Type(
                           int
                          ) [Type]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorCharConst(
                                 a
                                ) [FactorCharConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [FactorNewArray]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDoWhile(
            DoHead(
            ) [DoHead]
            Stmt(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       num
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtBreak(
                ) [StmtBreak]
              ) [StatementMulti]
            ) [Stmt]
            CondOne(
              CondTermOne(
                CondFactTwo(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                  RelopLT(
                  ) [RelopLT]
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         10
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [CondFactTwo]
              ) [CondTermOne]
            ) [CondOne]
          ) [StmtDoWhile]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  14:55:38,645 - 

================SEMANTICKA OBRADA====================


ERROR 14:55:38,656 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  14:55:38,656 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  14:55:38,657 - Deklarisana konstanta 'cnst' na liniji 3
INFO  14:55:38,657 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 14:55:38,657 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  14:55:38,657 - Deklarisana promenljiva 'b' na liniji 14
ERROR 14:55:38,657 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  14:55:38,657 - Deklarisana promenljiva 'num' na liniji 15
INFO  14:55:38,657 - Deklarisana promenljiva 'character' na liniji 15
INFO  14:55:38,657 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  14:55:38,657 - Deklarisan niz 'niz' na liniji 16
ERROR 14:55:38,657 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 14:55:38,657 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 14:55:38,658 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 14:55:38,658 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 14:55:38,658 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 14:55:38,658 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 14:55:38,658 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 14:55:38,658 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 14:55:38,658 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 14:55:38,658 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  14:55:38,658 - Pronadjen poziv funkcije 'fun' na liniji 35
ERROR 14:55:38,658 - Semanticka greska - tip mora da bude int na liniji 38
ERROR 14:55:38,658 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 41
INFO  14:55:38,659 - ===================================
INFO  14:55:46,555 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  14:55:46,604 - #2 program
INFO  14:55:46,604 - #20 MJProgram
INFO  14:55:46,605 - #20 abc
INFO  14:55:46,605 - #20 a
INFO  14:55:46,606 - #40 ;
INFO  14:55:46,606 - #7 const
INFO  14:55:46,606 - #20 int
INFO  14:55:46,606 - #20 cnst
INFO  14:55:46,606 - #37 =
INFO  14:55:46,606 - #21 1
INFO  14:55:46,606 - #40 ;
INFO  14:55:46,607 - #47 {
INFO  14:55:46,607 - #20 int
INFO  14:55:46,607 - #20 fun
INFO  14:55:46,607 - #43 (
INFO  14:55:46,607 - #20 int
INFO  14:55:46,607 - #20 x
INFO  14:55:46,607 - #44 )
INFO  14:55:46,608 - #47 {
INFO  14:55:46,608 - #48 }
INFO  14:55:46,608 - #16 void
INFO  14:55:46,608 - #20 main
INFO  14:55:46,608 - #43 (
INFO  14:55:46,608 - #44 )
INFO  14:55:46,608 - #20 int
INFO  14:55:46,608 - #20 b
INFO  14:55:46,609 - #40 ;
INFO  14:55:46,609 - #20 char
INFO  14:55:46,609 - #20 b
INFO  14:55:46,609 - #40 ;
INFO  14:55:46,609 - #20 int
INFO  14:55:46,609 - #20 num
INFO  14:55:46,609 - #40 ;
INFO  14:55:46,609 - #20 char
INFO  14:55:46,610 - #20 character
INFO  14:55:46,610 - #40 ;
INFO  14:55:46,610 - #20 bool
INFO  14:55:46,610 - #20 boolean
INFO  14:55:46,610 - #40 ;
INFO  14:55:46,610 - #20 int
INFO  14:55:46,610 - #20 niz
INFO  14:55:46,610 - #45 [
INFO  14:55:46,610 - #46 ]
INFO  14:55:46,610 - #40 ;
INFO  14:55:46,610 - #47 {
INFO  14:55:46,610 - #20 a
INFO  14:55:46,610 - #37 =
INFO  14:55:46,611 - #21 1
INFO  14:55:46,611 - #40 ;
INFO  14:55:46,611 - #20 num
INFO  14:55:46,612 - #37 =
INFO  14:55:46,612 - #22 a
INFO  14:55:46,612 - #40 ;
INFO  14:55:46,612 - #20 num
INFO  14:55:46,612 - #37 =
INFO  14:55:46,612 - #23 true
INFO  14:55:46,612 - #40 ;
INFO  14:55:46,612 - #20 character
INFO  14:55:46,612 - #37 =
INFO  14:55:46,612 - #21 1
INFO  14:55:46,612 - #40 ;
INFO  14:55:46,612 - #20 character
INFO  14:55:46,612 - #37 =
INFO  14:55:46,613 - #23 true
INFO  14:55:46,613 - #40 ;
INFO  14:55:46,613 - #20 boolean
INFO  14:55:46,613 - #37 =
INFO  14:55:46,613 - #21 1
INFO  14:55:46,613 - #40 ;
INFO  14:55:46,613 - #20 boolean
INFO  14:55:46,613 - #37 =
INFO  14:55:46,613 - #22 a
INFO  14:55:46,613 - #40 ;
INFO  14:55:46,613 - #20 cnst
INFO  14:55:46,613 - #37 =
INFO  14:55:46,613 - #21 2
INFO  14:55:46,613 - #40 ;
INFO  14:55:46,614 - #20 character
INFO  14:55:46,614 - #38 ++
INFO  14:55:46,614 - #40 ;
INFO  14:55:46,614 - #20 boolean
INFO  14:55:46,614 - #39 --
INFO  14:55:46,614 - #40 ;
INFO  14:55:46,614 - #20 fun
INFO  14:55:46,614 - #43 (
INFO  14:55:46,614 - #21 1
INFO  14:55:46,614 - #41 ,
INFO  14:55:46,615 - #21 2
INFO  14:55:46,615 - #44 )
INFO  14:55:46,615 - #40 ;
INFO  14:55:46,615 - #20 character
INFO  14:55:46,615 - #37 =
INFO  14:55:46,615 - #25 -
INFO  14:55:46,616 - #22 a
INFO  14:55:46,616 - #40 ;
INFO  14:55:46,616 - #20 niz
INFO  14:55:46,617 - #37 =
INFO  14:55:46,617 - #12 new
INFO  14:55:46,617 - #20 int
INFO  14:55:46,617 - #45 [
INFO  14:55:46,617 - #22 a
INFO  14:55:46,618 - #46 ]
INFO  14:55:46,618 - #40 ;
INFO  14:55:46,619 - #10 do
INFO  14:55:46,619 - #47 {
INFO  14:55:46,620 - #20 num
INFO  14:55:46,620 - #38 ++
INFO  14:55:46,620 - #40 ;
INFO  14:55:46,620 - #3 break
INFO  14:55:46,620 - #40 ;
INFO  14:55:46,620 - #48 }
INFO  14:55:46,620 - #11 while
INFO  14:55:46,620 - #43 (
INFO  14:55:46,620 - #20 num
INFO  14:55:46,620 - #33 <
INFO  14:55:46,620 - #21 10
INFO  14:55:46,621 - #44 )
INFO  14:55:46,621 - #40 ;
INFO  14:55:46,621 - #3 break
INFO  14:55:46,621 - #40 ;
INFO  14:55:46,621 - #48 }
INFO  14:55:46,621 - #48 }
INFO  14:55:46,622 - 

================SINTAKSNO STABLO====================


INFO  14:55:46,624 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementSingle(
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorSimple(
                                           a
                                          ) [DesignatorSimple]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   1
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementSingle]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         num
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorCharConst(
                                                 a
                                                ) [FactorCharConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       num
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorBoolConst(
                                               true
                                              ) [FactorBoolConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     character
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             1
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   character
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorBoolConst(
                                           true
                                          ) [FactorBoolConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 boolean
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         1
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               boolean
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorCharConst(
                                       a
                                      ) [FactorCharConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             cnst
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorIncrement(
                          DesignatorSimple(
                           character
                          ) [DesignatorSimple]
                        ) [DesignatorIncrement]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorDecrement(
                        DesignatorSimple(
                         boolean
                        ) [DesignatorSimple]
                      ) [DesignatorDecrement]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorMethodCall0(
                      DesignatorSimple(
                       fun
                      ) [DesignatorSimple]
                      ActParsMulti(
                        ActParsSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [ActParsSingle]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [ActParsMulti]
                    ) [DesignatorMethodCall0]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     character
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprNegSingle(
                          TermSingle(
                            FactorCharConst(
                             a
                            ) [FactorCharConst]
                          ) [TermSingle]
                        ) [ExprNegSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   niz
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNewArray(
                            Type(
                             int
                            ) [Type]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorCharConst(
                                   a
                                  ) [FactorCharConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [FactorNewArray]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDoWhile(
              DoHead(
              ) [DoHead]
              Stmt(
                StatementMulti(
                  StatementSingle(
                    StmtDesign(
                      DesignatorIncrement(
                        DesignatorSimple(
                         num
                        ) [DesignatorSimple]
                      ) [DesignatorIncrement]
                    ) [StmtDesign]
                  ) [StatementSingle]
                  StmtBreak(
                  ) [StmtBreak]
                ) [StatementMulti]
              ) [Stmt]
              CondOne(
                CondTermOne(
                  CondFactTwo(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                    RelopLT(
                    ) [RelopLT]
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           10
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [CondFactTwo]
                ) [CondTermOne]
              ) [CondOne]
            ) [StmtDoWhile]
          ) [StatementMulti]
          StmtBreak(
          ) [StmtBreak]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  14:55:46,625 - 

================SEMANTICKA OBRADA====================


ERROR 14:55:46,635 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  14:55:46,636 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  14:55:46,636 - Deklarisana konstanta 'cnst' na liniji 3
INFO  14:55:46,636 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 14:55:46,636 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  14:55:46,637 - Deklarisana promenljiva 'b' na liniji 14
ERROR 14:55:46,637 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  14:55:46,637 - Deklarisana promenljiva 'num' na liniji 15
INFO  14:55:46,637 - Deklarisana promenljiva 'character' na liniji 15
INFO  14:55:46,637 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  14:55:46,637 - Deklarisan niz 'niz' na liniji 16
ERROR 14:55:46,637 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 14:55:46,637 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 14:55:46,637 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 14:55:46,637 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 14:55:46,637 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 14:55:46,637 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 14:55:46,637 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 14:55:46,638 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 14:55:46,638 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 14:55:46,638 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  14:55:46,638 - Pronadjen poziv funkcije 'fun' na liniji 35
ERROR 14:55:46,638 - Semanticka greska - tip mora da bude int na liniji 38
ERROR 14:55:46,638 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 41
ERROR 14:55:46,641 - Semanticka greska - break iskaz van petlje
INFO  14:55:46,642 - ===================================
INFO  14:56:04,342 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  14:56:04,399 - #2 program
INFO  14:56:04,400 - #20 MJProgram
INFO  14:56:04,400 - #20 abc
INFO  14:56:04,400 - #20 a
INFO  14:56:04,401 - #40 ;
INFO  14:56:04,401 - #7 const
INFO  14:56:04,402 - #20 int
INFO  14:56:04,402 - #20 cnst
INFO  14:56:04,402 - #37 =
INFO  14:56:04,402 - #21 1
INFO  14:56:04,402 - #40 ;
INFO  14:56:04,403 - #47 {
INFO  14:56:04,403 - #20 int
INFO  14:56:04,403 - #20 fun
INFO  14:56:04,403 - #43 (
INFO  14:56:04,403 - #20 int
INFO  14:56:04,403 - #20 x
INFO  14:56:04,403 - #44 )
INFO  14:56:04,404 - #47 {
INFO  14:56:04,404 - #48 }
INFO  14:56:04,404 - #16 void
INFO  14:56:04,404 - #20 main
INFO  14:56:04,404 - #43 (
INFO  14:56:04,404 - #44 )
INFO  14:56:04,405 - #20 int
INFO  14:56:04,405 - #20 b
INFO  14:56:04,405 - #40 ;
INFO  14:56:04,405 - #20 char
INFO  14:56:04,405 - #20 b
INFO  14:56:04,405 - #40 ;
INFO  14:56:04,405 - #20 int
INFO  14:56:04,406 - #20 num
INFO  14:56:04,406 - #40 ;
INFO  14:56:04,406 - #20 char
INFO  14:56:04,406 - #20 character
INFO  14:56:04,406 - #40 ;
INFO  14:56:04,406 - #20 bool
INFO  14:56:04,406 - #20 boolean
INFO  14:56:04,406 - #40 ;
INFO  14:56:04,406 - #20 int
INFO  14:56:04,406 - #20 niz
INFO  14:56:04,406 - #45 [
INFO  14:56:04,406 - #46 ]
INFO  14:56:04,406 - #40 ;
INFO  14:56:04,407 - #47 {
INFO  14:56:04,407 - #20 a
INFO  14:56:04,407 - #37 =
INFO  14:56:04,407 - #21 1
INFO  14:56:04,407 - #40 ;
INFO  14:56:04,407 - #20 num
INFO  14:56:04,408 - #37 =
INFO  14:56:04,408 - #22 a
INFO  14:56:04,408 - #40 ;
INFO  14:56:04,408 - #20 num
INFO  14:56:04,408 - #37 =
INFO  14:56:04,409 - #23 true
INFO  14:56:04,409 - #40 ;
INFO  14:56:04,409 - #20 character
INFO  14:56:04,409 - #37 =
INFO  14:56:04,409 - #21 1
INFO  14:56:04,409 - #40 ;
INFO  14:56:04,409 - #20 character
INFO  14:56:04,409 - #37 =
INFO  14:56:04,409 - #23 true
INFO  14:56:04,410 - #40 ;
INFO  14:56:04,410 - #20 boolean
INFO  14:56:04,410 - #37 =
INFO  14:56:04,410 - #21 1
INFO  14:56:04,410 - #40 ;
INFO  14:56:04,410 - #20 boolean
INFO  14:56:04,411 - #37 =
INFO  14:56:04,411 - #22 a
INFO  14:56:04,411 - #40 ;
INFO  14:56:04,411 - #20 cnst
INFO  14:56:04,411 - #37 =
INFO  14:56:04,411 - #21 2
INFO  14:56:04,411 - #40 ;
INFO  14:56:04,411 - #20 character
INFO  14:56:04,411 - #38 ++
INFO  14:56:04,411 - #40 ;
INFO  14:56:04,412 - #20 boolean
INFO  14:56:04,412 - #39 --
INFO  14:56:04,412 - #40 ;
INFO  14:56:04,412 - #20 fun
INFO  14:56:04,412 - #43 (
INFO  14:56:04,412 - #21 1
INFO  14:56:04,413 - #41 ,
INFO  14:56:04,413 - #21 2
INFO  14:56:04,413 - #44 )
INFO  14:56:04,413 - #40 ;
INFO  14:56:04,413 - #20 character
INFO  14:56:04,413 - #37 =
INFO  14:56:04,414 - #25 -
INFO  14:56:04,414 - #22 a
INFO  14:56:04,414 - #40 ;
INFO  14:56:04,414 - #20 niz
INFO  14:56:04,414 - #37 =
INFO  14:56:04,415 - #12 new
INFO  14:56:04,415 - #20 int
INFO  14:56:04,415 - #45 [
INFO  14:56:04,415 - #22 a
INFO  14:56:04,415 - #46 ]
INFO  14:56:04,415 - #40 ;
INFO  14:56:04,415 - #10 do
INFO  14:56:04,416 - #47 {
INFO  14:56:04,416 - #20 num
INFO  14:56:04,416 - #38 ++
INFO  14:56:04,416 - #40 ;
INFO  14:56:04,416 - #3 break
INFO  14:56:04,417 - #40 ;
INFO  14:56:04,417 - #18 continue
INFO  14:56:04,417 - #40 ;
INFO  14:56:04,417 - #48 }
INFO  14:56:04,418 - #11 while
INFO  14:56:04,418 - #43 (
INFO  14:56:04,418 - #20 num
INFO  14:56:04,418 - #33 <
INFO  14:56:04,418 - #21 10
INFO  14:56:04,419 - #44 )
INFO  14:56:04,419 - #40 ;
INFO  14:56:04,419 - #3 break
INFO  14:56:04,420 - #40 ;
INFO  14:56:04,420 - #18 continue
INFO  14:56:04,420 - #40 ;
INFO  14:56:04,420 - #48 }
INFO  14:56:04,420 - #48 }
INFO  14:56:04,421 - 

================SINTAKSNO STABLO====================


INFO  14:56:04,425 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementSingle(
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             a
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     1
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementSingle]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorSimple(
                                           num
                                          ) [DesignatorSimple]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorCharConst(
                                                   a
                                                  ) [FactorCharConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         num
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorBoolConst(
                                                 true
                                                ) [FactorBoolConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       character
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     character
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorBoolConst(
                                             true
                                            ) [FactorBoolConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   boolean
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           1
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 boolean
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorCharConst(
                                         a
                                        ) [FactorCharConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               cnst
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorIncrement(
                            DesignatorSimple(
                             character
                            ) [DesignatorSimple]
                          ) [DesignatorIncrement]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorDecrement(
                          DesignatorSimple(
                           boolean
                          ) [DesignatorSimple]
                        ) [DesignatorDecrement]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorMethodCall0(
                        DesignatorSimple(
                         fun
                        ) [DesignatorSimple]
                        ActParsMulti(
                          ActParsSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   1
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsSingle]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 2
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [ActParsMulti]
                      ) [DesignatorMethodCall0]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       character
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprNegSingle(
                            TermSingle(
                              FactorCharConst(
                               a
                              ) [FactorCharConst]
                            ) [TermSingle]
                          ) [ExprNegSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     niz
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNewArray(
                              Type(
                               int
                              ) [Type]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorCharConst(
                                     a
                                    ) [FactorCharConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [FactorNewArray]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDoWhile(
                DoHead(
                ) [DoHead]
                Stmt(
                  StatementMulti(
                    StatementMulti(
                      StatementSingle(
                        StmtDesign(
                          DesignatorIncrement(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                          ) [DesignatorIncrement]
                        ) [StmtDesign]
                      ) [StatementSingle]
                      StmtBreak(
                      ) [StmtBreak]
                    ) [StatementMulti]
                    StmtContinue(
                    ) [StmtContinue]
                  ) [StatementMulti]
                ) [Stmt]
                CondOne(
                  CondTermOne(
                    CondFactTwo(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                      RelopLT(
                      ) [RelopLT]
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             10
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactTwo]
                  ) [CondTermOne]
                ) [CondOne]
              ) [StmtDoWhile]
            ) [StatementMulti]
            StmtBreak(
            ) [StmtBreak]
          ) [StatementMulti]
          StmtContinue(
          ) [StmtContinue]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  14:56:04,426 - 

================SEMANTICKA OBRADA====================


ERROR 14:56:04,436 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  14:56:04,437 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  14:56:04,437 - Deklarisana konstanta 'cnst' na liniji 3
INFO  14:56:04,437 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 14:56:04,437 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  14:56:04,437 - Deklarisana promenljiva 'b' na liniji 14
ERROR 14:56:04,437 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  14:56:04,437 - Deklarisana promenljiva 'num' na liniji 15
INFO  14:56:04,437 - Deklarisana promenljiva 'character' na liniji 15
INFO  14:56:04,437 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  14:56:04,437 - Deklarisan niz 'niz' na liniji 16
ERROR 14:56:04,438 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 14:56:04,438 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 14:56:04,438 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 14:56:04,438 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 14:56:04,438 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 14:56:04,438 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 14:56:04,438 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 14:56:04,438 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 14:56:04,438 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 14:56:04,441 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  14:56:04,441 - Pronadjen poziv funkcije 'fun' na liniji 35
ERROR 14:56:04,442 - Semanticka greska - tip mora da bude int na liniji 38
ERROR 14:56:04,442 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 41
ERROR 14:56:04,442 - Semanticka greska - break iskaz van petlje
ERROR 14:56:04,442 - Semanticka greska - continue iskaz van petlje
INFO  14:56:04,443 - ===================================
INFO  14:56:43,848 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  14:56:43,898 - #2 program
INFO  14:56:43,898 - #20 MJProgram
INFO  14:56:43,899 - #20 abc
INFO  14:56:43,899 - #20 a
INFO  14:56:43,900 - #40 ;
INFO  14:56:43,900 - #7 const
INFO  14:56:43,900 - #20 int
INFO  14:56:43,900 - #20 cnst
INFO  14:56:43,900 - #37 =
INFO  14:56:43,900 - #21 1
INFO  14:56:43,900 - #40 ;
INFO  14:56:43,901 - #47 {
INFO  14:56:43,901 - #20 int
INFO  14:56:43,901 - #20 fun
INFO  14:56:43,901 - #43 (
INFO  14:56:43,901 - #20 int
INFO  14:56:43,902 - #20 x
INFO  14:56:43,902 - #44 )
INFO  14:56:43,902 - #47 {
INFO  14:56:43,902 - #48 }
INFO  14:56:43,902 - #16 void
INFO  14:56:43,902 - #20 main
INFO  14:56:43,903 - #43 (
INFO  14:56:43,903 - #44 )
INFO  14:56:43,903 - #20 int
INFO  14:56:43,903 - #20 b
INFO  14:56:43,903 - #40 ;
INFO  14:56:43,903 - #20 char
INFO  14:56:43,903 - #20 b
INFO  14:56:43,904 - #40 ;
INFO  14:56:43,904 - #20 int
INFO  14:56:43,904 - #20 num
INFO  14:56:43,904 - #40 ;
INFO  14:56:43,904 - #20 char
INFO  14:56:43,904 - #20 character
INFO  14:56:43,904 - #40 ;
INFO  14:56:43,904 - #20 bool
INFO  14:56:43,904 - #20 boolean
INFO  14:56:43,904 - #40 ;
INFO  14:56:43,904 - #20 int
INFO  14:56:43,904 - #20 niz
INFO  14:56:43,905 - #45 [
INFO  14:56:43,905 - #46 ]
INFO  14:56:43,905 - #40 ;
INFO  14:56:43,905 - #47 {
INFO  14:56:43,905 - #20 a
INFO  14:56:43,905 - #37 =
INFO  14:56:43,905 - #21 1
INFO  14:56:43,905 - #40 ;
INFO  14:56:43,906 - #20 num
INFO  14:56:43,906 - #37 =
INFO  14:56:43,906 - #22 a
INFO  14:56:43,906 - #40 ;
INFO  14:56:43,906 - #20 num
INFO  14:56:43,906 - #37 =
INFO  14:56:43,907 - #23 true
INFO  14:56:43,907 - #40 ;
INFO  14:56:43,907 - #20 character
INFO  14:56:43,907 - #37 =
INFO  14:56:43,907 - #21 1
INFO  14:56:43,907 - #40 ;
INFO  14:56:43,907 - #20 character
INFO  14:56:43,907 - #37 =
INFO  14:56:43,907 - #23 true
INFO  14:56:43,907 - #40 ;
INFO  14:56:43,907 - #20 boolean
INFO  14:56:43,907 - #37 =
INFO  14:56:43,908 - #21 1
INFO  14:56:43,908 - #40 ;
INFO  14:56:43,908 - #20 boolean
INFO  14:56:43,908 - #37 =
INFO  14:56:43,908 - #22 a
INFO  14:56:43,908 - #40 ;
INFO  14:56:43,908 - #20 cnst
INFO  14:56:43,908 - #37 =
INFO  14:56:43,908 - #21 2
INFO  14:56:43,908 - #40 ;
INFO  14:56:43,908 - #20 character
INFO  14:56:43,908 - #38 ++
INFO  14:56:43,908 - #40 ;
INFO  14:56:43,909 - #20 boolean
INFO  14:56:43,909 - #39 --
INFO  14:56:43,909 - #40 ;
INFO  14:56:43,909 - #20 fun
INFO  14:56:43,909 - #43 (
INFO  14:56:43,909 - #21 1
INFO  14:56:43,909 - #41 ,
INFO  14:56:43,910 - #21 2
INFO  14:56:43,910 - #44 )
INFO  14:56:43,911 - #40 ;
INFO  14:56:43,911 - #20 character
INFO  14:56:43,911 - #37 =
INFO  14:56:43,911 - #25 -
INFO  14:56:43,911 - #22 a
INFO  14:56:43,911 - #40 ;
INFO  14:56:43,912 - #20 niz
INFO  14:56:43,912 - #37 =
INFO  14:56:43,912 - #12 new
INFO  14:56:43,913 - #20 int
INFO  14:56:43,913 - #45 [
INFO  14:56:43,913 - #22 a
INFO  14:56:43,913 - #46 ]
INFO  14:56:43,913 - #40 ;
INFO  14:56:43,913 - #10 do
INFO  14:56:43,913 - #47 {
INFO  14:56:43,914 - #20 num
INFO  14:56:43,914 - #38 ++
INFO  14:56:43,914 - #40 ;
INFO  14:56:43,914 - #3 break
INFO  14:56:43,915 - #40 ;
INFO  14:56:43,915 - #18 continue
INFO  14:56:43,915 - #40 ;
INFO  14:56:43,915 - #48 }
INFO  14:56:43,916 - #11 while
INFO  14:56:43,916 - #43 (
INFO  14:56:43,916 - #20 num
INFO  14:56:43,916 - #33 <
INFO  14:56:43,916 - #21 10
INFO  14:56:43,917 - #44 )
INFO  14:56:43,918 - #40 ;
INFO  14:56:43,918 - #3 break
INFO  14:56:43,918 - #40 ;
INFO  14:56:43,918 - #18 continue
INFO  14:56:43,918 - #40 ;
INFO  14:56:43,918 - #48 }
INFO  14:56:43,918 - #15 return
ERROR 14:56:43,919 - 
Sintaksna greska na liniji 52, koloni 1 za simbol "return"!
INFO  14:56:43,919 - #21 1
INFO  14:56:43,919 - #40 ;
INFO  14:56:43,919 - #48 }
ERROR 14:56:43,919 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 53, koloni 1!
INFO  15:04:08,008 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:04:08,077 - #2 program
INFO  15:04:08,077 - #20 MJProgram
INFO  15:04:08,077 - #20 abc
INFO  15:04:08,078 - #20 a
INFO  15:04:08,079 - #40 ;
INFO  15:04:08,079 - #7 const
INFO  15:04:08,080 - #20 int
INFO  15:04:08,080 - #20 cnst
INFO  15:04:08,080 - #37 =
INFO  15:04:08,080 - #21 1
INFO  15:04:08,080 - #40 ;
INFO  15:04:08,081 - #47 {
INFO  15:04:08,081 - #20 int
INFO  15:04:08,081 - #20 fun
INFO  15:04:08,081 - #43 (
INFO  15:04:08,082 - #20 int
INFO  15:04:08,082 - #20 x
INFO  15:04:08,082 - #44 )
INFO  15:04:08,082 - #47 {
INFO  15:04:08,082 - #48 }
INFO  15:04:08,083 - #16 void
INFO  15:04:08,083 - #20 main
INFO  15:04:08,083 - #43 (
INFO  15:04:08,083 - #44 )
INFO  15:04:08,083 - #20 int
INFO  15:04:08,083 - #20 b
INFO  15:04:08,084 - #40 ;
INFO  15:04:08,084 - #20 char
INFO  15:04:08,084 - #20 b
INFO  15:04:08,084 - #40 ;
INFO  15:04:08,084 - #20 int
INFO  15:04:08,085 - #20 num
INFO  15:04:08,085 - #40 ;
INFO  15:04:08,085 - #20 char
INFO  15:04:08,085 - #20 character
INFO  15:04:08,085 - #40 ;
INFO  15:04:08,085 - #20 bool
INFO  15:04:08,086 - #20 boolean
INFO  15:04:08,086 - #40 ;
INFO  15:04:08,086 - #20 int
INFO  15:04:08,086 - #20 niz
INFO  15:04:08,086 - #45 [
INFO  15:04:08,086 - #46 ]
INFO  15:04:08,086 - #40 ;
INFO  15:04:08,086 - #47 {
INFO  15:04:08,087 - #20 a
INFO  15:04:08,087 - #37 =
INFO  15:04:08,087 - #21 1
INFO  15:04:08,087 - #40 ;
INFO  15:04:08,088 - #20 num
INFO  15:04:08,089 - #37 =
INFO  15:04:08,089 - #22 a
INFO  15:04:08,089 - #40 ;
INFO  15:04:08,089 - #20 num
INFO  15:04:08,089 - #37 =
INFO  15:04:08,090 - #23 true
INFO  15:04:08,090 - #40 ;
INFO  15:04:08,090 - #20 character
INFO  15:04:08,090 - #37 =
INFO  15:04:08,090 - #21 1
INFO  15:04:08,090 - #40 ;
INFO  15:04:08,090 - #20 character
INFO  15:04:08,090 - #37 =
INFO  15:04:08,091 - #23 true
INFO  15:04:08,091 - #40 ;
INFO  15:04:08,091 - #20 boolean
INFO  15:04:08,091 - #37 =
INFO  15:04:08,091 - #21 1
INFO  15:04:08,091 - #40 ;
INFO  15:04:08,092 - #20 boolean
INFO  15:04:08,092 - #37 =
INFO  15:04:08,092 - #22 a
INFO  15:04:08,092 - #40 ;
INFO  15:04:08,092 - #20 cnst
INFO  15:04:08,092 - #37 =
INFO  15:04:08,092 - #21 2
INFO  15:04:08,092 - #40 ;
INFO  15:04:08,092 - #20 character
INFO  15:04:08,092 - #38 ++
INFO  15:04:08,093 - #40 ;
INFO  15:04:08,093 - #20 boolean
INFO  15:04:08,093 - #39 --
INFO  15:04:08,093 - #40 ;
INFO  15:04:08,093 - #20 fun
INFO  15:04:08,093 - #43 (
INFO  15:04:08,094 - #21 1
INFO  15:04:08,094 - #41 ,
INFO  15:04:08,094 - #21 2
INFO  15:04:08,094 - #44 )
INFO  15:04:08,094 - #40 ;
INFO  15:04:08,095 - #20 character
INFO  15:04:08,095 - #37 =
INFO  15:04:08,095 - #25 -
INFO  15:04:08,095 - #22 a
INFO  15:04:08,096 - #40 ;
INFO  15:04:08,096 - #20 niz
INFO  15:04:08,096 - #37 =
INFO  15:04:08,096 - #12 new
INFO  15:04:08,096 - #20 int
INFO  15:04:08,096 - #45 [
INFO  15:04:08,097 - #22 a
INFO  15:04:08,097 - #46 ]
INFO  15:04:08,097 - #40 ;
INFO  15:04:08,097 - #10 do
INFO  15:04:08,097 - #47 {
INFO  15:04:08,098 - #20 num
INFO  15:04:08,099 - #38 ++
INFO  15:04:08,099 - #40 ;
INFO  15:04:08,099 - #3 break
INFO  15:04:08,099 - #40 ;
INFO  15:04:08,099 - #18 continue
INFO  15:04:08,100 - #40 ;
INFO  15:04:08,100 - #48 }
INFO  15:04:08,100 - #11 while
INFO  15:04:08,101 - #43 (
INFO  15:04:08,101 - #20 num
INFO  15:04:08,101 - #33 <
INFO  15:04:08,101 - #21 10
INFO  15:04:08,103 - #44 )
INFO  15:04:08,103 - #40 ;
INFO  15:04:08,103 - #3 break
INFO  15:04:08,103 - #40 ;
INFO  15:04:08,104 - #18 continue
INFO  15:04:08,104 - #40 ;
INFO  15:04:08,104 - #8 if
INFO  15:04:08,104 - #43 (
INFO  15:04:08,104 - #20 boolean
INFO  15:04:08,104 - #44 )
INFO  15:04:08,105 - #47 {
INFO  15:04:08,105 - #20 num
INFO  15:04:08,105 - #37 =
INFO  15:04:08,105 - #21 1
INFO  15:04:08,105 - #40 ;
INFO  15:04:08,105 - #48 }
INFO  15:04:08,105 - #8 if
INFO  15:04:08,106 - #43 (
INFO  15:04:08,106 - #20 num
INFO  15:04:08,106 - #44 )
INFO  15:04:08,106 - #47 {
INFO  15:04:08,106 - #20 num
INFO  15:04:08,106 - #37 =
INFO  15:04:08,106 - #21 2
INFO  15:04:08,106 - #40 ;
INFO  15:04:08,106 - #48 }
INFO  15:04:08,107 - #48 }
INFO  15:04:08,107 - #48 }
INFO  15:04:08,108 - 

================SINTAKSNO STABLO====================


INFO  15:04:08,112 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementSingle(
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 a
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementSingle]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               num
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorCharConst(
                                                       a
                                                      ) [FactorCharConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             num
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorBoolConst(
                                                     true
                                                    ) [FactorBoolConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorSimple(
                                           character
                                          ) [DesignatorSimple]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   1
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         character
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorBoolConst(
                                                 true
                                                ) [FactorBoolConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       boolean
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     boolean
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorCharConst(
                                             a
                                            ) [FactorCharConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   cnst
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           2
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorIncrement(
                                DesignatorSimple(
                                 character
                                ) [DesignatorSimple]
                              ) [DesignatorIncrement]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorDecrement(
                              DesignatorSimple(
                               boolean
                              ) [DesignatorSimple]
                            ) [DesignatorDecrement]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorMethodCall0(
                            DesignatorSimple(
                             fun
                            ) [DesignatorSimple]
                            ActParsMulti(
                              ActParsSingle(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [ActParsSingle]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsMulti]
                          ) [DesignatorMethodCall0]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           character
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprNegSingle(
                                TermSingle(
                                  FactorCharConst(
                                   a
                                  ) [FactorCharConst]
                                ) [TermSingle]
                              ) [ExprNegSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         niz
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNewArray(
                                  Type(
                                   int
                                  ) [Type]
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorCharConst(
                                         a
                                        ) [FactorCharConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [FactorNewArray]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDoWhile(
                    DoHead(
                    ) [DoHead]
                    Stmt(
                      StatementMulti(
                        StatementMulti(
                          StatementSingle(
                            StmtDesign(
                              DesignatorIncrement(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                              ) [DesignatorIncrement]
                            ) [StmtDesign]
                          ) [StatementSingle]
                          StmtBreak(
                          ) [StmtBreak]
                        ) [StatementMulti]
                        StmtContinue(
                        ) [StmtContinue]
                      ) [StatementMulti]
                    ) [Stmt]
                    CondOne(
                      CondTermOne(
                        CondFactTwo(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   num
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                          RelopLT(
                          ) [RelopLT]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 10
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactTwo]
                      ) [CondTermOne]
                    ) [CondOne]
                  ) [StmtDoWhile]
                ) [StatementMulti]
                StmtBreak(
                ) [StmtBreak]
              ) [StatementMulti]
              StmtContinue(
              ) [StmtContinue]
            ) [StatementMulti]
            StmtIf(
              StmtIfBody(
                IfCond(
                  CondOne(
                    CondTermOne(
                      CondFactOne(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 boolean
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactOne]
                    ) [CondTermOne]
                  ) [CondOne]
                ) [IfCond]
                Stmt(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         num
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                ) [Stmt]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtIf(
            StmtIfBody(
              IfCond(
                CondOne(
                  CondTermOne(
                    CondFactOne(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactOne]
                  ) [CondTermOne]
                ) [CondOne]
              ) [IfCond]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       num
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
            ) [StmtIfBody]
          ) [StmtIf]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  15:04:08,113 - 

================SEMANTICKA OBRADA====================


ERROR 15:04:08,130 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  15:04:08,131 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  15:04:08,131 - Deklarisana konstanta 'cnst' na liniji 3
INFO  15:04:08,131 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 15:04:08,131 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  15:04:08,131 - Deklarisana promenljiva 'b' na liniji 14
ERROR 15:04:08,132 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  15:04:08,132 - Deklarisana promenljiva 'num' na liniji 15
INFO  15:04:08,132 - Deklarisana promenljiva 'character' na liniji 15
INFO  15:04:08,132 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  15:04:08,132 - Deklarisan niz 'niz' na liniji 16
ERROR 15:04:08,132 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 15:04:08,132 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 15:04:08,132 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 15:04:08,132 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 15:04:08,132 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 15:04:08,133 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 15:04:08,133 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 15:04:08,133 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 15:04:08,133 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 15:04:08,134 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  15:04:08,134 - Pronadjen poziv funkcije 'fun' na liniji 35
ERROR 15:04:08,134 - Semanticka greska - tip mora da bude int na liniji 38
ERROR 15:04:08,134 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 41
ERROR 15:04:08,134 - Semanticka greska - break iskaz van petlje
ERROR 15:04:08,134 - Semanticka greska - continue iskaz van petlje
INFO  15:04:45,631 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:04:45,679 - #2 program
INFO  15:04:45,679 - #20 MJProgram
INFO  15:04:45,679 - #20 abc
INFO  15:04:45,680 - #20 a
INFO  15:04:45,681 - #40 ;
INFO  15:04:45,681 - #7 const
INFO  15:04:45,681 - #20 int
INFO  15:04:45,681 - #20 cnst
INFO  15:04:45,681 - #37 =
INFO  15:04:45,682 - #21 1
INFO  15:04:45,682 - #40 ;
INFO  15:04:45,682 - #47 {
INFO  15:04:45,683 - #20 int
INFO  15:04:45,683 - #20 fun
INFO  15:04:45,683 - #43 (
INFO  15:04:45,683 - #20 int
INFO  15:04:45,683 - #20 x
INFO  15:04:45,683 - #44 )
INFO  15:04:45,683 - #47 {
INFO  15:04:45,683 - #48 }
INFO  15:04:45,683 - #16 void
INFO  15:04:45,684 - #20 main
INFO  15:04:45,684 - #43 (
INFO  15:04:45,684 - #44 )
INFO  15:04:45,684 - #20 int
INFO  15:04:45,684 - #20 b
INFO  15:04:45,684 - #40 ;
INFO  15:04:45,684 - #20 char
INFO  15:04:45,685 - #20 b
INFO  15:04:45,685 - #40 ;
INFO  15:04:45,685 - #20 int
INFO  15:04:45,685 - #20 num
INFO  15:04:45,685 - #40 ;
INFO  15:04:45,685 - #20 char
INFO  15:04:45,685 - #20 character
INFO  15:04:45,685 - #40 ;
INFO  15:04:45,685 - #20 bool
INFO  15:04:45,686 - #20 boolean
INFO  15:04:45,686 - #40 ;
INFO  15:04:45,686 - #20 int
INFO  15:04:45,686 - #20 niz
INFO  15:04:45,686 - #45 [
INFO  15:04:45,686 - #46 ]
INFO  15:04:45,686 - #40 ;
INFO  15:04:45,686 - #47 {
INFO  15:04:45,686 - #20 a
INFO  15:04:45,686 - #37 =
INFO  15:04:45,686 - #21 1
INFO  15:04:45,686 - #40 ;
INFO  15:04:45,687 - #20 num
INFO  15:04:45,687 - #37 =
INFO  15:04:45,687 - #22 a
INFO  15:04:45,687 - #40 ;
INFO  15:04:45,687 - #20 num
INFO  15:04:45,687 - #37 =
INFO  15:04:45,687 - #23 true
INFO  15:04:45,688 - #40 ;
INFO  15:04:45,688 - #20 character
INFO  15:04:45,688 - #37 =
INFO  15:04:45,688 - #21 1
INFO  15:04:45,688 - #40 ;
INFO  15:04:45,688 - #20 character
INFO  15:04:45,688 - #37 =
INFO  15:04:45,688 - #23 true
INFO  15:04:45,688 - #40 ;
INFO  15:04:45,689 - #20 boolean
INFO  15:04:45,689 - #37 =
INFO  15:04:45,689 - #21 1
INFO  15:04:45,689 - #40 ;
INFO  15:04:45,689 - #20 boolean
INFO  15:04:45,689 - #37 =
INFO  15:04:45,689 - #22 a
INFO  15:04:45,689 - #40 ;
INFO  15:04:45,689 - #20 cnst
INFO  15:04:45,689 - #37 =
INFO  15:04:45,689 - #21 2
INFO  15:04:45,689 - #40 ;
INFO  15:04:45,689 - #20 character
INFO  15:04:45,689 - #38 ++
INFO  15:04:45,690 - #40 ;
INFO  15:04:45,690 - #20 boolean
INFO  15:04:45,690 - #39 --
INFO  15:04:45,690 - #40 ;
INFO  15:04:45,690 - #20 fun
INFO  15:04:45,690 - #43 (
INFO  15:04:45,690 - #21 1
INFO  15:04:45,690 - #41 ,
INFO  15:04:45,690 - #21 2
INFO  15:04:45,691 - #44 )
INFO  15:04:45,691 - #40 ;
INFO  15:04:45,691 - #20 character
INFO  15:04:45,691 - #37 =
INFO  15:04:45,691 - #25 -
INFO  15:04:45,691 - #22 a
INFO  15:04:45,691 - #40 ;
INFO  15:04:45,692 - #20 niz
INFO  15:04:45,692 - #37 =
INFO  15:04:45,692 - #12 new
INFO  15:04:45,692 - #20 int
INFO  15:04:45,692 - #45 [
INFO  15:04:45,692 - #22 a
INFO  15:04:45,692 - #46 ]
INFO  15:04:45,692 - #40 ;
INFO  15:04:45,692 - #10 do
INFO  15:04:45,692 - #47 {
INFO  15:04:45,693 - #20 num
INFO  15:04:45,693 - #38 ++
INFO  15:04:45,694 - #40 ;
INFO  15:04:45,694 - #3 break
INFO  15:04:45,694 - #40 ;
INFO  15:04:45,694 - #18 continue
INFO  15:04:45,694 - #40 ;
INFO  15:04:45,694 - #48 }
INFO  15:04:45,695 - #11 while
INFO  15:04:45,695 - #43 (
INFO  15:04:45,695 - #20 num
INFO  15:04:45,695 - #33 <
INFO  15:04:45,695 - #21 10
INFO  15:04:45,696 - #44 )
INFO  15:04:45,696 - #40 ;
INFO  15:04:45,696 - #3 break
INFO  15:04:45,696 - #40 ;
INFO  15:04:45,697 - #18 continue
INFO  15:04:45,697 - #40 ;
INFO  15:04:45,697 - #8 if
INFO  15:04:45,697 - #43 (
INFO  15:04:45,697 - #20 boolean
INFO  15:04:45,697 - #44 )
INFO  15:04:45,697 - #47 {
INFO  15:04:45,698 - #20 num
INFO  15:04:45,698 - #37 =
INFO  15:04:45,698 - #21 1
INFO  15:04:45,698 - #40 ;
INFO  15:04:45,698 - #48 }
INFO  15:04:45,698 - #8 if
INFO  15:04:45,698 - #43 (
INFO  15:04:45,698 - #20 num
INFO  15:04:45,698 - #44 )
INFO  15:04:45,698 - #47 {
INFO  15:04:45,698 - #20 num
INFO  15:04:45,698 - #37 =
INFO  15:04:45,698 - #21 2
INFO  15:04:45,698 - #40 ;
INFO  15:04:45,699 - #48 }
INFO  15:04:45,699 - #48 }
INFO  15:04:45,699 - #48 }
INFO  15:04:45,700 - 

================SINTAKSNO STABLO====================


INFO  15:04:45,702 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementSingle(
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 a
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementSingle]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               num
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorCharConst(
                                                       a
                                                      ) [FactorCharConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             num
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorBoolConst(
                                                     true
                                                    ) [FactorBoolConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorSimple(
                                           character
                                          ) [DesignatorSimple]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   1
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         character
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorBoolConst(
                                                 true
                                                ) [FactorBoolConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       boolean
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     boolean
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorCharConst(
                                             a
                                            ) [FactorCharConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   cnst
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           2
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorIncrement(
                                DesignatorSimple(
                                 character
                                ) [DesignatorSimple]
                              ) [DesignatorIncrement]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorDecrement(
                              DesignatorSimple(
                               boolean
                              ) [DesignatorSimple]
                            ) [DesignatorDecrement]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorMethodCall0(
                            DesignatorSimple(
                             fun
                            ) [DesignatorSimple]
                            ActParsMulti(
                              ActParsSingle(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [ActParsSingle]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsMulti]
                          ) [DesignatorMethodCall0]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           character
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprNegSingle(
                                TermSingle(
                                  FactorCharConst(
                                   a
                                  ) [FactorCharConst]
                                ) [TermSingle]
                              ) [ExprNegSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         niz
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNewArray(
                                  Type(
                                   int
                                  ) [Type]
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorCharConst(
                                         a
                                        ) [FactorCharConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [FactorNewArray]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDoWhile(
                    DoHead(
                    ) [DoHead]
                    Stmt(
                      StatementMulti(
                        StatementMulti(
                          StatementSingle(
                            StmtDesign(
                              DesignatorIncrement(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                              ) [DesignatorIncrement]
                            ) [StmtDesign]
                          ) [StatementSingle]
                          StmtBreak(
                          ) [StmtBreak]
                        ) [StatementMulti]
                        StmtContinue(
                        ) [StmtContinue]
                      ) [StatementMulti]
                    ) [Stmt]
                    CondOne(
                      CondTermOne(
                        CondFactTwo(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   num
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                          RelopLT(
                          ) [RelopLT]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 10
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactTwo]
                      ) [CondTermOne]
                    ) [CondOne]
                  ) [StmtDoWhile]
                ) [StatementMulti]
                StmtBreak(
                ) [StmtBreak]
              ) [StatementMulti]
              StmtContinue(
              ) [StmtContinue]
            ) [StatementMulti]
            StmtIf(
              StmtIfBody(
                IfCond(
                  CondOne(
                    CondTermOne(
                      CondFactOne(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 boolean
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactOne]
                    ) [CondTermOne]
                  ) [CondOne]
                ) [IfCond]
                Stmt(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         num
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                ) [Stmt]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtIf(
            StmtIfBody(
              IfCond(
                CondOne(
                  CondTermOne(
                    CondFactOne(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactOne]
                  ) [CondTermOne]
                ) [CondOne]
              ) [IfCond]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       num
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
            ) [StmtIfBody]
          ) [StmtIf]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  15:04:45,703 - 

================SEMANTICKA OBRADA====================


ERROR 15:04:45,715 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  15:04:45,716 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  15:04:45,716 - Deklarisana konstanta 'cnst' na liniji 3
INFO  15:04:45,716 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 15:04:45,716 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  15:04:45,716 - Deklarisana promenljiva 'b' na liniji 14
ERROR 15:04:45,716 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  15:04:45,716 - Deklarisana promenljiva 'num' na liniji 15
INFO  15:04:45,717 - Deklarisana promenljiva 'character' na liniji 15
INFO  15:04:45,717 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  15:04:45,717 - Deklarisan niz 'niz' na liniji 16
ERROR 15:04:45,717 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 15:04:45,717 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 15:04:45,717 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 15:04:45,717 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 15:04:45,717 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 15:04:45,717 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 15:04:45,717 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 15:04:45,717 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 15:04:45,717 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 15:04:45,717 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  15:04:45,717 - Pronadjen poziv funkcije 'fun' na liniji 35
ERROR 15:04:45,717 - Semanticka greska - tip mora da bude int na liniji 38
ERROR 15:04:45,717 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 41
ERROR 15:04:45,718 - Semanticka greska - break iskaz van petlje
ERROR 15:04:45,718 - Semanticka greska - continue iskaz van petlje
ERROR 15:04:45,718 - IfCondCondOne(
  CondTermOne(
    CondFactOne(
      ExprOne(
        ExprSingle(
          TermSingle(
            FactorDesignator(
              DesignatorSimple(
               boolean
              ) [DesignatorSimple]
            ) [FactorDesignator]
          ) [TermSingle]
        ) [ExprSingle]
      ) [ExprOne]
    ) [CondFactOne]
  ) [CondTermOne]
) [CondOne] na liniji 51
INFO  15:04:52,802 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:04:52,848 - #2 program
INFO  15:04:52,848 - #20 MJProgram
INFO  15:04:52,848 - #20 abc
INFO  15:04:52,849 - #20 a
INFO  15:04:52,849 - #40 ;
INFO  15:04:52,850 - #7 const
INFO  15:04:52,850 - #20 int
INFO  15:04:52,850 - #20 cnst
INFO  15:04:52,850 - #37 =
INFO  15:04:52,850 - #21 1
INFO  15:04:52,850 - #40 ;
INFO  15:04:52,851 - #47 {
INFO  15:04:52,851 - #20 int
INFO  15:04:52,851 - #20 fun
INFO  15:04:52,851 - #43 (
INFO  15:04:52,851 - #20 int
INFO  15:04:52,851 - #20 x
INFO  15:04:52,851 - #44 )
INFO  15:04:52,852 - #47 {
INFO  15:04:52,852 - #48 }
INFO  15:04:52,852 - #16 void
INFO  15:04:52,852 - #20 main
INFO  15:04:52,852 - #43 (
INFO  15:04:52,852 - #44 )
INFO  15:04:52,852 - #20 int
INFO  15:04:52,852 - #20 b
INFO  15:04:52,853 - #40 ;
INFO  15:04:52,853 - #20 char
INFO  15:04:52,853 - #20 b
INFO  15:04:52,853 - #40 ;
INFO  15:04:52,853 - #20 int
INFO  15:04:52,853 - #20 num
INFO  15:04:52,854 - #40 ;
INFO  15:04:52,854 - #20 char
INFO  15:04:52,854 - #20 character
INFO  15:04:52,854 - #40 ;
INFO  15:04:52,854 - #20 bool
INFO  15:04:52,854 - #20 boolean
INFO  15:04:52,854 - #40 ;
INFO  15:04:52,854 - #20 int
INFO  15:04:52,854 - #20 niz
INFO  15:04:52,854 - #45 [
INFO  15:04:52,854 - #46 ]
INFO  15:04:52,854 - #40 ;
INFO  15:04:52,854 - #47 {
INFO  15:04:52,854 - #20 a
INFO  15:04:52,854 - #37 =
INFO  15:04:52,855 - #21 1
INFO  15:04:52,855 - #40 ;
INFO  15:04:52,855 - #20 num
INFO  15:04:52,855 - #37 =
INFO  15:04:52,856 - #22 a
INFO  15:04:52,856 - #40 ;
INFO  15:04:52,856 - #20 num
INFO  15:04:52,856 - #37 =
INFO  15:04:52,856 - #23 true
INFO  15:04:52,856 - #40 ;
INFO  15:04:52,856 - #20 character
INFO  15:04:52,856 - #37 =
INFO  15:04:52,856 - #21 1
INFO  15:04:52,856 - #40 ;
INFO  15:04:52,856 - #20 character
INFO  15:04:52,856 - #37 =
INFO  15:04:52,856 - #23 true
INFO  15:04:52,857 - #40 ;
INFO  15:04:52,857 - #20 boolean
INFO  15:04:52,857 - #37 =
INFO  15:04:52,857 - #21 1
INFO  15:04:52,857 - #40 ;
INFO  15:04:52,857 - #20 boolean
INFO  15:04:52,857 - #37 =
INFO  15:04:52,857 - #22 a
INFO  15:04:52,857 - #40 ;
INFO  15:04:52,858 - #20 cnst
INFO  15:04:52,858 - #37 =
INFO  15:04:52,858 - #21 2
INFO  15:04:52,858 - #40 ;
INFO  15:04:52,858 - #20 character
INFO  15:04:52,858 - #38 ++
INFO  15:04:52,858 - #40 ;
INFO  15:04:52,859 - #20 boolean
INFO  15:04:52,859 - #39 --
INFO  15:04:52,859 - #40 ;
INFO  15:04:52,859 - #20 fun
INFO  15:04:52,859 - #43 (
INFO  15:04:52,859 - #21 1
INFO  15:04:52,859 - #41 ,
INFO  15:04:52,860 - #21 2
INFO  15:04:52,860 - #44 )
INFO  15:04:52,861 - #40 ;
INFO  15:04:52,862 - #20 character
INFO  15:04:52,862 - #37 =
INFO  15:04:52,862 - #25 -
INFO  15:04:52,862 - #22 a
INFO  15:04:52,862 - #40 ;
INFO  15:04:52,862 - #20 niz
INFO  15:04:52,862 - #37 =
INFO  15:04:52,862 - #12 new
INFO  15:04:52,862 - #20 int
INFO  15:04:52,862 - #45 [
INFO  15:04:52,862 - #22 a
INFO  15:04:52,862 - #46 ]
INFO  15:04:52,863 - #40 ;
INFO  15:04:52,863 - #10 do
INFO  15:04:52,863 - #47 {
INFO  15:04:52,864 - #20 num
INFO  15:04:52,864 - #38 ++
INFO  15:04:52,864 - #40 ;
INFO  15:04:52,864 - #3 break
INFO  15:04:52,864 - #40 ;
INFO  15:04:52,864 - #18 continue
INFO  15:04:52,865 - #40 ;
INFO  15:04:52,865 - #48 }
INFO  15:04:52,865 - #11 while
INFO  15:04:52,865 - #43 (
INFO  15:04:52,865 - #20 num
INFO  15:04:52,865 - #33 <
INFO  15:04:52,866 - #21 10
INFO  15:04:52,866 - #44 )
INFO  15:04:52,867 - #40 ;
INFO  15:04:52,867 - #3 break
INFO  15:04:52,867 - #40 ;
INFO  15:04:52,867 - #18 continue
INFO  15:04:52,867 - #40 ;
INFO  15:04:52,867 - #8 if
INFO  15:04:52,867 - #43 (
INFO  15:04:52,867 - #20 boolean
INFO  15:04:52,868 - #44 )
INFO  15:04:52,868 - #47 {
INFO  15:04:52,868 - #20 num
INFO  15:04:52,868 - #37 =
INFO  15:04:52,868 - #21 1
INFO  15:04:52,868 - #40 ;
INFO  15:04:52,868 - #48 }
INFO  15:04:52,868 - #8 if
INFO  15:04:52,868 - #43 (
INFO  15:04:52,868 - #20 num
INFO  15:04:52,868 - #44 )
INFO  15:04:52,868 - #47 {
INFO  15:04:52,869 - #20 num
INFO  15:04:52,869 - #37 =
INFO  15:04:52,869 - #21 2
INFO  15:04:52,869 - #40 ;
INFO  15:04:52,869 - #48 }
INFO  15:04:52,869 - #48 }
INFO  15:04:52,869 - #48 }
INFO  15:04:52,870 - 

================SINTAKSNO STABLO====================


INFO  15:04:52,872 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementSingle(
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 a
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementSingle]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               num
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorCharConst(
                                                       a
                                                      ) [FactorCharConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             num
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorBoolConst(
                                                     true
                                                    ) [FactorBoolConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorSimple(
                                           character
                                          ) [DesignatorSimple]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   1
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         character
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorBoolConst(
                                                 true
                                                ) [FactorBoolConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       boolean
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     boolean
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorCharConst(
                                             a
                                            ) [FactorCharConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   cnst
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           2
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorIncrement(
                                DesignatorSimple(
                                 character
                                ) [DesignatorSimple]
                              ) [DesignatorIncrement]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorDecrement(
                              DesignatorSimple(
                               boolean
                              ) [DesignatorSimple]
                            ) [DesignatorDecrement]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorMethodCall0(
                            DesignatorSimple(
                             fun
                            ) [DesignatorSimple]
                            ActParsMulti(
                              ActParsSingle(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [ActParsSingle]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsMulti]
                          ) [DesignatorMethodCall0]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           character
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprNegSingle(
                                TermSingle(
                                  FactorCharConst(
                                   a
                                  ) [FactorCharConst]
                                ) [TermSingle]
                              ) [ExprNegSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         niz
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNewArray(
                                  Type(
                                   int
                                  ) [Type]
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorCharConst(
                                         a
                                        ) [FactorCharConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [FactorNewArray]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDoWhile(
                    DoHead(
                    ) [DoHead]
                    Stmt(
                      StatementMulti(
                        StatementMulti(
                          StatementSingle(
                            StmtDesign(
                              DesignatorIncrement(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                              ) [DesignatorIncrement]
                            ) [StmtDesign]
                          ) [StatementSingle]
                          StmtBreak(
                          ) [StmtBreak]
                        ) [StatementMulti]
                        StmtContinue(
                        ) [StmtContinue]
                      ) [StatementMulti]
                    ) [Stmt]
                    CondOne(
                      CondTermOne(
                        CondFactTwo(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   num
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                          RelopLT(
                          ) [RelopLT]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 10
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactTwo]
                      ) [CondTermOne]
                    ) [CondOne]
                  ) [StmtDoWhile]
                ) [StatementMulti]
                StmtBreak(
                ) [StmtBreak]
              ) [StatementMulti]
              StmtContinue(
              ) [StmtContinue]
            ) [StatementMulti]
            StmtIf(
              StmtIfBody(
                IfCond(
                  CondOne(
                    CondTermOne(
                      CondFactOne(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 boolean
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactOne]
                    ) [CondTermOne]
                  ) [CondOne]
                ) [IfCond]
                Stmt(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         num
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                ) [Stmt]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtIf(
            StmtIfBody(
              IfCond(
                CondOne(
                  CondTermOne(
                    CondFactOne(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactOne]
                  ) [CondTermOne]
                ) [CondOne]
              ) [IfCond]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       num
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
            ) [StmtIfBody]
          ) [StmtIf]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  15:04:52,873 - 

================SEMANTICKA OBRADA====================


ERROR 15:04:52,886 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  15:04:52,887 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  15:04:52,887 - Deklarisana konstanta 'cnst' na liniji 3
INFO  15:04:52,887 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 15:04:52,887 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  15:04:52,887 - Deklarisana promenljiva 'b' na liniji 14
ERROR 15:04:52,887 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  15:04:52,887 - Deklarisana promenljiva 'num' na liniji 15
INFO  15:04:52,887 - Deklarisana promenljiva 'character' na liniji 15
INFO  15:04:52,887 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  15:04:52,887 - Deklarisan niz 'niz' na liniji 16
ERROR 15:04:52,887 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 15:04:52,887 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 15:04:52,888 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 15:04:52,888 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 15:04:52,888 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 15:04:52,888 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 15:04:52,888 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 15:04:52,888 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 15:04:52,888 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 15:04:52,888 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  15:04:52,888 - Pronadjen poziv funkcije 'fun' na liniji 35
ERROR 15:04:52,888 - Semanticka greska - tip mora da bude int na liniji 38
ERROR 15:04:52,888 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 41
ERROR 15:04:52,888 - Semanticka greska - break iskaz van petlje
ERROR 15:04:52,888 - Semanticka greska - continue iskaz van petlje
ERROR 15:04:52,889 - IfCondnull na liniji 51
INFO  15:04:59,702 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:04:59,754 - #2 program
INFO  15:04:59,754 - #20 MJProgram
INFO  15:04:59,754 - #20 abc
INFO  15:04:59,755 - #20 a
INFO  15:04:59,755 - #40 ;
INFO  15:04:59,756 - #7 const
INFO  15:04:59,756 - #20 int
INFO  15:04:59,756 - #20 cnst
INFO  15:04:59,756 - #37 =
INFO  15:04:59,756 - #21 1
INFO  15:04:59,756 - #40 ;
INFO  15:04:59,757 - #47 {
INFO  15:04:59,757 - #20 int
INFO  15:04:59,757 - #20 fun
INFO  15:04:59,757 - #43 (
INFO  15:04:59,757 - #20 int
INFO  15:04:59,757 - #20 x
INFO  15:04:59,757 - #44 )
INFO  15:04:59,758 - #47 {
INFO  15:04:59,758 - #48 }
INFO  15:04:59,758 - #16 void
INFO  15:04:59,758 - #20 main
INFO  15:04:59,758 - #43 (
INFO  15:04:59,758 - #44 )
INFO  15:04:59,758 - #20 int
INFO  15:04:59,759 - #20 b
INFO  15:04:59,759 - #40 ;
INFO  15:04:59,759 - #20 char
INFO  15:04:59,759 - #20 b
INFO  15:04:59,759 - #40 ;
INFO  15:04:59,759 - #20 int
INFO  15:04:59,760 - #20 num
INFO  15:04:59,760 - #40 ;
INFO  15:04:59,760 - #20 char
INFO  15:04:59,760 - #20 character
INFO  15:04:59,760 - #40 ;
INFO  15:04:59,760 - #20 bool
INFO  15:04:59,760 - #20 boolean
INFO  15:04:59,760 - #40 ;
INFO  15:04:59,760 - #20 int
INFO  15:04:59,760 - #20 niz
INFO  15:04:59,760 - #45 [
INFO  15:04:59,761 - #46 ]
INFO  15:04:59,761 - #40 ;
INFO  15:04:59,761 - #47 {
INFO  15:04:59,761 - #20 a
INFO  15:04:59,761 - #37 =
INFO  15:04:59,761 - #21 1
INFO  15:04:59,761 - #40 ;
INFO  15:04:59,762 - #20 num
INFO  15:04:59,762 - #37 =
INFO  15:04:59,762 - #22 a
INFO  15:04:59,762 - #40 ;
INFO  15:04:59,762 - #20 num
INFO  15:04:59,762 - #37 =
INFO  15:04:59,762 - #23 true
INFO  15:04:59,762 - #40 ;
INFO  15:04:59,763 - #20 character
INFO  15:04:59,763 - #37 =
INFO  15:04:59,763 - #21 1
INFO  15:04:59,763 - #40 ;
INFO  15:04:59,763 - #20 character
INFO  15:04:59,763 - #37 =
INFO  15:04:59,763 - #23 true
INFO  15:04:59,763 - #40 ;
INFO  15:04:59,763 - #20 boolean
INFO  15:04:59,764 - #37 =
INFO  15:04:59,764 - #21 1
INFO  15:04:59,764 - #40 ;
INFO  15:04:59,764 - #20 boolean
INFO  15:04:59,764 - #37 =
INFO  15:04:59,764 - #22 a
INFO  15:04:59,764 - #40 ;
INFO  15:04:59,764 - #20 cnst
INFO  15:04:59,765 - #37 =
INFO  15:04:59,765 - #21 2
INFO  15:04:59,765 - #40 ;
INFO  15:04:59,765 - #20 character
INFO  15:04:59,765 - #38 ++
INFO  15:04:59,765 - #40 ;
INFO  15:04:59,765 - #20 boolean
INFO  15:04:59,765 - #39 --
INFO  15:04:59,766 - #40 ;
INFO  15:04:59,766 - #20 fun
INFO  15:04:59,766 - #43 (
INFO  15:04:59,766 - #21 1
INFO  15:04:59,766 - #41 ,
INFO  15:04:59,767 - #21 2
INFO  15:04:59,767 - #44 )
INFO  15:04:59,767 - #40 ;
INFO  15:04:59,768 - #20 character
INFO  15:04:59,768 - #37 =
INFO  15:04:59,768 - #25 -
INFO  15:04:59,768 - #22 a
INFO  15:04:59,768 - #40 ;
INFO  15:04:59,768 - #20 niz
INFO  15:04:59,768 - #37 =
INFO  15:04:59,768 - #12 new
INFO  15:04:59,769 - #20 int
INFO  15:04:59,769 - #45 [
INFO  15:04:59,769 - #22 a
INFO  15:04:59,769 - #46 ]
INFO  15:04:59,769 - #40 ;
INFO  15:04:59,769 - #10 do
INFO  15:04:59,769 - #47 {
INFO  15:04:59,770 - #20 num
INFO  15:04:59,770 - #38 ++
INFO  15:04:59,770 - #40 ;
INFO  15:04:59,770 - #3 break
INFO  15:04:59,770 - #40 ;
INFO  15:04:59,770 - #18 continue
INFO  15:04:59,770 - #40 ;
INFO  15:04:59,770 - #48 }
INFO  15:04:59,770 - #11 while
INFO  15:04:59,771 - #43 (
INFO  15:04:59,771 - #20 num
INFO  15:04:59,771 - #33 <
INFO  15:04:59,771 - #21 10
INFO  15:04:59,771 - #44 )
INFO  15:04:59,772 - #40 ;
INFO  15:04:59,772 - #3 break
INFO  15:04:59,772 - #40 ;
INFO  15:04:59,772 - #18 continue
INFO  15:04:59,772 - #40 ;
INFO  15:04:59,772 - #8 if
INFO  15:04:59,772 - #43 (
INFO  15:04:59,772 - #20 boolean
INFO  15:04:59,772 - #44 )
INFO  15:04:59,772 - #47 {
INFO  15:04:59,773 - #20 num
INFO  15:04:59,773 - #37 =
INFO  15:04:59,773 - #21 1
INFO  15:04:59,773 - #40 ;
INFO  15:04:59,773 - #48 }
INFO  15:04:59,773 - #8 if
INFO  15:04:59,773 - #43 (
INFO  15:04:59,773 - #20 num
INFO  15:04:59,773 - #44 )
INFO  15:04:59,773 - #47 {
INFO  15:04:59,773 - #20 num
INFO  15:04:59,773 - #37 =
INFO  15:04:59,773 - #21 2
INFO  15:04:59,774 - #40 ;
INFO  15:04:59,774 - #48 }
INFO  15:04:59,774 - #48 }
INFO  15:04:59,774 - #48 }
INFO  15:04:59,775 - 

================SINTAKSNO STABLO====================


INFO  15:04:59,777 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementSingle(
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 a
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementSingle]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               num
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorCharConst(
                                                       a
                                                      ) [FactorCharConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             num
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorBoolConst(
                                                     true
                                                    ) [FactorBoolConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorSimple(
                                           character
                                          ) [DesignatorSimple]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   1
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         character
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorBoolConst(
                                                 true
                                                ) [FactorBoolConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       boolean
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     boolean
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorCharConst(
                                             a
                                            ) [FactorCharConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   cnst
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           2
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorIncrement(
                                DesignatorSimple(
                                 character
                                ) [DesignatorSimple]
                              ) [DesignatorIncrement]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorDecrement(
                              DesignatorSimple(
                               boolean
                              ) [DesignatorSimple]
                            ) [DesignatorDecrement]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorMethodCall0(
                            DesignatorSimple(
                             fun
                            ) [DesignatorSimple]
                            ActParsMulti(
                              ActParsSingle(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [ActParsSingle]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsMulti]
                          ) [DesignatorMethodCall0]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           character
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprNegSingle(
                                TermSingle(
                                  FactorCharConst(
                                   a
                                  ) [FactorCharConst]
                                ) [TermSingle]
                              ) [ExprNegSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         niz
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNewArray(
                                  Type(
                                   int
                                  ) [Type]
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorCharConst(
                                         a
                                        ) [FactorCharConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [FactorNewArray]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDoWhile(
                    DoHead(
                    ) [DoHead]
                    Stmt(
                      StatementMulti(
                        StatementMulti(
                          StatementSingle(
                            StmtDesign(
                              DesignatorIncrement(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                              ) [DesignatorIncrement]
                            ) [StmtDesign]
                          ) [StatementSingle]
                          StmtBreak(
                          ) [StmtBreak]
                        ) [StatementMulti]
                        StmtContinue(
                        ) [StmtContinue]
                      ) [StatementMulti]
                    ) [Stmt]
                    CondOne(
                      CondTermOne(
                        CondFactTwo(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   num
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                          RelopLT(
                          ) [RelopLT]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 10
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactTwo]
                      ) [CondTermOne]
                    ) [CondOne]
                  ) [StmtDoWhile]
                ) [StatementMulti]
                StmtBreak(
                ) [StmtBreak]
              ) [StatementMulti]
              StmtContinue(
              ) [StmtContinue]
            ) [StatementMulti]
            StmtIf(
              StmtIfBody(
                IfCond(
                  CondOne(
                    CondTermOne(
                      CondFactOne(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 boolean
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactOne]
                    ) [CondTermOne]
                  ) [CondOne]
                ) [IfCond]
                Stmt(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         num
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                ) [Stmt]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtIf(
            StmtIfBody(
              IfCond(
                CondOne(
                  CondTermOne(
                    CondFactOne(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactOne]
                  ) [CondTermOne]
                ) [CondOne]
              ) [IfCond]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       num
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
            ) [StmtIfBody]
          ) [StmtIf]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  15:04:59,779 - 

================SEMANTICKA OBRADA====================


ERROR 15:04:59,792 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  15:04:59,792 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  15:04:59,792 - Deklarisana konstanta 'cnst' na liniji 3
INFO  15:04:59,793 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 15:04:59,793 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  15:04:59,793 - Deklarisana promenljiva 'b' na liniji 14
ERROR 15:04:59,793 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  15:04:59,793 - Deklarisana promenljiva 'num' na liniji 15
INFO  15:04:59,793 - Deklarisana promenljiva 'character' na liniji 15
INFO  15:04:59,793 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  15:04:59,793 - Deklarisan niz 'niz' na liniji 16
ERROR 15:04:59,793 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 15:04:59,793 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 15:04:59,793 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 15:04:59,793 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 15:04:59,793 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 15:04:59,793 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 15:04:59,793 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 15:04:59,793 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 15:04:59,794 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 15:04:59,794 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  15:04:59,794 - Pronadjen poziv funkcije 'fun' na liniji 35
ERROR 15:04:59,794 - Semanticka greska - tip mora da bude int na liniji 38
ERROR 15:04:59,794 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 41
ERROR 15:04:59,794 - Semanticka greska - break iskaz van petlje
ERROR 15:04:59,794 - Semanticka greska - continue iskaz van petlje
ERROR 15:04:59,794 - IfCondCondOne(
  CondTermOne(
    CondFactOne(
      ExprOne(
        ExprSingle(
          TermSingle(
            FactorDesignator(
              DesignatorSimple(
               boolean
              ) [DesignatorSimple]
            ) [FactorDesignator]
          ) [TermSingle]
        ) [ExprSingle]
      ) [ExprOne]
    ) [CondFactOne]
  ) [CondTermOne]
) [CondOne] na liniji 51
INFO  15:06:43,762 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:06:43,808 - #2 program
INFO  15:06:43,808 - #20 MJProgram
INFO  15:06:43,809 - #20 abc
INFO  15:06:43,809 - #20 a
INFO  15:06:43,810 - #40 ;
INFO  15:06:43,810 - #7 const
INFO  15:06:43,810 - #20 int
INFO  15:06:43,810 - #20 cnst
INFO  15:06:43,810 - #37 =
INFO  15:06:43,810 - #21 1
INFO  15:06:43,810 - #40 ;
INFO  15:06:43,811 - #47 {
INFO  15:06:43,811 - #20 int
INFO  15:06:43,811 - #20 fun
INFO  15:06:43,811 - #43 (
INFO  15:06:43,811 - #20 int
INFO  15:06:43,812 - #20 x
INFO  15:06:43,812 - #44 )
INFO  15:06:43,812 - #47 {
INFO  15:06:43,812 - #48 }
INFO  15:06:43,812 - #16 void
INFO  15:06:43,812 - #20 main
INFO  15:06:43,812 - #43 (
INFO  15:06:43,813 - #44 )
INFO  15:06:43,813 - #20 int
INFO  15:06:43,813 - #20 b
INFO  15:06:43,814 - #40 ;
INFO  15:06:43,814 - #20 char
INFO  15:06:43,814 - #20 b
INFO  15:06:43,814 - #40 ;
INFO  15:06:43,815 - #20 int
INFO  15:06:43,815 - #20 num
INFO  15:06:43,815 - #40 ;
INFO  15:06:43,815 - #20 char
INFO  15:06:43,815 - #20 character
INFO  15:06:43,815 - #40 ;
INFO  15:06:43,815 - #20 bool
INFO  15:06:43,816 - #20 boolean
INFO  15:06:43,816 - #40 ;
INFO  15:06:43,816 - #20 int
INFO  15:06:43,816 - #20 niz
INFO  15:06:43,816 - #45 [
INFO  15:06:43,816 - #46 ]
INFO  15:06:43,816 - #40 ;
INFO  15:06:43,816 - #47 {
INFO  15:06:43,816 - #20 a
INFO  15:06:43,816 - #37 =
INFO  15:06:43,817 - #21 1
INFO  15:06:43,817 - #40 ;
INFO  15:06:43,817 - #20 num
INFO  15:06:43,818 - #37 =
INFO  15:06:43,818 - #22 a
INFO  15:06:43,818 - #40 ;
INFO  15:06:43,818 - #20 num
INFO  15:06:43,818 - #37 =
INFO  15:06:43,818 - #23 true
INFO  15:06:43,818 - #40 ;
INFO  15:06:43,818 - #20 character
INFO  15:06:43,818 - #37 =
INFO  15:06:43,818 - #21 1
INFO  15:06:43,818 - #40 ;
INFO  15:06:43,818 - #20 character
INFO  15:06:43,819 - #37 =
INFO  15:06:43,819 - #23 true
INFO  15:06:43,819 - #40 ;
INFO  15:06:43,819 - #20 boolean
INFO  15:06:43,819 - #37 =
INFO  15:06:43,819 - #21 1
INFO  15:06:43,819 - #40 ;
INFO  15:06:43,819 - #20 boolean
INFO  15:06:43,819 - #37 =
INFO  15:06:43,819 - #22 a
INFO  15:06:43,819 - #40 ;
INFO  15:06:43,819 - #20 cnst
INFO  15:06:43,819 - #37 =
INFO  15:06:43,819 - #21 2
INFO  15:06:43,820 - #40 ;
INFO  15:06:43,820 - #20 character
INFO  15:06:43,820 - #38 ++
INFO  15:06:43,820 - #40 ;
INFO  15:06:43,820 - #20 boolean
INFO  15:06:43,820 - #39 --
INFO  15:06:43,820 - #40 ;
INFO  15:06:43,820 - #20 fun
INFO  15:06:43,820 - #43 (
INFO  15:06:43,820 - #21 1
INFO  15:06:43,821 - #41 ,
INFO  15:06:43,821 - #21 2
INFO  15:06:43,821 - #44 )
INFO  15:06:43,822 - #40 ;
INFO  15:06:43,822 - #20 character
INFO  15:06:43,822 - #37 =
INFO  15:06:43,822 - #25 -
INFO  15:06:43,822 - #22 a
INFO  15:06:43,822 - #40 ;
INFO  15:06:43,823 - #20 niz
INFO  15:06:43,823 - #37 =
INFO  15:06:43,823 - #12 new
INFO  15:06:43,823 - #20 int
INFO  15:06:43,823 - #45 [
INFO  15:06:43,823 - #22 a
INFO  15:06:43,823 - #46 ]
INFO  15:06:43,823 - #40 ;
INFO  15:06:43,823 - #10 do
INFO  15:06:43,823 - #47 {
INFO  15:06:43,824 - #20 num
INFO  15:06:43,824 - #38 ++
INFO  15:06:43,824 - #40 ;
INFO  15:06:43,824 - #3 break
INFO  15:06:43,824 - #40 ;
INFO  15:06:43,824 - #18 continue
INFO  15:06:43,825 - #40 ;
INFO  15:06:43,825 - #48 }
INFO  15:06:43,825 - #11 while
INFO  15:06:43,825 - #43 (
INFO  15:06:43,825 - #20 num
INFO  15:06:43,825 - #33 <
INFO  15:06:43,826 - #21 10
INFO  15:06:43,826 - #44 )
INFO  15:06:43,827 - #40 ;
INFO  15:06:43,827 - #3 break
INFO  15:06:43,827 - #40 ;
INFO  15:06:43,827 - #18 continue
INFO  15:06:43,827 - #40 ;
INFO  15:06:43,827 - #8 if
INFO  15:06:43,827 - #43 (
INFO  15:06:43,827 - #20 boolean
INFO  15:06:43,828 - #44 )
INFO  15:06:43,828 - #47 {
INFO  15:06:43,828 - #20 num
INFO  15:06:43,828 - #37 =
INFO  15:06:43,828 - #21 1
INFO  15:06:43,828 - #40 ;
INFO  15:06:43,828 - #48 }
INFO  15:06:43,828 - #8 if
INFO  15:06:43,829 - #43 (
INFO  15:06:43,829 - #20 num
INFO  15:06:43,829 - #44 )
INFO  15:06:43,829 - #47 {
INFO  15:06:43,829 - #20 num
INFO  15:06:43,829 - #37 =
INFO  15:06:43,829 - #21 2
INFO  15:06:43,829 - #40 ;
INFO  15:06:43,829 - #48 }
INFO  15:06:43,829 - #48 }
INFO  15:06:43,829 - #48 }
INFO  15:06:43,830 - 

================SINTAKSNO STABLO====================


INFO  15:06:43,834 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementSingle(
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 a
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementSingle]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               num
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorCharConst(
                                                       a
                                                      ) [FactorCharConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             num
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorBoolConst(
                                                     true
                                                    ) [FactorBoolConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorSimple(
                                           character
                                          ) [DesignatorSimple]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   1
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         character
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorBoolConst(
                                                 true
                                                ) [FactorBoolConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       boolean
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     boolean
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorCharConst(
                                             a
                                            ) [FactorCharConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   cnst
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           2
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorIncrement(
                                DesignatorSimple(
                                 character
                                ) [DesignatorSimple]
                              ) [DesignatorIncrement]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorDecrement(
                              DesignatorSimple(
                               boolean
                              ) [DesignatorSimple]
                            ) [DesignatorDecrement]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorMethodCall0(
                            DesignatorSimple(
                             fun
                            ) [DesignatorSimple]
                            ActParsMulti(
                              ActParsSingle(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [ActParsSingle]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsMulti]
                          ) [DesignatorMethodCall0]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           character
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprNegSingle(
                                TermSingle(
                                  FactorCharConst(
                                   a
                                  ) [FactorCharConst]
                                ) [TermSingle]
                              ) [ExprNegSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         niz
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNewArray(
                                  Type(
                                   int
                                  ) [Type]
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorCharConst(
                                         a
                                        ) [FactorCharConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [FactorNewArray]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDoWhile(
                    DoHead(
                    ) [DoHead]
                    Stmt(
                      StatementMulti(
                        StatementMulti(
                          StatementSingle(
                            StmtDesign(
                              DesignatorIncrement(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                              ) [DesignatorIncrement]
                            ) [StmtDesign]
                          ) [StatementSingle]
                          StmtBreak(
                          ) [StmtBreak]
                        ) [StatementMulti]
                        StmtContinue(
                        ) [StmtContinue]
                      ) [StatementMulti]
                    ) [Stmt]
                    CondOne(
                      CondTermOne(
                        CondFactTwo(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   num
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                          RelopLT(
                          ) [RelopLT]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 10
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactTwo]
                      ) [CondTermOne]
                    ) [CondOne]
                  ) [StmtDoWhile]
                ) [StatementMulti]
                StmtBreak(
                ) [StmtBreak]
              ) [StatementMulti]
              StmtContinue(
              ) [StmtContinue]
            ) [StatementMulti]
            StmtIf(
              StmtIfBody(
                IfCond(
                  CondOne(
                    CondTermOne(
                      CondFactOne(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 boolean
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactOne]
                    ) [CondTermOne]
                  ) [CondOne]
                ) [IfCond]
                Stmt(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         num
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                ) [Stmt]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtIf(
            StmtIfBody(
              IfCond(
                CondOne(
                  CondTermOne(
                    CondFactOne(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactOne]
                  ) [CondTermOne]
                ) [CondOne]
              ) [IfCond]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       num
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
            ) [StmtIfBody]
          ) [StmtIf]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  15:06:43,835 - 

================SEMANTICKA OBRADA====================


ERROR 15:06:43,850 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  15:06:43,851 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  15:06:43,851 - Deklarisana konstanta 'cnst' na liniji 3
INFO  15:06:43,851 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 15:06:43,851 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  15:06:43,852 - Deklarisana promenljiva 'b' na liniji 14
ERROR 15:06:43,852 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  15:06:43,852 - Deklarisana promenljiva 'num' na liniji 15
INFO  15:06:43,852 - Deklarisana promenljiva 'character' na liniji 15
INFO  15:06:43,852 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  15:06:43,852 - Deklarisan niz 'niz' na liniji 16
ERROR 15:06:43,852 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 15:06:43,852 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 15:06:43,852 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 15:06:43,852 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 15:06:43,852 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 15:06:43,852 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 15:06:43,852 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 15:06:43,852 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 15:06:43,852 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 15:06:43,852 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  15:06:43,853 - Pronadjen poziv funkcije 'fun' na liniji 35
ERROR 15:06:43,853 - Semanticka greska - tip mora da bude int na liniji 38
ERROR 15:06:43,853 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 41
ERROR 15:06:43,853 - Semanticka greska - break iskaz van petlje
ERROR 15:06:43,853 - Semanticka greska - continue iskaz van petlje
ERROR 15:06:43,853 - IfCondCondOne(
  CondTermOne(
    CondFactOne(
      ExprOne(
        ExprSingle(
          TermSingle(
            FactorDesignator(
              DesignatorSimple(
               boolean
              ) [DesignatorSimple]
            ) [FactorDesignator]
          ) [TermSingle]
        ) [ExprSingle]
      ) [ExprOne]
    ) [CondFactOne]
  ) [CondTermOne]
) [CondOne] na liniji 51
INFO  15:15:15,227 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:15:15,274 - #2 program
INFO  15:15:15,274 - #20 MJProgram
INFO  15:15:15,274 - #20 abc
INFO  15:15:15,275 - #20 a
INFO  15:15:15,275 - #40 ;
INFO  15:15:15,275 - #7 const
INFO  15:15:15,275 - #20 int
INFO  15:15:15,276 - #20 cnst
INFO  15:15:15,276 - #37 =
INFO  15:15:15,276 - #21 1
INFO  15:15:15,276 - #40 ;
INFO  15:15:15,276 - #47 {
INFO  15:15:15,276 - #20 int
INFO  15:15:15,276 - #20 fun
INFO  15:15:15,277 - #43 (
INFO  15:15:15,277 - #20 int
INFO  15:15:15,277 - #20 x
INFO  15:15:15,277 - #44 )
INFO  15:15:15,277 - #47 {
INFO  15:15:15,277 - #48 }
INFO  15:15:15,277 - #16 void
INFO  15:15:15,278 - #20 main
INFO  15:15:15,278 - #43 (
INFO  15:15:15,278 - #44 )
INFO  15:15:15,278 - #20 int
INFO  15:15:15,278 - #20 b
INFO  15:15:15,278 - #40 ;
INFO  15:15:15,278 - #20 char
INFO  15:15:15,279 - #20 b
INFO  15:15:15,279 - #40 ;
INFO  15:15:15,279 - #20 int
INFO  15:15:15,279 - #20 num
INFO  15:15:15,279 - #40 ;
INFO  15:15:15,279 - #20 char
INFO  15:15:15,279 - #20 character
INFO  15:15:15,279 - #40 ;
INFO  15:15:15,279 - #20 bool
INFO  15:15:15,280 - #20 boolean
INFO  15:15:15,280 - #40 ;
INFO  15:15:15,280 - #20 int
INFO  15:15:15,280 - #20 niz
INFO  15:15:15,280 - #45 [
INFO  15:15:15,280 - #46 ]
INFO  15:15:15,280 - #40 ;
INFO  15:15:15,280 - #47 {
INFO  15:15:15,280 - #20 a
INFO  15:15:15,280 - #37 =
INFO  15:15:15,281 - #21 1
INFO  15:15:15,281 - #40 ;
INFO  15:15:15,281 - #20 num
INFO  15:15:15,282 - #37 =
INFO  15:15:15,282 - #22 a
INFO  15:15:15,282 - #40 ;
INFO  15:15:15,282 - #20 num
INFO  15:15:15,282 - #37 =
INFO  15:15:15,282 - #23 true
INFO  15:15:15,282 - #40 ;
INFO  15:15:15,282 - #20 character
INFO  15:15:15,282 - #37 =
INFO  15:15:15,282 - #21 1
INFO  15:15:15,282 - #40 ;
INFO  15:15:15,282 - #20 character
INFO  15:15:15,282 - #37 =
INFO  15:15:15,283 - #23 true
INFO  15:15:15,283 - #40 ;
INFO  15:15:15,283 - #20 boolean
INFO  15:15:15,283 - #37 =
INFO  15:15:15,283 - #21 1
INFO  15:15:15,283 - #40 ;
INFO  15:15:15,283 - #20 boolean
INFO  15:15:15,283 - #37 =
INFO  15:15:15,283 - #22 a
INFO  15:15:15,283 - #40 ;
INFO  15:15:15,283 - #20 cnst
INFO  15:15:15,283 - #37 =
INFO  15:15:15,284 - #21 2
INFO  15:15:15,284 - #40 ;
INFO  15:15:15,284 - #20 character
INFO  15:15:15,284 - #38 ++
INFO  15:15:15,284 - #40 ;
INFO  15:15:15,284 - #20 boolean
INFO  15:15:15,284 - #39 --
INFO  15:15:15,284 - #40 ;
INFO  15:15:15,284 - #20 fun
INFO  15:15:15,284 - #43 (
INFO  15:15:15,285 - #21 1
INFO  15:15:15,285 - #41 ,
INFO  15:15:15,285 - #21 2
INFO  15:15:15,285 - #44 )
INFO  15:15:15,285 - #40 ;
INFO  15:15:15,285 - #20 character
INFO  15:15:15,285 - #37 =
INFO  15:15:15,286 - #25 -
INFO  15:15:15,286 - #22 a
INFO  15:15:15,286 - #40 ;
INFO  15:15:15,286 - #20 niz
INFO  15:15:15,286 - #37 =
INFO  15:15:15,286 - #12 new
INFO  15:15:15,286 - #20 int
INFO  15:15:15,286 - #45 [
INFO  15:15:15,286 - #22 a
INFO  15:15:15,286 - #46 ]
INFO  15:15:15,286 - #40 ;
INFO  15:15:15,287 - #10 do
INFO  15:15:15,287 - #47 {
INFO  15:15:15,288 - #20 num
INFO  15:15:15,288 - #38 ++
INFO  15:15:15,288 - #40 ;
INFO  15:15:15,288 - #3 break
INFO  15:15:15,288 - #40 ;
INFO  15:15:15,288 - #18 continue
INFO  15:15:15,288 - #40 ;
INFO  15:15:15,288 - #48 }
INFO  15:15:15,289 - #11 while
INFO  15:15:15,289 - #43 (
INFO  15:15:15,289 - #20 num
INFO  15:15:15,289 - #33 <
INFO  15:15:15,289 - #21 10
INFO  15:15:15,290 - #44 )
INFO  15:15:15,290 - #40 ;
INFO  15:15:15,291 - #3 break
INFO  15:15:15,291 - #40 ;
INFO  15:15:15,291 - #18 continue
INFO  15:15:15,291 - #40 ;
INFO  15:15:15,291 - #8 if
INFO  15:15:15,291 - #43 (
INFO  15:15:15,291 - #20 boolean
INFO  15:15:15,291 - #44 )
INFO  15:15:15,291 - #47 {
INFO  15:15:15,291 - #20 num
INFO  15:15:15,292 - #37 =
INFO  15:15:15,292 - #21 1
INFO  15:15:15,292 - #40 ;
INFO  15:15:15,292 - #48 }
INFO  15:15:15,292 - #8 if
INFO  15:15:15,292 - #43 (
INFO  15:15:15,292 - #20 num
INFO  15:15:15,292 - #44 )
INFO  15:15:15,292 - #47 {
INFO  15:15:15,292 - #20 num
INFO  15:15:15,292 - #37 =
INFO  15:15:15,292 - #21 2
INFO  15:15:15,292 - #40 ;
INFO  15:15:15,292 - #48 }
INFO  15:15:15,292 - #48 }
INFO  15:15:15,292 - #48 }
INFO  15:15:15,293 - 

================SINTAKSNO STABLO====================


INFO  15:15:15,296 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementSingle(
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 a
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementSingle]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               num
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorCharConst(
                                                       a
                                                      ) [FactorCharConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             num
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorBoolConst(
                                                     true
                                                    ) [FactorBoolConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorSimple(
                                           character
                                          ) [DesignatorSimple]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   1
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         character
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorBoolConst(
                                                 true
                                                ) [FactorBoolConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       boolean
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     boolean
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorCharConst(
                                             a
                                            ) [FactorCharConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   cnst
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           2
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorIncrement(
                                DesignatorSimple(
                                 character
                                ) [DesignatorSimple]
                              ) [DesignatorIncrement]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorDecrement(
                              DesignatorSimple(
                               boolean
                              ) [DesignatorSimple]
                            ) [DesignatorDecrement]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorMethodCall0(
                            DesignatorSimple(
                             fun
                            ) [DesignatorSimple]
                            ActParsMulti(
                              ActParsSingle(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [ActParsSingle]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsMulti]
                          ) [DesignatorMethodCall0]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           character
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprNegSingle(
                                TermSingle(
                                  FactorCharConst(
                                   a
                                  ) [FactorCharConst]
                                ) [TermSingle]
                              ) [ExprNegSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         niz
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNewArray(
                                  Type(
                                   int
                                  ) [Type]
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorCharConst(
                                         a
                                        ) [FactorCharConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [FactorNewArray]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDoWhile(
                    DoHead(
                    ) [DoHead]
                    Stmt(
                      StatementMulti(
                        StatementMulti(
                          StatementSingle(
                            StmtDesign(
                              DesignatorIncrement(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                              ) [DesignatorIncrement]
                            ) [StmtDesign]
                          ) [StatementSingle]
                          StmtBreak(
                          ) [StmtBreak]
                        ) [StatementMulti]
                        StmtContinue(
                        ) [StmtContinue]
                      ) [StatementMulti]
                    ) [Stmt]
                    CondOne(
                      CondTermOne(
                        CondFactTwo(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   num
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                          RelopLT(
                          ) [RelopLT]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 10
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactTwo]
                      ) [CondTermOne]
                    ) [CondOne]
                  ) [StmtDoWhile]
                ) [StatementMulti]
                StmtBreak(
                ) [StmtBreak]
              ) [StatementMulti]
              StmtContinue(
              ) [StmtContinue]
            ) [StatementMulti]
            StmtIf(
              StmtIfBody(
                IfCond(
                  CondOne(
                    CondTermOne(
                      CondFactOne(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 boolean
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactOne]
                    ) [CondTermOne]
                  ) [CondOne]
                ) [IfCond]
                Stmt(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         num
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                ) [Stmt]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtIf(
            StmtIfBody(
              IfCond(
                CondOne(
                  CondTermOne(
                    CondFactOne(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactOne]
                  ) [CondTermOne]
                ) [CondOne]
              ) [IfCond]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       num
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
            ) [StmtIfBody]
          ) [StmtIf]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  15:15:15,297 - 

================SEMANTICKA OBRADA====================


ERROR 15:15:15,310 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  15:15:15,311 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  15:15:15,311 - Deklarisana konstanta 'cnst' na liniji 3
INFO  15:15:15,311 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 15:15:15,311 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  15:15:15,311 - Deklarisana promenljiva 'b' na liniji 14
ERROR 15:15:15,311 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  15:15:15,311 - Deklarisana promenljiva 'num' na liniji 15
INFO  15:15:15,311 - Deklarisana promenljiva 'character' na liniji 15
INFO  15:15:15,311 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  15:15:15,311 - Deklarisan niz 'niz' na liniji 16
ERROR 15:15:15,312 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 15:15:15,312 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 15:15:15,312 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 15:15:15,312 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 15:15:15,312 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 15:15:15,312 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 15:15:15,312 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 15:15:15,312 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 15:15:15,312 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 15:15:15,312 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  15:15:15,312 - Pronadjen poziv funkcije 'fun' na liniji 35
ERROR 15:15:15,312 - Semanticka greska - tip mora da bude int na liniji 38
ERROR 15:15:15,312 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 41
ERROR 15:15:15,313 - Semanticka greska - break iskaz van petlje
ERROR 15:15:15,313 - Semanticka greska - continue iskaz van petlje
ERROR 15:15:15,313 - IfCondCondOne(
  CondTermOne(
    CondFactOne(
      ExprOne(
        ExprSingle(
          TermSingle(
            FactorDesignator(
              DesignatorSimple(
               boolean
              ) [DesignatorSimple]
            ) [FactorDesignator]
          ) [TermSingle]
        ) [ExprSingle]
      ) [ExprOne]
    ) [CondFactOne]
  ) [CondTermOne]
) [CondOne] na liniji 51
ERROR 15:15:15,313 - IfCondCondOne(
  CondTermOne(
    CondFactOne(
      ExprOne(
        ExprSingle(
          TermSingle(
            FactorDesignator(
              DesignatorSimple(
               num
              ) [DesignatorSimple]
            ) [FactorDesignator]
          ) [TermSingle]
        ) [ExprSingle]
      ) [ExprOne]
    ) [CondFactOne]
  ) [CondTermOne]
) [CondOne] na liniji 55
ERROR 15:15:15,313 - Semanticka greska - if uslov nije tipa bool na liniji 55
INFO  15:15:15,314 - ===================================
INFO  15:15:45,158 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:15:45,204 - #2 program
INFO  15:15:45,204 - #20 MJProgram
INFO  15:15:45,204 - #20 abc
INFO  15:15:45,204 - #20 a
INFO  15:15:45,205 - #40 ;
INFO  15:15:45,205 - #7 const
INFO  15:15:45,205 - #20 int
INFO  15:15:45,205 - #20 cnst
INFO  15:15:45,206 - #37 =
INFO  15:15:45,206 - #21 1
INFO  15:15:45,206 - #40 ;
INFO  15:15:45,206 - #47 {
INFO  15:15:45,206 - #20 int
INFO  15:15:45,206 - #20 fun
INFO  15:15:45,206 - #43 (
INFO  15:15:45,206 - #20 int
INFO  15:15:45,206 - #20 x
INFO  15:15:45,206 - #44 )
INFO  15:15:45,206 - #47 {
INFO  15:15:45,206 - #48 }
INFO  15:15:45,207 - #16 void
INFO  15:15:45,207 - #20 main
INFO  15:15:45,207 - #43 (
INFO  15:15:45,207 - #44 )
INFO  15:15:45,207 - #20 int
INFO  15:15:45,207 - #20 b
INFO  15:15:45,207 - #40 ;
INFO  15:15:45,207 - #20 char
INFO  15:15:45,208 - #20 b
INFO  15:15:45,208 - #40 ;
INFO  15:15:45,208 - #20 int
INFO  15:15:45,208 - #20 num
INFO  15:15:45,208 - #40 ;
INFO  15:15:45,208 - #20 char
INFO  15:15:45,208 - #20 character
INFO  15:15:45,208 - #40 ;
INFO  15:15:45,208 - #20 bool
INFO  15:15:45,208 - #20 boolean
INFO  15:15:45,209 - #40 ;
INFO  15:15:45,209 - #20 int
INFO  15:15:45,209 - #20 niz
INFO  15:15:45,209 - #45 [
INFO  15:15:45,209 - #46 ]
INFO  15:15:45,209 - #40 ;
INFO  15:15:45,209 - #47 {
INFO  15:15:45,209 - #20 a
INFO  15:15:45,209 - #37 =
INFO  15:15:45,209 - #21 1
INFO  15:15:45,209 - #40 ;
INFO  15:15:45,210 - #20 num
INFO  15:15:45,210 - #37 =
INFO  15:15:45,210 - #22 a
INFO  15:15:45,210 - #40 ;
INFO  15:15:45,210 - #20 num
INFO  15:15:45,211 - #37 =
INFO  15:15:45,211 - #23 true
INFO  15:15:45,211 - #40 ;
INFO  15:15:45,211 - #20 character
INFO  15:15:45,211 - #37 =
INFO  15:15:45,211 - #21 1
INFO  15:15:45,211 - #40 ;
INFO  15:15:45,211 - #20 character
INFO  15:15:45,212 - #37 =
INFO  15:15:45,212 - #23 true
INFO  15:15:45,212 - #40 ;
INFO  15:15:45,212 - #20 boolean
INFO  15:15:45,212 - #37 =
INFO  15:15:45,212 - #21 1
INFO  15:15:45,212 - #40 ;
INFO  15:15:45,212 - #20 boolean
INFO  15:15:45,212 - #37 =
INFO  15:15:45,213 - #22 a
INFO  15:15:45,213 - #40 ;
INFO  15:15:45,213 - #20 cnst
INFO  15:15:45,213 - #37 =
INFO  15:15:45,213 - #21 2
INFO  15:15:45,213 - #40 ;
INFO  15:15:45,213 - #20 character
INFO  15:15:45,213 - #38 ++
INFO  15:15:45,214 - #40 ;
INFO  15:15:45,214 - #20 boolean
INFO  15:15:45,214 - #39 --
INFO  15:15:45,214 - #40 ;
INFO  15:15:45,214 - #20 fun
INFO  15:15:45,215 - #43 (
INFO  15:15:45,215 - #21 1
INFO  15:15:45,215 - #41 ,
INFO  15:15:45,215 - #21 2
INFO  15:15:45,215 - #44 )
INFO  15:15:45,217 - #40 ;
INFO  15:15:45,217 - #20 character
INFO  15:15:45,217 - #37 =
INFO  15:15:45,217 - #25 -
INFO  15:15:45,217 - #22 a
INFO  15:15:45,217 - #40 ;
INFO  15:15:45,217 - #20 niz
INFO  15:15:45,217 - #37 =
INFO  15:15:45,217 - #12 new
INFO  15:15:45,217 - #20 int
INFO  15:15:45,218 - #45 [
INFO  15:15:45,218 - #22 a
INFO  15:15:45,218 - #46 ]
INFO  15:15:45,218 - #40 ;
INFO  15:15:45,218 - #10 do
INFO  15:15:45,218 - #47 {
INFO  15:15:45,219 - #20 num
INFO  15:15:45,219 - #38 ++
INFO  15:15:45,219 - #40 ;
INFO  15:15:45,219 - #3 break
INFO  15:15:45,219 - #40 ;
INFO  15:15:45,219 - #18 continue
INFO  15:15:45,219 - #40 ;
INFO  15:15:45,219 - #48 }
INFO  15:15:45,220 - #11 while
INFO  15:15:45,220 - #43 (
INFO  15:15:45,220 - #20 num
INFO  15:15:45,220 - #33 <
INFO  15:15:45,220 - #21 10
INFO  15:15:45,221 - #44 )
INFO  15:15:45,221 - #40 ;
INFO  15:15:45,221 - #3 break
INFO  15:15:45,221 - #40 ;
INFO  15:15:45,221 - #18 continue
INFO  15:15:45,221 - #40 ;
INFO  15:15:45,221 - #8 if
INFO  15:15:45,222 - #43 (
INFO  15:15:45,222 - #20 boolean
INFO  15:15:45,222 - #44 )
INFO  15:15:45,222 - #47 {
INFO  15:15:45,222 - #20 num
INFO  15:15:45,222 - #37 =
INFO  15:15:45,222 - #21 1
INFO  15:15:45,222 - #40 ;
INFO  15:15:45,222 - #48 }
INFO  15:15:45,222 - #8 if
INFO  15:15:45,223 - #43 (
INFO  15:15:45,223 - #20 num
INFO  15:15:45,223 - #44 )
INFO  15:15:45,223 - #47 {
INFO  15:15:45,223 - #20 num
INFO  15:15:45,223 - #37 =
INFO  15:15:45,223 - #21 2
INFO  15:15:45,223 - #40 ;
INFO  15:15:45,223 - #48 }
INFO  15:15:45,223 - #48 }
INFO  15:15:45,223 - #48 }
INFO  15:15:45,224 - 

================SINTAKSNO STABLO====================


INFO  15:15:45,226 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementSingle(
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 a
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementSingle]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               num
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorCharConst(
                                                       a
                                                      ) [FactorCharConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             num
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorBoolConst(
                                                     true
                                                    ) [FactorBoolConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorSimple(
                                           character
                                          ) [DesignatorSimple]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   1
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         character
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorBoolConst(
                                                 true
                                                ) [FactorBoolConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       boolean
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     boolean
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorCharConst(
                                             a
                                            ) [FactorCharConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   cnst
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           2
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorIncrement(
                                DesignatorSimple(
                                 character
                                ) [DesignatorSimple]
                              ) [DesignatorIncrement]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorDecrement(
                              DesignatorSimple(
                               boolean
                              ) [DesignatorSimple]
                            ) [DesignatorDecrement]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorMethodCall0(
                            DesignatorSimple(
                             fun
                            ) [DesignatorSimple]
                            ActParsMulti(
                              ActParsSingle(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [ActParsSingle]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsMulti]
                          ) [DesignatorMethodCall0]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           character
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprNegSingle(
                                TermSingle(
                                  FactorCharConst(
                                   a
                                  ) [FactorCharConst]
                                ) [TermSingle]
                              ) [ExprNegSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         niz
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNewArray(
                                  Type(
                                   int
                                  ) [Type]
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorCharConst(
                                         a
                                        ) [FactorCharConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [FactorNewArray]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDoWhile(
                    DoHead(
                    ) [DoHead]
                    Stmt(
                      StatementMulti(
                        StatementMulti(
                          StatementSingle(
                            StmtDesign(
                              DesignatorIncrement(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                              ) [DesignatorIncrement]
                            ) [StmtDesign]
                          ) [StatementSingle]
                          StmtBreak(
                          ) [StmtBreak]
                        ) [StatementMulti]
                        StmtContinue(
                        ) [StmtContinue]
                      ) [StatementMulti]
                    ) [Stmt]
                    CondOne(
                      CondTermOne(
                        CondFactTwo(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   num
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                          RelopLT(
                          ) [RelopLT]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 10
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactTwo]
                      ) [CondTermOne]
                    ) [CondOne]
                  ) [StmtDoWhile]
                ) [StatementMulti]
                StmtBreak(
                ) [StmtBreak]
              ) [StatementMulti]
              StmtContinue(
              ) [StmtContinue]
            ) [StatementMulti]
            StmtIf(
              StmtIfBody(
                IfCond(
                  CondOne(
                    CondTermOne(
                      CondFactOne(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 boolean
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactOne]
                    ) [CondTermOne]
                  ) [CondOne]
                ) [IfCond]
                Stmt(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         num
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                ) [Stmt]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtIf(
            StmtIfBody(
              IfCond(
                CondOne(
                  CondTermOne(
                    CondFactOne(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactOne]
                  ) [CondTermOne]
                ) [CondOne]
              ) [IfCond]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       num
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
            ) [StmtIfBody]
          ) [StmtIf]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  15:15:45,228 - 

================SEMANTICKA OBRADA====================


ERROR 15:15:45,241 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  15:15:45,242 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  15:15:45,242 - Deklarisana konstanta 'cnst' na liniji 3
INFO  15:15:45,242 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 15:15:45,242 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  15:15:45,242 - Deklarisana promenljiva 'b' na liniji 14
ERROR 15:15:45,242 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  15:15:45,242 - Deklarisana promenljiva 'num' na liniji 15
INFO  15:15:45,242 - Deklarisana promenljiva 'character' na liniji 15
INFO  15:15:45,242 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  15:15:45,242 - Deklarisan niz 'niz' na liniji 16
ERROR 15:15:45,242 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 15:15:45,242 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 15:15:45,243 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 15:15:45,243 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 15:15:45,243 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 15:15:45,243 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 15:15:45,243 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 15:15:45,243 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 15:15:45,243 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 15:15:45,243 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  15:15:45,243 - Pronadjen poziv funkcije 'fun' na liniji 35
ERROR 15:15:45,243 - Semanticka greska - tip mora da bude int na liniji 38
ERROR 15:15:45,243 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 41
ERROR 15:15:45,243 - Semanticka greska - break iskaz van petlje
ERROR 15:15:45,243 - Semanticka greska - continue iskaz van petlje
ERROR 15:15:45,244 - Semanticka greska - if uslov nije tipa bool na liniji 55
INFO  15:15:45,244 - ===================================
INFO  15:17:35,985 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:17:36,037 - #2 program
INFO  15:17:36,037 - #20 MJProgram
INFO  15:17:36,037 - #20 abc
INFO  15:17:36,038 - #20 a
INFO  15:17:36,038 - #40 ;
INFO  15:17:36,038 - #7 const
INFO  15:17:36,038 - #20 int
INFO  15:17:36,039 - #20 cnst
INFO  15:17:36,039 - #37 =
INFO  15:17:36,039 - #21 1
INFO  15:17:36,039 - #40 ;
INFO  15:17:36,039 - #47 {
INFO  15:17:36,039 - #20 int
INFO  15:17:36,040 - #20 fun
INFO  15:17:36,040 - #43 (
INFO  15:17:36,040 - #20 int
INFO  15:17:36,040 - #20 x
INFO  15:17:36,040 - #44 )
INFO  15:17:36,040 - #47 {
INFO  15:17:36,040 - #48 }
INFO  15:17:36,041 - #16 void
INFO  15:17:36,041 - #20 main
INFO  15:17:36,041 - #43 (
INFO  15:17:36,041 - #44 )
INFO  15:17:36,041 - #20 int
INFO  15:17:36,042 - #20 b
INFO  15:17:36,042 - #40 ;
INFO  15:17:36,042 - #20 char
INFO  15:17:36,042 - #20 b
INFO  15:17:36,043 - #40 ;
INFO  15:17:36,043 - #20 int
INFO  15:17:36,043 - #20 num
INFO  15:17:36,043 - #40 ;
INFO  15:17:36,043 - #20 char
INFO  15:17:36,044 - #20 character
INFO  15:17:36,044 - #40 ;
INFO  15:17:36,044 - #20 bool
INFO  15:17:36,044 - #20 boolean
INFO  15:17:36,044 - #40 ;
INFO  15:17:36,044 - #20 int
INFO  15:17:36,044 - #20 niz
INFO  15:17:36,044 - #45 [
INFO  15:17:36,045 - #46 ]
INFO  15:17:36,045 - #40 ;
INFO  15:17:36,045 - #47 {
INFO  15:17:36,045 - #20 a
INFO  15:17:36,045 - #37 =
INFO  15:17:36,045 - #21 1
INFO  15:17:36,045 - #40 ;
INFO  15:17:36,046 - #20 num
INFO  15:17:36,046 - #37 =
INFO  15:17:36,046 - #22 a
INFO  15:17:36,046 - #40 ;
INFO  15:17:36,046 - #20 num
INFO  15:17:36,046 - #37 =
INFO  15:17:36,047 - #23 true
INFO  15:17:36,047 - #40 ;
INFO  15:17:36,047 - #20 character
INFO  15:17:36,047 - #37 =
INFO  15:17:36,047 - #21 1
INFO  15:17:36,047 - #40 ;
INFO  15:17:36,047 - #20 character
INFO  15:17:36,047 - #37 =
INFO  15:17:36,048 - #23 true
INFO  15:17:36,048 - #40 ;
INFO  15:17:36,048 - #20 boolean
INFO  15:17:36,048 - #37 =
INFO  15:17:36,048 - #21 1
INFO  15:17:36,048 - #40 ;
INFO  15:17:36,048 - #20 boolean
INFO  15:17:36,048 - #37 =
INFO  15:17:36,048 - #22 a
INFO  15:17:36,048 - #40 ;
INFO  15:17:36,048 - #20 cnst
INFO  15:17:36,048 - #37 =
INFO  15:17:36,048 - #21 2
INFO  15:17:36,048 - #40 ;
INFO  15:17:36,048 - #20 character
INFO  15:17:36,049 - #38 ++
INFO  15:17:36,049 - #40 ;
INFO  15:17:36,049 - #20 boolean
INFO  15:17:36,049 - #39 --
INFO  15:17:36,049 - #40 ;
INFO  15:17:36,049 - #20 fun
INFO  15:17:36,049 - #43 (
INFO  15:17:36,050 - #21 1
INFO  15:17:36,050 - #41 ,
INFO  15:17:36,050 - #21 2
INFO  15:17:36,050 - #44 )
INFO  15:17:36,050 - #40 ;
INFO  15:17:36,050 - #20 character
INFO  15:17:36,050 - #37 =
INFO  15:17:36,051 - #25 -
INFO  15:17:36,051 - #22 a
INFO  15:17:36,051 - #40 ;
INFO  15:17:36,051 - #20 niz
INFO  15:17:36,051 - #37 =
INFO  15:17:36,051 - #12 new
INFO  15:17:36,051 - #20 int
INFO  15:17:36,051 - #45 [
INFO  15:17:36,051 - #22 a
INFO  15:17:36,051 - #46 ]
INFO  15:17:36,051 - #40 ;
INFO  15:17:36,051 - #10 do
INFO  15:17:36,052 - #47 {
INFO  15:17:36,052 - #20 num
INFO  15:17:36,053 - #38 ++
INFO  15:17:36,053 - #40 ;
INFO  15:17:36,053 - #3 break
INFO  15:17:36,053 - #40 ;
INFO  15:17:36,053 - #18 continue
INFO  15:17:36,053 - #40 ;
INFO  15:17:36,053 - #48 }
INFO  15:17:36,054 - #11 while
INFO  15:17:36,054 - #43 (
INFO  15:17:36,054 - #20 num
INFO  15:17:36,054 - #33 <
INFO  15:17:36,054 - #21 10
INFO  15:17:36,055 - #44 )
INFO  15:17:36,055 - #40 ;
INFO  15:17:36,055 - #3 break
INFO  15:17:36,055 - #40 ;
INFO  15:17:36,055 - #18 continue
INFO  15:17:36,055 - #40 ;
INFO  15:17:36,056 - #8 if
INFO  15:17:36,056 - #43 (
INFO  15:17:36,056 - #20 boolean
INFO  15:17:36,056 - #44 )
INFO  15:17:36,056 - #47 {
INFO  15:17:36,056 - #20 num
INFO  15:17:36,056 - #37 =
INFO  15:17:36,056 - #21 1
INFO  15:17:36,056 - #40 ;
INFO  15:17:36,057 - #48 }
INFO  15:17:36,057 - #8 if
INFO  15:17:36,057 - #43 (
INFO  15:17:36,057 - #20 num
INFO  15:17:36,057 - #44 )
INFO  15:17:36,057 - #47 {
INFO  15:17:36,057 - #20 num
INFO  15:17:36,057 - #37 =
INFO  15:17:36,057 - #21 2
INFO  15:17:36,057 - #40 ;
INFO  15:17:36,057 - #48 }
INFO  15:17:36,057 - #10 do
INFO  15:17:36,058 - #47 {
INFO  15:17:36,058 - #20 num
INFO  15:17:36,058 - #38 ++
INFO  15:17:36,058 - #40 ;
INFO  15:17:36,058 - #48 }
INFO  15:17:36,058 - #11 while
INFO  15:17:36,058 - #43 (
INFO  15:17:36,058 - #44 )
ERROR 15:17:36,058 - 
Sintaksna greska na liniji 62, koloni 10 za simbol ")"!
INFO  15:17:36,058 - #40 ;
INFO  15:17:36,058 - #48 }
INFO  15:17:36,058 - #48 }
ERROR 15:17:36,059 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 64, koloni 1!
INFO  15:17:55,447 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:17:55,495 - #2 program
INFO  15:17:55,495 - #20 MJProgram
INFO  15:17:55,495 - #20 abc
INFO  15:17:55,496 - #20 a
INFO  15:17:55,497 - #40 ;
INFO  15:17:55,497 - #7 const
INFO  15:17:55,498 - #20 int
INFO  15:17:55,498 - #20 cnst
INFO  15:17:55,498 - #37 =
INFO  15:17:55,498 - #21 1
INFO  15:17:55,498 - #40 ;
INFO  15:17:55,499 - #47 {
INFO  15:17:55,500 - #20 int
INFO  15:17:55,500 - #20 fun
INFO  15:17:55,500 - #43 (
INFO  15:17:55,500 - #20 int
INFO  15:17:55,500 - #20 x
INFO  15:17:55,500 - #44 )
INFO  15:17:55,500 - #47 {
INFO  15:17:55,500 - #48 }
INFO  15:17:55,501 - #16 void
INFO  15:17:55,501 - #20 main
INFO  15:17:55,501 - #43 (
INFO  15:17:55,501 - #44 )
INFO  15:17:55,501 - #20 int
INFO  15:17:55,501 - #20 b
INFO  15:17:55,501 - #40 ;
INFO  15:17:55,502 - #20 char
INFO  15:17:55,502 - #20 b
INFO  15:17:55,502 - #40 ;
INFO  15:17:55,502 - #20 int
INFO  15:17:55,502 - #20 num
INFO  15:17:55,502 - #40 ;
INFO  15:17:55,502 - #20 char
INFO  15:17:55,503 - #20 character
INFO  15:17:55,503 - #40 ;
INFO  15:17:55,503 - #20 bool
INFO  15:17:55,503 - #20 boolean
INFO  15:17:55,503 - #40 ;
INFO  15:17:55,503 - #20 int
INFO  15:17:55,503 - #20 niz
INFO  15:17:55,503 - #45 [
INFO  15:17:55,503 - #46 ]
INFO  15:17:55,503 - #40 ;
INFO  15:17:55,503 - #47 {
INFO  15:17:55,503 - #20 a
INFO  15:17:55,504 - #37 =
INFO  15:17:55,504 - #21 1
INFO  15:17:55,504 - #40 ;
INFO  15:17:55,504 - #20 num
INFO  15:17:55,504 - #37 =
INFO  15:17:55,505 - #22 a
INFO  15:17:55,505 - #40 ;
INFO  15:17:55,505 - #20 num
INFO  15:17:55,505 - #37 =
INFO  15:17:55,505 - #23 true
INFO  15:17:55,505 - #40 ;
INFO  15:17:55,505 - #20 character
INFO  15:17:55,505 - #37 =
INFO  15:17:55,505 - #21 1
INFO  15:17:55,505 - #40 ;
INFO  15:17:55,505 - #20 character
INFO  15:17:55,505 - #37 =
INFO  15:17:55,505 - #23 true
INFO  15:17:55,506 - #40 ;
INFO  15:17:55,506 - #20 boolean
INFO  15:17:55,506 - #37 =
INFO  15:17:55,506 - #21 1
INFO  15:17:55,506 - #40 ;
INFO  15:17:55,506 - #20 boolean
INFO  15:17:55,506 - #37 =
INFO  15:17:55,506 - #22 a
INFO  15:17:55,506 - #40 ;
INFO  15:17:55,506 - #20 cnst
INFO  15:17:55,506 - #37 =
INFO  15:17:55,506 - #21 2
INFO  15:17:55,506 - #40 ;
INFO  15:17:55,507 - #20 character
INFO  15:17:55,507 - #38 ++
INFO  15:17:55,507 - #40 ;
INFO  15:17:55,507 - #20 boolean
INFO  15:17:55,507 - #39 --
INFO  15:17:55,507 - #40 ;
INFO  15:17:55,507 - #20 fun
INFO  15:17:55,507 - #43 (
INFO  15:17:55,508 - #21 1
INFO  15:17:55,508 - #41 ,
INFO  15:17:55,508 - #21 2
INFO  15:17:55,508 - #44 )
INFO  15:17:55,508 - #40 ;
INFO  15:17:55,509 - #20 character
INFO  15:17:55,509 - #37 =
INFO  15:17:55,509 - #25 -
INFO  15:17:55,509 - #22 a
INFO  15:17:55,509 - #40 ;
INFO  15:17:55,510 - #20 niz
INFO  15:17:55,510 - #37 =
INFO  15:17:55,510 - #12 new
INFO  15:17:55,510 - #20 int
INFO  15:17:55,510 - #45 [
INFO  15:17:55,510 - #22 a
INFO  15:17:55,510 - #46 ]
INFO  15:17:55,510 - #40 ;
INFO  15:17:55,511 - #10 do
INFO  15:17:55,511 - #47 {
INFO  15:17:55,512 - #20 num
INFO  15:17:55,513 - #38 ++
INFO  15:17:55,513 - #40 ;
INFO  15:17:55,513 - #3 break
INFO  15:17:55,513 - #40 ;
INFO  15:17:55,513 - #18 continue
INFO  15:17:55,513 - #40 ;
INFO  15:17:55,513 - #48 }
INFO  15:17:55,514 - #11 while
INFO  15:17:55,514 - #43 (
INFO  15:17:55,515 - #20 num
INFO  15:17:55,515 - #33 <
INFO  15:17:55,515 - #21 10
INFO  15:17:55,516 - #44 )
INFO  15:17:55,516 - #40 ;
INFO  15:17:55,516 - #3 break
INFO  15:17:55,516 - #40 ;
INFO  15:17:55,516 - #18 continue
INFO  15:17:55,517 - #40 ;
INFO  15:17:55,517 - #8 if
INFO  15:17:55,517 - #43 (
INFO  15:17:55,517 - #20 boolean
INFO  15:17:55,517 - #44 )
INFO  15:17:55,517 - #47 {
INFO  15:17:55,517 - #20 num
INFO  15:17:55,517 - #37 =
INFO  15:17:55,517 - #21 1
INFO  15:17:55,517 - #40 ;
INFO  15:17:55,517 - #48 }
INFO  15:17:55,518 - #8 if
INFO  15:17:55,518 - #43 (
INFO  15:17:55,518 - #20 num
INFO  15:17:55,518 - #44 )
INFO  15:17:55,518 - #47 {
INFO  15:17:55,518 - #20 num
INFO  15:17:55,518 - #37 =
INFO  15:17:55,518 - #21 2
INFO  15:17:55,518 - #40 ;
INFO  15:17:55,518 - #48 }
INFO  15:17:55,518 - #10 do
INFO  15:17:55,518 - #47 {
INFO  15:17:55,518 - #20 num
INFO  15:17:55,518 - #38 ++
INFO  15:17:55,519 - #40 ;
INFO  15:17:55,519 - #48 }
INFO  15:17:55,519 - #11 while
INFO  15:17:55,519 - #43 (
INFO  15:17:55,519 - #20 num
INFO  15:17:55,519 - #44 )
INFO  15:17:55,519 - #40 ;
INFO  15:17:55,519 - #48 }
INFO  15:17:55,519 - #48 }
INFO  15:17:55,520 - 

================SINTAKSNO STABLO====================


INFO  15:17:55,524 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementSingle(
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorSimple(
                                                   a
                                                  ) [DesignatorSimple]
                                                  AssignmentExpr(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           1
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementSingle]
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 num
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorCharConst(
                                                         a
                                                        ) [FactorCharConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               num
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorBoolConst(
                                                       true
                                                      ) [FactorBoolConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             character
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     1
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorSimple(
                                           character
                                          ) [DesignatorSimple]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorBoolConst(
                                                   true
                                                  ) [FactorBoolConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         boolean
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       boolean
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorCharConst(
                                               a
                                              ) [FactorCharConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     cnst
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             2
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorIncrement(
                                  DesignatorSimple(
                                   character
                                  ) [DesignatorSimple]
                                ) [DesignatorIncrement]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorDecrement(
                                DesignatorSimple(
                                 boolean
                                ) [DesignatorSimple]
                              ) [DesignatorDecrement]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorMethodCall0(
                              DesignatorSimple(
                               fun
                              ) [DesignatorSimple]
                              ActParsMulti(
                                ActParsSingle(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         1
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [ActParsSingle]
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [ActParsMulti]
                            ) [DesignatorMethodCall0]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             character
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprNegSingle(
                                  TermSingle(
                                    FactorCharConst(
                                     a
                                    ) [FactorCharConst]
                                  ) [TermSingle]
                                ) [ExprNegSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           niz
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNewArray(
                                    Type(
                                     int
                                    ) [Type]
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorCharConst(
                                           a
                                          ) [FactorCharConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [FactorNewArray]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDoWhile(
                      DoHead(
                      ) [DoHead]
                      Stmt(
                        StatementMulti(
                          StatementMulti(
                            StatementSingle(
                              StmtDesign(
                                DesignatorIncrement(
                                  DesignatorSimple(
                                   num
                                  ) [DesignatorSimple]
                                ) [DesignatorIncrement]
                              ) [StmtDesign]
                            ) [StatementSingle]
                            StmtBreak(
                            ) [StmtBreak]
                          ) [StatementMulti]
                          StmtContinue(
                          ) [StmtContinue]
                        ) [StatementMulti]
                      ) [Stmt]
                      CondOne(
                        CondTermOne(
                          CondFactTwo(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                            RelopLT(
                            ) [RelopLT]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactTwo]
                        ) [CondTermOne]
                      ) [CondOne]
                    ) [StmtDoWhile]
                  ) [StatementMulti]
                  StmtBreak(
                  ) [StmtBreak]
                ) [StatementMulti]
                StmtContinue(
                ) [StmtContinue]
              ) [StatementMulti]
              StmtIf(
                StmtIfBody(
                  IfCond(
                    CondOne(
                      CondTermOne(
                        CondFactOne(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   boolean
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactOne]
                      ) [CondTermOne]
                    ) [CondOne]
                  ) [IfCond]
                  Stmt(
                    StatementSingle(
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   1
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementSingle]
                  ) [Stmt]
                ) [StmtIfBody]
              ) [StmtIf]
            ) [StatementMulti]
            StmtIf(
              StmtIfBody(
                IfCond(
                  CondOne(
                    CondTermOne(
                      CondFactOne(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactOne]
                    ) [CondTermOne]
                  ) [CondOne]
                ) [IfCond]
                Stmt(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         num
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 2
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                ) [Stmt]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtDoWhile(
            DoHead(
            ) [DoHead]
            Stmt(
              StatementSingle(
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     num
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementSingle]
            ) [Stmt]
            CondOne(
              CondTermOne(
                CondFactOne(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [CondFactOne]
              ) [CondTermOne]
            ) [CondOne]
          ) [StmtDoWhile]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  15:17:55,525 - 

================SEMANTICKA OBRADA====================


ERROR 15:17:55,536 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  15:17:55,537 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  15:17:55,537 - Deklarisana konstanta 'cnst' na liniji 3
INFO  15:17:55,537 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 15:17:55,537 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  15:17:55,537 - Deklarisana promenljiva 'b' na liniji 14
ERROR 15:17:55,537 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  15:17:55,537 - Deklarisana promenljiva 'num' na liniji 15
INFO  15:17:55,537 - Deklarisana promenljiva 'character' na liniji 15
INFO  15:17:55,537 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  15:17:55,537 - Deklarisan niz 'niz' na liniji 16
ERROR 15:17:55,537 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 15:17:55,538 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 15:17:55,538 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 15:17:55,538 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 15:17:55,538 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 15:17:55,538 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 15:17:55,538 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 15:17:55,538 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 15:17:55,538 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 15:17:55,538 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  15:17:55,538 - Pronadjen poziv funkcije 'fun' na liniji 35
ERROR 15:17:55,538 - Semanticka greska - tip mora da bude int na liniji 38
ERROR 15:17:55,538 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 41
ERROR 15:17:55,538 - Semanticka greska - while uslov nije tipa bool na liniji 43
ERROR 15:17:55,539 - Semanticka greska - break iskaz van petlje
ERROR 15:17:55,539 - Semanticka greska - continue iskaz van petlje
ERROR 15:17:55,539 - Semanticka greska - if uslov nije tipa bool na liniji 56
ERROR 15:17:55,539 - Semanticka greska - while uslov nije tipa bool na liniji 60
INFO  15:17:55,540 - ===================================
INFO  15:18:36,649 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:18:36,696 - #2 program
INFO  15:18:36,697 - #20 MJProgram
INFO  15:18:36,697 - #20 abc
INFO  15:18:36,697 - #20 a
INFO  15:18:36,698 - #40 ;
INFO  15:18:36,698 - #7 const
INFO  15:18:36,698 - #20 int
INFO  15:18:36,698 - #20 cnst
INFO  15:18:36,698 - #37 =
INFO  15:18:36,699 - #21 1
INFO  15:18:36,699 - #40 ;
INFO  15:18:36,699 - #47 {
INFO  15:18:36,699 - #20 int
INFO  15:18:36,699 - #20 fun
INFO  15:18:36,699 - #43 (
INFO  15:18:36,700 - #20 int
INFO  15:18:36,700 - #20 x
INFO  15:18:36,700 - #44 )
INFO  15:18:36,700 - #47 {
INFO  15:18:36,700 - #48 }
INFO  15:18:36,700 - #16 void
INFO  15:18:36,701 - #20 main
INFO  15:18:36,701 - #43 (
INFO  15:18:36,701 - #44 )
INFO  15:18:36,701 - #20 int
INFO  15:18:36,701 - #20 b
INFO  15:18:36,701 - #40 ;
INFO  15:18:36,701 - #20 char
INFO  15:18:36,702 - #20 b
INFO  15:18:36,702 - #40 ;
INFO  15:18:36,702 - #20 int
INFO  15:18:36,702 - #20 num
INFO  15:18:36,702 - #40 ;
INFO  15:18:36,702 - #20 char
INFO  15:18:36,702 - #20 character
INFO  15:18:36,702 - #40 ;
INFO  15:18:36,703 - #20 bool
INFO  15:18:36,703 - #20 boolean
INFO  15:18:36,703 - #40 ;
INFO  15:18:36,703 - #20 int
INFO  15:18:36,703 - #20 niz
INFO  15:18:36,703 - #45 [
INFO  15:18:36,703 - #46 ]
INFO  15:18:36,703 - #40 ;
INFO  15:18:36,703 - #47 {
INFO  15:18:36,703 - #20 a
INFO  15:18:36,703 - #37 =
INFO  15:18:36,704 - #21 1
INFO  15:18:36,704 - #40 ;
INFO  15:18:36,704 - #20 num
INFO  15:18:36,705 - #37 =
INFO  15:18:36,705 - #22 a
INFO  15:18:36,705 - #40 ;
INFO  15:18:36,705 - #20 num
INFO  15:18:36,705 - #37 =
INFO  15:18:36,705 - #23 true
INFO  15:18:36,705 - #40 ;
INFO  15:18:36,705 - #20 character
INFO  15:18:36,705 - #37 =
INFO  15:18:36,705 - #21 1
INFO  15:18:36,705 - #40 ;
INFO  15:18:36,705 - #20 character
INFO  15:18:36,705 - #37 =
INFO  15:18:36,706 - #23 true
INFO  15:18:36,706 - #40 ;
INFO  15:18:36,706 - #20 boolean
INFO  15:18:36,706 - #37 =
INFO  15:18:36,706 - #21 1
INFO  15:18:36,706 - #40 ;
INFO  15:18:36,706 - #20 boolean
INFO  15:18:36,706 - #37 =
INFO  15:18:36,706 - #22 a
INFO  15:18:36,707 - #40 ;
INFO  15:18:36,707 - #20 cnst
INFO  15:18:36,707 - #37 =
INFO  15:18:36,707 - #21 2
INFO  15:18:36,707 - #40 ;
INFO  15:18:36,707 - #20 character
INFO  15:18:36,707 - #38 ++
INFO  15:18:36,707 - #40 ;
INFO  15:18:36,707 - #20 boolean
INFO  15:18:36,707 - #39 --
INFO  15:18:36,708 - #40 ;
INFO  15:18:36,708 - #20 fun
INFO  15:18:36,708 - #43 (
INFO  15:18:36,708 - #21 1
INFO  15:18:36,708 - #41 ,
INFO  15:18:36,708 - #21 2
INFO  15:18:36,708 - #44 )
INFO  15:18:36,708 - #40 ;
INFO  15:18:36,709 - #20 character
INFO  15:18:36,709 - #37 =
INFO  15:18:36,709 - #25 -
INFO  15:18:36,709 - #22 a
INFO  15:18:36,709 - #40 ;
INFO  15:18:36,709 - #20 niz
INFO  15:18:36,709 - #37 =
INFO  15:18:36,709 - #12 new
INFO  15:18:36,709 - #20 int
INFO  15:18:36,709 - #45 [
INFO  15:18:36,710 - #22 a
INFO  15:18:36,710 - #46 ]
INFO  15:18:36,710 - #40 ;
INFO  15:18:36,710 - #10 do
INFO  15:18:36,710 - #47 {
INFO  15:18:36,711 - #20 num
INFO  15:18:36,711 - #38 ++
INFO  15:18:36,711 - #40 ;
INFO  15:18:36,711 - #3 break
INFO  15:18:36,711 - #40 ;
INFO  15:18:36,711 - #18 continue
INFO  15:18:36,711 - #40 ;
INFO  15:18:36,711 - #48 }
INFO  15:18:36,712 - #11 while
INFO  15:18:36,712 - #43 (
INFO  15:18:36,712 - #20 num
INFO  15:18:36,712 - #33 <
INFO  15:18:36,713 - #21 10
INFO  15:18:36,713 - #44 )
INFO  15:18:36,714 - #40 ;
INFO  15:18:36,714 - #3 break
INFO  15:18:36,714 - #40 ;
INFO  15:18:36,714 - #18 continue
INFO  15:18:36,714 - #40 ;
INFO  15:18:36,714 - #8 if
INFO  15:18:36,714 - #43 (
INFO  15:18:36,714 - #20 boolean
INFO  15:18:36,714 - #44 )
INFO  15:18:36,714 - #47 {
INFO  15:18:36,715 - #20 num
INFO  15:18:36,715 - #37 =
INFO  15:18:36,715 - #21 1
INFO  15:18:36,715 - #40 ;
INFO  15:18:36,715 - #48 }
INFO  15:18:36,715 - #8 if
INFO  15:18:36,715 - #43 (
INFO  15:18:36,715 - #20 num
INFO  15:18:36,716 - #44 )
INFO  15:18:36,716 - #47 {
INFO  15:18:36,716 - #20 num
INFO  15:18:36,716 - #37 =
INFO  15:18:36,716 - #21 2
INFO  15:18:36,716 - #40 ;
INFO  15:18:36,716 - #48 }
INFO  15:18:36,716 - #10 do
INFO  15:18:36,716 - #47 {
INFO  15:18:36,716 - #20 num
INFO  15:18:36,716 - #38 ++
INFO  15:18:36,716 - #40 ;
INFO  15:18:36,716 - #48 }
INFO  15:18:36,716 - #11 while
INFO  15:18:36,716 - #43 (
INFO  15:18:36,716 - #20 boolean
INFO  15:18:36,716 - #44 )
INFO  15:18:36,716 - #40 ;
INFO  15:18:36,717 - #48 }
INFO  15:18:36,717 - #48 }
INFO  15:18:36,719 - 

================SINTAKSNO STABLO====================


INFO  15:18:36,722 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementSingle(
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorSimple(
                                                   a
                                                  ) [DesignatorSimple]
                                                  AssignmentExpr(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           1
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementSingle]
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 num
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorCharConst(
                                                         a
                                                        ) [FactorCharConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               num
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorBoolConst(
                                                       true
                                                      ) [FactorBoolConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             character
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     1
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorSimple(
                                           character
                                          ) [DesignatorSimple]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorBoolConst(
                                                   true
                                                  ) [FactorBoolConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         boolean
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       boolean
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorCharConst(
                                               a
                                              ) [FactorCharConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     cnst
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             2
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorIncrement(
                                  DesignatorSimple(
                                   character
                                  ) [DesignatorSimple]
                                ) [DesignatorIncrement]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorDecrement(
                                DesignatorSimple(
                                 boolean
                                ) [DesignatorSimple]
                              ) [DesignatorDecrement]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorMethodCall0(
                              DesignatorSimple(
                               fun
                              ) [DesignatorSimple]
                              ActParsMulti(
                                ActParsSingle(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         1
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [ActParsSingle]
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [ActParsMulti]
                            ) [DesignatorMethodCall0]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             character
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprNegSingle(
                                  TermSingle(
                                    FactorCharConst(
                                     a
                                    ) [FactorCharConst]
                                  ) [TermSingle]
                                ) [ExprNegSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           niz
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNewArray(
                                    Type(
                                     int
                                    ) [Type]
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorCharConst(
                                           a
                                          ) [FactorCharConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [FactorNewArray]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDoWhile(
                      DoHead(
                      ) [DoHead]
                      Stmt(
                        StatementMulti(
                          StatementMulti(
                            StatementSingle(
                              StmtDesign(
                                DesignatorIncrement(
                                  DesignatorSimple(
                                   num
                                  ) [DesignatorSimple]
                                ) [DesignatorIncrement]
                              ) [StmtDesign]
                            ) [StatementSingle]
                            StmtBreak(
                            ) [StmtBreak]
                          ) [StatementMulti]
                          StmtContinue(
                          ) [StmtContinue]
                        ) [StatementMulti]
                      ) [Stmt]
                      CondOne(
                        CondTermOne(
                          CondFactTwo(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                            RelopLT(
                            ) [RelopLT]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactTwo]
                        ) [CondTermOne]
                      ) [CondOne]
                    ) [StmtDoWhile]
                  ) [StatementMulti]
                  StmtBreak(
                  ) [StmtBreak]
                ) [StatementMulti]
                StmtContinue(
                ) [StmtContinue]
              ) [StatementMulti]
              StmtIf(
                StmtIfBody(
                  IfCond(
                    CondOne(
                      CondTermOne(
                        CondFactOne(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   boolean
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactOne]
                      ) [CondTermOne]
                    ) [CondOne]
                  ) [IfCond]
                  Stmt(
                    StatementSingle(
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   1
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementSingle]
                  ) [Stmt]
                ) [StmtIfBody]
              ) [StmtIf]
            ) [StatementMulti]
            StmtIf(
              StmtIfBody(
                IfCond(
                  CondOne(
                    CondTermOne(
                      CondFactOne(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactOne]
                    ) [CondTermOne]
                  ) [CondOne]
                ) [IfCond]
                Stmt(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         num
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 2
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                ) [Stmt]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtDoWhile(
            DoHead(
            ) [DoHead]
            Stmt(
              StatementSingle(
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     num
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementSingle]
            ) [Stmt]
            CondOne(
              CondTermOne(
                CondFactOne(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           boolean
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [CondFactOne]
              ) [CondTermOne]
            ) [CondOne]
          ) [StmtDoWhile]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  15:18:36,724 - 

================SEMANTICKA OBRADA====================


ERROR 15:18:36,733 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  15:18:36,734 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  15:18:36,734 - Deklarisana konstanta 'cnst' na liniji 3
INFO  15:18:36,734 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 15:18:36,734 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  15:18:36,734 - Deklarisana promenljiva 'b' na liniji 14
ERROR 15:18:36,734 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  15:18:36,734 - Deklarisana promenljiva 'num' na liniji 15
INFO  15:18:36,734 - Deklarisana promenljiva 'character' na liniji 15
INFO  15:18:36,734 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  15:18:36,734 - Deklarisan niz 'niz' na liniji 16
ERROR 15:18:36,735 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 15:18:36,735 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 15:18:36,735 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 15:18:36,735 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 15:18:36,735 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 15:18:36,735 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 15:18:36,735 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 15:18:36,735 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 15:18:36,735 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 15:18:36,735 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  15:18:36,735 - Pronadjen poziv funkcije 'fun' na liniji 35
ERROR 15:18:36,735 - Semanticka greska - tip mora da bude int na liniji 38
ERROR 15:18:36,735 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 41
ERROR 15:18:36,735 - Semanticka greska - while uslov nije tipa bool na liniji 43
ERROR 15:18:36,735 - Semanticka greska - break iskaz van petlje
ERROR 15:18:36,735 - Semanticka greska - continue iskaz van petlje
ERROR 15:18:36,736 - Semanticka greska - if uslov nije tipa bool na liniji 56
INFO  15:18:36,737 - ===================================
INFO  15:28:29,410 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:28:29,465 - #2 program
INFO  15:28:29,466 - #20 MJProgram
INFO  15:28:29,466 - #20 abc
INFO  15:28:29,467 - #20 a
INFO  15:28:29,467 - #40 ;
INFO  15:28:29,467 - #7 const
INFO  15:28:29,468 - #20 int
INFO  15:28:29,468 - #20 cnst
INFO  15:28:29,469 - #37 =
INFO  15:28:29,469 - #21 1
INFO  15:28:29,469 - #40 ;
INFO  15:28:29,470 - #47 {
INFO  15:28:29,470 - #20 int
INFO  15:28:29,470 - #20 fun
INFO  15:28:29,470 - #43 (
INFO  15:28:29,471 - #20 int
INFO  15:28:29,471 - #20 x
INFO  15:28:29,471 - #44 )
INFO  15:28:29,471 - #47 {
INFO  15:28:29,471 - #48 }
INFO  15:28:29,471 - #16 void
INFO  15:28:29,472 - #20 main
INFO  15:28:29,472 - #43 (
INFO  15:28:29,472 - #44 )
INFO  15:28:29,472 - #20 int
INFO  15:28:29,472 - #20 b
INFO  15:28:29,472 - #40 ;
INFO  15:28:29,472 - #20 char
INFO  15:28:29,473 - #20 b
INFO  15:28:29,473 - #40 ;
INFO  15:28:29,473 - #20 int
INFO  15:28:29,473 - #20 num
INFO  15:28:29,473 - #40 ;
INFO  15:28:29,473 - #20 char
INFO  15:28:29,474 - #20 character
INFO  15:28:29,474 - #40 ;
INFO  15:28:29,474 - #20 bool
INFO  15:28:29,474 - #20 boolean
INFO  15:28:29,474 - #40 ;
INFO  15:28:29,474 - #20 int
INFO  15:28:29,474 - #20 niz
INFO  15:28:29,474 - #45 [
INFO  15:28:29,474 - #46 ]
INFO  15:28:29,474 - #40 ;
INFO  15:28:29,475 - #47 {
INFO  15:28:29,475 - #20 a
INFO  15:28:29,475 - #37 =
INFO  15:28:29,475 - #21 1
INFO  15:28:29,475 - #40 ;
INFO  15:28:29,476 - #20 num
INFO  15:28:29,476 - #37 =
INFO  15:28:29,476 - #22 a
INFO  15:28:29,476 - #40 ;
INFO  15:28:29,476 - #20 num
INFO  15:28:29,476 - #37 =
INFO  15:28:29,476 - #23 true
INFO  15:28:29,476 - #40 ;
INFO  15:28:29,477 - #20 character
INFO  15:28:29,477 - #37 =
INFO  15:28:29,477 - #21 1
INFO  15:28:29,477 - #40 ;
INFO  15:28:29,477 - #20 character
INFO  15:28:29,477 - #37 =
INFO  15:28:29,477 - #23 true
INFO  15:28:29,477 - #40 ;
INFO  15:28:29,478 - #20 boolean
INFO  15:28:29,478 - #37 =
INFO  15:28:29,478 - #21 1
INFO  15:28:29,478 - #40 ;
INFO  15:28:29,478 - #20 boolean
INFO  15:28:29,478 - #37 =
INFO  15:28:29,478 - #22 a
INFO  15:28:29,478 - #40 ;
INFO  15:28:29,479 - #20 cnst
INFO  15:28:29,479 - #37 =
INFO  15:28:29,479 - #21 2
INFO  15:28:29,479 - #40 ;
INFO  15:28:29,479 - #20 character
INFO  15:28:29,479 - #38 ++
INFO  15:28:29,479 - #40 ;
INFO  15:28:29,480 - #20 boolean
INFO  15:28:29,480 - #39 --
INFO  15:28:29,480 - #40 ;
INFO  15:28:29,480 - #20 fun
INFO  15:28:29,480 - #43 (
INFO  15:28:29,480 - #21 1
INFO  15:28:29,480 - #41 ,
INFO  15:28:29,481 - #21 2
INFO  15:28:29,481 - #44 )
INFO  15:28:29,481 - #40 ;
INFO  15:28:29,481 - #20 character
INFO  15:28:29,481 - #37 =
INFO  15:28:29,482 - #25 -
INFO  15:28:29,482 - #22 a
INFO  15:28:29,482 - #40 ;
INFO  15:28:29,482 - #20 niz
INFO  15:28:29,482 - #37 =
INFO  15:28:29,482 - #12 new
INFO  15:28:29,482 - #20 int
INFO  15:28:29,482 - #45 [
INFO  15:28:29,483 - #22 a
INFO  15:28:29,483 - #46 ]
INFO  15:28:29,483 - #40 ;
INFO  15:28:29,483 - #10 do
INFO  15:28:29,483 - #47 {
INFO  15:28:29,484 - #20 num
INFO  15:28:29,484 - #38 ++
INFO  15:28:29,484 - #40 ;
INFO  15:28:29,484 - #3 break
INFO  15:28:29,485 - #40 ;
INFO  15:28:29,485 - #18 continue
INFO  15:28:29,485 - #40 ;
INFO  15:28:29,485 - #48 }
INFO  15:28:29,486 - #11 while
INFO  15:28:29,486 - #43 (
INFO  15:28:29,486 - #20 num
INFO  15:28:29,486 - #33 <
INFO  15:28:29,486 - #21 10
INFO  15:28:29,487 - #44 )
INFO  15:28:29,488 - #40 ;
INFO  15:28:29,488 - #3 break
INFO  15:28:29,488 - #40 ;
INFO  15:28:29,488 - #18 continue
INFO  15:28:29,488 - #40 ;
INFO  15:28:29,488 - #8 if
INFO  15:28:29,488 - #43 (
INFO  15:28:29,489 - #20 boolean
INFO  15:28:29,489 - #44 )
INFO  15:28:29,489 - #47 {
INFO  15:28:29,489 - #20 num
INFO  15:28:29,489 - #37 =
INFO  15:28:29,489 - #21 1
INFO  15:28:29,489 - #40 ;
INFO  15:28:29,489 - #48 }
INFO  15:28:29,489 - #8 if
INFO  15:28:29,490 - #43 (
INFO  15:28:29,490 - #20 num
INFO  15:28:29,490 - #44 )
INFO  15:28:29,490 - #47 {
INFO  15:28:29,490 - #20 num
INFO  15:28:29,490 - #37 =
INFO  15:28:29,490 - #21 2
INFO  15:28:29,490 - #40 ;
INFO  15:28:29,490 - #48 }
INFO  15:28:29,491 - #10 do
INFO  15:28:29,491 - #47 {
INFO  15:28:29,491 - #20 num
INFO  15:28:29,491 - #38 ++
INFO  15:28:29,491 - #40 ;
INFO  15:28:29,491 - #48 }
INFO  15:28:29,491 - #11 while
INFO  15:28:29,491 - #43 (
INFO  15:28:29,491 - #20 num
INFO  15:28:29,491 - #44 )
INFO  15:28:29,491 - #40 ;
INFO  15:28:29,491 - #48 }
INFO  15:28:29,491 - #48 }
INFO  15:28:29,493 - 

================SINTAKSNO STABLO====================


INFO  15:28:29,497 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementSingle(
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorSimple(
                                                   a
                                                  ) [DesignatorSimple]
                                                  AssignmentExpr(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           1
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementSingle]
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 num
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorCharConst(
                                                         a
                                                        ) [FactorCharConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               num
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorBoolConst(
                                                       true
                                                      ) [FactorBoolConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             character
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     1
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorSimple(
                                           character
                                          ) [DesignatorSimple]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorBoolConst(
                                                   true
                                                  ) [FactorBoolConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         boolean
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       boolean
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorCharConst(
                                               a
                                              ) [FactorCharConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     cnst
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             2
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorIncrement(
                                  DesignatorSimple(
                                   character
                                  ) [DesignatorSimple]
                                ) [DesignatorIncrement]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorDecrement(
                                DesignatorSimple(
                                 boolean
                                ) [DesignatorSimple]
                              ) [DesignatorDecrement]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorMethodCall0(
                              DesignatorSimple(
                               fun
                              ) [DesignatorSimple]
                              ActParsMulti(
                                ActParsSingle(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         1
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [ActParsSingle]
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [ActParsMulti]
                            ) [DesignatorMethodCall0]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             character
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprNegSingle(
                                  TermSingle(
                                    FactorCharConst(
                                     a
                                    ) [FactorCharConst]
                                  ) [TermSingle]
                                ) [ExprNegSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           niz
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNewArray(
                                    Type(
                                     int
                                    ) [Type]
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorCharConst(
                                           a
                                          ) [FactorCharConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [FactorNewArray]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDoWhile(
                      DoHead(
                      ) [DoHead]
                      Stmt(
                        StatementMulti(
                          StatementMulti(
                            StatementSingle(
                              StmtDesign(
                                DesignatorIncrement(
                                  DesignatorSimple(
                                   num
                                  ) [DesignatorSimple]
                                ) [DesignatorIncrement]
                              ) [StmtDesign]
                            ) [StatementSingle]
                            StmtBreak(
                            ) [StmtBreak]
                          ) [StatementMulti]
                          StmtContinue(
                          ) [StmtContinue]
                        ) [StatementMulti]
                      ) [Stmt]
                      CondOne(
                        CondTermOne(
                          CondFactTwo(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                            RelopLT(
                            ) [RelopLT]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactTwo]
                        ) [CondTermOne]
                      ) [CondOne]
                    ) [StmtDoWhile]
                  ) [StatementMulti]
                  StmtBreak(
                  ) [StmtBreak]
                ) [StatementMulti]
                StmtContinue(
                ) [StmtContinue]
              ) [StatementMulti]
              StmtIf(
                StmtIfBody(
                  IfCond(
                    CondOne(
                      CondTermOne(
                        CondFactOne(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   boolean
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactOne]
                      ) [CondTermOne]
                    ) [CondOne]
                  ) [IfCond]
                  Stmt(
                    StatementSingle(
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   1
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementSingle]
                  ) [Stmt]
                ) [StmtIfBody]
              ) [StmtIf]
            ) [StatementMulti]
            StmtIf(
              StmtIfBody(
                IfCond(
                  CondOne(
                    CondTermOne(
                      CondFactOne(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactOne]
                    ) [CondTermOne]
                  ) [CondOne]
                ) [IfCond]
                Stmt(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         num
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 2
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                ) [Stmt]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtDoWhile(
            DoHead(
            ) [DoHead]
            Stmt(
              StatementSingle(
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     num
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementSingle]
            ) [Stmt]
            CondOne(
              CondTermOne(
                CondFactOne(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [CondFactOne]
              ) [CondTermOne]
            ) [CondOne]
          ) [StmtDoWhile]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  15:28:29,498 - 

================SEMANTICKA OBRADA====================


ERROR 15:28:29,511 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  15:28:29,512 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  15:28:29,512 - Deklarisana konstanta 'cnst' na liniji 3
INFO  15:28:29,512 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 15:28:29,512 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  15:28:29,512 - Deklarisana promenljiva 'b' na liniji 14
ERROR 15:28:29,513 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  15:28:29,513 - Deklarisana promenljiva 'num' na liniji 15
INFO  15:28:29,513 - Deklarisana promenljiva 'character' na liniji 15
INFO  15:28:29,513 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  15:28:29,513 - Deklarisan niz 'niz' na liniji 16
ERROR 15:28:29,513 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 15:28:29,513 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 15:28:29,513 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 15:28:29,513 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 15:28:29,513 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 15:28:29,514 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 15:28:29,514 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 15:28:29,514 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 15:28:29,514 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 15:28:29,514 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  15:28:29,514 - Pronadjen poziv funkcije 'fun' na liniji 35
ERROR 15:28:29,514 - Semanticka greska - tip mora da bude int na liniji 38
ERROR 15:28:29,514 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 41
ERROR 15:28:29,514 - Semanticka greska - break iskaz van petlje
ERROR 15:28:29,514 - Semanticka greska - continue iskaz van petlje
ERROR 15:28:29,515 - Semanticka greska - if uslov nije tipa bool na liniji 56
ERROR 15:28:29,515 - Semanticka greska - while uslov nije tipa bool na liniji 60
INFO  15:28:29,516 - ===================================
INFO  15:30:34,583 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:30:34,631 - #2 program
INFO  15:30:34,631 - #20 MJProgram
INFO  15:30:34,631 - #20 abc
INFO  15:30:34,632 - #20 a
INFO  15:30:34,632 - #40 ;
INFO  15:30:34,632 - #7 const
INFO  15:30:34,633 - #20 int
INFO  15:30:34,633 - #20 cnst
INFO  15:30:34,633 - #37 =
INFO  15:30:34,633 - #21 1
INFO  15:30:34,633 - #40 ;
INFO  15:30:34,634 - #47 {
INFO  15:30:34,634 - #20 int
INFO  15:30:34,634 - #20 fun
INFO  15:30:34,634 - #43 (
INFO  15:30:34,634 - #20 int
INFO  15:30:34,634 - #20 x
INFO  15:30:34,634 - #44 )
INFO  15:30:34,635 - #47 {
INFO  15:30:34,635 - #48 }
INFO  15:30:34,635 - #16 void
INFO  15:30:34,635 - #20 main
INFO  15:30:34,635 - #43 (
INFO  15:30:34,635 - #44 )
INFO  15:30:34,635 - #20 int
INFO  15:30:34,635 - #20 b
INFO  15:30:34,635 - #40 ;
INFO  15:30:34,636 - #20 char
INFO  15:30:34,636 - #20 b
INFO  15:30:34,636 - #40 ;
INFO  15:30:34,636 - #20 int
INFO  15:30:34,636 - #20 num
INFO  15:30:34,636 - #40 ;
INFO  15:30:34,636 - #20 char
INFO  15:30:34,637 - #20 character
INFO  15:30:34,637 - #40 ;
INFO  15:30:34,637 - #20 bool
INFO  15:30:34,637 - #20 boolean
INFO  15:30:34,637 - #40 ;
INFO  15:30:34,637 - #20 int
INFO  15:30:34,637 - #20 niz
INFO  15:30:34,637 - #45 [
INFO  15:30:34,637 - #46 ]
INFO  15:30:34,637 - #41 ,
INFO  15:30:34,637 - #20 niz1
INFO  15:30:34,637 - #45 [
INFO  15:30:34,637 - #46 ]
INFO  15:30:34,637 - #40 ;
INFO  15:30:34,637 - #47 {
INFO  15:30:34,638 - #20 a
INFO  15:30:34,638 - #37 =
INFO  15:30:34,638 - #21 1
INFO  15:30:34,638 - #40 ;
INFO  15:30:34,638 - #20 num
INFO  15:30:34,639 - #37 =
INFO  15:30:34,639 - #22 a
INFO  15:30:34,639 - #40 ;
INFO  15:30:34,639 - #20 num
INFO  15:30:34,639 - #37 =
INFO  15:30:34,639 - #23 true
INFO  15:30:34,639 - #40 ;
INFO  15:30:34,639 - #20 character
INFO  15:30:34,639 - #37 =
INFO  15:30:34,640 - #21 1
INFO  15:30:34,640 - #40 ;
INFO  15:30:34,640 - #20 character
INFO  15:30:34,640 - #37 =
INFO  15:30:34,640 - #23 true
INFO  15:30:34,640 - #40 ;
INFO  15:30:34,640 - #20 boolean
INFO  15:30:34,640 - #37 =
INFO  15:30:34,640 - #21 1
INFO  15:30:34,640 - #40 ;
INFO  15:30:34,641 - #20 boolean
INFO  15:30:34,641 - #37 =
INFO  15:30:34,641 - #22 a
INFO  15:30:34,641 - #40 ;
INFO  15:30:34,641 - #20 cnst
INFO  15:30:34,641 - #37 =
INFO  15:30:34,641 - #21 2
INFO  15:30:34,641 - #40 ;
INFO  15:30:34,641 - #20 character
INFO  15:30:34,641 - #38 ++
INFO  15:30:34,642 - #40 ;
INFO  15:30:34,642 - #20 boolean
INFO  15:30:34,642 - #39 --
INFO  15:30:34,642 - #40 ;
INFO  15:30:34,642 - #20 fun
INFO  15:30:34,643 - #43 (
INFO  15:30:34,643 - #21 1
INFO  15:30:34,643 - #41 ,
INFO  15:30:34,643 - #21 2
INFO  15:30:34,643 - #44 )
INFO  15:30:34,643 - #40 ;
INFO  15:30:34,644 - #20 character
INFO  15:30:34,644 - #37 =
INFO  15:30:34,644 - #25 -
INFO  15:30:34,644 - #22 a
INFO  15:30:34,644 - #40 ;
INFO  15:30:34,644 - #20 niz
INFO  15:30:34,644 - #37 =
INFO  15:30:34,644 - #12 new
INFO  15:30:34,644 - #20 int
INFO  15:30:34,644 - #45 [
INFO  15:30:34,644 - #22 a
INFO  15:30:34,644 - #46 ]
INFO  15:30:34,645 - #40 ;
INFO  15:30:34,645 - #10 do
INFO  15:30:34,645 - #47 {
INFO  15:30:34,646 - #20 num
INFO  15:30:34,646 - #38 ++
INFO  15:30:34,646 - #40 ;
INFO  15:30:34,646 - #3 break
INFO  15:30:34,646 - #40 ;
INFO  15:30:34,646 - #18 continue
INFO  15:30:34,646 - #40 ;
INFO  15:30:34,646 - #48 }
INFO  15:30:34,647 - #11 while
INFO  15:30:34,647 - #43 (
INFO  15:30:34,647 - #20 num
INFO  15:30:34,647 - #33 <
INFO  15:30:34,647 - #21 10
INFO  15:30:34,648 - #44 )
INFO  15:30:34,649 - #40 ;
INFO  15:30:34,649 - #3 break
INFO  15:30:34,649 - #40 ;
INFO  15:30:34,649 - #18 continue
INFO  15:30:34,650 - #40 ;
INFO  15:30:34,650 - #8 if
INFO  15:30:34,650 - #43 (
INFO  15:30:34,650 - #20 niz
INFO  15:30:34,650 - #33 <
INFO  15:30:34,650 - #20 niz1
INFO  15:30:34,650 - #44 )
INFO  15:30:34,650 - #47 {
INFO  15:30:34,651 - #20 num
INFO  15:30:34,651 - #37 =
INFO  15:30:34,651 - #21 1
INFO  15:30:34,651 - #40 ;
INFO  15:30:34,651 - #48 }
INFO  15:30:34,651 - #8 if
INFO  15:30:34,651 - #43 (
INFO  15:30:34,651 - #20 num
INFO  15:30:34,651 - #44 )
INFO  15:30:34,651 - #47 {
INFO  15:30:34,652 - #20 num
INFO  15:30:34,652 - #37 =
INFO  15:30:34,652 - #21 2
INFO  15:30:34,652 - #40 ;
INFO  15:30:34,652 - #48 }
INFO  15:30:34,655 - #10 do
INFO  15:30:34,655 - #47 {
INFO  15:30:34,655 - #20 num
INFO  15:30:34,655 - #38 ++
INFO  15:30:34,655 - #40 ;
INFO  15:30:34,655 - #48 }
INFO  15:30:34,655 - #11 while
INFO  15:30:34,655 - #43 (
INFO  15:30:34,655 - #20 num
INFO  15:30:34,655 - #44 )
INFO  15:30:34,655 - #40 ;
INFO  15:30:34,655 - #48 }
INFO  15:30:34,655 - #48 }
INFO  15:30:34,657 - 

================SINTAKSNO STABLO====================


INFO  15:30:34,660 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
              VarArray(
               niz1
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementSingle(
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorSimple(
                                                   a
                                                  ) [DesignatorSimple]
                                                  AssignmentExpr(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           1
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementSingle]
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 num
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorCharConst(
                                                         a
                                                        ) [FactorCharConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               num
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorBoolConst(
                                                       true
                                                      ) [FactorBoolConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             character
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     1
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorSimple(
                                           character
                                          ) [DesignatorSimple]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorBoolConst(
                                                   true
                                                  ) [FactorBoolConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         boolean
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       boolean
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorCharConst(
                                               a
                                              ) [FactorCharConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     cnst
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             2
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorIncrement(
                                  DesignatorSimple(
                                   character
                                  ) [DesignatorSimple]
                                ) [DesignatorIncrement]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorDecrement(
                                DesignatorSimple(
                                 boolean
                                ) [DesignatorSimple]
                              ) [DesignatorDecrement]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorMethodCall0(
                              DesignatorSimple(
                               fun
                              ) [DesignatorSimple]
                              ActParsMulti(
                                ActParsSingle(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         1
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [ActParsSingle]
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [ActParsMulti]
                            ) [DesignatorMethodCall0]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             character
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprNegSingle(
                                  TermSingle(
                                    FactorCharConst(
                                     a
                                    ) [FactorCharConst]
                                  ) [TermSingle]
                                ) [ExprNegSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           niz
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNewArray(
                                    Type(
                                     int
                                    ) [Type]
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorCharConst(
                                           a
                                          ) [FactorCharConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [FactorNewArray]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDoWhile(
                      DoHead(
                      ) [DoHead]
                      Stmt(
                        StatementMulti(
                          StatementMulti(
                            StatementSingle(
                              StmtDesign(
                                DesignatorIncrement(
                                  DesignatorSimple(
                                   num
                                  ) [DesignatorSimple]
                                ) [DesignatorIncrement]
                              ) [StmtDesign]
                            ) [StatementSingle]
                            StmtBreak(
                            ) [StmtBreak]
                          ) [StatementMulti]
                          StmtContinue(
                          ) [StmtContinue]
                        ) [StatementMulti]
                      ) [Stmt]
                      CondOne(
                        CondTermOne(
                          CondFactTwo(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                            RelopLT(
                            ) [RelopLT]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactTwo]
                        ) [CondTermOne]
                      ) [CondOne]
                    ) [StmtDoWhile]
                  ) [StatementMulti]
                  StmtBreak(
                  ) [StmtBreak]
                ) [StatementMulti]
                StmtContinue(
                ) [StmtContinue]
              ) [StatementMulti]
              StmtIf(
                StmtIfBody(
                  IfCond(
                    CondOne(
                      CondTermOne(
                        CondFactTwo(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   niz
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                          RelopLT(
                          ) [RelopLT]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   niz1
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactTwo]
                      ) [CondTermOne]
                    ) [CondOne]
                  ) [IfCond]
                  Stmt(
                    StatementSingle(
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   1
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementSingle]
                  ) [Stmt]
                ) [StmtIfBody]
              ) [StmtIf]
            ) [StatementMulti]
            StmtIf(
              StmtIfBody(
                IfCond(
                  CondOne(
                    CondTermOne(
                      CondFactOne(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactOne]
                    ) [CondTermOne]
                  ) [CondOne]
                ) [IfCond]
                Stmt(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         num
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 2
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                ) [Stmt]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtDoWhile(
            DoHead(
            ) [DoHead]
            Stmt(
              StatementSingle(
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     num
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementSingle]
            ) [Stmt]
            CondOne(
              CondTermOne(
                CondFactOne(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [CondFactOne]
              ) [CondTermOne]
            ) [CondOne]
          ) [StmtDoWhile]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  15:30:34,661 - 

================SEMANTICKA OBRADA====================


ERROR 15:30:34,670 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  15:30:34,671 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  15:30:34,671 - Deklarisana konstanta 'cnst' na liniji 3
INFO  15:30:34,671 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 15:30:34,671 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  15:30:34,672 - Deklarisana promenljiva 'b' na liniji 14
ERROR 15:30:34,672 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  15:30:34,672 - Deklarisana promenljiva 'num' na liniji 15
INFO  15:30:34,672 - Deklarisana promenljiva 'character' na liniji 15
INFO  15:30:34,672 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  15:30:34,672 - Deklarisan niz 'niz' na liniji 16
INFO  15:30:34,672 - Deklarisan niz 'niz1' na liniji 16
ERROR 15:30:34,672 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 15:30:34,672 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 15:30:34,673 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 15:30:34,673 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 15:30:34,673 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 15:30:34,673 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 15:30:34,673 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 15:30:34,673 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 15:30:34,673 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 15:30:34,673 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  15:30:34,673 - Pronadjen poziv funkcije 'fun' na liniji 35
ERROR 15:30:34,673 - Semanticka greska - tip mora da bude int na liniji 38
ERROR 15:30:34,673 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 41
ERROR 15:30:34,673 - Semanticka greska - break iskaz van petlje
ERROR 15:30:34,673 - Semanticka greska - continue iskaz van petlje
ERROR 15:30:34,674 - Semanticka greska - relacioni izraz sa referentnim tipovima moze koristiti samo '==' i '!=' operatore na liniji 52
ERROR 15:30:34,674 - Semanticka greska - if uslov nije tipa bool na liniji 56
ERROR 15:30:34,674 - Semanticka greska - while uslov nije tipa bool na liniji 60
INFO  15:30:34,675 - ===================================
INFO  15:57:43,759 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:57:43,803 - #2 program
INFO  15:57:43,803 - #20 MJProgram
INFO  15:57:43,803 - #20 abc
INFO  15:57:43,804 - #20 a
INFO  15:57:43,804 - #40 ;
INFO  15:57:43,805 - #7 const
INFO  15:57:43,805 - #20 int
INFO  15:57:43,805 - #20 cnst
INFO  15:57:43,805 - #37 =
INFO  15:57:43,805 - #21 1
INFO  15:57:43,805 - #40 ;
INFO  15:57:43,806 - #47 {
INFO  15:57:43,806 - #20 int
INFO  15:57:43,806 - #20 fun
INFO  15:57:43,806 - #43 (
INFO  15:57:43,806 - #20 int
INFO  15:57:43,806 - #20 x
INFO  15:57:43,806 - #44 )
INFO  15:57:43,807 - #47 {
INFO  15:57:43,807 - #48 }
INFO  15:57:43,807 - #16 void
INFO  15:57:43,807 - #20 main
INFO  15:57:43,807 - #43 (
INFO  15:57:43,807 - #44 )
INFO  15:57:43,807 - #20 int
INFO  15:57:43,807 - #20 b
INFO  15:57:43,807 - #40 ;
INFO  15:57:43,808 - #20 char
INFO  15:57:43,808 - #20 b
INFO  15:57:43,808 - #40 ;
INFO  15:57:43,808 - #20 int
INFO  15:57:43,808 - #20 num
INFO  15:57:43,808 - #40 ;
INFO  15:57:43,809 - #20 char
INFO  15:57:43,809 - #20 character
INFO  15:57:43,809 - #40 ;
INFO  15:57:43,809 - #20 bool
INFO  15:57:43,809 - #20 boolean
INFO  15:57:43,809 - #40 ;
INFO  15:57:43,809 - #20 int
INFO  15:57:43,809 - #20 niz
INFO  15:57:43,809 - #45 [
INFO  15:57:43,809 - #46 ]
INFO  15:57:43,809 - #41 ,
INFO  15:57:43,809 - #20 niz1
INFO  15:57:43,810 - #45 [
INFO  15:57:43,810 - #46 ]
INFO  15:57:43,810 - #40 ;
INFO  15:57:43,810 - #47 {
INFO  15:57:43,810 - #20 a
INFO  15:57:43,810 - #37 =
INFO  15:57:43,810 - #21 1
INFO  15:57:43,810 - #40 ;
INFO  15:57:43,811 - #20 num
INFO  15:57:43,811 - #37 =
INFO  15:57:43,811 - #22 a
INFO  15:57:43,811 - #40 ;
INFO  15:57:43,811 - #20 num
INFO  15:57:43,811 - #37 =
INFO  15:57:43,811 - #23 true
INFO  15:57:43,811 - #40 ;
INFO  15:57:43,811 - #20 character
INFO  15:57:43,812 - #37 =
INFO  15:57:43,812 - #21 1
INFO  15:57:43,812 - #40 ;
INFO  15:57:43,812 - #20 character
INFO  15:57:43,812 - #37 =
INFO  15:57:43,812 - #23 true
INFO  15:57:43,812 - #40 ;
INFO  15:57:43,812 - #20 boolean
INFO  15:57:43,812 - #37 =
INFO  15:57:43,812 - #21 1
INFO  15:57:43,812 - #40 ;
INFO  15:57:43,812 - #20 boolean
INFO  15:57:43,812 - #37 =
INFO  15:57:43,813 - #22 a
INFO  15:57:43,813 - #40 ;
INFO  15:57:43,813 - #20 cnst
INFO  15:57:43,813 - #37 =
INFO  15:57:43,813 - #21 2
INFO  15:57:43,813 - #40 ;
INFO  15:57:43,813 - #20 character
INFO  15:57:43,813 - #38 ++
INFO  15:57:43,813 - #40 ;
INFO  15:57:43,813 - #20 boolean
INFO  15:57:43,814 - #39 --
INFO  15:57:43,814 - #40 ;
INFO  15:57:43,814 - #20 fun
INFO  15:57:43,814 - #43 (
INFO  15:57:43,814 - #21 1
INFO  15:57:43,814 - #41 ,
INFO  15:57:43,814 - #21 2
INFO  15:57:43,814 - #44 )
INFO  15:57:43,815 - #40 ;
INFO  15:57:43,815 - #20 character
INFO  15:57:43,815 - #37 =
INFO  15:57:43,815 - #25 -
INFO  15:57:43,815 - #22 a
INFO  15:57:43,815 - #40 ;
INFO  15:57:43,815 - #20 niz
INFO  15:57:43,815 - #37 =
INFO  15:57:43,815 - #12 new
INFO  15:57:43,815 - #20 int
INFO  15:57:43,815 - #45 [
INFO  15:57:43,816 - #22 a
INFO  15:57:43,816 - #46 ]
INFO  15:57:43,816 - #40 ;
INFO  15:57:43,816 - #10 do
INFO  15:57:43,816 - #47 {
INFO  15:57:43,817 - #20 num
INFO  15:57:43,817 - #38 ++
INFO  15:57:43,817 - #40 ;
INFO  15:57:43,817 - #3 break
INFO  15:57:43,817 - #40 ;
INFO  15:57:43,817 - #18 continue
INFO  15:57:43,818 - #40 ;
INFO  15:57:43,818 - #48 }
INFO  15:57:43,818 - #11 while
INFO  15:57:43,818 - #43 (
INFO  15:57:43,818 - #20 num
INFO  15:57:43,818 - #33 <
INFO  15:57:43,818 - #21 10
INFO  15:57:43,819 - #44 )
INFO  15:57:43,819 - #40 ;
INFO  15:57:43,819 - #3 break
INFO  15:57:43,820 - #40 ;
INFO  15:57:43,820 - #18 continue
INFO  15:57:43,820 - #40 ;
INFO  15:57:43,820 - #8 if
INFO  15:57:43,820 - #43 (
INFO  15:57:43,820 - #20 niz
INFO  15:57:43,820 - #33 <
INFO  15:57:43,820 - #20 niz1
INFO  15:57:43,820 - #44 )
INFO  15:57:43,820 - #47 {
INFO  15:57:43,820 - #20 num
INFO  15:57:43,820 - #37 =
INFO  15:57:43,820 - #21 1
INFO  15:57:43,820 - #40 ;
INFO  15:57:43,820 - #48 }
INFO  15:57:43,821 - #8 if
INFO  15:57:43,821 - #43 (
INFO  15:57:43,821 - #20 num
INFO  15:57:43,821 - #44 )
INFO  15:57:43,821 - #47 {
INFO  15:57:43,821 - #20 num
INFO  15:57:43,821 - #37 =
INFO  15:57:43,821 - #21 2
INFO  15:57:43,821 - #40 ;
INFO  15:57:43,821 - #48 }
INFO  15:57:43,821 - #10 do
INFO  15:57:43,821 - #47 {
INFO  15:57:43,821 - #20 num
INFO  15:57:43,821 - #38 ++
INFO  15:57:43,822 - #40 ;
INFO  15:57:43,822 - #48 }
INFO  15:57:43,822 - #11 while
INFO  15:57:43,822 - #43 (
INFO  15:57:43,822 - #20 num
INFO  15:57:43,822 - #44 )
INFO  15:57:43,822 - #40 ;
INFO  15:57:43,822 - #48 }
INFO  15:57:43,822 - #48 }
INFO  15:57:43,823 - 

================SINTAKSNO STABLO====================


INFO  15:57:43,827 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
              VarArray(
               niz1
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementSingle(
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorSimple(
                                                   a
                                                  ) [DesignatorSimple]
                                                  AssignmentExpr(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           1
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementSingle]
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 num
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorCharConst(
                                                         a
                                                        ) [FactorCharConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               num
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorBoolConst(
                                                       true
                                                      ) [FactorBoolConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             character
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     1
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorSimple(
                                           character
                                          ) [DesignatorSimple]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorBoolConst(
                                                   true
                                                  ) [FactorBoolConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         boolean
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       boolean
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorCharConst(
                                               a
                                              ) [FactorCharConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     cnst
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             2
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorIncrement(
                                  DesignatorSimple(
                                   character
                                  ) [DesignatorSimple]
                                ) [DesignatorIncrement]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorDecrement(
                                DesignatorSimple(
                                 boolean
                                ) [DesignatorSimple]
                              ) [DesignatorDecrement]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorMethodCall0(
                              DesignatorSimple(
                               fun
                              ) [DesignatorSimple]
                              ActParsMulti(
                                ActParsSingle(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         1
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [ActParsSingle]
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [ActParsMulti]
                            ) [DesignatorMethodCall0]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             character
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprNeg(
                                  TermSingle(
                                    FactorCharConst(
                                     a
                                    ) [FactorCharConst]
                                  ) [TermSingle]
                                ) [ExprNeg]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           niz
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNewArray(
                                    Type(
                                     int
                                    ) [Type]
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorCharConst(
                                           a
                                          ) [FactorCharConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [FactorNewArray]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDoWhile(
                      DoHead(
                      ) [DoHead]
                      Stmt(
                        StatementMulti(
                          StatementMulti(
                            StatementSingle(
                              StmtDesign(
                                DesignatorIncrement(
                                  DesignatorSimple(
                                   num
                                  ) [DesignatorSimple]
                                ) [DesignatorIncrement]
                              ) [StmtDesign]
                            ) [StatementSingle]
                            StmtBreak(
                            ) [StmtBreak]
                          ) [StatementMulti]
                          StmtContinue(
                          ) [StmtContinue]
                        ) [StatementMulti]
                      ) [Stmt]
                      CondOne(
                        CondTermOne(
                          CondFactTwo(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                            RelopLT(
                            ) [RelopLT]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactTwo]
                        ) [CondTermOne]
                      ) [CondOne]
                    ) [StmtDoWhile]
                  ) [StatementMulti]
                  StmtBreak(
                  ) [StmtBreak]
                ) [StatementMulti]
                StmtContinue(
                ) [StmtContinue]
              ) [StatementMulti]
              StmtIf(
                StmtIfBody(
                  IfCond(
                    CondOne(
                      CondTermOne(
                        CondFactTwo(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   niz
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                          RelopLT(
                          ) [RelopLT]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   niz1
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactTwo]
                      ) [CondTermOne]
                    ) [CondOne]
                  ) [IfCond]
                  Stmt(
                    StatementSingle(
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   1
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementSingle]
                  ) [Stmt]
                ) [StmtIfBody]
              ) [StmtIf]
            ) [StatementMulti]
            StmtIf(
              StmtIfBody(
                IfCond(
                  CondOne(
                    CondTermOne(
                      CondFactOne(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactOne]
                    ) [CondTermOne]
                  ) [CondOne]
                ) [IfCond]
                Stmt(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         num
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 2
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                ) [Stmt]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtDoWhile(
            DoHead(
            ) [DoHead]
            Stmt(
              StatementSingle(
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     num
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementSingle]
            ) [Stmt]
            CondOne(
              CondTermOne(
                CondFactOne(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [CondFactOne]
              ) [CondTermOne]
            ) [CondOne]
          ) [StmtDoWhile]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  15:57:43,828 - 

================SEMANTICKA OBRADA====================


ERROR 15:57:43,838 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  15:57:43,838 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  15:57:43,839 - Deklarisana konstanta 'cnst' na liniji 3
INFO  15:57:43,839 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 15:57:43,839 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  15:57:43,839 - Deklarisana promenljiva 'b' na liniji 14
ERROR 15:57:43,839 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  15:57:43,839 - Deklarisana promenljiva 'num' na liniji 15
INFO  15:57:43,839 - Deklarisana promenljiva 'character' na liniji 15
INFO  15:57:43,839 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  15:57:43,839 - Deklarisan niz 'niz' na liniji 16
INFO  15:57:43,839 - Deklarisan niz 'niz1' na liniji 16
ERROR 15:57:43,840 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 15:57:43,840 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 15:57:43,840 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 15:57:43,840 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 15:57:43,840 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 15:57:43,840 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 15:57:43,840 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 15:57:43,840 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 15:57:43,840 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 15:57:43,840 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  15:57:43,840 - Pronadjen poziv funkcije 'fun' na liniji 35
ERROR 15:57:43,840 - Semanticka greska - tip mora da bude int na liniji 38
ERROR 15:57:43,840 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 41
ERROR 15:57:43,840 - Semanticka greska - break iskaz van petlje
ERROR 15:57:43,840 - Semanticka greska - continue iskaz van petlje
ERROR 15:57:43,841 - Semanticka greska - relacioni izraz sa referentnim tipovima moze koristiti samo '==' i '!=' operatore na liniji 52
ERROR 15:57:43,841 - Semanticka greska - if uslov nije tipa bool na liniji 56
ERROR 15:57:43,842 - Semanticka greska - while uslov nije tipa bool na liniji 60
INFO  15:57:43,842 - ===================================
INFO  16:02:25,593 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:02:25,666 - #2 program
INFO  16:02:25,666 - #20 MJProgram
INFO  16:02:25,666 - #20 abc
INFO  16:02:25,667 - #20 a
INFO  16:02:25,668 - #40 ;
INFO  16:02:25,668 - #7 const
INFO  16:02:25,668 - #20 int
INFO  16:02:25,668 - #20 cnst
INFO  16:02:25,669 - #37 =
INFO  16:02:25,669 - #21 1
INFO  16:02:25,669 - #40 ;
INFO  16:02:25,669 - #47 {
INFO  16:02:25,670 - #20 int
INFO  16:02:25,670 - #20 fun
INFO  16:02:25,670 - #43 (
INFO  16:02:25,670 - #20 int
INFO  16:02:25,670 - #20 x
INFO  16:02:25,670 - #44 )
INFO  16:02:25,671 - #47 {
INFO  16:02:25,671 - #48 }
INFO  16:02:25,671 - #16 void
INFO  16:02:25,672 - #20 main
INFO  16:02:25,672 - #43 (
INFO  16:02:25,672 - #44 )
INFO  16:02:25,672 - #20 int
INFO  16:02:25,672 - #20 b
INFO  16:02:25,672 - #40 ;
INFO  16:02:25,672 - #20 char
INFO  16:02:25,673 - #20 b
INFO  16:02:25,673 - #40 ;
INFO  16:02:25,673 - #20 int
INFO  16:02:25,673 - #20 num
INFO  16:02:25,673 - #40 ;
INFO  16:02:25,673 - #20 char
INFO  16:02:25,673 - #20 character
INFO  16:02:25,674 - #40 ;
INFO  16:02:25,674 - #20 bool
INFO  16:02:25,674 - #20 boolean
INFO  16:02:25,674 - #40 ;
INFO  16:02:25,674 - #20 int
INFO  16:02:25,674 - #20 niz
INFO  16:02:25,674 - #45 [
INFO  16:02:25,675 - #46 ]
INFO  16:02:25,675 - #41 ,
INFO  16:02:25,675 - #20 niz1
INFO  16:02:25,675 - #45 [
INFO  16:02:25,675 - #46 ]
INFO  16:02:25,676 - #40 ;
INFO  16:02:25,676 - #47 {
INFO  16:02:25,676 - #20 a
INFO  16:02:25,676 - #37 =
INFO  16:02:25,677 - #21 1
INFO  16:02:25,677 - #40 ;
INFO  16:02:25,678 - #20 num
INFO  16:02:25,678 - #37 =
INFO  16:02:25,678 - #22 a
INFO  16:02:25,678 - #40 ;
INFO  16:02:25,679 - #20 num
INFO  16:02:25,679 - #37 =
INFO  16:02:25,679 - #23 true
INFO  16:02:25,679 - #40 ;
INFO  16:02:25,679 - #20 character
INFO  16:02:25,679 - #37 =
INFO  16:02:25,680 - #21 1
INFO  16:02:25,681 - #40 ;
INFO  16:02:25,681 - #20 character
INFO  16:02:25,682 - #37 =
INFO  16:02:25,682 - #23 true
INFO  16:02:25,682 - #40 ;
INFO  16:02:25,682 - #20 boolean
INFO  16:02:25,682 - #37 =
INFO  16:02:25,682 - #21 1
INFO  16:02:25,683 - #40 ;
INFO  16:02:25,683 - #20 boolean
INFO  16:02:25,683 - #37 =
INFO  16:02:25,683 - #22 a
INFO  16:02:25,683 - #40 ;
INFO  16:02:25,683 - #20 cnst
INFO  16:02:25,683 - #37 =
INFO  16:02:25,683 - #21 2
INFO  16:02:25,684 - #40 ;
INFO  16:02:25,684 - #20 character
INFO  16:02:25,684 - #38 ++
INFO  16:02:25,684 - #40 ;
INFO  16:02:25,685 - #20 boolean
INFO  16:02:25,685 - #39 --
INFO  16:02:25,688 - #40 ;
INFO  16:02:25,689 - #20 fun
INFO  16:02:25,689 - #43 (
INFO  16:02:25,689 - #21 1
INFO  16:02:25,689 - #41 ,
INFO  16:02:25,689 - #21 2
INFO  16:02:25,689 - #44 )
INFO  16:02:25,690 - #40 ;
INFO  16:02:25,690 - #20 character
INFO  16:02:25,690 - #37 =
INFO  16:02:25,690 - #25 -
INFO  16:02:25,690 - #22 a
INFO  16:02:25,691 - #40 ;
INFO  16:02:25,691 - #20 niz
INFO  16:02:25,691 - #37 =
INFO  16:02:25,691 - #12 new
INFO  16:02:25,691 - #20 int
INFO  16:02:25,691 - #45 [
INFO  16:02:25,691 - #22 a
INFO  16:02:25,691 - #46 ]
INFO  16:02:25,691 - #40 ;
INFO  16:02:25,692 - #10 do
INFO  16:02:25,692 - #47 {
INFO  16:02:25,693 - #20 num
INFO  16:02:25,693 - #38 ++
INFO  16:02:25,693 - #40 ;
INFO  16:02:25,693 - #3 break
INFO  16:02:25,693 - #40 ;
INFO  16:02:25,693 - #18 continue
INFO  16:02:25,694 - #40 ;
INFO  16:02:25,694 - #48 }
INFO  16:02:25,694 - #11 while
INFO  16:02:25,694 - #43 (
INFO  16:02:25,694 - #20 num
INFO  16:02:25,695 - #33 <
INFO  16:02:25,695 - #21 10
INFO  16:02:25,696 - #44 )
INFO  16:02:25,697 - #40 ;
INFO  16:02:25,697 - #3 break
INFO  16:02:25,697 - #40 ;
INFO  16:02:25,698 - #18 continue
INFO  16:02:25,698 - #40 ;
INFO  16:02:25,698 - #8 if
INFO  16:02:25,698 - #43 (
INFO  16:02:25,698 - #20 niz
INFO  16:02:25,698 - #33 <
INFO  16:02:25,698 - #20 niz1
INFO  16:02:25,698 - #44 )
INFO  16:02:25,699 - #47 {
INFO  16:02:25,699 - #20 num
INFO  16:02:25,699 - #37 =
INFO  16:02:25,699 - #21 1
INFO  16:02:25,699 - #40 ;
INFO  16:02:25,699 - #48 }
INFO  16:02:25,699 - #8 if
INFO  16:02:25,699 - #43 (
INFO  16:02:25,700 - #20 num
INFO  16:02:25,700 - #44 )
INFO  16:02:25,700 - #47 {
INFO  16:02:25,700 - #20 num
INFO  16:02:25,700 - #37 =
INFO  16:02:25,700 - #21 2
INFO  16:02:25,700 - #40 ;
INFO  16:02:25,701 - #48 }
INFO  16:02:25,701 - #10 do
INFO  16:02:25,701 - #47 {
INFO  16:02:25,701 - #20 num
INFO  16:02:25,701 - #38 ++
INFO  16:02:25,701 - #40 ;
INFO  16:02:25,701 - #48 }
INFO  16:02:25,701 - #11 while
INFO  16:02:25,701 - #43 (
INFO  16:02:25,701 - #20 num
INFO  16:02:25,701 - #44 )
INFO  16:02:25,701 - #40 ;
INFO  16:02:25,701 - #20 num
INFO  16:02:25,701 - #37 =
INFO  16:02:25,702 - #20 num
INFO  16:02:25,702 - #24 +
INFO  16:02:25,702 - #22 a
INFO  16:02:25,703 - #40 ;
INFO  16:02:25,703 - #48 }
INFO  16:02:25,704 - #48 }
INFO  16:02:25,706 - 

================SINTAKSNO STABLO====================


INFO  16:02:25,709 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
              VarArray(
               niz1
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementSingle(
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     a
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             1
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementSingle]
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorSimple(
                                                   num
                                                  ) [DesignatorSimple]
                                                  AssignmentExpr(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorCharConst(
                                                           a
                                                          ) [FactorCharConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementMulti]
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 num
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorBoolConst(
                                                         true
                                                        ) [FactorBoolConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               character
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       1
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             character
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorBoolConst(
                                                     true
                                                    ) [FactorBoolConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorSimple(
                                           boolean
                                          ) [DesignatorSimple]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   1
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         boolean
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorCharConst(
                                                 a
                                                ) [FactorCharConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       cnst
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               2
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorIncrement(
                                    DesignatorSimple(
                                     character
                                    ) [DesignatorSimple]
                                  ) [DesignatorIncrement]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorDecrement(
                                  DesignatorSimple(
                                   boolean
                                  ) [DesignatorSimple]
                                ) [DesignatorDecrement]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorMethodCall0(
                                DesignatorSimple(
                                 fun
                                ) [DesignatorSimple]
                                ActParsMulti(
                                  ActParsSingle(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           1
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [ActParsSingle]
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         2
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [ActParsMulti]
                              ) [DesignatorMethodCall0]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               character
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprNeg(
                                    TermSingle(
                                      FactorCharConst(
                                       a
                                      ) [FactorCharConst]
                                    ) [TermSingle]
                                  ) [ExprNeg]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             niz
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNewArray(
                                      Type(
                                       int
                                      ) [Type]
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorCharConst(
                                             a
                                            ) [FactorCharConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [FactorNewArray]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDoWhile(
                        DoHead(
                        ) [DoHead]
                        Stmt(
                          StatementMulti(
                            StatementMulti(
                              StatementSingle(
                                StmtDesign(
                                  DesignatorIncrement(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                  ) [DesignatorIncrement]
                                ) [StmtDesign]
                              ) [StatementSingle]
                              StmtBreak(
                              ) [StmtBreak]
                            ) [StatementMulti]
                            StmtContinue(
                            ) [StmtContinue]
                          ) [StatementMulti]
                        ) [Stmt]
                        CondOne(
                          CondTermOne(
                            CondFactTwo(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       num
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                              RelopLT(
                              ) [RelopLT]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     10
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [CondFactTwo]
                          ) [CondTermOne]
                        ) [CondOne]
                      ) [StmtDoWhile]
                    ) [StatementMulti]
                    StmtBreak(
                    ) [StmtBreak]
                  ) [StatementMulti]
                  StmtContinue(
                  ) [StmtContinue]
                ) [StatementMulti]
                StmtIf(
                  StmtIfBody(
                    IfCond(
                      CondOne(
                        CondTermOne(
                          CondFactTwo(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     niz
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                            RelopLT(
                            ) [RelopLT]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     niz1
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactTwo]
                        ) [CondTermOne]
                      ) [CondOne]
                    ) [IfCond]
                    Stmt(
                      StatementSingle(
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     1
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementSingle]
                    ) [Stmt]
                  ) [StmtIfBody]
                ) [StmtIf]
              ) [StatementMulti]
              StmtIf(
                StmtIfBody(
                  IfCond(
                    CondOne(
                      CondTermOne(
                        CondFactOne(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   num
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactOne]
                      ) [CondTermOne]
                    ) [CondOne]
                  ) [IfCond]
                  Stmt(
                    StatementSingle(
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   2
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementSingle]
                  ) [Stmt]
                ) [StmtIfBody]
              ) [StmtIf]
            ) [StatementMulti]
            StmtDoWhile(
              DoHead(
              ) [DoHead]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       num
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
              CondOne(
                CondTermOne(
                  CondFactOne(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [CondFactOne]
                ) [CondTermOne]
              ) [CondOne]
            ) [StmtDoWhile]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               num
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorCharConst(
                       a
                      ) [FactorCharConst]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:02:25,710 - 

================SEMANTICKA OBRADA====================


ERROR 16:02:25,726 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  16:02:25,727 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  16:02:25,727 - Deklarisana konstanta 'cnst' na liniji 3
INFO  16:02:25,727 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 16:02:25,727 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  16:02:25,727 - Deklarisana promenljiva 'b' na liniji 14
ERROR 16:02:25,727 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  16:02:25,727 - Deklarisana promenljiva 'num' na liniji 15
INFO  16:02:25,727 - Deklarisana promenljiva 'character' na liniji 15
INFO  16:02:25,727 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  16:02:25,727 - Deklarisan niz 'niz' na liniji 16
INFO  16:02:25,728 - Deklarisan niz 'niz1' na liniji 16
ERROR 16:02:25,728 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 16:02:25,728 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 16:02:25,728 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 16:02:25,728 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 16:02:25,728 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 16:02:25,728 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 16:02:25,728 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 16:02:25,728 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 16:02:25,728 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 16:02:25,728 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  16:02:25,729 - Pronadjen poziv funkcije 'fun' na liniji 35
ERROR 16:02:25,729 - Semanticka greska - tip mora da bude int na liniji 38
ERROR 16:02:25,729 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 41
ERROR 16:02:25,729 - Semanticka greska - break iskaz van petlje
ERROR 16:02:25,729 - Semanticka greska - continue iskaz van petlje
ERROR 16:02:25,730 - Semanticka greska - relacioni izraz sa referentnim tipovima moze koristiti samo '==' i '!=' operatore na liniji 52
ERROR 16:02:25,730 - Semanticka greska - if uslov nije tipa bool na liniji 56
ERROR 16:02:25,730 - Semanticka greska - while uslov nije tipa bool na liniji 60
ERROR 16:02:25,731 - Semanticka greska - clanovi izraza nisu tipa int na liniji 64
ERROR 16:02:25,731 - Semanticka greska - clanovi izraza nisu kompatibilni na liniji 64
INFO  16:02:25,732 - ===================================
INFO  16:02:40,590 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:02:40,651 - #2 program
INFO  16:02:40,651 - #20 MJProgram
INFO  16:02:40,651 - #20 abc
INFO  16:02:40,652 - #20 a
INFO  16:02:40,652 - #40 ;
INFO  16:02:40,652 - #7 const
INFO  16:02:40,653 - #20 int
INFO  16:02:40,653 - #20 cnst
INFO  16:02:40,653 - #37 =
INFO  16:02:40,653 - #21 1
INFO  16:02:40,653 - #40 ;
INFO  16:02:40,654 - #47 {
INFO  16:02:40,654 - #20 int
INFO  16:02:40,654 - #20 fun
INFO  16:02:40,654 - #43 (
INFO  16:02:40,654 - #20 int
INFO  16:02:40,654 - #20 x
INFO  16:02:40,654 - #44 )
INFO  16:02:40,655 - #47 {
INFO  16:02:40,655 - #48 }
INFO  16:02:40,655 - #16 void
INFO  16:02:40,655 - #20 main
INFO  16:02:40,655 - #43 (
INFO  16:02:40,656 - #44 )
INFO  16:02:40,656 - #20 int
INFO  16:02:40,656 - #20 b
INFO  16:02:40,656 - #40 ;
INFO  16:02:40,656 - #20 char
INFO  16:02:40,656 - #20 b
INFO  16:02:40,656 - #40 ;
INFO  16:02:40,657 - #20 int
INFO  16:02:40,657 - #20 num
INFO  16:02:40,657 - #40 ;
INFO  16:02:40,657 - #20 char
INFO  16:02:40,658 - #20 character
INFO  16:02:40,658 - #40 ;
INFO  16:02:40,658 - #20 bool
INFO  16:02:40,658 - #20 boolean
INFO  16:02:40,658 - #40 ;
INFO  16:02:40,658 - #20 int
INFO  16:02:40,658 - #20 niz
INFO  16:02:40,658 - #45 [
INFO  16:02:40,659 - #46 ]
INFO  16:02:40,659 - #41 ,
INFO  16:02:40,659 - #20 niz1
INFO  16:02:40,659 - #45 [
INFO  16:02:40,659 - #46 ]
INFO  16:02:40,659 - #40 ;
INFO  16:02:40,659 - #47 {
INFO  16:02:40,659 - #20 a
INFO  16:02:40,660 - #37 =
INFO  16:02:40,660 - #21 1
INFO  16:02:40,660 - #40 ;
INFO  16:02:40,660 - #20 num
INFO  16:02:40,661 - #37 =
INFO  16:02:40,661 - #22 a
INFO  16:02:40,661 - #40 ;
INFO  16:02:40,661 - #20 num
INFO  16:02:40,661 - #37 =
INFO  16:02:40,661 - #23 true
INFO  16:02:40,661 - #40 ;
INFO  16:02:40,661 - #20 character
INFO  16:02:40,661 - #37 =
INFO  16:02:40,662 - #21 1
INFO  16:02:40,662 - #40 ;
INFO  16:02:40,662 - #20 character
INFO  16:02:40,662 - #37 =
INFO  16:02:40,662 - #23 true
INFO  16:02:40,662 - #40 ;
INFO  16:02:40,662 - #20 boolean
INFO  16:02:40,663 - #37 =
INFO  16:02:40,663 - #21 1
INFO  16:02:40,663 - #40 ;
INFO  16:02:40,663 - #20 boolean
INFO  16:02:40,663 - #37 =
INFO  16:02:40,663 - #22 a
INFO  16:02:40,663 - #40 ;
INFO  16:02:40,663 - #20 cnst
INFO  16:02:40,664 - #37 =
INFO  16:02:40,664 - #21 2
INFO  16:02:40,664 - #40 ;
INFO  16:02:40,664 - #20 character
INFO  16:02:40,664 - #38 ++
INFO  16:02:40,664 - #40 ;
INFO  16:02:40,664 - #20 boolean
INFO  16:02:40,664 - #39 --
INFO  16:02:40,665 - #40 ;
INFO  16:02:40,665 - #20 fun
INFO  16:02:40,665 - #43 (
INFO  16:02:40,665 - #21 1
INFO  16:02:40,666 - #41 ,
INFO  16:02:40,667 - #21 2
INFO  16:02:40,667 - #44 )
INFO  16:02:40,667 - #40 ;
INFO  16:02:40,667 - #20 character
INFO  16:02:40,667 - #37 =
INFO  16:02:40,667 - #25 -
INFO  16:02:40,667 - #22 a
INFO  16:02:40,667 - #40 ;
INFO  16:02:40,668 - #20 niz
INFO  16:02:40,668 - #37 =
INFO  16:02:40,668 - #12 new
INFO  16:02:40,668 - #20 int
INFO  16:02:40,668 - #45 [
INFO  16:02:40,668 - #22 a
INFO  16:02:40,668 - #46 ]
INFO  16:02:40,668 - #40 ;
INFO  16:02:40,668 - #10 do
INFO  16:02:40,669 - #47 {
INFO  16:02:40,670 - #20 num
INFO  16:02:40,670 - #38 ++
INFO  16:02:40,670 - #40 ;
INFO  16:02:40,670 - #3 break
INFO  16:02:40,670 - #40 ;
INFO  16:02:40,670 - #18 continue
INFO  16:02:40,670 - #40 ;
INFO  16:02:40,670 - #48 }
INFO  16:02:40,671 - #11 while
INFO  16:02:40,671 - #43 (
INFO  16:02:40,671 - #20 num
INFO  16:02:40,671 - #33 <
INFO  16:02:40,671 - #21 10
INFO  16:02:40,672 - #44 )
INFO  16:02:40,672 - #40 ;
INFO  16:02:40,673 - #3 break
INFO  16:02:40,673 - #40 ;
INFO  16:02:40,673 - #18 continue
INFO  16:02:40,673 - #40 ;
INFO  16:02:40,673 - #8 if
INFO  16:02:40,673 - #43 (
INFO  16:02:40,673 - #20 niz
INFO  16:02:40,673 - #33 <
INFO  16:02:40,674 - #20 niz1
INFO  16:02:40,674 - #44 )
INFO  16:02:40,674 - #47 {
INFO  16:02:40,674 - #20 num
INFO  16:02:40,674 - #37 =
INFO  16:02:40,674 - #21 1
INFO  16:02:40,674 - #40 ;
INFO  16:02:40,674 - #48 }
INFO  16:02:40,674 - #8 if
INFO  16:02:40,675 - #43 (
INFO  16:02:40,675 - #20 num
INFO  16:02:40,675 - #44 )
INFO  16:02:40,675 - #47 {
INFO  16:02:40,675 - #20 num
INFO  16:02:40,675 - #37 =
INFO  16:02:40,675 - #21 2
INFO  16:02:40,675 - #40 ;
INFO  16:02:40,675 - #48 }
INFO  16:02:40,675 - #10 do
INFO  16:02:40,675 - #47 {
INFO  16:02:40,675 - #20 num
INFO  16:02:40,675 - #38 ++
INFO  16:02:40,675 - #40 ;
INFO  16:02:40,676 - #48 }
INFO  16:02:40,676 - #11 while
INFO  16:02:40,676 - #43 (
INFO  16:02:40,676 - #20 num
INFO  16:02:40,676 - #44 )
INFO  16:02:40,676 - #40 ;
INFO  16:02:40,676 - #20 num
INFO  16:02:40,676 - #37 =
INFO  16:02:40,676 - #20 character
INFO  16:02:40,676 - #24 +
INFO  16:02:40,676 - #22 a
INFO  16:02:40,677 - #40 ;
INFO  16:02:40,677 - #48 }
INFO  16:02:40,677 - #48 }
INFO  16:02:40,678 - 

================SINTAKSNO STABLO====================


INFO  16:02:40,683 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
              VarArray(
               niz1
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementSingle(
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     a
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             1
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementSingle]
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorSimple(
                                                   num
                                                  ) [DesignatorSimple]
                                                  AssignmentExpr(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorCharConst(
                                                           a
                                                          ) [FactorCharConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementMulti]
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 num
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorBoolConst(
                                                         true
                                                        ) [FactorBoolConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               character
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       1
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             character
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorBoolConst(
                                                     true
                                                    ) [FactorBoolConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorSimple(
                                           boolean
                                          ) [DesignatorSimple]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   1
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         boolean
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorCharConst(
                                                 a
                                                ) [FactorCharConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       cnst
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               2
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorIncrement(
                                    DesignatorSimple(
                                     character
                                    ) [DesignatorSimple]
                                  ) [DesignatorIncrement]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorDecrement(
                                  DesignatorSimple(
                                   boolean
                                  ) [DesignatorSimple]
                                ) [DesignatorDecrement]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorMethodCall0(
                                DesignatorSimple(
                                 fun
                                ) [DesignatorSimple]
                                ActParsMulti(
                                  ActParsSingle(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           1
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [ActParsSingle]
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         2
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [ActParsMulti]
                              ) [DesignatorMethodCall0]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               character
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprNeg(
                                    TermSingle(
                                      FactorCharConst(
                                       a
                                      ) [FactorCharConst]
                                    ) [TermSingle]
                                  ) [ExprNeg]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             niz
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNewArray(
                                      Type(
                                       int
                                      ) [Type]
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorCharConst(
                                             a
                                            ) [FactorCharConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [FactorNewArray]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDoWhile(
                        DoHead(
                        ) [DoHead]
                        Stmt(
                          StatementMulti(
                            StatementMulti(
                              StatementSingle(
                                StmtDesign(
                                  DesignatorIncrement(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                  ) [DesignatorIncrement]
                                ) [StmtDesign]
                              ) [StatementSingle]
                              StmtBreak(
                              ) [StmtBreak]
                            ) [StatementMulti]
                            StmtContinue(
                            ) [StmtContinue]
                          ) [StatementMulti]
                        ) [Stmt]
                        CondOne(
                          CondTermOne(
                            CondFactTwo(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       num
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                              RelopLT(
                              ) [RelopLT]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     10
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [CondFactTwo]
                          ) [CondTermOne]
                        ) [CondOne]
                      ) [StmtDoWhile]
                    ) [StatementMulti]
                    StmtBreak(
                    ) [StmtBreak]
                  ) [StatementMulti]
                  StmtContinue(
                  ) [StmtContinue]
                ) [StatementMulti]
                StmtIf(
                  StmtIfBody(
                    IfCond(
                      CondOne(
                        CondTermOne(
                          CondFactTwo(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     niz
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                            RelopLT(
                            ) [RelopLT]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     niz1
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactTwo]
                        ) [CondTermOne]
                      ) [CondOne]
                    ) [IfCond]
                    Stmt(
                      StatementSingle(
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     1
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementSingle]
                    ) [Stmt]
                  ) [StmtIfBody]
                ) [StmtIf]
              ) [StatementMulti]
              StmtIf(
                StmtIfBody(
                  IfCond(
                    CondOne(
                      CondTermOne(
                        CondFactOne(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   num
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactOne]
                      ) [CondTermOne]
                    ) [CondOne]
                  ) [IfCond]
                  Stmt(
                    StatementSingle(
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   2
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementSingle]
                  ) [Stmt]
                ) [StmtIfBody]
              ) [StmtIf]
            ) [StatementMulti]
            StmtDoWhile(
              DoHead(
              ) [DoHead]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       num
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
              CondOne(
                CondTermOne(
                  CondFactOne(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [CondFactOne]
                ) [CondTermOne]
              ) [CondOne]
            ) [StmtDoWhile]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               num
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           character
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorCharConst(
                       a
                      ) [FactorCharConst]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:02:40,684 - 

================SEMANTICKA OBRADA====================


ERROR 16:02:40,695 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  16:02:40,695 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  16:02:40,697 - Deklarisana konstanta 'cnst' na liniji 3
INFO  16:02:40,697 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 16:02:40,697 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  16:02:40,697 - Deklarisana promenljiva 'b' na liniji 14
ERROR 16:02:40,697 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  16:02:40,697 - Deklarisana promenljiva 'num' na liniji 15
INFO  16:02:40,697 - Deklarisana promenljiva 'character' na liniji 15
INFO  16:02:40,697 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  16:02:40,697 - Deklarisan niz 'niz' na liniji 16
INFO  16:02:40,697 - Deklarisan niz 'niz1' na liniji 16
ERROR 16:02:40,697 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 16:02:40,697 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 16:02:40,697 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 16:02:40,697 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 16:02:40,697 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 16:02:40,697 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 16:02:40,697 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 16:02:40,697 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 16:02:40,697 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 16:02:40,697 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  16:02:40,697 - Pronadjen poziv funkcije 'fun' na liniji 35
ERROR 16:02:40,697 - Semanticka greska - tip mora da bude int na liniji 38
ERROR 16:02:40,697 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 41
ERROR 16:02:40,698 - Semanticka greska - break iskaz van petlje
ERROR 16:02:40,698 - Semanticka greska - continue iskaz van petlje
ERROR 16:02:40,699 - Semanticka greska - relacioni izraz sa referentnim tipovima moze koristiti samo '==' i '!=' operatore na liniji 52
ERROR 16:02:40,699 - Semanticka greska - if uslov nije tipa bool na liniji 56
ERROR 16:02:40,699 - Semanticka greska - while uslov nije tipa bool na liniji 60
ERROR 16:02:40,699 - Semanticka greska - clanovi izraza nisu tipa int na liniji 64
ERROR 16:02:40,699 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 64
INFO  16:02:40,700 - ===================================
INFO  16:02:48,983 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:02:49,029 - #2 program
INFO  16:02:49,029 - #20 MJProgram
INFO  16:02:49,029 - #20 abc
INFO  16:02:49,029 - #20 a
INFO  16:02:49,030 - #40 ;
INFO  16:02:49,030 - #7 const
INFO  16:02:49,030 - #20 int
INFO  16:02:49,030 - #20 cnst
INFO  16:02:49,030 - #37 =
INFO  16:02:49,030 - #21 1
INFO  16:02:49,030 - #40 ;
INFO  16:02:49,031 - #47 {
INFO  16:02:49,031 - #20 int
INFO  16:02:49,031 - #20 fun
INFO  16:02:49,031 - #43 (
INFO  16:02:49,031 - #20 int
INFO  16:02:49,031 - #20 x
INFO  16:02:49,032 - #44 )
INFO  16:02:49,032 - #47 {
INFO  16:02:49,032 - #48 }
INFO  16:02:49,032 - #16 void
INFO  16:02:49,032 - #20 main
INFO  16:02:49,032 - #43 (
INFO  16:02:49,032 - #44 )
INFO  16:02:49,032 - #20 int
INFO  16:02:49,032 - #20 b
INFO  16:02:49,032 - #40 ;
INFO  16:02:49,032 - #20 char
INFO  16:02:49,033 - #20 b
INFO  16:02:49,033 - #40 ;
INFO  16:02:49,033 - #20 int
INFO  16:02:49,033 - #20 num
INFO  16:02:49,033 - #40 ;
INFO  16:02:49,033 - #20 char
INFO  16:02:49,033 - #20 character
INFO  16:02:49,033 - #40 ;
INFO  16:02:49,033 - #20 bool
INFO  16:02:49,033 - #20 boolean
INFO  16:02:49,033 - #40 ;
INFO  16:02:49,034 - #20 int
INFO  16:02:49,034 - #20 niz
INFO  16:02:49,034 - #45 [
INFO  16:02:49,034 - #46 ]
INFO  16:02:49,034 - #41 ,
INFO  16:02:49,035 - #20 niz1
INFO  16:02:49,035 - #45 [
INFO  16:02:49,035 - #46 ]
INFO  16:02:49,035 - #40 ;
INFO  16:02:49,035 - #47 {
INFO  16:02:49,035 - #20 a
INFO  16:02:49,036 - #37 =
INFO  16:02:49,036 - #21 1
INFO  16:02:49,036 - #40 ;
INFO  16:02:49,037 - #20 num
INFO  16:02:49,037 - #37 =
INFO  16:02:49,037 - #22 a
INFO  16:02:49,037 - #40 ;
INFO  16:02:49,038 - #20 num
INFO  16:02:49,038 - #37 =
INFO  16:02:49,038 - #23 true
INFO  16:02:49,038 - #40 ;
INFO  16:02:49,038 - #20 character
INFO  16:02:49,038 - #37 =
INFO  16:02:49,038 - #21 1
INFO  16:02:49,039 - #40 ;
INFO  16:02:49,039 - #20 character
INFO  16:02:49,039 - #37 =
INFO  16:02:49,039 - #23 true
INFO  16:02:49,040 - #40 ;
INFO  16:02:49,040 - #20 boolean
INFO  16:02:49,040 - #37 =
INFO  16:02:49,040 - #21 1
INFO  16:02:49,040 - #40 ;
INFO  16:02:49,040 - #20 boolean
INFO  16:02:49,040 - #37 =
INFO  16:02:49,040 - #22 a
INFO  16:02:49,040 - #40 ;
INFO  16:02:49,040 - #20 cnst
INFO  16:02:49,041 - #37 =
INFO  16:02:49,041 - #21 2
INFO  16:02:49,041 - #40 ;
INFO  16:02:49,041 - #20 character
INFO  16:02:49,041 - #38 ++
INFO  16:02:49,041 - #40 ;
INFO  16:02:49,041 - #20 boolean
INFO  16:02:49,041 - #39 --
INFO  16:02:49,044 - #40 ;
INFO  16:02:49,044 - #20 fun
INFO  16:02:49,044 - #43 (
INFO  16:02:49,045 - #21 1
INFO  16:02:49,045 - #41 ,
INFO  16:02:49,045 - #21 2
INFO  16:02:49,045 - #44 )
INFO  16:02:49,046 - #40 ;
INFO  16:02:49,046 - #20 character
INFO  16:02:49,046 - #37 =
INFO  16:02:49,046 - #25 -
INFO  16:02:49,046 - #22 a
INFO  16:02:49,046 - #40 ;
INFO  16:02:49,046 - #20 niz
INFO  16:02:49,046 - #37 =
INFO  16:02:49,046 - #12 new
INFO  16:02:49,046 - #20 int
INFO  16:02:49,046 - #45 [
INFO  16:02:49,047 - #22 a
INFO  16:02:49,047 - #46 ]
INFO  16:02:49,047 - #40 ;
INFO  16:02:49,047 - #10 do
INFO  16:02:49,047 - #47 {
INFO  16:02:49,048 - #20 num
INFO  16:02:49,048 - #38 ++
INFO  16:02:49,048 - #40 ;
INFO  16:02:49,048 - #3 break
INFO  16:02:49,048 - #40 ;
INFO  16:02:49,048 - #18 continue
INFO  16:02:49,048 - #40 ;
INFO  16:02:49,048 - #48 }
INFO  16:02:49,049 - #11 while
INFO  16:02:49,049 - #43 (
INFO  16:02:49,049 - #20 num
INFO  16:02:49,049 - #33 <
INFO  16:02:49,049 - #21 10
INFO  16:02:49,050 - #44 )
INFO  16:02:49,050 - #40 ;
INFO  16:02:49,050 - #3 break
INFO  16:02:49,050 - #40 ;
INFO  16:02:49,050 - #18 continue
INFO  16:02:49,051 - #40 ;
INFO  16:02:49,051 - #8 if
INFO  16:02:49,051 - #43 (
INFO  16:02:49,051 - #20 niz
INFO  16:02:49,051 - #33 <
INFO  16:02:49,051 - #20 niz1
INFO  16:02:49,051 - #44 )
INFO  16:02:49,051 - #47 {
INFO  16:02:49,051 - #20 num
INFO  16:02:49,051 - #37 =
INFO  16:02:49,051 - #21 1
INFO  16:02:49,051 - #40 ;
INFO  16:02:49,051 - #48 }
INFO  16:02:49,051 - #8 if
INFO  16:02:49,052 - #43 (
INFO  16:02:49,052 - #20 num
INFO  16:02:49,052 - #44 )
INFO  16:02:49,052 - #47 {
INFO  16:02:49,052 - #20 num
INFO  16:02:49,052 - #37 =
INFO  16:02:49,052 - #21 2
INFO  16:02:49,052 - #40 ;
INFO  16:02:49,052 - #48 }
INFO  16:02:49,052 - #10 do
INFO  16:02:49,052 - #47 {
INFO  16:02:49,052 - #20 num
INFO  16:02:49,052 - #38 ++
INFO  16:02:49,052 - #40 ;
INFO  16:02:49,052 - #48 }
INFO  16:02:49,052 - #11 while
INFO  16:02:49,052 - #43 (
INFO  16:02:49,052 - #20 num
INFO  16:02:49,053 - #44 )
INFO  16:02:49,053 - #40 ;
INFO  16:02:49,053 - #20 num
INFO  16:02:49,053 - #37 =
INFO  16:02:49,053 - #20 num
INFO  16:02:49,053 - #24 +
INFO  16:02:49,053 - #22 a
INFO  16:02:49,054 - #40 ;
INFO  16:02:49,054 - #48 }
INFO  16:02:49,054 - #48 }
INFO  16:02:49,055 - 

================SINTAKSNO STABLO====================


INFO  16:02:49,058 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
              VarArray(
               niz1
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementSingle(
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     a
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             1
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementSingle]
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorSimple(
                                                   num
                                                  ) [DesignatorSimple]
                                                  AssignmentExpr(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorCharConst(
                                                           a
                                                          ) [FactorCharConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementMulti]
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 num
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorBoolConst(
                                                         true
                                                        ) [FactorBoolConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               character
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       1
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             character
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorBoolConst(
                                                     true
                                                    ) [FactorBoolConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorSimple(
                                           boolean
                                          ) [DesignatorSimple]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   1
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         boolean
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorCharConst(
                                                 a
                                                ) [FactorCharConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       cnst
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               2
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorIncrement(
                                    DesignatorSimple(
                                     character
                                    ) [DesignatorSimple]
                                  ) [DesignatorIncrement]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorDecrement(
                                  DesignatorSimple(
                                   boolean
                                  ) [DesignatorSimple]
                                ) [DesignatorDecrement]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorMethodCall0(
                                DesignatorSimple(
                                 fun
                                ) [DesignatorSimple]
                                ActParsMulti(
                                  ActParsSingle(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           1
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [ActParsSingle]
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         2
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [ActParsMulti]
                              ) [DesignatorMethodCall0]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               character
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprNeg(
                                    TermSingle(
                                      FactorCharConst(
                                       a
                                      ) [FactorCharConst]
                                    ) [TermSingle]
                                  ) [ExprNeg]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             niz
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNewArray(
                                      Type(
                                       int
                                      ) [Type]
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorCharConst(
                                             a
                                            ) [FactorCharConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [FactorNewArray]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDoWhile(
                        DoHead(
                        ) [DoHead]
                        Stmt(
                          StatementMulti(
                            StatementMulti(
                              StatementSingle(
                                StmtDesign(
                                  DesignatorIncrement(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                  ) [DesignatorIncrement]
                                ) [StmtDesign]
                              ) [StatementSingle]
                              StmtBreak(
                              ) [StmtBreak]
                            ) [StatementMulti]
                            StmtContinue(
                            ) [StmtContinue]
                          ) [StatementMulti]
                        ) [Stmt]
                        CondOne(
                          CondTermOne(
                            CondFactTwo(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       num
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                              RelopLT(
                              ) [RelopLT]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     10
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [CondFactTwo]
                          ) [CondTermOne]
                        ) [CondOne]
                      ) [StmtDoWhile]
                    ) [StatementMulti]
                    StmtBreak(
                    ) [StmtBreak]
                  ) [StatementMulti]
                  StmtContinue(
                  ) [StmtContinue]
                ) [StatementMulti]
                StmtIf(
                  StmtIfBody(
                    IfCond(
                      CondOne(
                        CondTermOne(
                          CondFactTwo(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     niz
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                            RelopLT(
                            ) [RelopLT]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     niz1
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactTwo]
                        ) [CondTermOne]
                      ) [CondOne]
                    ) [IfCond]
                    Stmt(
                      StatementSingle(
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     1
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementSingle]
                    ) [Stmt]
                  ) [StmtIfBody]
                ) [StmtIf]
              ) [StatementMulti]
              StmtIf(
                StmtIfBody(
                  IfCond(
                    CondOne(
                      CondTermOne(
                        CondFactOne(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   num
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactOne]
                      ) [CondTermOne]
                    ) [CondOne]
                  ) [IfCond]
                  Stmt(
                    StatementSingle(
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   2
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementSingle]
                  ) [Stmt]
                ) [StmtIfBody]
              ) [StmtIf]
            ) [StatementMulti]
            StmtDoWhile(
              DoHead(
              ) [DoHead]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       num
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
              CondOne(
                CondTermOne(
                  CondFactOne(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [CondFactOne]
                ) [CondTermOne]
              ) [CondOne]
            ) [StmtDoWhile]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               num
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorCharConst(
                       a
                      ) [FactorCharConst]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:02:49,059 - 

================SEMANTICKA OBRADA====================


ERROR 16:02:49,070 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  16:02:49,071 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  16:02:49,071 - Deklarisana konstanta 'cnst' na liniji 3
INFO  16:02:49,071 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 16:02:49,071 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  16:02:49,071 - Deklarisana promenljiva 'b' na liniji 14
ERROR 16:02:49,071 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  16:02:49,071 - Deklarisana promenljiva 'num' na liniji 15
INFO  16:02:49,071 - Deklarisana promenljiva 'character' na liniji 15
INFO  16:02:49,071 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  16:02:49,071 - Deklarisan niz 'niz' na liniji 16
INFO  16:02:49,071 - Deklarisan niz 'niz1' na liniji 16
ERROR 16:02:49,071 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 16:02:49,071 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 16:02:49,071 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 16:02:49,071 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 16:02:49,072 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 16:02:49,072 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 16:02:49,072 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 16:02:49,072 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 16:02:49,072 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 16:02:49,072 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  16:02:49,072 - Pronadjen poziv funkcije 'fun' na liniji 35
ERROR 16:02:49,072 - Semanticka greska - tip mora da bude int na liniji 38
ERROR 16:02:49,072 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 41
ERROR 16:02:49,072 - Semanticka greska - break iskaz van petlje
ERROR 16:02:49,072 - Semanticka greska - continue iskaz van petlje
ERROR 16:02:49,073 - Semanticka greska - relacioni izraz sa referentnim tipovima moze koristiti samo '==' i '!=' operatore na liniji 52
ERROR 16:02:49,073 - Semanticka greska - if uslov nije tipa bool na liniji 56
ERROR 16:02:49,073 - Semanticka greska - while uslov nije tipa bool na liniji 60
ERROR 16:02:49,073 - Semanticka greska - clanovi izraza nisu tipa int na liniji 64
ERROR 16:02:49,074 - Semanticka greska - clanovi izraza nisu kompatibilni na liniji 64
INFO  16:02:49,074 - ===================================
INFO  16:04:29,410 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:04:29,468 - #2 program
INFO  16:04:29,468 - #20 MJProgram
INFO  16:04:29,468 - #20 abc
INFO  16:04:29,469 - #20 a
INFO  16:04:29,469 - #40 ;
INFO  16:04:29,469 - #7 const
INFO  16:04:29,469 - #20 int
INFO  16:04:29,469 - #20 cnst
INFO  16:04:29,469 - #37 =
INFO  16:04:29,470 - #21 1
INFO  16:04:29,470 - #40 ;
INFO  16:04:29,470 - #47 {
INFO  16:04:29,471 - #20 int
INFO  16:04:29,471 - #20 fun
INFO  16:04:29,471 - #43 (
INFO  16:04:29,471 - #20 int
INFO  16:04:29,471 - #20 x
INFO  16:04:29,471 - #44 )
INFO  16:04:29,471 - #47 {
INFO  16:04:29,471 - #48 }
INFO  16:04:29,471 - #16 void
INFO  16:04:29,472 - #20 main
INFO  16:04:29,472 - #43 (
INFO  16:04:29,472 - #44 )
INFO  16:04:29,472 - #20 int
INFO  16:04:29,472 - #20 b
INFO  16:04:29,472 - #40 ;
INFO  16:04:29,472 - #20 char
INFO  16:04:29,473 - #20 b
INFO  16:04:29,473 - #40 ;
INFO  16:04:29,473 - #20 int
INFO  16:04:29,473 - #20 num
INFO  16:04:29,473 - #40 ;
INFO  16:04:29,473 - #20 char
INFO  16:04:29,473 - #20 character
INFO  16:04:29,473 - #40 ;
INFO  16:04:29,474 - #20 bool
INFO  16:04:29,474 - #20 boolean
INFO  16:04:29,474 - #40 ;
INFO  16:04:29,474 - #20 int
INFO  16:04:29,474 - #20 niz
INFO  16:04:29,474 - #45 [
INFO  16:04:29,474 - #46 ]
INFO  16:04:29,474 - #41 ,
INFO  16:04:29,474 - #20 niz1
INFO  16:04:29,474 - #45 [
INFO  16:04:29,474 - #46 ]
INFO  16:04:29,475 - #40 ;
INFO  16:04:29,475 - #47 {
INFO  16:04:29,475 - #20 a
INFO  16:04:29,475 - #37 =
INFO  16:04:29,475 - #21 1
INFO  16:04:29,475 - #40 ;
INFO  16:04:29,476 - #20 num
INFO  16:04:29,476 - #37 =
INFO  16:04:29,477 - #22 a
INFO  16:04:29,477 - #40 ;
INFO  16:04:29,477 - #20 num
INFO  16:04:29,477 - #37 =
INFO  16:04:29,477 - #23 true
INFO  16:04:29,477 - #40 ;
INFO  16:04:29,477 - #20 character
INFO  16:04:29,477 - #37 =
INFO  16:04:29,477 - #21 1
INFO  16:04:29,477 - #40 ;
INFO  16:04:29,478 - #20 character
INFO  16:04:29,478 - #37 =
INFO  16:04:29,478 - #23 true
INFO  16:04:29,478 - #40 ;
INFO  16:04:29,478 - #20 boolean
INFO  16:04:29,478 - #37 =
INFO  16:04:29,478 - #21 1
INFO  16:04:29,478 - #40 ;
INFO  16:04:29,478 - #20 boolean
INFO  16:04:29,478 - #37 =
INFO  16:04:29,479 - #22 a
INFO  16:04:29,479 - #40 ;
INFO  16:04:29,479 - #20 cnst
INFO  16:04:29,479 - #37 =
INFO  16:04:29,479 - #21 2
INFO  16:04:29,479 - #40 ;
INFO  16:04:29,479 - #20 character
INFO  16:04:29,479 - #38 ++
INFO  16:04:29,480 - #40 ;
INFO  16:04:29,480 - #20 boolean
INFO  16:04:29,480 - #39 --
INFO  16:04:29,480 - #40 ;
INFO  16:04:29,481 - #20 fun
INFO  16:04:29,481 - #43 (
INFO  16:04:29,481 - #21 1
INFO  16:04:29,481 - #41 ,
INFO  16:04:29,482 - #21 2
INFO  16:04:29,482 - #44 )
INFO  16:04:29,483 - #40 ;
INFO  16:04:29,483 - #20 character
INFO  16:04:29,483 - #37 =
INFO  16:04:29,483 - #25 -
INFO  16:04:29,483 - #22 a
INFO  16:04:29,483 - #40 ;
INFO  16:04:29,483 - #20 niz
INFO  16:04:29,484 - #37 =
INFO  16:04:29,484 - #12 new
INFO  16:04:29,484 - #20 int
INFO  16:04:29,484 - #45 [
INFO  16:04:29,484 - #22 a
INFO  16:04:29,484 - #46 ]
INFO  16:04:29,484 - #40 ;
INFO  16:04:29,484 - #10 do
INFO  16:04:29,484 - #47 {
INFO  16:04:29,485 - #20 num
INFO  16:04:29,485 - #38 ++
INFO  16:04:29,485 - #40 ;
INFO  16:04:29,485 - #3 break
INFO  16:04:29,486 - #40 ;
INFO  16:04:29,486 - #18 continue
INFO  16:04:29,486 - #40 ;
INFO  16:04:29,486 - #48 }
INFO  16:04:29,487 - #11 while
INFO  16:04:29,487 - #43 (
INFO  16:04:29,487 - #20 num
INFO  16:04:29,487 - #33 <
INFO  16:04:29,487 - #21 10
INFO  16:04:29,488 - #44 )
INFO  16:04:29,488 - #40 ;
INFO  16:04:29,488 - #3 break
INFO  16:04:29,489 - #40 ;
INFO  16:04:29,489 - #18 continue
INFO  16:04:29,489 - #40 ;
INFO  16:04:29,489 - #8 if
INFO  16:04:29,489 - #43 (
INFO  16:04:29,489 - #20 niz
INFO  16:04:29,489 - #33 <
INFO  16:04:29,489 - #20 niz1
INFO  16:04:29,490 - #44 )
INFO  16:04:29,490 - #47 {
INFO  16:04:29,490 - #20 num
INFO  16:04:29,490 - #37 =
INFO  16:04:29,490 - #21 1
INFO  16:04:29,490 - #40 ;
INFO  16:04:29,490 - #48 }
INFO  16:04:29,490 - #8 if
INFO  16:04:29,490 - #43 (
INFO  16:04:29,490 - #20 num
INFO  16:04:29,490 - #44 )
INFO  16:04:29,491 - #47 {
INFO  16:04:29,491 - #20 num
INFO  16:04:29,491 - #37 =
INFO  16:04:29,491 - #21 2
INFO  16:04:29,491 - #40 ;
INFO  16:04:29,491 - #48 }
INFO  16:04:29,494 - #10 do
INFO  16:04:29,494 - #47 {
INFO  16:04:29,494 - #20 num
INFO  16:04:29,494 - #38 ++
INFO  16:04:29,494 - #40 ;
INFO  16:04:29,494 - #48 }
INFO  16:04:29,494 - #11 while
INFO  16:04:29,495 - #43 (
INFO  16:04:29,495 - #20 num
INFO  16:04:29,495 - #44 )
INFO  16:04:29,495 - #40 ;
INFO  16:04:29,495 - #20 num
INFO  16:04:29,495 - #37 =
INFO  16:04:29,495 - #20 num
INFO  16:04:29,495 - #24 +
INFO  16:04:29,495 - #22 a
INFO  16:04:29,496 - #40 ;
INFO  16:04:29,496 - #20 num
INFO  16:04:29,496 - #37 =
INFO  16:04:29,496 - #20 num
INFO  16:04:29,496 - #26 *
INFO  16:04:29,496 - #22 a
INFO  16:04:29,497 - #40 ;
INFO  16:04:29,498 - #48 }
INFO  16:04:29,498 - #48 }
INFO  16:04:29,499 - 

================SINTAKSNO STABLO====================


INFO  16:04:29,503 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
              VarArray(
               niz1
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementSingle(
                                                  StmtDesign(
                                                    DesignatorAssignment(
                                                      DesignatorSimple(
                                                       a
                                                      ) [DesignatorSimple]
                                                      AssignmentExpr(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               1
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [AssignmentExpr]
                                                    ) [DesignatorAssignment]
                                                  ) [StmtDesign]
                                                ) [StatementSingle]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     num
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorCharConst(
                                                             a
                                                            ) [FactorCharConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorSimple(
                                                   num
                                                  ) [DesignatorSimple]
                                                  AssignmentExpr(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorBoolConst(
                                                           true
                                                          ) [FactorBoolConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementMulti]
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 character
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               character
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorBoolConst(
                                                       true
                                                      ) [FactorBoolConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             boolean
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     1
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorSimple(
                                           boolean
                                          ) [DesignatorSimple]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorCharConst(
                                                   a
                                                  ) [FactorCharConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         cnst
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 2
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorIncrement(
                                      DesignatorSimple(
                                       character
                                      ) [DesignatorSimple]
                                    ) [DesignatorIncrement]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorDecrement(
                                    DesignatorSimple(
                                     boolean
                                    ) [DesignatorSimple]
                                  ) [DesignatorDecrement]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorMethodCall0(
                                  DesignatorSimple(
                                   fun
                                  ) [DesignatorSimple]
                                  ActParsMulti(
                                    ActParsSingle(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             1
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [ActParsSingle]
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           2
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [ActParsMulti]
                                ) [DesignatorMethodCall0]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 character
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprNeg(
                                      TermSingle(
                                        FactorCharConst(
                                         a
                                        ) [FactorCharConst]
                                      ) [TermSingle]
                                    ) [ExprNeg]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               niz
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNewArray(
                                        Type(
                                         int
                                        ) [Type]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorCharConst(
                                               a
                                              ) [FactorCharConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [FactorNewArray]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDoWhile(
                          DoHead(
                          ) [DoHead]
                          Stmt(
                            StatementMulti(
                              StatementMulti(
                                StatementSingle(
                                  StmtDesign(
                                    DesignatorIncrement(
                                      DesignatorSimple(
                                       num
                                      ) [DesignatorSimple]
                                    ) [DesignatorIncrement]
                                  ) [StmtDesign]
                                ) [StatementSingle]
                                StmtBreak(
                                ) [StmtBreak]
                              ) [StatementMulti]
                              StmtContinue(
                              ) [StmtContinue]
                            ) [StatementMulti]
                          ) [Stmt]
                          CondOne(
                            CondTermOne(
                              CondFactTwo(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         num
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                                RelopLT(
                                ) [RelopLT]
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       10
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [CondFactTwo]
                            ) [CondTermOne]
                          ) [CondOne]
                        ) [StmtDoWhile]
                      ) [StatementMulti]
                      StmtBreak(
                      ) [StmtBreak]
                    ) [StatementMulti]
                    StmtContinue(
                    ) [StmtContinue]
                  ) [StatementMulti]
                  StmtIf(
                    StmtIfBody(
                      IfCond(
                        CondOne(
                          CondTermOne(
                            CondFactTwo(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       niz
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                              RelopLT(
                              ) [RelopLT]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       niz1
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [CondFactTwo]
                          ) [CondTermOne]
                        ) [CondOne]
                      ) [IfCond]
                      Stmt(
                        StatementSingle(
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementSingle]
                      ) [Stmt]
                    ) [StmtIfBody]
                  ) [StmtIf]
                ) [StatementMulti]
                StmtIf(
                  StmtIfBody(
                    IfCond(
                      CondOne(
                        CondTermOne(
                          CondFactOne(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactOne]
                        ) [CondTermOne]
                      ) [CondOne]
                    ) [IfCond]
                    Stmt(
                      StatementSingle(
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementSingle]
                    ) [Stmt]
                  ) [StmtIfBody]
                ) [StmtIf]
              ) [StatementMulti]
              StmtDoWhile(
                DoHead(
                ) [DoHead]
                Stmt(
                  StatementSingle(
                    StmtDesign(
                      DesignatorIncrement(
                        DesignatorSimple(
                         num
                        ) [DesignatorSimple]
                      ) [DesignatorIncrement]
                    ) [StmtDesign]
                  ) [StatementSingle]
                ) [Stmt]
                CondOne(
                  CondTermOne(
                    CondFactOne(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactOne]
                  ) [CondTermOne]
                ) [CondOne]
              ) [StmtDoWhile]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 num
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprAddop(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                      AddopPlus(
                      ) [AddopPlus]
                      TermSingle(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermSingle]
                    ) [ExprAddop]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               num
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermMulop(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                      MulopMul(
                      ) [MulopMul]
                      FactorCharConst(
                       a
                      ) [FactorCharConst]
                    ) [TermMulop]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:04:29,504 - 

================SEMANTICKA OBRADA====================


ERROR 16:04:29,517 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  16:04:29,518 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  16:04:29,518 - Deklarisana konstanta 'cnst' na liniji 3
INFO  16:04:29,518 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 16:04:29,518 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  16:04:29,519 - Deklarisana promenljiva 'b' na liniji 14
ERROR 16:04:29,519 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  16:04:29,519 - Deklarisana promenljiva 'num' na liniji 15
INFO  16:04:29,519 - Deklarisana promenljiva 'character' na liniji 15
INFO  16:04:29,519 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  16:04:29,519 - Deklarisan niz 'niz' na liniji 16
INFO  16:04:29,519 - Deklarisan niz 'niz1' na liniji 16
ERROR 16:04:29,520 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 16:04:29,520 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 16:04:29,520 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 16:04:29,520 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 16:04:29,520 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 16:04:29,520 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 16:04:29,520 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 16:04:29,520 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 16:04:29,520 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 16:04:29,520 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  16:04:29,521 - Pronadjen poziv funkcije 'fun' na liniji 35
ERROR 16:04:29,521 - Semanticka greska - tip mora da bude int na liniji 38
ERROR 16:04:29,521 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 41
ERROR 16:04:29,521 - Semanticka greska - break iskaz van petlje
ERROR 16:04:29,521 - Semanticka greska - continue iskaz van petlje
ERROR 16:04:29,522 - Semanticka greska - relacioni izraz sa referentnim tipovima moze koristiti samo '==' i '!=' operatore na liniji 52
ERROR 16:04:29,522 - Semanticka greska - if uslov nije tipa bool na liniji 56
ERROR 16:04:29,522 - Semanticka greska - while uslov nije tipa bool na liniji 60
ERROR 16:04:29,522 - Semanticka greska - clanovi izraza nisu tipa int na liniji 64
ERROR 16:04:29,522 - Semanticka greska - clanovi izraza nisu kompatibilni na liniji 64
ERROR 16:04:29,523 - Semanticka greska - clanovi izraza nisu tipa int na liniji 65
INFO  16:04:29,524 - ===================================
INFO  16:06:47,885 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:06:47,932 - #2 program
INFO  16:06:47,932 - #20 MJProgram
INFO  16:06:47,932 - #20 abc
INFO  16:06:47,933 - #20 a
INFO  16:06:47,933 - #40 ;
INFO  16:06:47,933 - #7 const
INFO  16:06:47,934 - #20 int
INFO  16:06:47,934 - #20 cnst
INFO  16:06:47,934 - #37 =
INFO  16:06:47,934 - #21 1
INFO  16:06:47,934 - #40 ;
INFO  16:06:47,935 - #47 {
INFO  16:06:47,935 - #20 int
INFO  16:06:47,935 - #20 fun
INFO  16:06:47,935 - #43 (
INFO  16:06:47,935 - #20 int
INFO  16:06:47,935 - #20 x
INFO  16:06:47,935 - #44 )
INFO  16:06:47,935 - #47 {
INFO  16:06:47,935 - #48 }
INFO  16:06:47,936 - #16 void
INFO  16:06:47,936 - #20 main
INFO  16:06:47,936 - #43 (
INFO  16:06:47,936 - #44 )
INFO  16:06:47,936 - #20 int
INFO  16:06:47,936 - #20 b
INFO  16:06:47,936 - #40 ;
INFO  16:06:47,936 - #20 char
INFO  16:06:47,937 - #20 b
INFO  16:06:47,937 - #40 ;
INFO  16:06:47,937 - #20 int
INFO  16:06:47,937 - #20 num
INFO  16:06:47,937 - #40 ;
INFO  16:06:47,937 - #20 char
INFO  16:06:47,937 - #20 character
INFO  16:06:47,937 - #40 ;
INFO  16:06:47,937 - #20 bool
INFO  16:06:47,937 - #20 boolean
INFO  16:06:47,937 - #40 ;
INFO  16:06:47,937 - #20 int
INFO  16:06:47,938 - #20 niz
INFO  16:06:47,938 - #45 [
INFO  16:06:47,938 - #46 ]
INFO  16:06:47,938 - #41 ,
INFO  16:06:47,938 - #20 niz1
INFO  16:06:47,938 - #45 [
INFO  16:06:47,938 - #46 ]
INFO  16:06:47,938 - #40 ;
INFO  16:06:47,938 - #47 {
INFO  16:06:47,938 - #20 a
INFO  16:06:47,938 - #37 =
INFO  16:06:47,939 - #21 1
INFO  16:06:47,939 - #40 ;
INFO  16:06:47,939 - #20 num
INFO  16:06:47,940 - #37 =
INFO  16:06:47,940 - #22 a
INFO  16:06:47,940 - #40 ;
INFO  16:06:47,940 - #20 num
INFO  16:06:47,940 - #37 =
INFO  16:06:47,940 - #23 true
INFO  16:06:47,940 - #40 ;
INFO  16:06:47,940 - #20 character
INFO  16:06:47,941 - #37 =
INFO  16:06:47,941 - #21 1
INFO  16:06:47,941 - #40 ;
INFO  16:06:47,941 - #20 character
INFO  16:06:47,941 - #37 =
INFO  16:06:47,941 - #23 true
INFO  16:06:47,942 - #40 ;
INFO  16:06:47,942 - #20 boolean
INFO  16:06:47,942 - #37 =
INFO  16:06:47,942 - #21 1
INFO  16:06:47,942 - #40 ;
INFO  16:06:47,942 - #20 boolean
INFO  16:06:47,942 - #37 =
INFO  16:06:47,942 - #22 a
INFO  16:06:47,942 - #40 ;
INFO  16:06:47,943 - #20 cnst
INFO  16:06:47,943 - #37 =
INFO  16:06:47,943 - #21 2
INFO  16:06:47,943 - #40 ;
INFO  16:06:47,943 - #20 character
INFO  16:06:47,943 - #38 ++
INFO  16:06:47,944 - #40 ;
INFO  16:06:47,944 - #20 boolean
INFO  16:06:47,944 - #39 --
INFO  16:06:47,944 - #40 ;
INFO  16:06:47,944 - #20 fun
INFO  16:06:47,944 - #43 (
INFO  16:06:47,944 - #21 1
INFO  16:06:47,944 - #41 ,
INFO  16:06:47,945 - #21 2
INFO  16:06:47,945 - #44 )
INFO  16:06:47,945 - #40 ;
INFO  16:06:47,945 - #20 character
INFO  16:06:47,945 - #37 =
INFO  16:06:47,945 - #25 -
INFO  16:06:47,945 - #22 a
INFO  16:06:47,945 - #40 ;
INFO  16:06:47,946 - #20 niz
INFO  16:06:47,946 - #37 =
INFO  16:06:47,946 - #12 new
INFO  16:06:47,946 - #20 int
INFO  16:06:47,946 - #45 [
INFO  16:06:47,946 - #22 a
INFO  16:06:47,946 - #46 ]
INFO  16:06:47,946 - #40 ;
INFO  16:06:47,946 - #10 do
INFO  16:06:47,946 - #47 {
INFO  16:06:47,948 - #20 num
INFO  16:06:47,948 - #38 ++
INFO  16:06:47,948 - #40 ;
INFO  16:06:47,948 - #3 break
INFO  16:06:47,948 - #40 ;
INFO  16:06:47,948 - #18 continue
INFO  16:06:47,948 - #40 ;
INFO  16:06:47,949 - #48 }
INFO  16:06:47,949 - #11 while
INFO  16:06:47,949 - #43 (
INFO  16:06:47,949 - #20 num
INFO  16:06:47,949 - #33 <
INFO  16:06:47,949 - #21 10
INFO  16:06:47,950 - #44 )
INFO  16:06:47,950 - #40 ;
INFO  16:06:47,950 - #3 break
INFO  16:06:47,951 - #40 ;
INFO  16:06:47,951 - #18 continue
INFO  16:06:47,951 - #40 ;
INFO  16:06:47,951 - #8 if
INFO  16:06:47,951 - #43 (
INFO  16:06:47,951 - #20 niz
INFO  16:06:47,951 - #33 <
INFO  16:06:47,951 - #20 niz1
INFO  16:06:47,951 - #44 )
INFO  16:06:47,951 - #47 {
INFO  16:06:47,951 - #20 num
INFO  16:06:47,952 - #37 =
INFO  16:06:47,952 - #21 1
INFO  16:06:47,952 - #40 ;
INFO  16:06:47,952 - #48 }
INFO  16:06:47,952 - #8 if
INFO  16:06:47,952 - #43 (
INFO  16:06:47,952 - #20 num
INFO  16:06:47,952 - #44 )
INFO  16:06:47,952 - #47 {
INFO  16:06:47,952 - #20 num
INFO  16:06:47,952 - #37 =
INFO  16:06:47,952 - #21 2
INFO  16:06:47,952 - #40 ;
INFO  16:06:47,952 - #48 }
INFO  16:06:47,955 - #10 do
INFO  16:06:47,956 - #47 {
INFO  16:06:47,956 - #20 niz
INFO  16:06:47,956 - #45 [
INFO  16:06:47,956 - #23 true
INFO  16:06:47,956 - #46 ]
INFO  16:06:47,956 - #37 =
INFO  16:06:47,956 - #21 1
INFO  16:06:47,956 - #40 ;
INFO  16:06:47,956 - #48 }
INFO  16:06:47,956 - #11 while
INFO  16:06:47,956 - #43 (
INFO  16:06:47,956 - #20 num
INFO  16:06:47,956 - #44 )
INFO  16:06:47,956 - #40 ;
INFO  16:06:47,956 - #20 num
INFO  16:06:47,956 - #37 =
INFO  16:06:47,956 - #20 num
INFO  16:06:47,957 - #24 +
INFO  16:06:47,957 - #22 a
INFO  16:06:47,957 - #40 ;
INFO  16:06:47,958 - #20 num
INFO  16:06:47,958 - #37 =
INFO  16:06:47,958 - #20 num
INFO  16:06:47,958 - #26 *
INFO  16:06:47,958 - #22 a
INFO  16:06:47,959 - #40 ;
INFO  16:06:47,959 - #48 }
INFO  16:06:47,959 - #48 }
INFO  16:06:47,960 - 

================SINTAKSNO STABLO====================


INFO  16:06:47,963 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
              VarArray(
               niz1
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementSingle(
                                                  StmtDesign(
                                                    DesignatorAssignment(
                                                      DesignatorSimple(
                                                       a
                                                      ) [DesignatorSimple]
                                                      AssignmentExpr(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               1
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [AssignmentExpr]
                                                    ) [DesignatorAssignment]
                                                  ) [StmtDesign]
                                                ) [StatementSingle]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     num
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorCharConst(
                                                             a
                                                            ) [FactorCharConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorSimple(
                                                   num
                                                  ) [DesignatorSimple]
                                                  AssignmentExpr(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorBoolConst(
                                                           true
                                                          ) [FactorBoolConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementMulti]
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 character
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               character
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorBoolConst(
                                                       true
                                                      ) [FactorBoolConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             boolean
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     1
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorSimple(
                                           boolean
                                          ) [DesignatorSimple]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorCharConst(
                                                   a
                                                  ) [FactorCharConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         cnst
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 2
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorIncrement(
                                      DesignatorSimple(
                                       character
                                      ) [DesignatorSimple]
                                    ) [DesignatorIncrement]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorDecrement(
                                    DesignatorSimple(
                                     boolean
                                    ) [DesignatorSimple]
                                  ) [DesignatorDecrement]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorMethodCall0(
                                  DesignatorSimple(
                                   fun
                                  ) [DesignatorSimple]
                                  ActParsMulti(
                                    ActParsSingle(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             1
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [ActParsSingle]
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           2
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [ActParsMulti]
                                ) [DesignatorMethodCall0]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 character
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprNeg(
                                      TermSingle(
                                        FactorCharConst(
                                         a
                                        ) [FactorCharConst]
                                      ) [TermSingle]
                                    ) [ExprNeg]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               niz
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNewArray(
                                        Type(
                                         int
                                        ) [Type]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorCharConst(
                                               a
                                              ) [FactorCharConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [FactorNewArray]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDoWhile(
                          DoHead(
                          ) [DoHead]
                          Stmt(
                            StatementMulti(
                              StatementMulti(
                                StatementSingle(
                                  StmtDesign(
                                    DesignatorIncrement(
                                      DesignatorSimple(
                                       num
                                      ) [DesignatorSimple]
                                    ) [DesignatorIncrement]
                                  ) [StmtDesign]
                                ) [StatementSingle]
                                StmtBreak(
                                ) [StmtBreak]
                              ) [StatementMulti]
                              StmtContinue(
                              ) [StmtContinue]
                            ) [StatementMulti]
                          ) [Stmt]
                          CondOne(
                            CondTermOne(
                              CondFactTwo(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         num
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                                RelopLT(
                                ) [RelopLT]
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       10
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [CondFactTwo]
                            ) [CondTermOne]
                          ) [CondOne]
                        ) [StmtDoWhile]
                      ) [StatementMulti]
                      StmtBreak(
                      ) [StmtBreak]
                    ) [StatementMulti]
                    StmtContinue(
                    ) [StmtContinue]
                  ) [StatementMulti]
                  StmtIf(
                    StmtIfBody(
                      IfCond(
                        CondOne(
                          CondTermOne(
                            CondFactTwo(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       niz
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                              RelopLT(
                              ) [RelopLT]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       niz1
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [CondFactTwo]
                          ) [CondTermOne]
                        ) [CondOne]
                      ) [IfCond]
                      Stmt(
                        StatementSingle(
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementSingle]
                      ) [Stmt]
                    ) [StmtIfBody]
                  ) [StmtIf]
                ) [StatementMulti]
                StmtIf(
                  StmtIfBody(
                    IfCond(
                      CondOne(
                        CondTermOne(
                          CondFactOne(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactOne]
                        ) [CondTermOne]
                      ) [CondOne]
                    ) [IfCond]
                    Stmt(
                      StatementSingle(
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementSingle]
                    ) [Stmt]
                  ) [StmtIfBody]
                ) [StmtIf]
              ) [StatementMulti]
              StmtDoWhile(
                DoHead(
                ) [DoHead]
                Stmt(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorArray(
                         niz
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 true
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [DesignatorArray]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                ) [Stmt]
                CondOne(
                  CondTermOne(
                    CondFactOne(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactOne]
                  ) [CondTermOne]
                ) [CondOne]
              ) [StmtDoWhile]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 num
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprAddop(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                      AddopPlus(
                      ) [AddopPlus]
                      TermSingle(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermSingle]
                    ) [ExprAddop]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               num
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermMulop(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                      MulopMul(
                      ) [MulopMul]
                      FactorCharConst(
                       a
                      ) [FactorCharConst]
                    ) [TermMulop]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:06:47,965 - 

================SEMANTICKA OBRADA====================


ERROR 16:06:47,974 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  16:06:47,975 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  16:06:47,975 - Deklarisana konstanta 'cnst' na liniji 3
INFO  16:06:47,975 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 16:06:47,975 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  16:06:47,975 - Deklarisana promenljiva 'b' na liniji 14
ERROR 16:06:47,976 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  16:06:47,976 - Deklarisana promenljiva 'num' na liniji 15
INFO  16:06:47,976 - Deklarisana promenljiva 'character' na liniji 15
INFO  16:06:47,976 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  16:06:47,976 - Deklarisan niz 'niz' na liniji 16
INFO  16:06:47,976 - Deklarisan niz 'niz1' na liniji 16
ERROR 16:06:47,976 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 16:06:47,976 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 16:06:47,976 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 16:06:47,976 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 16:06:47,976 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 16:06:47,977 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 16:06:47,977 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 16:06:47,977 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 16:06:47,977 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 16:06:47,977 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  16:06:47,977 - Pronadjen poziv funkcije 'fun' na liniji 35
ERROR 16:06:47,977 - Semanticka greska - tip mora da bude int na liniji 38
ERROR 16:06:47,977 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 41
ERROR 16:06:47,977 - Semanticka greska - break iskaz van petlje
ERROR 16:06:47,977 - Semanticka greska - continue iskaz van petlje
ERROR 16:06:47,978 - Semanticka greska - relacioni izraz sa referentnim tipovima moze koristiti samo '==' i '!=' operatore na liniji 52
ERROR 16:06:47,978 - Semanticka greska - if uslov nije tipa bool na liniji 56
ERROR 16:06:47,978 - Semanticka greska - nevalidan pristup elementu niza na liniji 61
INFO  16:06:47,978 - Pristup elementu niza 'niz' na liniji 61
ERROR 16:06:47,978 - Semanticka greska - while uslov nije tipa bool na liniji 60
ERROR 16:06:47,978 - Semanticka greska - clanovi izraza nisu tipa int na liniji 64
ERROR 16:06:47,978 - Semanticka greska - clanovi izraza nisu kompatibilni na liniji 64
ERROR 16:06:47,978 - Semanticka greska - clanovi izraza nisu tipa int na liniji 65
INFO  16:06:47,979 - ===================================
INFO  20:05:11,802 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:05:11,854 - #2 program
INFO  20:05:11,854 - #20 MJProgram
INFO  20:05:11,854 - #20 abc
INFO  20:05:11,855 - #20 a
INFO  20:05:11,855 - #40 ;
INFO  20:05:11,855 - #7 const
INFO  20:05:11,855 - #20 int
INFO  20:05:11,855 - #20 cnst
INFO  20:05:11,855 - #37 =
INFO  20:05:11,855 - #21 1
INFO  20:05:11,855 - #40 ;
INFO  20:05:11,856 - #47 {
INFO  20:05:11,856 - #20 int
INFO  20:05:11,856 - #20 fun
INFO  20:05:11,856 - #43 (
INFO  20:05:11,856 - #20 int
INFO  20:05:11,857 - #20 x
INFO  20:05:11,857 - #44 )
INFO  20:05:11,857 - #47 {
INFO  20:05:11,857 - #48 }
INFO  20:05:11,857 - #16 void
INFO  20:05:11,857 - #20 main
INFO  20:05:11,857 - #43 (
INFO  20:05:11,857 - #44 )
INFO  20:05:11,857 - #20 int
INFO  20:05:11,857 - #20 b
INFO  20:05:11,858 - #40 ;
INFO  20:05:11,858 - #20 char
INFO  20:05:11,858 - #20 b
INFO  20:05:11,858 - #40 ;
INFO  20:05:11,858 - #20 int
INFO  20:05:11,858 - #20 num
INFO  20:05:11,859 - #40 ;
INFO  20:05:11,859 - #20 char
INFO  20:05:11,859 - #20 character
INFO  20:05:11,859 - #40 ;
INFO  20:05:11,859 - #20 bool
INFO  20:05:11,859 - #20 boolean
INFO  20:05:11,859 - #40 ;
INFO  20:05:11,859 - #20 int
INFO  20:05:11,859 - #20 niz
INFO  20:05:11,859 - #45 [
INFO  20:05:11,859 - #46 ]
INFO  20:05:11,859 - #41 ,
INFO  20:05:11,859 - #20 niz1
INFO  20:05:11,860 - #45 [
INFO  20:05:11,860 - #46 ]
INFO  20:05:11,860 - #40 ;
INFO  20:05:11,860 - #47 {
INFO  20:05:11,860 - #20 a
INFO  20:05:11,860 - #37 =
INFO  20:05:11,861 - #21 1
INFO  20:05:11,861 - #40 ;
INFO  20:05:11,861 - #20 num
INFO  20:05:11,861 - #37 =
INFO  20:05:11,862 - #22 a
INFO  20:05:11,862 - #40 ;
INFO  20:05:11,862 - #20 num
INFO  20:05:11,862 - #37 =
INFO  20:05:11,862 - #23 true
INFO  20:05:11,862 - #40 ;
INFO  20:05:11,862 - #20 character
INFO  20:05:11,862 - #37 =
INFO  20:05:11,862 - #21 1
INFO  20:05:11,862 - #40 ;
INFO  20:05:11,862 - #20 character
INFO  20:05:11,863 - #37 =
INFO  20:05:11,863 - #23 true
INFO  20:05:11,863 - #40 ;
INFO  20:05:11,863 - #20 boolean
INFO  20:05:11,863 - #37 =
INFO  20:05:11,863 - #21 1
INFO  20:05:11,863 - #40 ;
INFO  20:05:11,863 - #20 boolean
INFO  20:05:11,863 - #37 =
INFO  20:05:11,863 - #22 a
INFO  20:05:11,864 - #40 ;
INFO  20:05:11,864 - #20 cnst
INFO  20:05:11,864 - #37 =
INFO  20:05:11,864 - #21 2
INFO  20:05:11,864 - #40 ;
INFO  20:05:11,864 - #20 character
INFO  20:05:11,864 - #38 ++
INFO  20:05:11,864 - #40 ;
INFO  20:05:11,864 - #20 boolean
INFO  20:05:11,865 - #39 --
INFO  20:05:11,865 - #40 ;
INFO  20:05:11,865 - #20 fun
INFO  20:05:11,865 - #43 (
INFO  20:05:11,865 - #21 1
INFO  20:05:11,865 - #41 ,
INFO  20:05:11,865 - #21 2
INFO  20:05:11,866 - #44 )
INFO  20:05:11,866 - #40 ;
INFO  20:05:11,866 - #20 character
INFO  20:05:11,866 - #37 =
INFO  20:05:11,866 - #25 -
INFO  20:05:11,866 - #22 a
INFO  20:05:11,866 - #40 ;
INFO  20:05:11,867 - #20 niz
INFO  20:05:11,867 - #37 =
INFO  20:05:11,867 - #12 new
INFO  20:05:11,867 - #20 int
INFO  20:05:11,867 - #45 [
INFO  20:05:11,868 - #22 a
INFO  20:05:11,868 - #46 ]
INFO  20:05:11,868 - #40 ;
INFO  20:05:11,868 - #10 do
INFO  20:05:11,868 - #47 {
INFO  20:05:11,869 - #20 num
INFO  20:05:11,869 - #38 ++
INFO  20:05:11,869 - #40 ;
INFO  20:05:11,869 - #3 break
INFO  20:05:11,869 - #40 ;
INFO  20:05:11,869 - #18 continue
INFO  20:05:11,870 - #40 ;
INFO  20:05:11,870 - #48 }
INFO  20:05:11,870 - #11 while
INFO  20:05:11,871 - #43 (
INFO  20:05:11,871 - #20 num
INFO  20:05:11,871 - #33 <
INFO  20:05:11,871 - #21 10
INFO  20:05:11,872 - #44 )
INFO  20:05:11,872 - #40 ;
INFO  20:05:11,872 - #3 break
INFO  20:05:11,872 - #40 ;
INFO  20:05:11,872 - #18 continue
INFO  20:05:11,873 - #40 ;
INFO  20:05:11,873 - #8 if
INFO  20:05:11,873 - #43 (
INFO  20:05:11,873 - #20 niz
INFO  20:05:11,873 - #33 <
INFO  20:05:11,873 - #20 niz1
INFO  20:05:11,873 - #44 )
INFO  20:05:11,873 - #47 {
INFO  20:05:11,873 - #20 num
INFO  20:05:11,873 - #37 =
INFO  20:05:11,873 - #21 1
INFO  20:05:11,873 - #40 ;
INFO  20:05:11,873 - #48 }
INFO  20:05:11,873 - #8 if
INFO  20:05:11,874 - #43 (
INFO  20:05:11,874 - #20 num
INFO  20:05:11,874 - #44 )
INFO  20:05:11,874 - #47 {
INFO  20:05:11,874 - #20 num
INFO  20:05:11,874 - #37 =
INFO  20:05:11,874 - #21 2
INFO  20:05:11,874 - #40 ;
INFO  20:05:11,874 - #48 }
INFO  20:05:11,877 - #10 do
INFO  20:05:11,877 - #47 {
INFO  20:05:11,877 - #20 niz
INFO  20:05:11,877 - #45 [
INFO  20:05:11,877 - #23 true
INFO  20:05:11,877 - #46 ]
INFO  20:05:11,877 - #37 =
INFO  20:05:11,877 - #21 1
INFO  20:05:11,877 - #40 ;
INFO  20:05:11,877 - #48 }
INFO  20:05:11,877 - #11 while
INFO  20:05:11,877 - #43 (
INFO  20:05:11,877 - #20 num
INFO  20:05:11,877 - #44 )
INFO  20:05:11,878 - #40 ;
INFO  20:05:11,878 - #20 num
INFO  20:05:11,878 - #37 =
INFO  20:05:11,878 - #20 num
INFO  20:05:11,878 - #24 +
INFO  20:05:11,878 - #22 a
INFO  20:05:11,879 - #40 ;
INFO  20:05:11,879 - #20 num
INFO  20:05:11,879 - #37 =
INFO  20:05:11,879 - #20 num
INFO  20:05:11,879 - #26 *
INFO  20:05:11,879 - #22 a
INFO  20:05:11,880 - #40 ;
INFO  20:05:11,880 - #48 }
INFO  20:05:11,880 - #48 }
INFO  20:05:11,881 - 

================SINTAKSNO STABLO====================


INFO  20:05:11,884 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
              VarArray(
               niz1
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementSingle(
                                                  StmtDesign(
                                                    DesignatorAssignment(
                                                      DesignatorSimple(
                                                       a
                                                      ) [DesignatorSimple]
                                                      AssignmentExpr(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               1
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [AssignmentExpr]
                                                    ) [DesignatorAssignment]
                                                  ) [StmtDesign]
                                                ) [StatementSingle]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     num
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorCharConst(
                                                             a
                                                            ) [FactorCharConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorSimple(
                                                   num
                                                  ) [DesignatorSimple]
                                                  AssignmentExpr(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorBoolConst(
                                                           true
                                                          ) [FactorBoolConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementMulti]
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 character
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               character
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorBoolConst(
                                                       true
                                                      ) [FactorBoolConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             boolean
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     1
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorSimple(
                                           boolean
                                          ) [DesignatorSimple]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorCharConst(
                                                   a
                                                  ) [FactorCharConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         cnst
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 2
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorIncrement(
                                      DesignatorSimple(
                                       character
                                      ) [DesignatorSimple]
                                    ) [DesignatorIncrement]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorDecrement(
                                    DesignatorSimple(
                                     boolean
                                    ) [DesignatorSimple]
                                  ) [DesignatorDecrement]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorMethodCallParams(
                                  DesignatorSimple(
                                   fun
                                  ) [DesignatorSimple]
                                  ActParsMulti(
                                    ActParsSingle(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             1
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [ActParsSingle]
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           2
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [ActParsMulti]
                                ) [DesignatorMethodCallParams]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 character
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprNeg(
                                      TermSingle(
                                        FactorCharConst(
                                         a
                                        ) [FactorCharConst]
                                      ) [TermSingle]
                                    ) [ExprNeg]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               niz
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNewArray(
                                        Type(
                                         int
                                        ) [Type]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorCharConst(
                                               a
                                              ) [FactorCharConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [FactorNewArray]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDoWhile(
                          DoHead(
                          ) [DoHead]
                          Stmt(
                            StatementMulti(
                              StatementMulti(
                                StatementSingle(
                                  StmtDesign(
                                    DesignatorIncrement(
                                      DesignatorSimple(
                                       num
                                      ) [DesignatorSimple]
                                    ) [DesignatorIncrement]
                                  ) [StmtDesign]
                                ) [StatementSingle]
                                StmtBreak(
                                ) [StmtBreak]
                              ) [StatementMulti]
                              StmtContinue(
                              ) [StmtContinue]
                            ) [StatementMulti]
                          ) [Stmt]
                          CondOne(
                            CondTermOne(
                              CondFactTwo(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         num
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                                RelopLT(
                                ) [RelopLT]
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       10
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [CondFactTwo]
                            ) [CondTermOne]
                          ) [CondOne]
                        ) [StmtDoWhile]
                      ) [StatementMulti]
                      StmtBreak(
                      ) [StmtBreak]
                    ) [StatementMulti]
                    StmtContinue(
                    ) [StmtContinue]
                  ) [StatementMulti]
                  StmtIf(
                    StmtIfBody(
                      IfCond(
                        CondOne(
                          CondTermOne(
                            CondFactTwo(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       niz
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                              RelopLT(
                              ) [RelopLT]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       niz1
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [CondFactTwo]
                          ) [CondTermOne]
                        ) [CondOne]
                      ) [IfCond]
                      Stmt(
                        StatementSingle(
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementSingle]
                      ) [Stmt]
                    ) [StmtIfBody]
                  ) [StmtIf]
                ) [StatementMulti]
                StmtIf(
                  StmtIfBody(
                    IfCond(
                      CondOne(
                        CondTermOne(
                          CondFactOne(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactOne]
                        ) [CondTermOne]
                      ) [CondOne]
                    ) [IfCond]
                    Stmt(
                      StatementSingle(
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementSingle]
                    ) [Stmt]
                  ) [StmtIfBody]
                ) [StmtIf]
              ) [StatementMulti]
              StmtDoWhile(
                DoHead(
                ) [DoHead]
                Stmt(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorArray(
                         niz
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 true
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [DesignatorArray]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                ) [Stmt]
                CondOne(
                  CondTermOne(
                    CondFactOne(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactOne]
                  ) [CondTermOne]
                ) [CondOne]
              ) [StmtDoWhile]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 num
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprAddop(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                      AddopPlus(
                      ) [AddopPlus]
                      TermSingle(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermSingle]
                    ) [ExprAddop]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               num
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermMulop(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                      MulopMul(
                      ) [MulopMul]
                      FactorCharConst(
                       a
                      ) [FactorCharConst]
                    ) [TermMulop]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  20:05:11,886 - 

================SEMANTICKA OBRADA====================


ERROR 20:05:11,895 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  20:05:11,896 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  20:05:11,896 - Deklarisana konstanta 'cnst' na liniji 3
INFO  20:05:11,897 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 20:05:11,897 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  20:05:11,897 - Deklarisana promenljiva 'b' na liniji 14
ERROR 20:05:11,897 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  20:05:11,897 - Deklarisana promenljiva 'num' na liniji 15
INFO  20:05:11,897 - Deklarisana promenljiva 'character' na liniji 15
INFO  20:05:11,897 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  20:05:11,897 - Deklarisan niz 'niz' na liniji 16
INFO  20:05:11,897 - Deklarisan niz 'niz1' na liniji 16
ERROR 20:05:11,897 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 20:05:11,898 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 20:05:11,898 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 20:05:11,898 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 20:05:11,898 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 20:05:11,898 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 20:05:11,898 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 20:05:11,898 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 20:05:11,898 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 20:05:11,898 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  20:05:11,898 - Pronadjen poziv funkcije 'fun' na liniji 35
ERROR 20:05:11,899 - Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 35
ERROR 20:05:11,899 - Semanticka greska - tip mora da bude int na liniji 38
ERROR 20:05:11,899 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 41
ERROR 20:05:11,899 - Semanticka greska - break iskaz van petlje
ERROR 20:05:11,899 - Semanticka greska - continue iskaz van petlje
ERROR 20:05:11,900 - Semanticka greska - relacioni izraz sa referentnim tipovima moze koristiti samo '==' i '!=' operatore na liniji 52
ERROR 20:05:11,900 - Semanticka greska - if uslov nije tipa bool na liniji 56
ERROR 20:05:11,900 - Semanticka greska - nevalidan pristup elementu niza na liniji 61
INFO  20:05:11,900 - Pristup elementu niza 'niz' na liniji 61
ERROR 20:05:11,900 - Semanticka greska - while uslov nije tipa bool na liniji 60
ERROR 20:05:11,900 - Semanticka greska - clanovi izraza nisu tipa int na liniji 64
ERROR 20:05:11,900 - Semanticka greska - clanovi izraza nisu kompatibilni na liniji 64
ERROR 20:05:11,901 - Semanticka greska - clanovi izraza nisu tipa int na liniji 65
INFO  20:05:11,901 - ===================================
INFO  20:06:00,680 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:06:00,740 - #2 program
INFO  20:06:00,741 - #20 MJProgram
INFO  20:06:00,741 - #20 abc
INFO  20:06:00,742 - #20 a
INFO  20:06:00,743 - #40 ;
INFO  20:06:00,743 - #7 const
INFO  20:06:00,743 - #20 int
INFO  20:06:00,743 - #20 cnst
INFO  20:06:00,743 - #37 =
INFO  20:06:00,743 - #21 1
INFO  20:06:00,744 - #40 ;
INFO  20:06:00,744 - #47 {
INFO  20:06:00,745 - #20 int
INFO  20:06:00,745 - #20 fun
INFO  20:06:00,745 - #43 (
INFO  20:06:00,745 - #20 int
INFO  20:06:00,745 - #20 x
INFO  20:06:00,745 - #44 )
INFO  20:06:00,746 - #47 {
INFO  20:06:00,746 - #48 }
INFO  20:06:00,746 - #16 void
INFO  20:06:00,746 - #20 main
INFO  20:06:00,746 - #43 (
INFO  20:06:00,747 - #44 )
INFO  20:06:00,747 - #20 int
INFO  20:06:00,747 - #20 b
INFO  20:06:00,747 - #40 ;
INFO  20:06:00,747 - #20 char
INFO  20:06:00,748 - #20 b
INFO  20:06:00,748 - #40 ;
INFO  20:06:00,748 - #20 int
INFO  20:06:00,748 - #20 num
INFO  20:06:00,748 - #40 ;
INFO  20:06:00,748 - #20 char
INFO  20:06:00,748 - #20 character
INFO  20:06:00,748 - #40 ;
INFO  20:06:00,748 - #20 bool
INFO  20:06:00,749 - #20 boolean
INFO  20:06:00,749 - #40 ;
INFO  20:06:00,749 - #20 int
INFO  20:06:00,749 - #20 niz
INFO  20:06:00,749 - #45 [
INFO  20:06:00,749 - #46 ]
INFO  20:06:00,749 - #41 ,
INFO  20:06:00,749 - #20 niz1
INFO  20:06:00,749 - #45 [
INFO  20:06:00,749 - #46 ]
INFO  20:06:00,749 - #40 ;
INFO  20:06:00,750 - #47 {
INFO  20:06:00,750 - #20 a
INFO  20:06:00,750 - #37 =
INFO  20:06:00,750 - #21 1
INFO  20:06:00,750 - #40 ;
INFO  20:06:00,751 - #20 num
INFO  20:06:00,751 - #37 =
INFO  20:06:00,751 - #22 a
INFO  20:06:00,751 - #40 ;
INFO  20:06:00,751 - #20 num
INFO  20:06:00,752 - #37 =
INFO  20:06:00,752 - #23 true
INFO  20:06:00,752 - #40 ;
INFO  20:06:00,752 - #20 character
INFO  20:06:00,752 - #37 =
INFO  20:06:00,752 - #21 1
INFO  20:06:00,752 - #40 ;
INFO  20:06:00,753 - #20 character
INFO  20:06:00,753 - #37 =
INFO  20:06:00,753 - #23 true
INFO  20:06:00,753 - #40 ;
INFO  20:06:00,753 - #20 boolean
INFO  20:06:00,753 - #37 =
INFO  20:06:00,753 - #21 1
INFO  20:06:00,753 - #40 ;
INFO  20:06:00,753 - #20 boolean
INFO  20:06:00,753 - #37 =
INFO  20:06:00,753 - #22 a
INFO  20:06:00,753 - #40 ;
INFO  20:06:00,754 - #20 cnst
INFO  20:06:00,754 - #37 =
INFO  20:06:00,754 - #21 2
INFO  20:06:00,754 - #40 ;
INFO  20:06:00,755 - #20 character
INFO  20:06:00,756 - #38 ++
INFO  20:06:00,756 - #40 ;
INFO  20:06:00,756 - #20 boolean
INFO  20:06:00,756 - #39 --
INFO  20:06:00,756 - #40 ;
INFO  20:06:00,756 - #20 fun
INFO  20:06:00,757 - #43 (
INFO  20:06:00,758 - #21 1
INFO  20:06:00,758 - #41 ,
INFO  20:06:00,758 - #21 2
INFO  20:06:00,758 - #44 )
INFO  20:06:00,758 - #40 ;
INFO  20:06:00,759 - #20 fun
INFO  20:06:00,759 - #43 (
INFO  20:06:00,759 - #23 true
INFO  20:06:00,759 - #44 )
INFO  20:06:00,759 - #40 ;
INFO  20:06:00,759 - #20 character
INFO  20:06:00,759 - #37 =
INFO  20:06:00,759 - #25 -
INFO  20:06:00,759 - #22 a
INFO  20:06:00,759 - #40 ;
INFO  20:06:00,760 - #20 niz
INFO  20:06:00,760 - #37 =
INFO  20:06:00,760 - #12 new
INFO  20:06:00,760 - #20 int
INFO  20:06:00,760 - #45 [
INFO  20:06:00,760 - #22 a
INFO  20:06:00,760 - #46 ]
INFO  20:06:00,760 - #40 ;
INFO  20:06:00,760 - #10 do
INFO  20:06:00,760 - #47 {
INFO  20:06:00,761 - #20 num
INFO  20:06:00,761 - #38 ++
INFO  20:06:00,761 - #40 ;
INFO  20:06:00,761 - #3 break
INFO  20:06:00,762 - #40 ;
INFO  20:06:00,762 - #18 continue
INFO  20:06:00,762 - #40 ;
INFO  20:06:00,762 - #48 }
INFO  20:06:00,763 - #11 while
INFO  20:06:00,763 - #43 (
INFO  20:06:00,763 - #20 num
INFO  20:06:00,763 - #33 <
INFO  20:06:00,764 - #21 10
INFO  20:06:00,765 - #44 )
INFO  20:06:00,765 - #40 ;
INFO  20:06:00,765 - #3 break
INFO  20:06:00,766 - #40 ;
INFO  20:06:00,766 - #18 continue
INFO  20:06:00,766 - #40 ;
INFO  20:06:00,766 - #8 if
INFO  20:06:00,766 - #43 (
INFO  20:06:00,766 - #20 niz
INFO  20:06:00,766 - #33 <
INFO  20:06:00,766 - #20 niz1
INFO  20:06:00,766 - #44 )
INFO  20:06:00,766 - #47 {
INFO  20:06:00,766 - #20 num
INFO  20:06:00,766 - #37 =
INFO  20:06:00,766 - #21 1
INFO  20:06:00,766 - #40 ;
INFO  20:06:00,766 - #48 }
INFO  20:06:00,766 - #8 if
INFO  20:06:00,767 - #43 (
INFO  20:06:00,767 - #20 num
INFO  20:06:00,767 - #44 )
INFO  20:06:00,767 - #47 {
INFO  20:06:00,770 - #20 num
INFO  20:06:00,770 - #37 =
INFO  20:06:00,770 - #21 2
INFO  20:06:00,770 - #40 ;
INFO  20:06:00,770 - #48 }
INFO  20:06:00,770 - #10 do
INFO  20:06:00,770 - #47 {
INFO  20:06:00,770 - #20 niz
INFO  20:06:00,770 - #45 [
INFO  20:06:00,770 - #23 true
INFO  20:06:00,770 - #46 ]
INFO  20:06:00,770 - #37 =
INFO  20:06:00,771 - #21 1
INFO  20:06:00,771 - #40 ;
INFO  20:06:00,771 - #48 }
INFO  20:06:00,771 - #11 while
INFO  20:06:00,771 - #43 (
INFO  20:06:00,771 - #20 num
INFO  20:06:00,771 - #44 )
INFO  20:06:00,771 - #40 ;
INFO  20:06:00,771 - #20 num
INFO  20:06:00,771 - #37 =
INFO  20:06:00,771 - #20 num
INFO  20:06:00,771 - #24 +
INFO  20:06:00,772 - #22 a
INFO  20:06:00,772 - #40 ;
INFO  20:06:00,773 - #20 num
INFO  20:06:00,773 - #37 =
INFO  20:06:00,773 - #20 num
INFO  20:06:00,773 - #26 *
INFO  20:06:00,773 - #22 a
INFO  20:06:00,774 - #40 ;
INFO  20:06:00,774 - #48 }
INFO  20:06:00,774 - #48 }
INFO  20:06:00,775 - 

================SINTAKSNO STABLO====================


INFO  20:06:00,780 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
              VarArray(
               niz1
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementMulti(
                                                  StatementSingle(
                                                    StmtDesign(
                                                      DesignatorAssignment(
                                                        DesignatorSimple(
                                                         a
                                                        ) [DesignatorSimple]
                                                        AssignmentExpr(
                                                          ExprOne(
                                                            ExprSingle(
                                                              TermSingle(
                                                                FactorNumConst(
                                                                 1
                                                                ) [FactorNumConst]
                                                              ) [TermSingle]
                                                            ) [ExprSingle]
                                                          ) [ExprOne]
                                                        ) [AssignmentExpr]
                                                      ) [DesignatorAssignment]
                                                    ) [StmtDesign]
                                                  ) [StatementSingle]
                                                  StmtDesign(
                                                    DesignatorAssignment(
                                                      DesignatorSimple(
                                                       num
                                                      ) [DesignatorSimple]
                                                      AssignmentExpr(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorCharConst(
                                                               a
                                                              ) [FactorCharConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [AssignmentExpr]
                                                    ) [DesignatorAssignment]
                                                  ) [StmtDesign]
                                                ) [StatementMulti]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     num
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorBoolConst(
                                                             true
                                                            ) [FactorBoolConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorSimple(
                                                   character
                                                  ) [DesignatorSimple]
                                                  AssignmentExpr(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           1
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementMulti]
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 character
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorBoolConst(
                                                         true
                                                        ) [FactorBoolConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               boolean
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       1
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             boolean
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorCharConst(
                                                     a
                                                    ) [FactorCharConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorSimple(
                                           cnst
                                          ) [DesignatorSimple]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   2
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorIncrement(
                                        DesignatorSimple(
                                         character
                                        ) [DesignatorSimple]
                                      ) [DesignatorIncrement]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorDecrement(
                                      DesignatorSimple(
                                       boolean
                                      ) [DesignatorSimple]
                                    ) [DesignatorDecrement]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorMethodCallParams(
                                    DesignatorSimple(
                                     fun
                                    ) [DesignatorSimple]
                                    ActParsMulti(
                                      ActParsSingle(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [ActParsSingle]
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             2
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [ActParsMulti]
                                  ) [DesignatorMethodCallParams]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorMethodCallParams(
                                  DesignatorSimple(
                                   fun
                                  ) [DesignatorSimple]
                                  ActParsSingle(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorBoolConst(
                                           true
                                          ) [FactorBoolConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [ActParsSingle]
                                ) [DesignatorMethodCallParams]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 character
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprNeg(
                                      TermSingle(
                                        FactorCharConst(
                                         a
                                        ) [FactorCharConst]
                                      ) [TermSingle]
                                    ) [ExprNeg]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               niz
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNewArray(
                                        Type(
                                         int
                                        ) [Type]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorCharConst(
                                               a
                                              ) [FactorCharConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [FactorNewArray]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDoWhile(
                          DoHead(
                          ) [DoHead]
                          Stmt(
                            StatementMulti(
                              StatementMulti(
                                StatementSingle(
                                  StmtDesign(
                                    DesignatorIncrement(
                                      DesignatorSimple(
                                       num
                                      ) [DesignatorSimple]
                                    ) [DesignatorIncrement]
                                  ) [StmtDesign]
                                ) [StatementSingle]
                                StmtBreak(
                                ) [StmtBreak]
                              ) [StatementMulti]
                              StmtContinue(
                              ) [StmtContinue]
                            ) [StatementMulti]
                          ) [Stmt]
                          CondOne(
                            CondTermOne(
                              CondFactTwo(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         num
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                                RelopLT(
                                ) [RelopLT]
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       10
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [CondFactTwo]
                            ) [CondTermOne]
                          ) [CondOne]
                        ) [StmtDoWhile]
                      ) [StatementMulti]
                      StmtBreak(
                      ) [StmtBreak]
                    ) [StatementMulti]
                    StmtContinue(
                    ) [StmtContinue]
                  ) [StatementMulti]
                  StmtIf(
                    StmtIfBody(
                      IfCond(
                        CondOne(
                          CondTermOne(
                            CondFactTwo(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       niz
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                              RelopLT(
                              ) [RelopLT]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       niz1
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [CondFactTwo]
                          ) [CondTermOne]
                        ) [CondOne]
                      ) [IfCond]
                      Stmt(
                        StatementSingle(
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementSingle]
                      ) [Stmt]
                    ) [StmtIfBody]
                  ) [StmtIf]
                ) [StatementMulti]
                StmtIf(
                  StmtIfBody(
                    IfCond(
                      CondOne(
                        CondTermOne(
                          CondFactOne(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactOne]
                        ) [CondTermOne]
                      ) [CondOne]
                    ) [IfCond]
                    Stmt(
                      StatementSingle(
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementSingle]
                    ) [Stmt]
                  ) [StmtIfBody]
                ) [StmtIf]
              ) [StatementMulti]
              StmtDoWhile(
                DoHead(
                ) [DoHead]
                Stmt(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorArray(
                         niz
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 true
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [DesignatorArray]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                ) [Stmt]
                CondOne(
                  CondTermOne(
                    CondFactOne(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactOne]
                  ) [CondTermOne]
                ) [CondOne]
              ) [StmtDoWhile]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 num
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprAddop(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                      AddopPlus(
                      ) [AddopPlus]
                      TermSingle(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermSingle]
                    ) [ExprAddop]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               num
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermMulop(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                      MulopMul(
                      ) [MulopMul]
                      FactorCharConst(
                       a
                      ) [FactorCharConst]
                    ) [TermMulop]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  20:06:00,781 - 

================SEMANTICKA OBRADA====================


ERROR 20:06:00,792 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  20:06:00,793 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  20:06:00,793 - Deklarisana konstanta 'cnst' na liniji 3
INFO  20:06:00,794 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 20:06:00,794 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  20:06:00,794 - Deklarisana promenljiva 'b' na liniji 14
ERROR 20:06:00,795 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  20:06:00,795 - Deklarisana promenljiva 'num' na liniji 15
INFO  20:06:00,795 - Deklarisana promenljiva 'character' na liniji 15
INFO  20:06:00,795 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  20:06:00,795 - Deklarisan niz 'niz' na liniji 16
INFO  20:06:00,795 - Deklarisan niz 'niz1' na liniji 16
ERROR 20:06:00,795 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 20:06:00,795 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 20:06:00,795 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 20:06:00,795 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 20:06:00,795 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 20:06:00,795 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 20:06:00,796 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 20:06:00,796 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 20:06:00,796 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 20:06:00,796 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  20:06:00,796 - Pronadjen poziv funkcije 'fun' na liniji 35
ERROR 20:06:00,796 - Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 35
INFO  20:06:00,796 - Pronadjen poziv funkcije 'fun' na liniji 36
ERROR 20:06:00,796 - Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 36
ERROR 20:06:00,796 - Semanticka greska - tip mora da bude int na liniji 39
ERROR 20:06:00,798 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 42
ERROR 20:06:00,798 - Semanticka greska - break iskaz van petlje
ERROR 20:06:00,798 - Semanticka greska - continue iskaz van petlje
ERROR 20:06:00,799 - Semanticka greska - relacioni izraz sa referentnim tipovima moze koristiti samo '==' i '!=' operatore na liniji 53
ERROR 20:06:00,799 - Semanticka greska - if uslov nije tipa bool na liniji 57
ERROR 20:06:00,799 - Semanticka greska - nevalidan pristup elementu niza na liniji 62
INFO  20:06:00,799 - Pristup elementu niza 'niz' na liniji 62
ERROR 20:06:00,799 - Semanticka greska - while uslov nije tipa bool na liniji 61
ERROR 20:06:00,799 - Semanticka greska - clanovi izraza nisu tipa int na liniji 65
ERROR 20:06:00,799 - Semanticka greska - clanovi izraza nisu kompatibilni na liniji 65
ERROR 20:06:00,799 - Semanticka greska - clanovi izraza nisu tipa int na liniji 66
INFO  20:06:00,800 - ===================================
INFO  20:06:13,740 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:06:13,808 - #2 program
INFO  20:06:13,808 - #20 MJProgram
INFO  20:06:13,808 - #20 abc
INFO  20:06:13,809 - #20 a
INFO  20:06:13,810 - #40 ;
INFO  20:06:13,810 - #7 const
INFO  20:06:13,810 - #20 int
INFO  20:06:13,810 - #20 cnst
INFO  20:06:13,810 - #37 =
INFO  20:06:13,810 - #21 1
INFO  20:06:13,811 - #40 ;
INFO  20:06:13,811 - #47 {
INFO  20:06:13,812 - #20 int
INFO  20:06:13,812 - #20 fun
INFO  20:06:13,812 - #43 (
INFO  20:06:13,812 - #20 int
INFO  20:06:13,812 - #20 x
INFO  20:06:13,812 - #44 )
INFO  20:06:13,813 - #47 {
INFO  20:06:13,813 - #48 }
INFO  20:06:13,813 - #16 void
INFO  20:06:13,813 - #20 main
INFO  20:06:13,813 - #43 (
INFO  20:06:13,814 - #44 )
INFO  20:06:13,814 - #20 int
INFO  20:06:13,814 - #20 b
INFO  20:06:13,814 - #40 ;
INFO  20:06:13,814 - #20 char
INFO  20:06:13,815 - #20 b
INFO  20:06:13,815 - #40 ;
INFO  20:06:13,815 - #20 int
INFO  20:06:13,815 - #20 num
INFO  20:06:13,815 - #40 ;
INFO  20:06:13,815 - #20 char
INFO  20:06:13,816 - #20 character
INFO  20:06:13,816 - #40 ;
INFO  20:06:13,816 - #20 bool
INFO  20:06:13,816 - #20 boolean
INFO  20:06:13,816 - #40 ;
INFO  20:06:13,816 - #20 int
INFO  20:06:13,816 - #20 niz
INFO  20:06:13,817 - #45 [
INFO  20:06:13,817 - #46 ]
INFO  20:06:13,817 - #41 ,
INFO  20:06:13,817 - #20 niz1
INFO  20:06:13,817 - #45 [
INFO  20:06:13,817 - #46 ]
INFO  20:06:13,817 - #40 ;
INFO  20:06:13,818 - #47 {
INFO  20:06:13,818 - #20 a
INFO  20:06:13,818 - #37 =
INFO  20:06:13,818 - #21 1
INFO  20:06:13,818 - #40 ;
INFO  20:06:13,820 - #20 num
INFO  20:06:13,820 - #37 =
INFO  20:06:13,820 - #22 a
INFO  20:06:13,820 - #40 ;
INFO  20:06:13,820 - #20 num
INFO  20:06:13,820 - #37 =
INFO  20:06:13,821 - #23 true
INFO  20:06:13,821 - #40 ;
INFO  20:06:13,821 - #20 character
INFO  20:06:13,821 - #37 =
INFO  20:06:13,821 - #21 1
INFO  20:06:13,821 - #40 ;
INFO  20:06:13,822 - #20 character
INFO  20:06:13,822 - #37 =
INFO  20:06:13,822 - #23 true
INFO  20:06:13,822 - #40 ;
INFO  20:06:13,823 - #20 boolean
INFO  20:06:13,823 - #37 =
INFO  20:06:13,823 - #21 1
INFO  20:06:13,823 - #40 ;
INFO  20:06:13,823 - #20 boolean
INFO  20:06:13,823 - #37 =
INFO  20:06:13,823 - #22 a
INFO  20:06:13,823 - #40 ;
INFO  20:06:13,824 - #20 cnst
INFO  20:06:13,824 - #37 =
INFO  20:06:13,824 - #21 2
INFO  20:06:13,824 - #40 ;
INFO  20:06:13,824 - #20 character
INFO  20:06:13,825 - #38 ++
INFO  20:06:13,827 - #40 ;
INFO  20:06:13,827 - #20 boolean
INFO  20:06:13,827 - #39 --
INFO  20:06:13,827 - #40 ;
INFO  20:06:13,828 - #20 fun
INFO  20:06:13,828 - #43 (
INFO  20:06:13,828 - #21 1
INFO  20:06:13,828 - #41 ,
INFO  20:06:13,828 - #21 2
INFO  20:06:13,829 - #44 )
INFO  20:06:13,829 - #40 ;
INFO  20:06:13,829 - #20 fun
INFO  20:06:13,829 - #43 (
INFO  20:06:13,829 - #21 1
INFO  20:06:13,829 - #44 )
INFO  20:06:13,829 - #40 ;
INFO  20:06:13,830 - #20 character
INFO  20:06:13,830 - #37 =
INFO  20:06:13,830 - #25 -
INFO  20:06:13,830 - #22 a
INFO  20:06:13,830 - #40 ;
INFO  20:06:13,830 - #20 niz
INFO  20:06:13,830 - #37 =
INFO  20:06:13,831 - #12 new
INFO  20:06:13,831 - #20 int
INFO  20:06:13,831 - #45 [
INFO  20:06:13,831 - #22 a
INFO  20:06:13,831 - #46 ]
INFO  20:06:13,831 - #40 ;
INFO  20:06:13,831 - #10 do
INFO  20:06:13,832 - #47 {
INFO  20:06:13,833 - #20 num
INFO  20:06:13,833 - #38 ++
INFO  20:06:13,833 - #40 ;
INFO  20:06:13,833 - #3 break
INFO  20:06:13,833 - #40 ;
INFO  20:06:13,833 - #18 continue
INFO  20:06:13,834 - #40 ;
INFO  20:06:13,834 - #48 }
INFO  20:06:13,835 - #11 while
INFO  20:06:13,835 - #43 (
INFO  20:06:13,835 - #20 num
INFO  20:06:13,835 - #33 <
INFO  20:06:13,836 - #21 10
INFO  20:06:13,837 - #44 )
INFO  20:06:13,838 - #40 ;
INFO  20:06:13,838 - #3 break
INFO  20:06:13,838 - #40 ;
INFO  20:06:13,838 - #18 continue
INFO  20:06:13,838 - #40 ;
INFO  20:06:13,838 - #8 if
INFO  20:06:13,838 - #43 (
INFO  20:06:13,839 - #20 niz
INFO  20:06:13,839 - #33 <
INFO  20:06:13,839 - #20 niz1
INFO  20:06:13,839 - #44 )
INFO  20:06:13,839 - #47 {
INFO  20:06:13,839 - #20 num
INFO  20:06:13,839 - #37 =
INFO  20:06:13,839 - #21 1
INFO  20:06:13,839 - #40 ;
INFO  20:06:13,839 - #48 }
INFO  20:06:13,839 - #8 if
INFO  20:06:13,840 - #43 (
INFO  20:06:13,840 - #20 num
INFO  20:06:13,840 - #44 )
INFO  20:06:13,840 - #47 {
INFO  20:06:13,844 - #20 num
INFO  20:06:13,844 - #37 =
INFO  20:06:13,844 - #21 2
INFO  20:06:13,845 - #40 ;
INFO  20:06:13,845 - #48 }
INFO  20:06:13,845 - #10 do
INFO  20:06:13,845 - #47 {
INFO  20:06:13,845 - #20 niz
INFO  20:06:13,845 - #45 [
INFO  20:06:13,845 - #23 true
INFO  20:06:13,845 - #46 ]
INFO  20:06:13,845 - #37 =
INFO  20:06:13,845 - #21 1
INFO  20:06:13,846 - #40 ;
INFO  20:06:13,846 - #48 }
INFO  20:06:13,846 - #11 while
INFO  20:06:13,846 - #43 (
INFO  20:06:13,846 - #20 num
INFO  20:06:13,846 - #44 )
INFO  20:06:13,846 - #40 ;
INFO  20:06:13,846 - #20 num
INFO  20:06:13,846 - #37 =
INFO  20:06:13,846 - #20 num
INFO  20:06:13,846 - #24 +
INFO  20:06:13,846 - #22 a
INFO  20:06:13,848 - #40 ;
INFO  20:06:13,848 - #20 num
INFO  20:06:13,848 - #37 =
INFO  20:06:13,848 - #20 num
INFO  20:06:13,849 - #26 *
INFO  20:06:13,849 - #22 a
INFO  20:06:13,850 - #40 ;
INFO  20:06:13,850 - #48 }
INFO  20:06:13,850 - #48 }
INFO  20:06:13,852 - 

================SINTAKSNO STABLO====================


INFO  20:06:13,857 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
              VarArray(
               niz1
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementMulti(
                                                  StatementSingle(
                                                    StmtDesign(
                                                      DesignatorAssignment(
                                                        DesignatorSimple(
                                                         a
                                                        ) [DesignatorSimple]
                                                        AssignmentExpr(
                                                          ExprOne(
                                                            ExprSingle(
                                                              TermSingle(
                                                                FactorNumConst(
                                                                 1
                                                                ) [FactorNumConst]
                                                              ) [TermSingle]
                                                            ) [ExprSingle]
                                                          ) [ExprOne]
                                                        ) [AssignmentExpr]
                                                      ) [DesignatorAssignment]
                                                    ) [StmtDesign]
                                                  ) [StatementSingle]
                                                  StmtDesign(
                                                    DesignatorAssignment(
                                                      DesignatorSimple(
                                                       num
                                                      ) [DesignatorSimple]
                                                      AssignmentExpr(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorCharConst(
                                                               a
                                                              ) [FactorCharConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [AssignmentExpr]
                                                    ) [DesignatorAssignment]
                                                  ) [StmtDesign]
                                                ) [StatementMulti]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     num
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorBoolConst(
                                                             true
                                                            ) [FactorBoolConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorSimple(
                                                   character
                                                  ) [DesignatorSimple]
                                                  AssignmentExpr(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           1
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementMulti]
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 character
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorBoolConst(
                                                         true
                                                        ) [FactorBoolConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               boolean
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       1
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             boolean
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorCharConst(
                                                     a
                                                    ) [FactorCharConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorSimple(
                                           cnst
                                          ) [DesignatorSimple]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   2
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorIncrement(
                                        DesignatorSimple(
                                         character
                                        ) [DesignatorSimple]
                                      ) [DesignatorIncrement]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorDecrement(
                                      DesignatorSimple(
                                       boolean
                                      ) [DesignatorSimple]
                                    ) [DesignatorDecrement]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorMethodCallParams(
                                    DesignatorSimple(
                                     fun
                                    ) [DesignatorSimple]
                                    ActParsMulti(
                                      ActParsSingle(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [ActParsSingle]
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             2
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [ActParsMulti]
                                  ) [DesignatorMethodCallParams]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorMethodCallParams(
                                  DesignatorSimple(
                                   fun
                                  ) [DesignatorSimple]
                                  ActParsSingle(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           1
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [ActParsSingle]
                                ) [DesignatorMethodCallParams]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 character
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprNeg(
                                      TermSingle(
                                        FactorCharConst(
                                         a
                                        ) [FactorCharConst]
                                      ) [TermSingle]
                                    ) [ExprNeg]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               niz
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNewArray(
                                        Type(
                                         int
                                        ) [Type]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorCharConst(
                                               a
                                              ) [FactorCharConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [FactorNewArray]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDoWhile(
                          DoHead(
                          ) [DoHead]
                          Stmt(
                            StatementMulti(
                              StatementMulti(
                                StatementSingle(
                                  StmtDesign(
                                    DesignatorIncrement(
                                      DesignatorSimple(
                                       num
                                      ) [DesignatorSimple]
                                    ) [DesignatorIncrement]
                                  ) [StmtDesign]
                                ) [StatementSingle]
                                StmtBreak(
                                ) [StmtBreak]
                              ) [StatementMulti]
                              StmtContinue(
                              ) [StmtContinue]
                            ) [StatementMulti]
                          ) [Stmt]
                          CondOne(
                            CondTermOne(
                              CondFactTwo(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         num
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                                RelopLT(
                                ) [RelopLT]
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       10
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [CondFactTwo]
                            ) [CondTermOne]
                          ) [CondOne]
                        ) [StmtDoWhile]
                      ) [StatementMulti]
                      StmtBreak(
                      ) [StmtBreak]
                    ) [StatementMulti]
                    StmtContinue(
                    ) [StmtContinue]
                  ) [StatementMulti]
                  StmtIf(
                    StmtIfBody(
                      IfCond(
                        CondOne(
                          CondTermOne(
                            CondFactTwo(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       niz
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                              RelopLT(
                              ) [RelopLT]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       niz1
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [CondFactTwo]
                          ) [CondTermOne]
                        ) [CondOne]
                      ) [IfCond]
                      Stmt(
                        StatementSingle(
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementSingle]
                      ) [Stmt]
                    ) [StmtIfBody]
                  ) [StmtIf]
                ) [StatementMulti]
                StmtIf(
                  StmtIfBody(
                    IfCond(
                      CondOne(
                        CondTermOne(
                          CondFactOne(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactOne]
                        ) [CondTermOne]
                      ) [CondOne]
                    ) [IfCond]
                    Stmt(
                      StatementSingle(
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementSingle]
                    ) [Stmt]
                  ) [StmtIfBody]
                ) [StmtIf]
              ) [StatementMulti]
              StmtDoWhile(
                DoHead(
                ) [DoHead]
                Stmt(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorArray(
                         niz
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 true
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [DesignatorArray]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                ) [Stmt]
                CondOne(
                  CondTermOne(
                    CondFactOne(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactOne]
                  ) [CondTermOne]
                ) [CondOne]
              ) [StmtDoWhile]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 num
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprAddop(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                      AddopPlus(
                      ) [AddopPlus]
                      TermSingle(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermSingle]
                    ) [ExprAddop]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               num
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermMulop(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                      MulopMul(
                      ) [MulopMul]
                      FactorCharConst(
                       a
                      ) [FactorCharConst]
                    ) [TermMulop]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  20:06:13,860 - 

================SEMANTICKA OBRADA====================


ERROR 20:06:13,881 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  20:06:13,882 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  20:06:13,882 - Deklarisana konstanta 'cnst' na liniji 3
INFO  20:06:13,883 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 20:06:13,883 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  20:06:13,883 - Deklarisana promenljiva 'b' na liniji 14
ERROR 20:06:13,883 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  20:06:13,883 - Deklarisana promenljiva 'num' na liniji 15
INFO  20:06:13,883 - Deklarisana promenljiva 'character' na liniji 15
INFO  20:06:13,883 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  20:06:13,884 - Deklarisan niz 'niz' na liniji 16
INFO  20:06:13,884 - Deklarisan niz 'niz1' na liniji 16
ERROR 20:06:13,884 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 20:06:13,884 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 20:06:13,884 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 20:06:13,884 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 20:06:13,884 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 20:06:13,884 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 20:06:13,884 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 20:06:13,884 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 20:06:13,884 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 20:06:13,884 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  20:06:13,885 - Pronadjen poziv funkcije 'fun' na liniji 36
ERROR 20:06:13,885 - Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 36
INFO  20:06:13,885 - Pronadjen poziv funkcije 'fun' na liniji 37
ERROR 20:06:13,885 - Semanticka greska - tip mora da bude int na liniji 40
ERROR 20:06:13,885 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 43
ERROR 20:06:13,886 - Semanticka greska - break iskaz van petlje
ERROR 20:06:13,886 - Semanticka greska - continue iskaz van petlje
ERROR 20:06:13,888 - Semanticka greska - relacioni izraz sa referentnim tipovima moze koristiti samo '==' i '!=' operatore na liniji 54
ERROR 20:06:13,888 - Semanticka greska - if uslov nije tipa bool na liniji 58
ERROR 20:06:13,888 - Semanticka greska - nevalidan pristup elementu niza na liniji 63
INFO  20:06:13,888 - Pristup elementu niza 'niz' na liniji 63
ERROR 20:06:13,888 - Semanticka greska - while uslov nije tipa bool na liniji 62
ERROR 20:06:13,888 - Semanticka greska - clanovi izraza nisu tipa int na liniji 66
ERROR 20:06:13,888 - Semanticka greska - clanovi izraza nisu kompatibilni na liniji 66
ERROR 20:06:13,888 - Semanticka greska - clanovi izraza nisu tipa int na liniji 67
INFO  20:06:13,889 - ===================================
INFO  20:06:22,695 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:06:22,766 - #2 program
INFO  20:06:22,766 - #20 MJProgram
INFO  20:06:22,767 - #20 abc
INFO  20:06:22,769 - #20 a
INFO  20:06:22,769 - #40 ;
INFO  20:06:22,770 - #7 const
INFO  20:06:22,770 - #20 int
INFO  20:06:22,770 - #20 cnst
INFO  20:06:22,770 - #37 =
INFO  20:06:22,770 - #21 1
INFO  20:06:22,770 - #40 ;
INFO  20:06:22,771 - #47 {
INFO  20:06:22,772 - #20 int
INFO  20:06:22,772 - #20 fun
INFO  20:06:22,772 - #43 (
INFO  20:06:22,772 - #20 int
INFO  20:06:22,772 - #20 x
INFO  20:06:22,772 - #44 )
INFO  20:06:22,773 - #47 {
INFO  20:06:22,773 - #48 }
INFO  20:06:22,773 - #16 void
INFO  20:06:22,773 - #20 main
INFO  20:06:22,773 - #43 (
INFO  20:06:22,774 - #44 )
INFO  20:06:22,774 - #20 int
INFO  20:06:22,774 - #20 b
INFO  20:06:22,774 - #40 ;
INFO  20:06:22,774 - #20 char
INFO  20:06:22,775 - #20 b
INFO  20:06:22,775 - #40 ;
INFO  20:06:22,775 - #20 int
INFO  20:06:22,775 - #20 num
INFO  20:06:22,775 - #40 ;
INFO  20:06:22,775 - #20 char
INFO  20:06:22,775 - #20 character
INFO  20:06:22,775 - #40 ;
INFO  20:06:22,775 - #20 bool
INFO  20:06:22,776 - #20 boolean
INFO  20:06:22,776 - #40 ;
INFO  20:06:22,776 - #20 int
INFO  20:06:22,776 - #20 niz
INFO  20:06:22,776 - #45 [
INFO  20:06:22,776 - #46 ]
INFO  20:06:22,776 - #41 ,
INFO  20:06:22,777 - #20 niz1
INFO  20:06:22,777 - #45 [
INFO  20:06:22,777 - #46 ]
INFO  20:06:22,777 - #40 ;
INFO  20:06:22,777 - #47 {
INFO  20:06:22,778 - #20 a
INFO  20:06:22,778 - #37 =
INFO  20:06:22,778 - #21 1
INFO  20:06:22,778 - #40 ;
INFO  20:06:22,779 - #20 num
INFO  20:06:22,780 - #37 =
INFO  20:06:22,780 - #22 a
INFO  20:06:22,780 - #40 ;
INFO  20:06:22,780 - #20 num
INFO  20:06:22,781 - #37 =
INFO  20:06:22,781 - #23 true
INFO  20:06:22,781 - #40 ;
INFO  20:06:22,781 - #20 character
INFO  20:06:22,781 - #37 =
INFO  20:06:22,782 - #21 1
INFO  20:06:22,782 - #40 ;
INFO  20:06:22,782 - #20 character
INFO  20:06:22,782 - #37 =
INFO  20:06:22,782 - #23 true
INFO  20:06:22,782 - #40 ;
INFO  20:06:22,782 - #20 boolean
INFO  20:06:22,783 - #37 =
INFO  20:06:22,783 - #21 1
INFO  20:06:22,783 - #40 ;
INFO  20:06:22,783 - #20 boolean
INFO  20:06:22,783 - #37 =
INFO  20:06:22,783 - #22 a
INFO  20:06:22,783 - #40 ;
INFO  20:06:22,784 - #20 cnst
INFO  20:06:22,784 - #37 =
INFO  20:06:22,784 - #21 2
INFO  20:06:22,784 - #40 ;
INFO  20:06:22,784 - #20 character
INFO  20:06:22,785 - #38 ++
INFO  20:06:22,785 - #40 ;
INFO  20:06:22,785 - #20 boolean
INFO  20:06:22,785 - #39 --
INFO  20:06:22,786 - #40 ;
INFO  20:06:22,786 - #20 fun
INFO  20:06:22,786 - #43 (
INFO  20:06:22,786 - #21 1
INFO  20:06:22,786 - #41 ,
INFO  20:06:22,786 - #21 2
INFO  20:06:22,787 - #44 )
INFO  20:06:22,787 - #40 ;
INFO  20:06:22,787 - #20 fun
INFO  20:06:22,787 - #43 (
INFO  20:06:22,787 - #23 true
INFO  20:06:22,787 - #44 )
INFO  20:06:22,788 - #40 ;
INFO  20:06:22,788 - #20 character
INFO  20:06:22,788 - #37 =
INFO  20:06:22,788 - #25 -
INFO  20:06:22,788 - #22 a
INFO  20:06:22,788 - #40 ;
INFO  20:06:22,788 - #20 niz
INFO  20:06:22,788 - #37 =
INFO  20:06:22,788 - #12 new
INFO  20:06:22,788 - #20 int
INFO  20:06:22,789 - #45 [
INFO  20:06:22,789 - #22 a
INFO  20:06:22,789 - #46 ]
INFO  20:06:22,789 - #40 ;
INFO  20:06:22,789 - #10 do
INFO  20:06:22,789 - #47 {
INFO  20:06:22,790 - #20 num
INFO  20:06:22,790 - #38 ++
INFO  20:06:22,790 - #40 ;
INFO  20:06:22,790 - #3 break
INFO  20:06:22,790 - #40 ;
INFO  20:06:22,790 - #18 continue
INFO  20:06:22,791 - #40 ;
INFO  20:06:22,791 - #48 }
INFO  20:06:22,792 - #11 while
INFO  20:06:22,792 - #43 (
INFO  20:06:22,792 - #20 num
INFO  20:06:22,792 - #33 <
INFO  20:06:22,792 - #21 10
INFO  20:06:22,794 - #44 )
INFO  20:06:22,794 - #40 ;
INFO  20:06:22,794 - #3 break
INFO  20:06:22,794 - #40 ;
INFO  20:06:22,795 - #18 continue
INFO  20:06:22,795 - #40 ;
INFO  20:06:22,795 - #8 if
INFO  20:06:22,795 - #43 (
INFO  20:06:22,795 - #20 niz
INFO  20:06:22,795 - #33 <
INFO  20:06:22,795 - #20 niz1
INFO  20:06:22,795 - #44 )
INFO  20:06:22,795 - #47 {
INFO  20:06:22,796 - #20 num
INFO  20:06:22,796 - #37 =
INFO  20:06:22,796 - #21 1
INFO  20:06:22,796 - #40 ;
INFO  20:06:22,796 - #48 }
INFO  20:06:22,796 - #8 if
INFO  20:06:22,797 - #43 (
INFO  20:06:22,797 - #20 num
INFO  20:06:22,797 - #44 )
INFO  20:06:22,797 - #47 {
INFO  20:06:22,797 - #20 num
INFO  20:06:22,797 - #37 =
INFO  20:06:22,797 - #21 2
INFO  20:06:22,797 - #40 ;
INFO  20:06:22,797 - #48 }
INFO  20:06:22,797 - #10 do
INFO  20:06:22,798 - #47 {
INFO  20:06:22,798 - #20 niz
INFO  20:06:22,798 - #45 [
INFO  20:06:22,798 - #23 true
INFO  20:06:22,798 - #46 ]
INFO  20:06:22,798 - #37 =
INFO  20:06:22,798 - #21 1
INFO  20:06:22,798 - #40 ;
INFO  20:06:22,798 - #48 }
INFO  20:06:22,798 - #11 while
INFO  20:06:22,799 - #43 (
INFO  20:06:22,799 - #20 num
INFO  20:06:22,799 - #44 )
INFO  20:06:22,799 - #40 ;
INFO  20:06:22,799 - #20 num
INFO  20:06:22,799 - #37 =
INFO  20:06:22,799 - #20 num
INFO  20:06:22,799 - #24 +
INFO  20:06:22,799 - #22 a
INFO  20:06:22,800 - #40 ;
INFO  20:06:22,801 - #20 num
INFO  20:06:22,802 - #37 =
INFO  20:06:22,802 - #20 num
INFO  20:06:22,802 - #26 *
INFO  20:06:22,802 - #22 a
INFO  20:06:22,804 - #40 ;
INFO  20:06:22,804 - #48 }
INFO  20:06:22,804 - #48 }
INFO  20:06:22,806 - 

================SINTAKSNO STABLO====================


INFO  20:06:22,811 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
              VarArray(
               niz1
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementMulti(
                                                  StatementSingle(
                                                    StmtDesign(
                                                      DesignatorAssignment(
                                                        DesignatorSimple(
                                                         a
                                                        ) [DesignatorSimple]
                                                        AssignmentExpr(
                                                          ExprOne(
                                                            ExprSingle(
                                                              TermSingle(
                                                                FactorNumConst(
                                                                 1
                                                                ) [FactorNumConst]
                                                              ) [TermSingle]
                                                            ) [ExprSingle]
                                                          ) [ExprOne]
                                                        ) [AssignmentExpr]
                                                      ) [DesignatorAssignment]
                                                    ) [StmtDesign]
                                                  ) [StatementSingle]
                                                  StmtDesign(
                                                    DesignatorAssignment(
                                                      DesignatorSimple(
                                                       num
                                                      ) [DesignatorSimple]
                                                      AssignmentExpr(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorCharConst(
                                                               a
                                                              ) [FactorCharConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [AssignmentExpr]
                                                    ) [DesignatorAssignment]
                                                  ) [StmtDesign]
                                                ) [StatementMulti]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     num
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorBoolConst(
                                                             true
                                                            ) [FactorBoolConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorSimple(
                                                   character
                                                  ) [DesignatorSimple]
                                                  AssignmentExpr(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           1
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementMulti]
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 character
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorBoolConst(
                                                         true
                                                        ) [FactorBoolConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               boolean
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       1
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             boolean
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorCharConst(
                                                     a
                                                    ) [FactorCharConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorSimple(
                                           cnst
                                          ) [DesignatorSimple]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   2
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorIncrement(
                                        DesignatorSimple(
                                         character
                                        ) [DesignatorSimple]
                                      ) [DesignatorIncrement]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorDecrement(
                                      DesignatorSimple(
                                       boolean
                                      ) [DesignatorSimple]
                                    ) [DesignatorDecrement]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorMethodCallParams(
                                    DesignatorSimple(
                                     fun
                                    ) [DesignatorSimple]
                                    ActParsMulti(
                                      ActParsSingle(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [ActParsSingle]
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             2
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [ActParsMulti]
                                  ) [DesignatorMethodCallParams]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorMethodCallParams(
                                  DesignatorSimple(
                                   fun
                                  ) [DesignatorSimple]
                                  ActParsSingle(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorBoolConst(
                                           true
                                          ) [FactorBoolConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [ActParsSingle]
                                ) [DesignatorMethodCallParams]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 character
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprNeg(
                                      TermSingle(
                                        FactorCharConst(
                                         a
                                        ) [FactorCharConst]
                                      ) [TermSingle]
                                    ) [ExprNeg]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               niz
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNewArray(
                                        Type(
                                         int
                                        ) [Type]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorCharConst(
                                               a
                                              ) [FactorCharConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [FactorNewArray]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDoWhile(
                          DoHead(
                          ) [DoHead]
                          Stmt(
                            StatementMulti(
                              StatementMulti(
                                StatementSingle(
                                  StmtDesign(
                                    DesignatorIncrement(
                                      DesignatorSimple(
                                       num
                                      ) [DesignatorSimple]
                                    ) [DesignatorIncrement]
                                  ) [StmtDesign]
                                ) [StatementSingle]
                                StmtBreak(
                                ) [StmtBreak]
                              ) [StatementMulti]
                              StmtContinue(
                              ) [StmtContinue]
                            ) [StatementMulti]
                          ) [Stmt]
                          CondOne(
                            CondTermOne(
                              CondFactTwo(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         num
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                                RelopLT(
                                ) [RelopLT]
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       10
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [CondFactTwo]
                            ) [CondTermOne]
                          ) [CondOne]
                        ) [StmtDoWhile]
                      ) [StatementMulti]
                      StmtBreak(
                      ) [StmtBreak]
                    ) [StatementMulti]
                    StmtContinue(
                    ) [StmtContinue]
                  ) [StatementMulti]
                  StmtIf(
                    StmtIfBody(
                      IfCond(
                        CondOne(
                          CondTermOne(
                            CondFactTwo(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       niz
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                              RelopLT(
                              ) [RelopLT]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       niz1
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [CondFactTwo]
                          ) [CondTermOne]
                        ) [CondOne]
                      ) [IfCond]
                      Stmt(
                        StatementSingle(
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementSingle]
                      ) [Stmt]
                    ) [StmtIfBody]
                  ) [StmtIf]
                ) [StatementMulti]
                StmtIf(
                  StmtIfBody(
                    IfCond(
                      CondOne(
                        CondTermOne(
                          CondFactOne(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactOne]
                        ) [CondTermOne]
                      ) [CondOne]
                    ) [IfCond]
                    Stmt(
                      StatementSingle(
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementSingle]
                    ) [Stmt]
                  ) [StmtIfBody]
                ) [StmtIf]
              ) [StatementMulti]
              StmtDoWhile(
                DoHead(
                ) [DoHead]
                Stmt(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorArray(
                         niz
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 true
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [DesignatorArray]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                ) [Stmt]
                CondOne(
                  CondTermOne(
                    CondFactOne(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactOne]
                  ) [CondTermOne]
                ) [CondOne]
              ) [StmtDoWhile]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 num
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprAddop(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                      AddopPlus(
                      ) [AddopPlus]
                      TermSingle(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermSingle]
                    ) [ExprAddop]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               num
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermMulop(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                      MulopMul(
                      ) [MulopMul]
                      FactorCharConst(
                       a
                      ) [FactorCharConst]
                    ) [TermMulop]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  20:06:22,825 - 

================SEMANTICKA OBRADA====================


ERROR 20:06:22,840 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  20:06:22,841 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  20:06:22,841 - Deklarisana konstanta 'cnst' na liniji 3
INFO  20:06:22,842 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 20:06:22,842 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  20:06:22,843 - Deklarisana promenljiva 'b' na liniji 14
ERROR 20:06:22,843 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  20:06:22,843 - Deklarisana promenljiva 'num' na liniji 15
INFO  20:06:22,843 - Deklarisana promenljiva 'character' na liniji 15
INFO  20:06:22,843 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  20:06:22,843 - Deklarisan niz 'niz' na liniji 16
INFO  20:06:22,843 - Deklarisan niz 'niz1' na liniji 16
ERROR 20:06:22,843 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 20:06:22,843 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 20:06:22,843 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 20:06:22,844 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 20:06:22,844 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 20:06:22,844 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 20:06:22,844 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 20:06:22,844 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 20:06:22,844 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 20:06:22,844 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  20:06:22,844 - Pronadjen poziv funkcije 'fun' na liniji 36
ERROR 20:06:22,844 - Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 36
INFO  20:06:22,845 - Pronadjen poziv funkcije 'fun' na liniji 37
ERROR 20:06:22,845 - Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 37
ERROR 20:06:22,847 - Semanticka greska - tip mora da bude int na liniji 40
ERROR 20:06:22,848 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 43
ERROR 20:06:22,848 - Semanticka greska - break iskaz van petlje
ERROR 20:06:22,848 - Semanticka greska - continue iskaz van petlje
ERROR 20:06:22,849 - Semanticka greska - relacioni izraz sa referentnim tipovima moze koristiti samo '==' i '!=' operatore na liniji 54
ERROR 20:06:22,849 - Semanticka greska - if uslov nije tipa bool na liniji 58
ERROR 20:06:22,849 - Semanticka greska - nevalidan pristup elementu niza na liniji 63
INFO  20:06:22,849 - Pristup elementu niza 'niz' na liniji 63
ERROR 20:06:22,849 - Semanticka greska - while uslov nije tipa bool na liniji 62
ERROR 20:06:22,850 - Semanticka greska - clanovi izraza nisu tipa int na liniji 66
ERROR 20:06:22,850 - Semanticka greska - clanovi izraza nisu kompatibilni na liniji 66
ERROR 20:06:22,850 - Semanticka greska - clanovi izraza nisu tipa int na liniji 67
INFO  20:06:22,852 - ===================================
INFO  20:14:18,272 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:14:18,344 - #2 program
INFO  20:14:18,344 - #20 MJProgram
INFO  20:14:18,344 - #20 abc
INFO  20:14:18,345 - #20 a
INFO  20:14:18,346 - #40 ;
INFO  20:14:18,346 - #7 const
INFO  20:14:18,347 - #20 int
INFO  20:14:18,347 - #20 cnst
INFO  20:14:18,347 - #37 =
INFO  20:14:18,347 - #21 1
INFO  20:14:18,347 - #40 ;
INFO  20:14:18,348 - #47 {
INFO  20:14:18,349 - #20 int
INFO  20:14:18,349 - #20 fun
INFO  20:14:18,349 - #43 (
INFO  20:14:18,349 - #20 int
INFO  20:14:18,349 - #20 x
INFO  20:14:18,349 - #44 )
INFO  20:14:18,350 - #47 {
INFO  20:14:18,350 - #48 }
INFO  20:14:18,350 - #16 void
INFO  20:14:18,351 - #20 main
INFO  20:14:18,351 - #43 (
INFO  20:14:18,351 - #44 )
INFO  20:14:18,351 - #20 int
INFO  20:14:18,351 - #20 b
INFO  20:14:18,351 - #40 ;
INFO  20:14:18,352 - #20 char
INFO  20:14:18,352 - #20 b
INFO  20:14:18,352 - #40 ;
INFO  20:14:18,352 - #20 int
INFO  20:14:18,352 - #20 num
INFO  20:14:18,353 - #40 ;
INFO  20:14:18,353 - #20 char
INFO  20:14:18,353 - #20 character
INFO  20:14:18,353 - #40 ;
INFO  20:14:18,353 - #20 bool
INFO  20:14:18,353 - #20 boolean
INFO  20:14:18,353 - #40 ;
INFO  20:14:18,353 - #20 int
INFO  20:14:18,354 - #20 niz
INFO  20:14:18,354 - #45 [
INFO  20:14:18,354 - #46 ]
INFO  20:14:18,354 - #41 ,
INFO  20:14:18,354 - #20 niz1
INFO  20:14:18,354 - #45 [
INFO  20:14:18,354 - #46 ]
INFO  20:14:18,354 - #40 ;
INFO  20:14:18,354 - #47 {
INFO  20:14:18,354 - #20 a
INFO  20:14:18,355 - #37 =
INFO  20:14:18,355 - #21 1
INFO  20:14:18,355 - #40 ;
INFO  20:14:18,356 - #20 num
INFO  20:14:18,356 - #37 =
INFO  20:14:18,356 - #22 a
INFO  20:14:18,357 - #40 ;
INFO  20:14:18,357 - #20 num
INFO  20:14:18,357 - #37 =
INFO  20:14:18,357 - #23 true
INFO  20:14:18,357 - #40 ;
INFO  20:14:18,358 - #20 character
INFO  20:14:18,358 - #37 =
INFO  20:14:18,358 - #21 1
INFO  20:14:18,358 - #40 ;
INFO  20:14:18,358 - #20 character
INFO  20:14:18,359 - #37 =
INFO  20:14:18,359 - #23 true
INFO  20:14:18,359 - #40 ;
INFO  20:14:18,359 - #20 boolean
INFO  20:14:18,359 - #37 =
INFO  20:14:18,359 - #21 1
INFO  20:14:18,359 - #40 ;
INFO  20:14:18,360 - #20 boolean
INFO  20:14:18,360 - #37 =
INFO  20:14:18,360 - #22 a
INFO  20:14:18,360 - #40 ;
INFO  20:14:18,360 - #20 cnst
INFO  20:14:18,360 - #37 =
INFO  20:14:18,360 - #21 2
INFO  20:14:18,360 - #40 ;
INFO  20:14:18,361 - #20 character
INFO  20:14:18,361 - #38 ++
INFO  20:14:18,361 - #40 ;
INFO  20:14:18,362 - #20 boolean
INFO  20:14:18,362 - #39 --
INFO  20:14:18,362 - #40 ;
INFO  20:14:18,362 - #20 fun
INFO  20:14:18,363 - #43 (
INFO  20:14:18,363 - #21 1
INFO  20:14:18,364 - #41 ,
INFO  20:14:18,364 - #21 2
INFO  20:14:18,364 - #44 )
INFO  20:14:18,364 - #40 ;
INFO  20:14:18,365 - #20 fun
INFO  20:14:18,365 - #43 (
INFO  20:14:18,365 - #23 true
INFO  20:14:18,365 - #44 )
INFO  20:14:18,365 - #40 ;
INFO  20:14:18,365 - #20 character
INFO  20:14:18,365 - #37 =
INFO  20:14:18,365 - #25 -
INFO  20:14:18,366 - #22 a
INFO  20:14:18,366 - #40 ;
INFO  20:14:18,366 - #20 niz
INFO  20:14:18,366 - #37 =
INFO  20:14:18,366 - #12 new
INFO  20:14:18,366 - #20 int
INFO  20:14:18,366 - #45 [
INFO  20:14:18,366 - #22 a
INFO  20:14:18,366 - #46 ]
INFO  20:14:18,367 - #40 ;
INFO  20:14:18,367 - #10 do
INFO  20:14:18,367 - #47 {
INFO  20:14:18,368 - #20 num
INFO  20:14:18,369 - #38 ++
INFO  20:14:18,369 - #40 ;
INFO  20:14:18,369 - #3 break
INFO  20:14:18,369 - #40 ;
INFO  20:14:18,369 - #18 continue
INFO  20:14:18,370 - #40 ;
INFO  20:14:18,370 - #48 }
INFO  20:14:18,371 - #11 while
INFO  20:14:18,371 - #43 (
INFO  20:14:18,371 - #20 num
INFO  20:14:18,371 - #33 <
INFO  20:14:18,372 - #21 10
INFO  20:14:18,373 - #44 )
INFO  20:14:18,374 - #40 ;
INFO  20:14:18,374 - #3 break
INFO  20:14:18,374 - #40 ;
INFO  20:14:18,374 - #18 continue
INFO  20:14:18,374 - #40 ;
INFO  20:14:18,375 - #8 if
INFO  20:14:18,375 - #43 (
INFO  20:14:18,375 - #20 niz
INFO  20:14:18,375 - #33 <
INFO  20:14:18,375 - #20 niz1
INFO  20:14:18,375 - #44 )
INFO  20:14:18,375 - #47 {
INFO  20:14:18,375 - #20 num
INFO  20:14:18,376 - #37 =
INFO  20:14:18,376 - #21 1
INFO  20:14:18,376 - #40 ;
INFO  20:14:18,376 - #48 }
INFO  20:14:18,376 - #8 if
INFO  20:14:18,376 - #43 (
INFO  20:14:18,376 - #20 num
INFO  20:14:18,376 - #44 )
INFO  20:14:18,377 - #47 {
INFO  20:14:18,377 - #20 num
INFO  20:14:18,377 - #37 =
INFO  20:14:18,377 - #21 2
INFO  20:14:18,377 - #40 ;
INFO  20:14:18,377 - #48 }
INFO  20:14:18,377 - #10 do
INFO  20:14:18,377 - #47 {
INFO  20:14:18,377 - #20 niz
INFO  20:14:18,377 - #45 [
INFO  20:14:18,377 - #23 true
INFO  20:14:18,377 - #46 ]
INFO  20:14:18,378 - #37 =
INFO  20:14:18,378 - #21 1
INFO  20:14:18,378 - #40 ;
INFO  20:14:18,378 - #48 }
INFO  20:14:18,378 - #11 while
INFO  20:14:18,378 - #43 (
INFO  20:14:18,378 - #20 num
INFO  20:14:18,378 - #44 )
INFO  20:14:18,378 - #40 ;
INFO  20:14:18,378 - #20 num
INFO  20:14:18,378 - #37 =
INFO  20:14:18,379 - #20 num
INFO  20:14:18,379 - #24 +
INFO  20:14:18,379 - #22 a
INFO  20:14:18,380 - #40 ;
INFO  20:14:18,380 - #20 num
INFO  20:14:18,381 - #37 =
INFO  20:14:18,381 - #20 num
INFO  20:14:18,381 - #26 *
INFO  20:14:18,381 - #22 a
INFO  20:14:18,382 - #40 ;
INFO  20:14:18,382 - #20 num
INFO  20:14:18,383 - #37 =
INFO  20:14:18,383 - #20 boolean
INFO  20:14:18,383 - #49 ?
INFO  20:14:18,383 - #21 1
INFO  20:14:18,383 - #50 :
INFO  20:14:18,383 - #21 2
INFO  20:14:18,383 - #40 ;
INFO  20:14:18,384 - #48 }
INFO  20:14:18,384 - #48 }
INFO  20:14:18,385 - 

================SINTAKSNO STABLO====================


INFO  20:14:18,391 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
              VarArray(
               niz1
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementMulti(
                                                  StatementMulti(
                                                    StatementSingle(
                                                      StmtDesign(
                                                        DesignatorAssignment(
                                                          DesignatorSimple(
                                                           a
                                                          ) [DesignatorSimple]
                                                          AssignmentExpr(
                                                            ExprOne(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorNumConst(
                                                                   1
                                                                  ) [FactorNumConst]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [ExprOne]
                                                          ) [AssignmentExpr]
                                                        ) [DesignatorAssignment]
                                                      ) [StmtDesign]
                                                    ) [StatementSingle]
                                                    StmtDesign(
                                                      DesignatorAssignment(
                                                        DesignatorSimple(
                                                         num
                                                        ) [DesignatorSimple]
                                                        AssignmentExpr(
                                                          ExprOne(
                                                            ExprSingle(
                                                              TermSingle(
                                                                FactorCharConst(
                                                                 a
                                                                ) [FactorCharConst]
                                                              ) [TermSingle]
                                                            ) [ExprSingle]
                                                          ) [ExprOne]
                                                        ) [AssignmentExpr]
                                                      ) [DesignatorAssignment]
                                                    ) [StmtDesign]
                                                  ) [StatementMulti]
                                                  StmtDesign(
                                                    DesignatorAssignment(
                                                      DesignatorSimple(
                                                       num
                                                      ) [DesignatorSimple]
                                                      AssignmentExpr(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorBoolConst(
                                                               true
                                                              ) [FactorBoolConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [AssignmentExpr]
                                                    ) [DesignatorAssignment]
                                                  ) [StmtDesign]
                                                ) [StatementMulti]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     character
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             1
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorSimple(
                                                   character
                                                  ) [DesignatorSimple]
                                                  AssignmentExpr(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorBoolConst(
                                                           true
                                                          ) [FactorBoolConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementMulti]
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 boolean
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               boolean
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorCharConst(
                                                       a
                                                      ) [FactorCharConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             cnst
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     2
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorIncrement(
                                          DesignatorSimple(
                                           character
                                          ) [DesignatorSimple]
                                        ) [DesignatorIncrement]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorDecrement(
                                        DesignatorSimple(
                                         boolean
                                        ) [DesignatorSimple]
                                      ) [DesignatorDecrement]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorMethodCallParams(
                                      DesignatorSimple(
                                       fun
                                      ) [DesignatorSimple]
                                      ActParsMulti(
                                        ActParsSingle(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [ActParsSingle]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               2
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [ActParsMulti]
                                    ) [DesignatorMethodCallParams]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorMethodCallParams(
                                    DesignatorSimple(
                                     fun
                                    ) [DesignatorSimple]
                                    ActParsSingle(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorBoolConst(
                                             true
                                            ) [FactorBoolConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [ActParsSingle]
                                  ) [DesignatorMethodCallParams]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   character
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprNeg(
                                        TermSingle(
                                          FactorCharConst(
                                           a
                                          ) [FactorCharConst]
                                        ) [TermSingle]
                                      ) [ExprNeg]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 niz
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNewArray(
                                          Type(
                                           int
                                          ) [Type]
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorCharConst(
                                                 a
                                                ) [FactorCharConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [FactorNewArray]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDoWhile(
                            DoHead(
                            ) [DoHead]
                            Stmt(
                              StatementMulti(
                                StatementMulti(
                                  StatementSingle(
                                    StmtDesign(
                                      DesignatorIncrement(
                                        DesignatorSimple(
                                         num
                                        ) [DesignatorSimple]
                                      ) [DesignatorIncrement]
                                    ) [StmtDesign]
                                  ) [StatementSingle]
                                  StmtBreak(
                                  ) [StmtBreak]
                                ) [StatementMulti]
                                StmtContinue(
                                ) [StmtContinue]
                              ) [StatementMulti]
                            ) [Stmt]
                            CondOne(
                              CondTermOne(
                                CondFactTwo(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorSimple(
                                           num
                                          ) [DesignatorSimple]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                  RelopLT(
                                  ) [RelopLT]
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         10
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [CondFactTwo]
                              ) [CondTermOne]
                            ) [CondOne]
                          ) [StmtDoWhile]
                        ) [StatementMulti]
                        StmtBreak(
                        ) [StmtBreak]
                      ) [StatementMulti]
                      StmtContinue(
                      ) [StmtContinue]
                    ) [StatementMulti]
                    StmtIf(
                      StmtIfBody(
                        IfCond(
                          CondOne(
                            CondTermOne(
                              CondFactTwo(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         niz
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                                RelopLT(
                                ) [RelopLT]
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         niz1
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [CondFactTwo]
                            ) [CondTermOne]
                          ) [CondOne]
                        ) [IfCond]
                        Stmt(
                          StatementSingle(
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         1
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementSingle]
                        ) [Stmt]
                      ) [StmtIfBody]
                    ) [StmtIf]
                  ) [StatementMulti]
                  StmtIf(
                    StmtIfBody(
                      IfCond(
                        CondOne(
                          CondTermOne(
                            CondFactOne(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       num
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [CondFactOne]
                          ) [CondTermOne]
                        ) [CondOne]
                      ) [IfCond]
                      Stmt(
                        StatementSingle(
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementSingle]
                      ) [Stmt]
                    ) [StmtIfBody]
                  ) [StmtIf]
                ) [StatementMulti]
                StmtDoWhile(
                  DoHead(
                  ) [DoHead]
                  Stmt(
                    StatementSingle(
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorArray(
                           niz
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   true
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [DesignatorArray]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   1
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementSingle]
                  ) [Stmt]
                  CondOne(
                    CondTermOne(
                      CondFactOne(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactOne]
                    ) [CondTermOne]
                  ) [CondOne]
                ) [StmtDoWhile]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   num
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprAddop(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                        AddopPlus(
                        ) [AddopPlus]
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprAddop]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 num
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermMulop(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                        MulopMul(
                        ) [MulopMul]
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermMulop]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               num
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprTernary(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         boolean
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       1
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       2
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprTernary]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  20:14:18,395 - 

================SEMANTICKA OBRADA====================


ERROR 20:14:18,418 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  20:14:18,418 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  20:14:18,418 - Deklarisana konstanta 'cnst' na liniji 3
INFO  20:14:18,419 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 20:14:18,419 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  20:14:18,419 - Deklarisana promenljiva 'b' na liniji 14
ERROR 20:14:18,419 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  20:14:18,419 - Deklarisana promenljiva 'num' na liniji 15
INFO  20:14:18,419 - Deklarisana promenljiva 'character' na liniji 15
INFO  20:14:18,420 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  20:14:18,420 - Deklarisan niz 'niz' na liniji 16
INFO  20:14:18,420 - Deklarisan niz 'niz1' na liniji 16
ERROR 20:14:18,420 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 20:14:18,420 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 20:14:18,420 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 20:14:18,420 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 20:14:18,420 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 20:14:18,420 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 20:14:18,424 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 20:14:18,424 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 20:14:18,424 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 20:14:18,424 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  20:14:18,424 - Pronadjen poziv funkcije 'fun' na liniji 36
ERROR 20:14:18,425 - Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 36
INFO  20:14:18,425 - Pronadjen poziv funkcije 'fun' na liniji 37
ERROR 20:14:18,425 - Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 37
ERROR 20:14:18,425 - Semanticka greska - tip mora da bude int na liniji 40
ERROR 20:14:18,425 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 43
ERROR 20:14:18,425 - Semanticka greska - break iskaz van petlje
ERROR 20:14:18,425 - Semanticka greska - continue iskaz van petlje
ERROR 20:14:18,426 - Semanticka greska - relacioni izraz sa referentnim tipovima moze koristiti samo '==' i '!=' operatore na liniji 54
ERROR 20:14:18,427 - Semanticka greska - if uslov nije tipa bool na liniji 58
ERROR 20:14:18,427 - Semanticka greska - nevalidan pristup elementu niza na liniji 63
INFO  20:14:18,427 - Pristup elementu niza 'niz' na liniji 63
ERROR 20:14:18,427 - Semanticka greska - while uslov nije tipa bool na liniji 62
ERROR 20:14:18,427 - Semanticka greska - clanovi izraza nisu tipa int na liniji 66
ERROR 20:14:18,427 - Semanticka greska - clanovi izraza nisu kompatibilni na liniji 66
ERROR 20:14:18,427 - Semanticka greska - clanovi izraza nisu tipa int na liniji 67
INFO  20:14:18,428 - ===================================
INFO  20:14:25,027 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:14:25,095 - #2 program
INFO  20:14:25,095 - #20 MJProgram
INFO  20:14:25,095 - #20 abc
INFO  20:14:25,096 - #20 a
INFO  20:14:25,097 - #40 ;
INFO  20:14:25,097 - #7 const
INFO  20:14:25,097 - #20 int
INFO  20:14:25,097 - #20 cnst
INFO  20:14:25,097 - #37 =
INFO  20:14:25,098 - #21 1
INFO  20:14:25,098 - #40 ;
INFO  20:14:25,098 - #47 {
INFO  20:14:25,099 - #20 int
INFO  20:14:25,099 - #20 fun
INFO  20:14:25,099 - #43 (
INFO  20:14:25,099 - #20 int
INFO  20:14:25,099 - #20 x
INFO  20:14:25,099 - #44 )
INFO  20:14:25,100 - #47 {
INFO  20:14:25,100 - #48 }
INFO  20:14:25,100 - #16 void
INFO  20:14:25,100 - #20 main
INFO  20:14:25,100 - #43 (
INFO  20:14:25,101 - #44 )
INFO  20:14:25,101 - #20 int
INFO  20:14:25,101 - #20 b
INFO  20:14:25,101 - #40 ;
INFO  20:14:25,101 - #20 char
INFO  20:14:25,101 - #20 b
INFO  20:14:25,102 - #40 ;
INFO  20:14:25,102 - #20 int
INFO  20:14:25,102 - #20 num
INFO  20:14:25,102 - #40 ;
INFO  20:14:25,102 - #20 char
INFO  20:14:25,102 - #20 character
INFO  20:14:25,102 - #40 ;
INFO  20:14:25,102 - #20 bool
INFO  20:14:25,102 - #20 boolean
INFO  20:14:25,103 - #40 ;
INFO  20:14:25,103 - #20 int
INFO  20:14:25,103 - #20 niz
INFO  20:14:25,103 - #45 [
INFO  20:14:25,103 - #46 ]
INFO  20:14:25,103 - #41 ,
INFO  20:14:25,103 - #20 niz1
INFO  20:14:25,104 - #45 [
INFO  20:14:25,104 - #46 ]
INFO  20:14:25,104 - #40 ;
INFO  20:14:25,104 - #47 {
INFO  20:14:25,104 - #20 a
INFO  20:14:25,105 - #37 =
INFO  20:14:25,105 - #21 1
INFO  20:14:25,106 - #40 ;
INFO  20:14:25,107 - #20 num
INFO  20:14:25,107 - #37 =
INFO  20:14:25,107 - #22 a
INFO  20:14:25,107 - #40 ;
INFO  20:14:25,107 - #20 num
INFO  20:14:25,108 - #37 =
INFO  20:14:25,108 - #23 true
INFO  20:14:25,108 - #40 ;
INFO  20:14:25,108 - #20 character
INFO  20:14:25,108 - #37 =
INFO  20:14:25,109 - #21 1
INFO  20:14:25,109 - #40 ;
INFO  20:14:25,109 - #20 character
INFO  20:14:25,109 - #37 =
INFO  20:14:25,109 - #23 true
INFO  20:14:25,109 - #40 ;
INFO  20:14:25,109 - #20 boolean
INFO  20:14:25,110 - #37 =
INFO  20:14:25,110 - #21 1
INFO  20:14:25,110 - #40 ;
INFO  20:14:25,110 - #20 boolean
INFO  20:14:25,110 - #37 =
INFO  20:14:25,110 - #22 a
INFO  20:14:25,110 - #40 ;
INFO  20:14:25,110 - #20 cnst
INFO  20:14:25,110 - #37 =
INFO  20:14:25,110 - #21 2
INFO  20:14:25,110 - #40 ;
INFO  20:14:25,111 - #20 character
INFO  20:14:25,111 - #38 ++
INFO  20:14:25,111 - #40 ;
INFO  20:14:25,111 - #20 boolean
INFO  20:14:25,111 - #39 --
INFO  20:14:25,112 - #40 ;
INFO  20:14:25,112 - #20 fun
INFO  20:14:25,112 - #43 (
INFO  20:14:25,112 - #21 1
INFO  20:14:25,112 - #41 ,
INFO  20:14:25,112 - #21 2
INFO  20:14:25,113 - #44 )
INFO  20:14:25,113 - #40 ;
INFO  20:14:25,113 - #20 fun
INFO  20:14:25,113 - #43 (
INFO  20:14:25,113 - #23 true
INFO  20:14:25,113 - #44 )
INFO  20:14:25,113 - #40 ;
INFO  20:14:25,114 - #20 character
INFO  20:14:25,114 - #37 =
INFO  20:14:25,114 - #25 -
INFO  20:14:25,114 - #22 a
INFO  20:14:25,114 - #40 ;
INFO  20:14:25,114 - #20 niz
INFO  20:14:25,114 - #37 =
INFO  20:14:25,114 - #12 new
INFO  20:14:25,114 - #20 int
INFO  20:14:25,114 - #45 [
INFO  20:14:25,114 - #22 a
INFO  20:14:25,114 - #46 ]
INFO  20:14:25,114 - #40 ;
INFO  20:14:25,115 - #10 do
INFO  20:14:25,115 - #47 {
INFO  20:14:25,116 - #20 num
INFO  20:14:25,116 - #38 ++
INFO  20:14:25,116 - #40 ;
INFO  20:14:25,116 - #3 break
INFO  20:14:25,116 - #40 ;
INFO  20:14:25,116 - #18 continue
INFO  20:14:25,117 - #40 ;
INFO  20:14:25,117 - #48 }
INFO  20:14:25,117 - #11 while
INFO  20:14:25,117 - #43 (
INFO  20:14:25,118 - #20 num
INFO  20:14:25,118 - #33 <
INFO  20:14:25,118 - #21 10
INFO  20:14:25,119 - #44 )
INFO  20:14:25,119 - #40 ;
INFO  20:14:25,119 - #3 break
INFO  20:14:25,120 - #40 ;
INFO  20:14:25,120 - #18 continue
INFO  20:14:25,120 - #40 ;
INFO  20:14:25,120 - #8 if
INFO  20:14:25,120 - #43 (
INFO  20:14:25,120 - #20 niz
INFO  20:14:25,120 - #33 <
INFO  20:14:25,120 - #20 niz1
INFO  20:14:25,120 - #44 )
INFO  20:14:25,121 - #47 {
INFO  20:14:25,121 - #20 num
INFO  20:14:25,121 - #37 =
INFO  20:14:25,121 - #21 1
INFO  20:14:25,121 - #40 ;
INFO  20:14:25,121 - #48 }
INFO  20:14:25,121 - #8 if
INFO  20:14:25,122 - #43 (
INFO  20:14:25,122 - #20 num
INFO  20:14:25,122 - #44 )
INFO  20:14:25,122 - #47 {
INFO  20:14:25,122 - #20 num
INFO  20:14:25,122 - #37 =
INFO  20:14:25,122 - #21 2
INFO  20:14:25,122 - #40 ;
INFO  20:14:25,123 - #48 }
INFO  20:14:25,123 - #10 do
INFO  20:14:25,123 - #47 {
INFO  20:14:25,123 - #20 niz
INFO  20:14:25,123 - #45 [
INFO  20:14:25,123 - #23 true
INFO  20:14:25,124 - #46 ]
INFO  20:14:25,124 - #37 =
INFO  20:14:25,124 - #21 1
INFO  20:14:25,124 - #40 ;
INFO  20:14:25,124 - #48 }
INFO  20:14:25,124 - #11 while
INFO  20:14:25,124 - #43 (
INFO  20:14:25,124 - #20 num
INFO  20:14:25,124 - #44 )
INFO  20:14:25,125 - #40 ;
INFO  20:14:25,125 - #20 num
INFO  20:14:25,125 - #37 =
INFO  20:14:25,125 - #20 num
INFO  20:14:25,125 - #24 +
INFO  20:14:25,125 - #22 a
INFO  20:14:25,126 - #40 ;
INFO  20:14:25,127 - #20 num
INFO  20:14:25,127 - #37 =
INFO  20:14:25,127 - #20 num
INFO  20:14:25,127 - #26 *
INFO  20:14:25,127 - #22 a
INFO  20:14:25,128 - #40 ;
INFO  20:14:25,128 - #20 num
INFO  20:14:25,128 - #37 =
INFO  20:14:25,128 - #20 boolean
INFO  20:14:25,128 - #49 ?
INFO  20:14:25,128 - #21 1
INFO  20:14:25,128 - #50 :
INFO  20:14:25,128 - #22 a
INFO  20:14:25,129 - #40 ;
INFO  20:14:25,129 - #48 }
INFO  20:14:25,129 - #48 }
INFO  20:14:25,131 - 

================SINTAKSNO STABLO====================


INFO  20:14:25,137 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
              VarArray(
               niz1
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementMulti(
                                                  StatementMulti(
                                                    StatementSingle(
                                                      StmtDesign(
                                                        DesignatorAssignment(
                                                          DesignatorSimple(
                                                           a
                                                          ) [DesignatorSimple]
                                                          AssignmentExpr(
                                                            ExprOne(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorNumConst(
                                                                   1
                                                                  ) [FactorNumConst]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [ExprOne]
                                                          ) [AssignmentExpr]
                                                        ) [DesignatorAssignment]
                                                      ) [StmtDesign]
                                                    ) [StatementSingle]
                                                    StmtDesign(
                                                      DesignatorAssignment(
                                                        DesignatorSimple(
                                                         num
                                                        ) [DesignatorSimple]
                                                        AssignmentExpr(
                                                          ExprOne(
                                                            ExprSingle(
                                                              TermSingle(
                                                                FactorCharConst(
                                                                 a
                                                                ) [FactorCharConst]
                                                              ) [TermSingle]
                                                            ) [ExprSingle]
                                                          ) [ExprOne]
                                                        ) [AssignmentExpr]
                                                      ) [DesignatorAssignment]
                                                    ) [StmtDesign]
                                                  ) [StatementMulti]
                                                  StmtDesign(
                                                    DesignatorAssignment(
                                                      DesignatorSimple(
                                                       num
                                                      ) [DesignatorSimple]
                                                      AssignmentExpr(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorBoolConst(
                                                               true
                                                              ) [FactorBoolConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [AssignmentExpr]
                                                    ) [DesignatorAssignment]
                                                  ) [StmtDesign]
                                                ) [StatementMulti]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     character
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             1
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorSimple(
                                                   character
                                                  ) [DesignatorSimple]
                                                  AssignmentExpr(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorBoolConst(
                                                           true
                                                          ) [FactorBoolConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementMulti]
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 boolean
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               boolean
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorCharConst(
                                                       a
                                                      ) [FactorCharConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             cnst
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     2
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorIncrement(
                                          DesignatorSimple(
                                           character
                                          ) [DesignatorSimple]
                                        ) [DesignatorIncrement]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorDecrement(
                                        DesignatorSimple(
                                         boolean
                                        ) [DesignatorSimple]
                                      ) [DesignatorDecrement]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorMethodCallParams(
                                      DesignatorSimple(
                                       fun
                                      ) [DesignatorSimple]
                                      ActParsMulti(
                                        ActParsSingle(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [ActParsSingle]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               2
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [ActParsMulti]
                                    ) [DesignatorMethodCallParams]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorMethodCallParams(
                                    DesignatorSimple(
                                     fun
                                    ) [DesignatorSimple]
                                    ActParsSingle(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorBoolConst(
                                             true
                                            ) [FactorBoolConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [ActParsSingle]
                                  ) [DesignatorMethodCallParams]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   character
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprNeg(
                                        TermSingle(
                                          FactorCharConst(
                                           a
                                          ) [FactorCharConst]
                                        ) [TermSingle]
                                      ) [ExprNeg]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 niz
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNewArray(
                                          Type(
                                           int
                                          ) [Type]
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorCharConst(
                                                 a
                                                ) [FactorCharConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [FactorNewArray]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDoWhile(
                            DoHead(
                            ) [DoHead]
                            Stmt(
                              StatementMulti(
                                StatementMulti(
                                  StatementSingle(
                                    StmtDesign(
                                      DesignatorIncrement(
                                        DesignatorSimple(
                                         num
                                        ) [DesignatorSimple]
                                      ) [DesignatorIncrement]
                                    ) [StmtDesign]
                                  ) [StatementSingle]
                                  StmtBreak(
                                  ) [StmtBreak]
                                ) [StatementMulti]
                                StmtContinue(
                                ) [StmtContinue]
                              ) [StatementMulti]
                            ) [Stmt]
                            CondOne(
                              CondTermOne(
                                CondFactTwo(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorSimple(
                                           num
                                          ) [DesignatorSimple]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                  RelopLT(
                                  ) [RelopLT]
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         10
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [CondFactTwo]
                              ) [CondTermOne]
                            ) [CondOne]
                          ) [StmtDoWhile]
                        ) [StatementMulti]
                        StmtBreak(
                        ) [StmtBreak]
                      ) [StatementMulti]
                      StmtContinue(
                      ) [StmtContinue]
                    ) [StatementMulti]
                    StmtIf(
                      StmtIfBody(
                        IfCond(
                          CondOne(
                            CondTermOne(
                              CondFactTwo(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         niz
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                                RelopLT(
                                ) [RelopLT]
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         niz1
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [CondFactTwo]
                            ) [CondTermOne]
                          ) [CondOne]
                        ) [IfCond]
                        Stmt(
                          StatementSingle(
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         1
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementSingle]
                        ) [Stmt]
                      ) [StmtIfBody]
                    ) [StmtIf]
                  ) [StatementMulti]
                  StmtIf(
                    StmtIfBody(
                      IfCond(
                        CondOne(
                          CondTermOne(
                            CondFactOne(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       num
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [CondFactOne]
                          ) [CondTermOne]
                        ) [CondOne]
                      ) [IfCond]
                      Stmt(
                        StatementSingle(
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementSingle]
                      ) [Stmt]
                    ) [StmtIfBody]
                  ) [StmtIf]
                ) [StatementMulti]
                StmtDoWhile(
                  DoHead(
                  ) [DoHead]
                  Stmt(
                    StatementSingle(
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorArray(
                           niz
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   true
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [DesignatorArray]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   1
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementSingle]
                  ) [Stmt]
                  CondOne(
                    CondTermOne(
                      CondFactOne(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactOne]
                    ) [CondTermOne]
                  ) [CondOne]
                ) [StmtDoWhile]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   num
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprAddop(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                        AddopPlus(
                        ) [AddopPlus]
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprAddop]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 num
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermMulop(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                        MulopMul(
                        ) [MulopMul]
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermMulop]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               num
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprTernary(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         boolean
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       1
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                  ExprSingle(
                    TermSingle(
                      FactorCharConst(
                       a
                      ) [FactorCharConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprTernary]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  20:14:25,141 - 

================SEMANTICKA OBRADA====================


ERROR 20:14:25,154 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  20:14:25,155 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  20:14:25,155 - Deklarisana konstanta 'cnst' na liniji 3
INFO  20:14:25,157 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 20:14:25,157 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  20:14:25,157 - Deklarisana promenljiva 'b' na liniji 14
ERROR 20:14:25,157 - Semanticka greska - 'b' je vec deklarisano na liniji 14
INFO  20:14:25,158 - Deklarisana promenljiva 'num' na liniji 15
INFO  20:14:25,158 - Deklarisana promenljiva 'character' na liniji 15
INFO  20:14:25,158 - Deklarisana promenljiva 'boolean' na liniji 15
INFO  20:14:25,158 - Deklarisan niz 'niz' na liniji 16
INFO  20:14:25,158 - Deklarisan niz 'niz1' na liniji 16
ERROR 20:14:25,158 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 20:14:25,159 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 20:14:25,159 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 20:14:25,159 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 23
ERROR 20:14:25,159 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 20:14:25,159 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
ERROR 20:14:25,163 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 26
ERROR 20:14:25,163 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 29
ERROR 20:14:25,164 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 32
ERROR 20:14:25,164 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 33
INFO  20:14:25,164 - Pronadjen poziv funkcije 'fun' na liniji 36
ERROR 20:14:25,164 - Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 36
INFO  20:14:25,164 - Pronadjen poziv funkcije 'fun' na liniji 37
ERROR 20:14:25,164 - Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 37
ERROR 20:14:25,164 - Semanticka greska - tip mora da bude int na liniji 40
ERROR 20:14:25,165 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 43
ERROR 20:14:25,165 - Semanticka greska - break iskaz van petlje
ERROR 20:14:25,165 - Semanticka greska - continue iskaz van petlje
ERROR 20:14:25,166 - Semanticka greska - relacioni izraz sa referentnim tipovima moze koristiti samo '==' i '!=' operatore na liniji 54
ERROR 20:14:25,166 - Semanticka greska - if uslov nije tipa bool na liniji 58
ERROR 20:14:25,167 - Semanticka greska - nevalidan pristup elementu niza na liniji 63
INFO  20:14:25,167 - Pristup elementu niza 'niz' na liniji 63
ERROR 20:14:25,167 - Semanticka greska - while uslov nije tipa bool na liniji 62
ERROR 20:14:25,167 - Semanticka greska - clanovi izraza nisu tipa int na liniji 66
ERROR 20:14:25,167 - Semanticka greska - clanovi izraza nisu kompatibilni na liniji 66
ERROR 20:14:25,167 - Semanticka greska - clanovi izraza nisu tipa int na liniji 67
ERROR 20:14:25,167 - Semanticka greska - drugi i treci izraz moraju biti istog tipa na liniji 69
INFO  20:14:25,168 - ===================================
