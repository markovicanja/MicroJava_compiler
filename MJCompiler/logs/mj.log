INFO  09:00:42,913 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:00:43,023 - #2 program
INFO  09:00:43,023 - #20 test
INFO  09:00:43,023 - #47 {
INFO  09:00:43,024 - #16 void
INFO  09:00:43,024 - #20 main
INFO  09:00:43,024 - #43 (
INFO  09:00:43,025 - #44 )
INFO  09:00:43,025 - #47 {
INFO  09:00:43,025 - #48 }
INFO  09:00:43,025 - #48 }
INFO  09:00:43,026 - 

================SINTAKSNO STABLO====================


INFO  09:00:43,026 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid7(
        MethodVoidName(
         main
        ) [MethodVoidName]
      ) [MethodVoid7]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:00:43,027 - 

================SEMANTICKA OBRADA====================


INFO  09:00:43,040 - PROGRAM 0 na liniji 1
INFO  09:00:43,048 - ===================================
INFO  09:00:43,048 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  09:00:43,062 - Parsiranje uspesno zavrseno!
INFO  09:01:50,196 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:01:50,244 - #2 program
INFO  09:01:50,244 - #20 test
INFO  09:01:50,244 - #7 const
INFO  09:01:50,245 - #20 int
INFO  09:01:50,245 - #20 N
INFO  09:01:50,246 - #37 =
INFO  09:01:50,246 - #21 2
INFO  09:01:50,246 - #40 ;
INFO  09:01:50,246 - #20 int
INFO  09:01:50,247 - #20 g
INFO  09:01:50,247 - #40 ;
INFO  09:01:50,247 - #47 {
INFO  09:01:50,248 - #16 void
INFO  09:01:50,248 - #20 main
INFO  09:01:50,248 - #43 (
INFO  09:01:50,248 - #44 )
INFO  09:01:50,248 - #20 int
INFO  09:01:50,248 - #20 m
INFO  09:01:50,248 - #40 ;
INFO  09:01:50,248 - #20 int
INFO  09:01:50,249 - #20 k
INFO  09:01:50,249 - #40 ;
INFO  09:01:50,249 - #47 {
INFO  09:01:50,249 - #20 g
INFO  09:01:50,249 - #37 =
INFO  09:01:50,249 - #20 N
INFO  09:01:50,249 - #40 ;
INFO  09:01:50,250 - #20 g
INFO  09:01:50,250 - #38 ++
INFO  09:01:50,250 - #40 ;
INFO  09:01:50,250 - #20 k
INFO  09:01:50,250 - #37 =
INFO  09:01:50,250 - #20 g
INFO  09:01:50,251 - #40 ;
INFO  09:01:50,251 - #20 k
INFO  09:01:50,251 - #38 ++
INFO  09:01:50,251 - #40 ;
INFO  09:01:50,251 - #13 print
INFO  09:01:50,251 - #43 (
INFO  09:01:50,251 - #20 k
INFO  09:01:50,251 - #44 )
INFO  09:01:50,251 - #40 ;
INFO  09:01:50,251 - #48 }
INFO  09:01:50,251 - #48 }
INFO  09:01:50,253 - 

================SINTAKSNO STABLO====================


INFO  09:01:50,253 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             g
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:01:50,254 - 

================SEMANTICKA OBRADA====================


INFO  09:01:50,272 - Deklarisana konstanta 'N' na liniji 2
INFO  09:01:50,272 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:01:50,272 - Deklarisana promenljiva 'm' na liniji 6
INFO  09:01:50,272 - Deklarisana promenljiva 'k' na liniji 7
INFO  09:01:50,272 - PROGRAM 1 na liniji 1
INFO  09:01:50,273 - ===================================
INFO  09:01:50,273 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  09:01:50,280 - Parsiranje uspesno zavrseno!
INFO  09:17:00,037 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:17:00,144 - #2 program
INFO  09:17:00,144 - #20 test
INFO  09:17:00,144 - #7 const
INFO  09:17:00,145 - #20 int
INFO  09:17:00,145 - #20 N
INFO  09:17:00,146 - #37 =
INFO  09:17:00,146 - #21 2
INFO  09:17:00,146 - #40 ;
INFO  09:17:00,146 - #20 int
INFO  09:17:00,146 - #20 g
INFO  09:17:00,146 - #40 ;
INFO  09:17:00,147 - #47 {
INFO  09:17:00,147 - #16 void
INFO  09:17:00,147 - #20 main
INFO  09:17:00,147 - #43 (
INFO  09:17:00,147 - #44 )
INFO  09:17:00,147 - #20 int
INFO  09:17:00,147 - #20 m
INFO  09:17:00,147 - #40 ;
INFO  09:17:00,148 - #20 int
INFO  09:17:00,148 - #20 k
INFO  09:17:00,148 - #40 ;
INFO  09:17:00,148 - #47 {
INFO  09:17:00,148 - #20 g
INFO  09:17:00,148 - #37 =
INFO  09:17:00,149 - #20 N
INFO  09:17:00,149 - #40 ;
INFO  09:17:00,150 - #20 g
INFO  09:17:00,150 - #38 ++
INFO  09:17:00,150 - #40 ;
INFO  09:17:00,150 - #20 k
INFO  09:17:00,151 - #37 =
INFO  09:17:00,151 - #20 g
INFO  09:17:00,151 - #40 ;
INFO  09:17:00,151 - #20 k
INFO  09:17:00,152 - #38 ++
INFO  09:17:00,152 - #40 ;
INFO  09:17:00,152 - #13 print
INFO  09:17:00,152 - #43 (
INFO  09:17:00,152 - #20 k
INFO  09:17:00,152 - #44 )
INFO  09:17:00,152 - #40 ;
INFO  09:17:00,152 - #48 }
INFO  09:17:00,153 - #48 }
INFO  09:17:00,154 - 

================SINTAKSNO STABLO====================


INFO  09:17:00,155 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             g
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:17:00,156 - 

================SEMANTICKA OBRADA====================


INFO  09:17:00,170 - Deklarisana konstanta 'N' na liniji 2
INFO  09:17:00,170 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:17:00,171 - Deklarisana promenljiva 'm' na liniji 6
INFO  09:17:00,171 - Deklarisana promenljiva 'k' na liniji 7
INFO  09:17:00,171 - PROGRAM 1 na liniji 1
INFO  09:17:00,172 - ===================================
INFO  09:17:00,172 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  09:17:00,179 - Parsiranje uspesno zavrseno!
INFO  09:18:48,590 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:18:48,660 - #2 program
INFO  09:18:48,660 - #20 test
INFO  09:18:48,660 - #7 const
INFO  09:18:48,661 - #20 int
INFO  09:18:48,661 - #20 N
INFO  09:18:48,662 - #37 =
INFO  09:18:48,662 - #21 2
INFO  09:18:48,662 - #40 ;
INFO  09:18:48,663 - #20 int
INFO  09:18:48,663 - #20 g
INFO  09:18:48,663 - #40 ;
INFO  09:18:48,664 - #20 int
INFO  09:18:48,664 - #20 niz
INFO  09:18:48,664 - #45 [
INFO  09:18:48,664 - #46 ]
INFO  09:18:48,664 - #40 ;
INFO  09:18:48,664 - #47 {
INFO  09:18:48,665 - #16 void
INFO  09:18:48,665 - #20 main
INFO  09:18:48,665 - #43 (
INFO  09:18:48,665 - #44 )
INFO  09:18:48,665 - #20 int
INFO  09:18:48,665 - #20 m
INFO  09:18:48,666 - #40 ;
INFO  09:18:48,666 - #20 int
INFO  09:18:48,667 - #20 k
INFO  09:18:48,667 - #40 ;
INFO  09:18:48,668 - #47 {
INFO  09:18:48,668 - #20 g
INFO  09:18:48,671 - #37 =
INFO  09:18:48,672 - #20 N
INFO  09:18:48,672 - #40 ;
INFO  09:18:48,672 - #20 g
INFO  09:18:48,673 - #38 ++
INFO  09:18:48,673 - #40 ;
INFO  09:18:48,673 - #20 k
INFO  09:18:48,673 - #37 =
INFO  09:18:48,673 - #20 g
INFO  09:18:48,673 - #40 ;
INFO  09:18:48,673 - #20 k
INFO  09:18:48,674 - #38 ++
INFO  09:18:48,674 - #40 ;
INFO  09:18:48,674 - #13 print
INFO  09:18:48,674 - #43 (
INFO  09:18:48,674 - #20 k
INFO  09:18:48,674 - #44 )
INFO  09:18:48,675 - #40 ;
INFO  09:18:48,675 - #48 }
INFO  09:18:48,675 - #48 }
INFO  09:18:48,677 - 

================SINTAKSNO STABLO====================


INFO  09:18:48,680 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:18:48,683 - 

================SEMANTICKA OBRADA====================


INFO  09:18:48,701 - Deklarisana konstanta 'N' na liniji 2
INFO  09:18:48,702 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:18:48,704 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:18:48,705 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:18:48,706 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:18:48,711 - PROGRAM 2 na liniji 1
INFO  09:18:48,714 - ===================================
INFO  09:18:48,714 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  09:18:48,726 - Parsiranje uspesno zavrseno!
INFO  09:27:47,783 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:27:47,829 - #2 program
INFO  09:27:47,829 - #20 test
INFO  09:27:47,829 - #7 const
INFO  09:27:47,830 - #20 int
INFO  09:27:47,830 - #20 N
INFO  09:27:47,831 - #37 =
INFO  09:27:47,831 - #21 2
INFO  09:27:47,831 - #40 ;
INFO  09:27:47,831 - #20 int
INFO  09:27:47,832 - #20 g
INFO  09:27:47,832 - #40 ;
INFO  09:27:47,832 - #20 int
INFO  09:27:47,832 - #20 niz
INFO  09:27:47,832 - #45 [
INFO  09:27:47,833 - #46 ]
INFO  09:27:47,833 - #40 ;
INFO  09:27:47,833 - #47 {
INFO  09:27:47,833 - #16 void
INFO  09:27:47,833 - #20 main
INFO  09:27:47,833 - #43 (
INFO  09:27:47,833 - #44 )
INFO  09:27:47,833 - #20 int
INFO  09:27:47,833 - #20 m
INFO  09:27:47,833 - #40 ;
INFO  09:27:47,834 - #20 int
INFO  09:27:47,834 - #20 k
INFO  09:27:47,834 - #40 ;
INFO  09:27:47,834 - #20 char
INFO  09:27:47,834 - #20 c
INFO  09:27:47,834 - #40 ;
INFO  09:27:47,834 - #47 {
INFO  09:27:47,834 - #20 g
INFO  09:27:47,834 - #37 =
INFO  09:27:47,835 - #20 N
INFO  09:27:47,835 - #40 ;
INFO  09:27:47,835 - #20 g
INFO  09:27:47,836 - #38 ++
INFO  09:27:47,836 - #40 ;
INFO  09:27:47,836 - #20 k
INFO  09:27:47,836 - #37 =
INFO  09:27:47,837 - #20 g
INFO  09:27:47,837 - #40 ;
INFO  09:27:47,837 - #20 k
INFO  09:27:47,837 - #38 ++
INFO  09:27:47,837 - #40 ;
INFO  09:27:47,837 - #13 print
INFO  09:27:47,837 - #43 (
INFO  09:27:47,837 - #20 k
INFO  09:27:47,837 - #44 )
INFO  09:27:47,837 - #40 ;
INFO  09:27:47,837 - #48 }
INFO  09:27:47,837 - #48 }
INFO  09:27:47,839 - 

================SINTAKSNO STABLO====================


INFO  09:27:47,842 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:27:47,846 - 

================SEMANTICKA OBRADA====================


INFO  09:27:47,857 - Deklarisana konstanta 'N' na liniji 2
INFO  09:27:47,858 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:27:47,858 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:27:47,858 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:27:47,859 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:27:47,859 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:27:47,859 - PROGRAM 2 na liniji 1
INFO  09:27:47,860 - ===================================
INFO  09:27:47,860 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  09:27:47,866 - Parsiranje uspesno zavrseno!
INFO  09:33:25,031 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:33:25,076 - #2 program
INFO  09:33:25,076 - #20 test
INFO  09:33:25,076 - #7 const
INFO  09:33:25,077 - #20 int
INFO  09:33:25,077 - #20 N
INFO  09:33:25,078 - #37 =
INFO  09:33:25,078 - #21 2
INFO  09:33:25,078 - #40 ;
INFO  09:33:25,079 - #20 int
INFO  09:33:25,079 - #20 g
INFO  09:33:25,079 - #40 ;
INFO  09:33:25,079 - #20 int
INFO  09:33:25,079 - #20 niz
INFO  09:33:25,079 - #45 [
INFO  09:33:25,080 - #46 ]
INFO  09:33:25,080 - #40 ;
INFO  09:33:25,080 - #47 {
INFO  09:33:25,080 - #16 void
INFO  09:33:25,080 - #20 main
INFO  09:33:25,080 - #43 (
INFO  09:33:25,080 - #44 )
INFO  09:33:25,080 - #20 int
INFO  09:33:25,080 - #20 m
INFO  09:33:25,080 - #40 ;
INFO  09:33:25,080 - #20 int
INFO  09:33:25,081 - #20 k
INFO  09:33:25,081 - #40 ;
INFO  09:33:25,081 - #20 char
INFO  09:33:25,081 - #20 c
INFO  09:33:25,081 - #40 ;
INFO  09:33:25,081 - #47 {
INFO  09:33:25,082 - #20 g
INFO  09:33:25,082 - #37 =
INFO  09:33:25,082 - #20 N
INFO  09:33:25,082 - #40 ;
INFO  09:33:25,083 - #20 g
INFO  09:33:25,084 - #38 ++
INFO  09:33:25,084 - #40 ;
INFO  09:33:25,084 - #20 k
INFO  09:33:25,084 - #37 =
INFO  09:33:25,084 - #20 g
INFO  09:33:25,084 - #40 ;
INFO  09:33:25,085 - #20 k
INFO  09:33:25,085 - #38 ++
INFO  09:33:25,085 - #40 ;
INFO  09:33:25,085 - #13 print
INFO  09:33:25,085 - #43 (
INFO  09:33:25,085 - #20 k
INFO  09:33:25,085 - #44 )
INFO  09:33:25,086 - #40 ;
INFO  09:33:25,086 - #48 }
INFO  09:33:25,086 - #48 }
INFO  09:33:25,088 - 

================SINTAKSNO STABLO====================


INFO  09:33:25,089 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:33:25,089 - 

================SEMANTICKA OBRADA====================


INFO  09:33:25,100 - Deklarisana konstanta 'N' na liniji 2
INFO  09:33:25,100 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:33:25,100 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:33:25,101 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:33:25,101 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:33:25,101 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:33:25,101 - PROGRAM 2 na liniji 1
INFO  09:33:25,102 - ===================================
INFO  09:33:25,102 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  09:33:25,108 - Parsiranje uspesno zavrseno!
INFO  09:33:45,067 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:33:45,113 - #2 program
INFO  09:33:45,113 - #20 test
INFO  09:33:45,114 - #7 const
INFO  09:33:45,114 - #20 int
INFO  09:33:45,114 - #20 N
INFO  09:33:45,115 - #37 =
INFO  09:33:45,115 - #21 2
INFO  09:33:45,116 - #40 ;
INFO  09:33:45,116 - #20 int
INFO  09:33:45,117 - #20 g
INFO  09:33:45,117 - #40 ;
INFO  09:33:45,117 - #20 int
INFO  09:33:45,117 - #20 niz
INFO  09:33:45,117 - #45 [
INFO  09:33:45,118 - #46 ]
INFO  09:33:45,118 - #40 ;
INFO  09:33:45,118 - #47 {
INFO  09:33:45,118 - #16 void
INFO  09:33:45,118 - #20 main
INFO  09:33:45,118 - #43 (
INFO  09:33:45,118 - #44 )
INFO  09:33:45,118 - #20 int
INFO  09:33:45,118 - #20 m
INFO  09:33:45,118 - #40 ;
INFO  09:33:45,119 - #20 int
INFO  09:33:45,119 - #20 k
INFO  09:33:45,119 - #40 ;
INFO  09:33:45,119 - #20 char
INFO  09:33:45,119 - #20 c
INFO  09:33:45,120 - #40 ;
INFO  09:33:45,120 - #47 {
INFO  09:33:45,120 - #20 g
INFO  09:33:45,120 - #37 =
INFO  09:33:45,120 - #20 N
INFO  09:33:45,120 - #40 ;
INFO  09:33:45,121 - #20 g
INFO  09:33:45,121 - #38 ++
INFO  09:33:45,122 - #40 ;
INFO  09:33:45,122 - #20 k
INFO  09:33:45,122 - #37 =
INFO  09:33:45,122 - #20 g
INFO  09:33:45,122 - #40 ;
INFO  09:33:45,122 - #20 k
INFO  09:33:45,123 - #38 ++
INFO  09:33:45,123 - #40 ;
INFO  09:33:45,123 - #13 print
INFO  09:33:45,123 - #43 (
INFO  09:33:45,123 - #20 k
INFO  09:33:45,123 - #44 )
INFO  09:33:45,123 - #40 ;
INFO  09:33:45,123 - #48 }
INFO  09:33:45,123 - #48 }
INFO  09:33:45,125 - 

================SINTAKSNO STABLO====================


INFO  09:33:45,125 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:33:45,126 - 

================SEMANTICKA OBRADA====================


INFO  09:33:45,136 - Deklarisana konstanta 'N' na liniji 2
INFO  09:33:45,136 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:33:45,136 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:33:45,136 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:33:45,136 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:33:45,136 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:33:45,137 - PROGRAM 2 na liniji 1
INFO  09:33:45,137 - ===================================
INFO  09:33:45,138 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  09:33:45,145 - Parsiranje uspesno zavrseno!
INFO  09:35:55,475 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:35:55,521 - #2 program
INFO  09:35:55,521 - #20 test
INFO  09:35:55,521 - #7 const
INFO  09:35:55,522 - #20 int
INFO  09:35:55,522 - #20 N
INFO  09:35:55,522 - #37 =
INFO  09:35:55,522 - #21 2
INFO  09:35:55,522 - #40 ;
INFO  09:35:55,523 - #20 int
INFO  09:35:55,523 - #20 g
INFO  09:35:55,523 - #40 ;
INFO  09:35:55,524 - #20 int
INFO  09:35:55,524 - #20 niz
INFO  09:35:55,524 - #45 [
INFO  09:35:55,524 - #46 ]
INFO  09:35:55,524 - #40 ;
INFO  09:35:55,524 - #47 {
INFO  09:35:55,524 - #16 void
INFO  09:35:55,524 - #20 main
INFO  09:35:55,524 - #43 (
INFO  09:35:55,525 - #44 )
INFO  09:35:55,525 - #20 int
INFO  09:35:55,525 - #20 m
INFO  09:35:55,525 - #40 ;
INFO  09:35:55,525 - #20 int
INFO  09:35:55,525 - #20 k
INFO  09:35:55,525 - #40 ;
INFO  09:35:55,525 - #20 char
INFO  09:35:55,526 - #20 c
INFO  09:35:55,526 - #40 ;
INFO  09:35:55,526 - #47 {
INFO  09:35:55,526 - #20 g
INFO  09:35:55,526 - #37 =
INFO  09:35:55,526 - #20 N
INFO  09:35:55,526 - #40 ;
INFO  09:35:55,527 - #20 g
INFO  09:35:55,527 - #38 ++
INFO  09:35:55,527 - #40 ;
INFO  09:35:55,527 - #20 k
INFO  09:35:55,528 - #37 =
INFO  09:35:55,528 - #20 g
INFO  09:35:55,528 - #40 ;
INFO  09:35:55,528 - #20 k
INFO  09:35:55,528 - #38 ++
INFO  09:35:55,528 - #40 ;
INFO  09:35:55,528 - #13 print
INFO  09:35:55,528 - #43 (
INFO  09:35:55,528 - #20 k
INFO  09:35:55,528 - #44 )
INFO  09:35:55,529 - #40 ;
INFO  09:35:55,529 - #48 }
INFO  09:35:55,529 - #48 }
INFO  09:35:55,530 - 

================SINTAKSNO STABLO====================


INFO  09:35:55,531 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:35:55,533 - 

================SEMANTICKA OBRADA====================


INFO  09:35:55,542 - Deklarisana konstanta 'N' na liniji 2
INFO  09:35:55,542 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:35:55,543 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:35:55,543 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:35:55,543 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:35:55,543 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:35:55,543 - PROGRAM 2 na liniji 1
INFO  09:35:55,544 - ===================================
INFO  09:35:55,544 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  09:35:55,551 - Parsiranje uspesno zavrseno!
INFO  09:37:01,216 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:37:01,263 - #2 program
INFO  09:37:01,263 - #20 test
INFO  09:37:01,263 - #7 const
INFO  09:37:01,264 - #20 int
INFO  09:37:01,264 - #20 N
INFO  09:37:01,264 - #37 =
INFO  09:37:01,264 - #21 2
INFO  09:37:01,264 - #40 ;
INFO  09:37:01,265 - #20 int
INFO  09:37:01,265 - #20 g
INFO  09:37:01,265 - #40 ;
INFO  09:37:01,265 - #20 int
INFO  09:37:01,266 - #20 niz
INFO  09:37:01,266 - #45 [
INFO  09:37:01,266 - #46 ]
INFO  09:37:01,266 - #40 ;
INFO  09:37:01,266 - #47 {
INFO  09:37:01,266 - #16 void
INFO  09:37:01,266 - #20 main
INFO  09:37:01,266 - #43 (
INFO  09:37:01,266 - #44 )
INFO  09:37:01,267 - #20 int
INFO  09:37:01,267 - #20 m
INFO  09:37:01,267 - #40 ;
INFO  09:37:01,267 - #20 int
INFO  09:37:01,267 - #20 k
INFO  09:37:01,267 - #40 ;
INFO  09:37:01,267 - #20 char
INFO  09:37:01,268 - #20 c
INFO  09:37:01,268 - #40 ;
INFO  09:37:01,269 - #47 {
INFO  09:37:01,269 - #20 g
INFO  09:37:01,269 - #37 =
INFO  09:37:01,269 - #20 N
INFO  09:37:01,270 - #40 ;
INFO  09:37:01,271 - #20 g
INFO  09:37:01,271 - #38 ++
INFO  09:37:01,271 - #40 ;
INFO  09:37:01,271 - #20 k
INFO  09:37:01,271 - #37 =
INFO  09:37:01,271 - #20 g
INFO  09:37:01,272 - #40 ;
INFO  09:37:01,272 - #20 k
INFO  09:37:01,272 - #38 ++
INFO  09:37:01,272 - #40 ;
INFO  09:37:01,272 - #13 print
INFO  09:37:01,272 - #43 (
INFO  09:37:01,272 - #20 k
INFO  09:37:01,272 - #44 )
INFO  09:37:01,272 - #40 ;
INFO  09:37:01,272 - #48 }
INFO  09:37:01,272 - #48 }
INFO  09:37:01,273 - 

================SINTAKSNO STABLO====================


INFO  09:37:01,274 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:37:01,275 - 

================SEMANTICKA OBRADA====================


INFO  09:37:01,285 - Deklarisana konstanta 'N' na liniji 2
INFO  09:37:01,286 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:37:01,286 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:37:01,286 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:37:01,286 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:37:01,286 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:37:01,287 - PROGRAM 2 na liniji 1
INFO  09:37:01,287 - ===================================
INFO  09:37:01,287 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  09:37:01,293 - Parsiranje uspesno zavrseno!
INFO  09:37:24,915 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:37:24,958 - #2 program
INFO  09:37:24,958 - #20 test
INFO  09:37:24,958 - #7 const
INFO  09:37:24,958 - #20 int
INFO  09:37:24,959 - #20 N
INFO  09:37:24,959 - #37 =
INFO  09:37:24,959 - #21 2
INFO  09:37:24,959 - #40 ;
INFO  09:37:24,960 - #20 int
INFO  09:37:24,960 - #20 g
INFO  09:37:24,960 - #40 ;
INFO  09:37:24,960 - #20 int
INFO  09:37:24,960 - #20 niz
INFO  09:37:24,960 - #45 [
INFO  09:37:24,960 - #46 ]
INFO  09:37:24,960 - #40 ;
INFO  09:37:24,961 - #47 {
INFO  09:37:24,961 - #16 void
INFO  09:37:24,961 - #20 main
INFO  09:37:24,961 - #43 (
INFO  09:37:24,961 - #44 )
INFO  09:37:24,961 - #20 int
INFO  09:37:24,961 - #20 m
INFO  09:37:24,961 - #40 ;
INFO  09:37:24,961 - #20 int
INFO  09:37:24,962 - #20 k
INFO  09:37:24,962 - #40 ;
INFO  09:37:24,962 - #20 char
INFO  09:37:24,962 - #20 c
INFO  09:37:24,962 - #40 ;
INFO  09:37:24,962 - #47 {
INFO  09:37:24,962 - #20 g
INFO  09:37:24,962 - #37 =
INFO  09:37:24,963 - #20 N
INFO  09:37:24,963 - #40 ;
INFO  09:37:24,963 - #20 g
INFO  09:37:24,964 - #38 ++
INFO  09:37:24,964 - #40 ;
INFO  09:37:24,964 - #20 k
INFO  09:37:24,964 - #37 =
INFO  09:37:24,964 - #20 g
INFO  09:37:24,964 - #40 ;
INFO  09:37:24,964 - #20 k
INFO  09:37:24,964 - #38 ++
INFO  09:37:24,964 - #40 ;
INFO  09:37:24,964 - #13 print
INFO  09:37:24,965 - #43 (
INFO  09:37:24,965 - #20 k
INFO  09:37:24,965 - #44 )
INFO  09:37:24,965 - #40 ;
INFO  09:37:24,965 - #48 }
INFO  09:37:24,965 - #48 }
INFO  09:37:24,966 - 

================SINTAKSNO STABLO====================


INFO  09:37:24,967 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:37:24,968 - 

================SEMANTICKA OBRADA====================


INFO  09:37:24,978 - Deklarisana konstanta 'N' na liniji 2
INFO  09:37:24,978 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:37:24,978 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:37:24,979 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:37:24,979 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:37:24,979 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:37:24,980 - PROGRAM 2 na liniji 1
INFO  09:37:24,981 - ===================================
INFO  09:37:24,981 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 09:37:24,986 - PC noObj na liniji 7!
INFO  09:37:24,986 - Parsiranje uspesno zavrseno!
INFO  09:37:41,250 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:37:41,295 - #2 program
INFO  09:37:41,295 - #20 test
INFO  09:37:41,295 - #7 const
INFO  09:37:41,296 - #20 int
INFO  09:37:41,296 - #20 N
INFO  09:37:41,296 - #37 =
INFO  09:37:41,296 - #21 2
INFO  09:37:41,296 - #40 ;
INFO  09:37:41,297 - #20 int
INFO  09:37:41,297 - #20 g
INFO  09:37:41,297 - #40 ;
INFO  09:37:41,297 - #20 int
INFO  09:37:41,298 - #20 niz
INFO  09:37:41,298 - #45 [
INFO  09:37:41,298 - #46 ]
INFO  09:37:41,298 - #40 ;
INFO  09:37:41,298 - #47 {
INFO  09:37:41,298 - #16 void
INFO  09:37:41,298 - #20 main
INFO  09:37:41,298 - #43 (
INFO  09:37:41,298 - #44 )
INFO  09:37:41,298 - #20 int
INFO  09:37:41,298 - #20 m
INFO  09:37:41,298 - #40 ;
INFO  09:37:41,299 - #20 int
INFO  09:37:41,299 - #20 k
INFO  09:37:41,299 - #40 ;
INFO  09:37:41,299 - #20 char
INFO  09:37:41,299 - #20 c
INFO  09:37:41,299 - #40 ;
INFO  09:37:41,299 - #47 {
INFO  09:37:41,299 - #20 g
INFO  09:37:41,299 - #37 =
INFO  09:37:41,300 - #20 N
INFO  09:37:41,300 - #40 ;
INFO  09:37:41,300 - #20 g
INFO  09:37:41,301 - #38 ++
INFO  09:37:41,301 - #40 ;
INFO  09:37:41,301 - #20 k
INFO  09:37:41,301 - #37 =
INFO  09:37:41,301 - #20 g
INFO  09:37:41,301 - #40 ;
INFO  09:37:41,302 - #20 k
INFO  09:37:41,302 - #38 ++
INFO  09:37:41,302 - #40 ;
INFO  09:37:41,302 - #13 print
INFO  09:37:41,302 - #43 (
INFO  09:37:41,302 - #20 k
INFO  09:37:41,302 - #44 )
INFO  09:37:41,302 - #40 ;
INFO  09:37:41,302 - #48 }
INFO  09:37:41,303 - #48 }
INFO  09:37:41,304 - 

================SINTAKSNO STABLO====================


INFO  09:37:41,305 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:37:41,307 - 

================SEMANTICKA OBRADA====================


INFO  09:37:41,316 - Deklarisana konstanta 'N' na liniji 2
INFO  09:37:41,317 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:37:41,317 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:37:41,317 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:37:41,317 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:37:41,317 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:37:41,318 - PROGRAM 2 na liniji 1
INFO  09:37:41,318 - ===================================
INFO  09:37:41,318 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 09:37:41,324 - PC main na liniji 7!
INFO  09:37:41,324 - Parsiranje uspesno zavrseno!
INFO  09:38:28,125 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:38:28,200 - #2 program
INFO  09:38:28,200 - #20 test
INFO  09:38:28,201 - #7 const
INFO  09:38:28,202 - #20 int
INFO  09:38:28,202 - #20 N
INFO  09:38:28,203 - #37 =
INFO  09:38:28,203 - #21 2
INFO  09:38:28,203 - #40 ;
INFO  09:38:28,204 - #20 int
INFO  09:38:28,205 - #20 g
INFO  09:38:28,205 - #40 ;
INFO  09:38:28,205 - #20 int
INFO  09:38:28,205 - #20 niz
INFO  09:38:28,206 - #45 [
INFO  09:38:28,206 - #46 ]
INFO  09:38:28,206 - #40 ;
INFO  09:38:28,206 - #47 {
INFO  09:38:28,206 - #16 void
INFO  09:38:28,206 - #20 main
INFO  09:38:28,206 - #43 (
INFO  09:38:28,207 - #44 )
INFO  09:38:28,207 - #20 int
INFO  09:38:28,207 - #20 m
INFO  09:38:28,207 - #40 ;
INFO  09:38:28,207 - #20 int
INFO  09:38:28,208 - #20 k
INFO  09:38:28,208 - #40 ;
INFO  09:38:28,208 - #20 char
INFO  09:38:28,208 - #20 c
INFO  09:38:28,208 - #40 ;
INFO  09:38:28,208 - #47 {
INFO  09:38:28,208 - #20 g
INFO  09:38:28,208 - #37 =
INFO  09:38:28,209 - #20 N
INFO  09:38:28,209 - #40 ;
INFO  09:38:28,210 - #20 g
INFO  09:38:28,210 - #38 ++
INFO  09:38:28,210 - #40 ;
INFO  09:38:28,210 - #20 k
INFO  09:38:28,210 - #37 =
INFO  09:38:28,211 - #20 g
INFO  09:38:28,211 - #40 ;
INFO  09:38:28,211 - #20 k
INFO  09:38:28,211 - #38 ++
INFO  09:38:28,211 - #40 ;
INFO  09:38:28,211 - #13 print
INFO  09:38:28,211 - #43 (
INFO  09:38:28,211 - #20 k
INFO  09:38:28,211 - #44 )
INFO  09:38:28,211 - #40 ;
INFO  09:38:28,211 - #48 }
INFO  09:38:28,212 - #48 }
INFO  09:38:28,213 - 

================SINTAKSNO STABLO====================


INFO  09:38:28,214 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:38:28,216 - 

================SEMANTICKA OBRADA====================


INFO  09:38:28,229 - Deklarisana konstanta 'N' na liniji 2
INFO  09:38:28,230 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:38:28,230 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:38:28,230 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:38:28,230 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:38:28,230 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:38:28,231 - PROGRAM 2 na liniji 1
INFO  09:38:28,232 - ===================================
INFO  09:38:28,232 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 09:38:28,238 - PC main na liniji 7!
INFO  09:38:28,239 - Parsiranje uspesno zavrseno!
INFO  09:39:43,435 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:39:43,480 - #2 program
INFO  09:39:43,480 - #20 test
INFO  09:39:43,480 - #7 const
INFO  09:39:43,480 - #20 int
INFO  09:39:43,481 - #20 N
INFO  09:39:43,481 - #37 =
INFO  09:39:43,481 - #21 2
INFO  09:39:43,481 - #40 ;
INFO  09:39:43,482 - #20 int
INFO  09:39:43,482 - #20 g
INFO  09:39:43,482 - #40 ;
INFO  09:39:43,482 - #20 int
INFO  09:39:43,483 - #20 niz
INFO  09:39:43,483 - #45 [
INFO  09:39:43,483 - #46 ]
INFO  09:39:43,483 - #40 ;
INFO  09:39:43,483 - #47 {
INFO  09:39:43,483 - #16 void
INFO  09:39:43,483 - #20 main
INFO  09:39:43,483 - #43 (
INFO  09:39:43,483 - #44 )
INFO  09:39:43,484 - #20 int
INFO  09:39:43,484 - #20 m
INFO  09:39:43,484 - #40 ;
INFO  09:39:43,484 - #20 int
INFO  09:39:43,484 - #20 k
INFO  09:39:43,484 - #40 ;
INFO  09:39:43,484 - #20 char
INFO  09:39:43,484 - #20 c
INFO  09:39:43,484 - #40 ;
INFO  09:39:43,484 - #47 {
INFO  09:39:43,485 - #20 g
INFO  09:39:43,485 - #37 =
INFO  09:39:43,485 - #20 N
INFO  09:39:43,485 - #40 ;
INFO  09:39:43,486 - #20 g
INFO  09:39:43,486 - #38 ++
INFO  09:39:43,486 - #40 ;
INFO  09:39:43,486 - #20 k
INFO  09:39:43,486 - #37 =
INFO  09:39:43,486 - #20 g
INFO  09:39:43,486 - #40 ;
INFO  09:39:43,486 - #20 k
INFO  09:39:43,487 - #38 ++
INFO  09:39:43,487 - #40 ;
INFO  09:39:43,487 - #13 print
INFO  09:39:43,487 - #43 (
INFO  09:39:43,487 - #20 k
INFO  09:39:43,487 - #44 )
INFO  09:39:43,487 - #40 ;
INFO  09:39:43,487 - #48 }
INFO  09:39:43,487 - #48 }
INFO  09:39:43,488 - 

================SINTAKSNO STABLO====================


INFO  09:39:43,489 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:39:43,490 - 

================SEMANTICKA OBRADA====================


INFO  09:39:43,499 - Deklarisana konstanta 'N' na liniji 2
INFO  09:39:43,500 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:39:43,500 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:39:43,500 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:39:43,500 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:39:43,500 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:39:43,501 - PROGRAM 2 na liniji 1
INFO  09:39:43,501 - ===================================
INFO  09:39:43,501 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 09:39:43,507 - METHOD N
ERROR 09:39:43,507 - METHOD g
ERROR 09:39:43,507 - METHOD niz
ERROR 09:39:43,507 - METHOD main
ERROR 09:39:43,507 - PC main na liniji 7!
INFO  09:39:43,508 - Parsiranje uspesno zavrseno!
INFO  09:40:10,289 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:40:10,343 - #2 program
INFO  09:40:10,343 - #20 test
INFO  09:40:10,343 - #7 const
INFO  09:40:10,344 - #20 int
INFO  09:40:10,344 - #20 N
INFO  09:40:10,345 - #37 =
INFO  09:40:10,345 - #21 2
INFO  09:40:10,345 - #40 ;
INFO  09:40:10,345 - #20 int
INFO  09:40:10,346 - #20 g
INFO  09:40:10,346 - #40 ;
INFO  09:40:10,346 - #20 int
INFO  09:40:10,346 - #20 niz
INFO  09:40:10,346 - #45 [
INFO  09:40:10,346 - #46 ]
INFO  09:40:10,346 - #40 ;
INFO  09:40:10,347 - #47 {
INFO  09:40:10,347 - #16 void
INFO  09:40:10,347 - #20 main
INFO  09:40:10,347 - #43 (
INFO  09:40:10,347 - #44 )
INFO  09:40:10,347 - #20 int
INFO  09:40:10,347 - #20 m
INFO  09:40:10,347 - #40 ;
INFO  09:40:10,347 - #20 int
INFO  09:40:10,348 - #20 k
INFO  09:40:10,348 - #40 ;
INFO  09:40:10,348 - #20 char
INFO  09:40:10,348 - #20 c
INFO  09:40:10,348 - #40 ;
INFO  09:40:10,348 - #47 {
INFO  09:40:10,348 - #20 g
INFO  09:40:10,348 - #37 =
INFO  09:40:10,349 - #20 N
INFO  09:40:10,349 - #40 ;
INFO  09:40:10,350 - #20 g
INFO  09:40:10,350 - #38 ++
INFO  09:40:10,350 - #40 ;
INFO  09:40:10,350 - #20 k
INFO  09:40:10,351 - #37 =
INFO  09:40:10,351 - #20 g
INFO  09:40:10,351 - #40 ;
INFO  09:40:10,351 - #20 k
INFO  09:40:10,351 - #38 ++
INFO  09:40:10,351 - #40 ;
INFO  09:40:10,351 - #13 print
INFO  09:40:10,351 - #43 (
INFO  09:40:10,351 - #20 k
INFO  09:40:10,351 - #44 )
INFO  09:40:10,351 - #40 ;
INFO  09:40:10,352 - #48 }
INFO  09:40:10,352 - #48 }
INFO  09:40:10,353 - 

================SINTAKSNO STABLO====================


INFO  09:40:10,354 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:40:10,355 - 

================SEMANTICKA OBRADA====================


INFO  09:40:10,367 - Deklarisana konstanta 'N' na liniji 2
INFO  09:40:10,367 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:40:10,367 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:40:10,368 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:40:10,368 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:40:10,368 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:40:10,369 - PROGRAM 2 na liniji 1
INFO  09:40:10,370 - ===================================
INFO  09:40:10,370 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 09:40:10,377 - METHOD main
ERROR 09:40:10,377 - PC main na liniji 7!
INFO  09:40:10,377 - Parsiranje uspesno zavrseno!
INFO  09:40:37,116 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:40:37,161 - #2 program
INFO  09:40:37,161 - #20 test
INFO  09:40:37,161 - #7 const
INFO  09:40:37,162 - #20 int
INFO  09:40:37,162 - #20 N
INFO  09:40:37,162 - #37 =
INFO  09:40:37,162 - #21 2
INFO  09:40:37,162 - #40 ;
INFO  09:40:37,163 - #20 int
INFO  09:40:37,163 - #20 g
INFO  09:40:37,163 - #40 ;
INFO  09:40:37,164 - #20 int
INFO  09:40:37,164 - #20 niz
INFO  09:40:37,164 - #45 [
INFO  09:40:37,164 - #46 ]
INFO  09:40:37,164 - #40 ;
INFO  09:40:37,164 - #47 {
INFO  09:40:37,164 - #16 void
INFO  09:40:37,164 - #20 main
INFO  09:40:37,164 - #43 (
INFO  09:40:37,164 - #44 )
INFO  09:40:37,164 - #20 int
INFO  09:40:37,165 - #20 m
INFO  09:40:37,165 - #40 ;
INFO  09:40:37,165 - #20 int
INFO  09:40:37,165 - #20 k
INFO  09:40:37,165 - #40 ;
INFO  09:40:37,165 - #20 char
INFO  09:40:37,165 - #20 c
INFO  09:40:37,165 - #40 ;
INFO  09:40:37,166 - #47 {
INFO  09:40:37,166 - #20 g
INFO  09:40:37,166 - #37 =
INFO  09:40:37,166 - #20 N
INFO  09:40:37,166 - #40 ;
INFO  09:40:37,167 - #20 g
INFO  09:40:37,167 - #38 ++
INFO  09:40:37,167 - #40 ;
INFO  09:40:37,167 - #20 k
INFO  09:40:37,168 - #37 =
INFO  09:40:37,168 - #20 g
INFO  09:40:37,168 - #40 ;
INFO  09:40:37,168 - #20 k
INFO  09:40:37,168 - #38 ++
INFO  09:40:37,168 - #40 ;
INFO  09:40:37,168 - #13 print
INFO  09:40:37,168 - #43 (
INFO  09:40:37,168 - #20 k
INFO  09:40:37,168 - #44 )
INFO  09:40:37,168 - #40 ;
INFO  09:40:37,168 - #48 }
INFO  09:40:37,169 - #48 }
INFO  09:40:37,170 - 

================SINTAKSNO STABLO====================


INFO  09:40:37,172 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:40:37,174 - 

================SEMANTICKA OBRADA====================


INFO  09:40:37,183 - Deklarisana konstanta 'N' na liniji 2
INFO  09:40:37,183 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:40:37,183 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:40:37,184 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:40:37,184 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:40:37,184 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:40:37,184 - PROGRAM 2 na liniji 1
INFO  09:40:37,185 - ===================================
INFO  09:40:37,185 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 09:40:37,192 - PC main na liniji 7!
ERROR 09:40:37,192 - currentMethod localSymbolsm
ERROR 09:40:37,192 - currentMethod localSymbolsk
INFO  09:40:37,192 - Parsiranje uspesno zavrseno!
INFO  09:41:11,627 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:41:11,674 - #2 program
INFO  09:41:11,675 - #20 test
INFO  09:41:11,675 - #7 const
INFO  09:41:11,675 - #20 int
INFO  09:41:11,675 - #20 N
INFO  09:41:11,676 - #37 =
INFO  09:41:11,676 - #21 2
INFO  09:41:11,676 - #40 ;
INFO  09:41:11,676 - #20 int
INFO  09:41:11,677 - #20 g
INFO  09:41:11,677 - #40 ;
INFO  09:41:11,677 - #20 int
INFO  09:41:11,677 - #20 niz
INFO  09:41:11,677 - #45 [
INFO  09:41:11,677 - #46 ]
INFO  09:41:11,677 - #40 ;
INFO  09:41:11,677 - #47 {
INFO  09:41:11,677 - #16 void
INFO  09:41:11,677 - #20 main
INFO  09:41:11,677 - #43 (
INFO  09:41:11,678 - #44 )
INFO  09:41:11,678 - #20 int
INFO  09:41:11,678 - #20 m
INFO  09:41:11,678 - #40 ;
INFO  09:41:11,678 - #20 int
INFO  09:41:11,678 - #20 k
INFO  09:41:11,678 - #40 ;
INFO  09:41:11,678 - #20 char
INFO  09:41:11,679 - #20 c
INFO  09:41:11,679 - #40 ;
INFO  09:41:11,679 - #47 {
INFO  09:41:11,679 - #20 g
INFO  09:41:11,679 - #37 =
INFO  09:41:11,680 - #20 N
INFO  09:41:11,680 - #40 ;
INFO  09:41:11,680 - #20 g
INFO  09:41:11,681 - #38 ++
INFO  09:41:11,681 - #40 ;
INFO  09:41:11,681 - #20 k
INFO  09:41:11,681 - #37 =
INFO  09:41:11,681 - #20 g
INFO  09:41:11,681 - #40 ;
INFO  09:41:11,681 - #20 k
INFO  09:41:11,681 - #38 ++
INFO  09:41:11,682 - #40 ;
INFO  09:41:11,682 - #13 print
INFO  09:41:11,682 - #43 (
INFO  09:41:11,682 - #20 k
INFO  09:41:11,682 - #44 )
INFO  09:41:11,682 - #40 ;
INFO  09:41:11,683 - #48 }
INFO  09:41:11,683 - #48 }
INFO  09:41:11,684 - 

================SINTAKSNO STABLO====================


INFO  09:41:11,685 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:41:11,686 - 

================SEMANTICKA OBRADA====================


INFO  09:41:11,695 - Deklarisana konstanta 'N' na liniji 2
INFO  09:41:11,696 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:41:11,696 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:41:11,696 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:41:11,696 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:41:11,696 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:41:11,697 - PROGRAM 2 na liniji 1
INFO  09:41:11,698 - ===================================
INFO  09:41:11,698 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 09:41:11,704 - PC main na liniji 7!
INFO  09:41:11,704 - Parsiranje uspesno zavrseno!
INFO  09:41:25,889 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:41:25,935 - #2 program
INFO  09:41:25,935 - #20 test
INFO  09:41:25,935 - #7 const
INFO  09:41:25,935 - #20 int
INFO  09:41:25,936 - #20 N
INFO  09:41:25,936 - #37 =
INFO  09:41:25,936 - #21 2
INFO  09:41:25,936 - #40 ;
INFO  09:41:25,937 - #20 int
INFO  09:41:25,937 - #20 g
INFO  09:41:25,937 - #40 ;
INFO  09:41:25,938 - #20 int
INFO  09:41:25,938 - #20 niz
INFO  09:41:25,938 - #45 [
INFO  09:41:25,938 - #46 ]
INFO  09:41:25,938 - #40 ;
INFO  09:41:25,938 - #47 {
INFO  09:41:25,938 - #16 void
INFO  09:41:25,938 - #20 main
INFO  09:41:25,938 - #43 (
INFO  09:41:25,939 - #44 )
INFO  09:41:25,939 - #20 int
INFO  09:41:25,939 - #20 m
INFO  09:41:25,939 - #40 ;
INFO  09:41:25,939 - #20 int
INFO  09:41:25,939 - #20 k
INFO  09:41:25,939 - #40 ;
INFO  09:41:25,939 - #20 char
INFO  09:41:25,940 - #20 c
INFO  09:41:25,940 - #40 ;
INFO  09:41:25,940 - #47 {
INFO  09:41:25,940 - #20 g
INFO  09:41:25,940 - #37 =
INFO  09:41:25,940 - #20 N
INFO  09:41:25,940 - #40 ;
INFO  09:41:25,941 - #20 g
INFO  09:41:25,941 - #38 ++
INFO  09:41:25,941 - #40 ;
INFO  09:41:25,941 - #20 k
INFO  09:41:25,941 - #37 =
INFO  09:41:25,941 - #20 g
INFO  09:41:25,942 - #40 ;
INFO  09:41:25,942 - #20 k
INFO  09:41:25,942 - #38 ++
INFO  09:41:25,942 - #40 ;
INFO  09:41:25,942 - #13 print
INFO  09:41:25,943 - #43 (
INFO  09:41:25,943 - #20 k
INFO  09:41:25,943 - #44 )
INFO  09:41:25,943 - #40 ;
INFO  09:41:25,943 - #48 }
INFO  09:41:25,943 - #48 }
INFO  09:41:25,944 - 

================SINTAKSNO STABLO====================


INFO  09:41:25,945 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:41:25,946 - 

================SEMANTICKA OBRADA====================


INFO  09:41:25,956 - Deklarisana konstanta 'N' na liniji 2
INFO  09:41:25,957 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:41:25,957 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:41:25,957 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:41:25,957 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:41:25,957 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:41:25,957 - PROGRAM 2 na liniji 1
INFO  09:41:25,958 - ===================================
INFO  09:41:25,958 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  09:41:25,964 - Parsiranje uspesno zavrseno!
