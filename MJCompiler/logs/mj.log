INFO  09:00:42,913 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:00:43,023 - #2 program
INFO  09:00:43,023 - #20 test
INFO  09:00:43,023 - #47 {
INFO  09:00:43,024 - #16 void
INFO  09:00:43,024 - #20 main
INFO  09:00:43,024 - #43 (
INFO  09:00:43,025 - #44 )
INFO  09:00:43,025 - #47 {
INFO  09:00:43,025 - #48 }
INFO  09:00:43,025 - #48 }
INFO  09:00:43,026 - 

================SINTAKSNO STABLO====================


INFO  09:00:43,026 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid7(
        MethodVoidName(
         main
        ) [MethodVoidName]
      ) [MethodVoid7]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:00:43,027 - 

================SEMANTICKA OBRADA====================


INFO  09:00:43,040 - PROGRAM 0 na liniji 1
INFO  09:00:43,048 - ===================================
INFO  09:00:43,048 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  09:00:43,062 - Parsiranje uspesno zavrseno!
INFO  09:01:50,196 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:01:50,244 - #2 program
INFO  09:01:50,244 - #20 test
INFO  09:01:50,244 - #7 const
INFO  09:01:50,245 - #20 int
INFO  09:01:50,245 - #20 N
INFO  09:01:50,246 - #37 =
INFO  09:01:50,246 - #21 2
INFO  09:01:50,246 - #40 ;
INFO  09:01:50,246 - #20 int
INFO  09:01:50,247 - #20 g
INFO  09:01:50,247 - #40 ;
INFO  09:01:50,247 - #47 {
INFO  09:01:50,248 - #16 void
INFO  09:01:50,248 - #20 main
INFO  09:01:50,248 - #43 (
INFO  09:01:50,248 - #44 )
INFO  09:01:50,248 - #20 int
INFO  09:01:50,248 - #20 m
INFO  09:01:50,248 - #40 ;
INFO  09:01:50,248 - #20 int
INFO  09:01:50,249 - #20 k
INFO  09:01:50,249 - #40 ;
INFO  09:01:50,249 - #47 {
INFO  09:01:50,249 - #20 g
INFO  09:01:50,249 - #37 =
INFO  09:01:50,249 - #20 N
INFO  09:01:50,249 - #40 ;
INFO  09:01:50,250 - #20 g
INFO  09:01:50,250 - #38 ++
INFO  09:01:50,250 - #40 ;
INFO  09:01:50,250 - #20 k
INFO  09:01:50,250 - #37 =
INFO  09:01:50,250 - #20 g
INFO  09:01:50,251 - #40 ;
INFO  09:01:50,251 - #20 k
INFO  09:01:50,251 - #38 ++
INFO  09:01:50,251 - #40 ;
INFO  09:01:50,251 - #13 print
INFO  09:01:50,251 - #43 (
INFO  09:01:50,251 - #20 k
INFO  09:01:50,251 - #44 )
INFO  09:01:50,251 - #40 ;
INFO  09:01:50,251 - #48 }
INFO  09:01:50,251 - #48 }
INFO  09:01:50,253 - 

================SINTAKSNO STABLO====================


INFO  09:01:50,253 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             g
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:01:50,254 - 

================SEMANTICKA OBRADA====================


INFO  09:01:50,272 - Deklarisana konstanta 'N' na liniji 2
INFO  09:01:50,272 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:01:50,272 - Deklarisana promenljiva 'm' na liniji 6
INFO  09:01:50,272 - Deklarisana promenljiva 'k' na liniji 7
INFO  09:01:50,272 - PROGRAM 1 na liniji 1
INFO  09:01:50,273 - ===================================
INFO  09:01:50,273 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  09:01:50,280 - Parsiranje uspesno zavrseno!
INFO  09:17:00,037 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:17:00,144 - #2 program
INFO  09:17:00,144 - #20 test
INFO  09:17:00,144 - #7 const
INFO  09:17:00,145 - #20 int
INFO  09:17:00,145 - #20 N
INFO  09:17:00,146 - #37 =
INFO  09:17:00,146 - #21 2
INFO  09:17:00,146 - #40 ;
INFO  09:17:00,146 - #20 int
INFO  09:17:00,146 - #20 g
INFO  09:17:00,146 - #40 ;
INFO  09:17:00,147 - #47 {
INFO  09:17:00,147 - #16 void
INFO  09:17:00,147 - #20 main
INFO  09:17:00,147 - #43 (
INFO  09:17:00,147 - #44 )
INFO  09:17:00,147 - #20 int
INFO  09:17:00,147 - #20 m
INFO  09:17:00,147 - #40 ;
INFO  09:17:00,148 - #20 int
INFO  09:17:00,148 - #20 k
INFO  09:17:00,148 - #40 ;
INFO  09:17:00,148 - #47 {
INFO  09:17:00,148 - #20 g
INFO  09:17:00,148 - #37 =
INFO  09:17:00,149 - #20 N
INFO  09:17:00,149 - #40 ;
INFO  09:17:00,150 - #20 g
INFO  09:17:00,150 - #38 ++
INFO  09:17:00,150 - #40 ;
INFO  09:17:00,150 - #20 k
INFO  09:17:00,151 - #37 =
INFO  09:17:00,151 - #20 g
INFO  09:17:00,151 - #40 ;
INFO  09:17:00,151 - #20 k
INFO  09:17:00,152 - #38 ++
INFO  09:17:00,152 - #40 ;
INFO  09:17:00,152 - #13 print
INFO  09:17:00,152 - #43 (
INFO  09:17:00,152 - #20 k
INFO  09:17:00,152 - #44 )
INFO  09:17:00,152 - #40 ;
INFO  09:17:00,152 - #48 }
INFO  09:17:00,153 - #48 }
INFO  09:17:00,154 - 

================SINTAKSNO STABLO====================


INFO  09:17:00,155 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             g
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:17:00,156 - 

================SEMANTICKA OBRADA====================


INFO  09:17:00,170 - Deklarisana konstanta 'N' na liniji 2
INFO  09:17:00,170 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:17:00,171 - Deklarisana promenljiva 'm' na liniji 6
INFO  09:17:00,171 - Deklarisana promenljiva 'k' na liniji 7
INFO  09:17:00,171 - PROGRAM 1 na liniji 1
INFO  09:17:00,172 - ===================================
INFO  09:17:00,172 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  09:17:00,179 - Parsiranje uspesno zavrseno!
INFO  09:18:48,590 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:18:48,660 - #2 program
INFO  09:18:48,660 - #20 test
INFO  09:18:48,660 - #7 const
INFO  09:18:48,661 - #20 int
INFO  09:18:48,661 - #20 N
INFO  09:18:48,662 - #37 =
INFO  09:18:48,662 - #21 2
INFO  09:18:48,662 - #40 ;
INFO  09:18:48,663 - #20 int
INFO  09:18:48,663 - #20 g
INFO  09:18:48,663 - #40 ;
INFO  09:18:48,664 - #20 int
INFO  09:18:48,664 - #20 niz
INFO  09:18:48,664 - #45 [
INFO  09:18:48,664 - #46 ]
INFO  09:18:48,664 - #40 ;
INFO  09:18:48,664 - #47 {
INFO  09:18:48,665 - #16 void
INFO  09:18:48,665 - #20 main
INFO  09:18:48,665 - #43 (
INFO  09:18:48,665 - #44 )
INFO  09:18:48,665 - #20 int
INFO  09:18:48,665 - #20 m
INFO  09:18:48,666 - #40 ;
INFO  09:18:48,666 - #20 int
INFO  09:18:48,667 - #20 k
INFO  09:18:48,667 - #40 ;
INFO  09:18:48,668 - #47 {
INFO  09:18:48,668 - #20 g
INFO  09:18:48,671 - #37 =
INFO  09:18:48,672 - #20 N
INFO  09:18:48,672 - #40 ;
INFO  09:18:48,672 - #20 g
INFO  09:18:48,673 - #38 ++
INFO  09:18:48,673 - #40 ;
INFO  09:18:48,673 - #20 k
INFO  09:18:48,673 - #37 =
INFO  09:18:48,673 - #20 g
INFO  09:18:48,673 - #40 ;
INFO  09:18:48,673 - #20 k
INFO  09:18:48,674 - #38 ++
INFO  09:18:48,674 - #40 ;
INFO  09:18:48,674 - #13 print
INFO  09:18:48,674 - #43 (
INFO  09:18:48,674 - #20 k
INFO  09:18:48,674 - #44 )
INFO  09:18:48,675 - #40 ;
INFO  09:18:48,675 - #48 }
INFO  09:18:48,675 - #48 }
INFO  09:18:48,677 - 

================SINTAKSNO STABLO====================


INFO  09:18:48,680 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:18:48,683 - 

================SEMANTICKA OBRADA====================


INFO  09:18:48,701 - Deklarisana konstanta 'N' na liniji 2
INFO  09:18:48,702 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:18:48,704 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:18:48,705 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:18:48,706 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:18:48,711 - PROGRAM 2 na liniji 1
INFO  09:18:48,714 - ===================================
INFO  09:18:48,714 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  09:18:48,726 - Parsiranje uspesno zavrseno!
INFO  09:27:47,783 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:27:47,829 - #2 program
INFO  09:27:47,829 - #20 test
INFO  09:27:47,829 - #7 const
INFO  09:27:47,830 - #20 int
INFO  09:27:47,830 - #20 N
INFO  09:27:47,831 - #37 =
INFO  09:27:47,831 - #21 2
INFO  09:27:47,831 - #40 ;
INFO  09:27:47,831 - #20 int
INFO  09:27:47,832 - #20 g
INFO  09:27:47,832 - #40 ;
INFO  09:27:47,832 - #20 int
INFO  09:27:47,832 - #20 niz
INFO  09:27:47,832 - #45 [
INFO  09:27:47,833 - #46 ]
INFO  09:27:47,833 - #40 ;
INFO  09:27:47,833 - #47 {
INFO  09:27:47,833 - #16 void
INFO  09:27:47,833 - #20 main
INFO  09:27:47,833 - #43 (
INFO  09:27:47,833 - #44 )
INFO  09:27:47,833 - #20 int
INFO  09:27:47,833 - #20 m
INFO  09:27:47,833 - #40 ;
INFO  09:27:47,834 - #20 int
INFO  09:27:47,834 - #20 k
INFO  09:27:47,834 - #40 ;
INFO  09:27:47,834 - #20 char
INFO  09:27:47,834 - #20 c
INFO  09:27:47,834 - #40 ;
INFO  09:27:47,834 - #47 {
INFO  09:27:47,834 - #20 g
INFO  09:27:47,834 - #37 =
INFO  09:27:47,835 - #20 N
INFO  09:27:47,835 - #40 ;
INFO  09:27:47,835 - #20 g
INFO  09:27:47,836 - #38 ++
INFO  09:27:47,836 - #40 ;
INFO  09:27:47,836 - #20 k
INFO  09:27:47,836 - #37 =
INFO  09:27:47,837 - #20 g
INFO  09:27:47,837 - #40 ;
INFO  09:27:47,837 - #20 k
INFO  09:27:47,837 - #38 ++
INFO  09:27:47,837 - #40 ;
INFO  09:27:47,837 - #13 print
INFO  09:27:47,837 - #43 (
INFO  09:27:47,837 - #20 k
INFO  09:27:47,837 - #44 )
INFO  09:27:47,837 - #40 ;
INFO  09:27:47,837 - #48 }
INFO  09:27:47,837 - #48 }
INFO  09:27:47,839 - 

================SINTAKSNO STABLO====================


INFO  09:27:47,842 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:27:47,846 - 

================SEMANTICKA OBRADA====================


INFO  09:27:47,857 - Deklarisana konstanta 'N' na liniji 2
INFO  09:27:47,858 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:27:47,858 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:27:47,858 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:27:47,859 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:27:47,859 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:27:47,859 - PROGRAM 2 na liniji 1
INFO  09:27:47,860 - ===================================
INFO  09:27:47,860 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  09:27:47,866 - Parsiranje uspesno zavrseno!
INFO  09:33:25,031 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:33:25,076 - #2 program
INFO  09:33:25,076 - #20 test
INFO  09:33:25,076 - #7 const
INFO  09:33:25,077 - #20 int
INFO  09:33:25,077 - #20 N
INFO  09:33:25,078 - #37 =
INFO  09:33:25,078 - #21 2
INFO  09:33:25,078 - #40 ;
INFO  09:33:25,079 - #20 int
INFO  09:33:25,079 - #20 g
INFO  09:33:25,079 - #40 ;
INFO  09:33:25,079 - #20 int
INFO  09:33:25,079 - #20 niz
INFO  09:33:25,079 - #45 [
INFO  09:33:25,080 - #46 ]
INFO  09:33:25,080 - #40 ;
INFO  09:33:25,080 - #47 {
INFO  09:33:25,080 - #16 void
INFO  09:33:25,080 - #20 main
INFO  09:33:25,080 - #43 (
INFO  09:33:25,080 - #44 )
INFO  09:33:25,080 - #20 int
INFO  09:33:25,080 - #20 m
INFO  09:33:25,080 - #40 ;
INFO  09:33:25,080 - #20 int
INFO  09:33:25,081 - #20 k
INFO  09:33:25,081 - #40 ;
INFO  09:33:25,081 - #20 char
INFO  09:33:25,081 - #20 c
INFO  09:33:25,081 - #40 ;
INFO  09:33:25,081 - #47 {
INFO  09:33:25,082 - #20 g
INFO  09:33:25,082 - #37 =
INFO  09:33:25,082 - #20 N
INFO  09:33:25,082 - #40 ;
INFO  09:33:25,083 - #20 g
INFO  09:33:25,084 - #38 ++
INFO  09:33:25,084 - #40 ;
INFO  09:33:25,084 - #20 k
INFO  09:33:25,084 - #37 =
INFO  09:33:25,084 - #20 g
INFO  09:33:25,084 - #40 ;
INFO  09:33:25,085 - #20 k
INFO  09:33:25,085 - #38 ++
INFO  09:33:25,085 - #40 ;
INFO  09:33:25,085 - #13 print
INFO  09:33:25,085 - #43 (
INFO  09:33:25,085 - #20 k
INFO  09:33:25,085 - #44 )
INFO  09:33:25,086 - #40 ;
INFO  09:33:25,086 - #48 }
INFO  09:33:25,086 - #48 }
INFO  09:33:25,088 - 

================SINTAKSNO STABLO====================


INFO  09:33:25,089 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:33:25,089 - 

================SEMANTICKA OBRADA====================


INFO  09:33:25,100 - Deklarisana konstanta 'N' na liniji 2
INFO  09:33:25,100 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:33:25,100 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:33:25,101 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:33:25,101 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:33:25,101 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:33:25,101 - PROGRAM 2 na liniji 1
INFO  09:33:25,102 - ===================================
INFO  09:33:25,102 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  09:33:25,108 - Parsiranje uspesno zavrseno!
INFO  09:33:45,067 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:33:45,113 - #2 program
INFO  09:33:45,113 - #20 test
INFO  09:33:45,114 - #7 const
INFO  09:33:45,114 - #20 int
INFO  09:33:45,114 - #20 N
INFO  09:33:45,115 - #37 =
INFO  09:33:45,115 - #21 2
INFO  09:33:45,116 - #40 ;
INFO  09:33:45,116 - #20 int
INFO  09:33:45,117 - #20 g
INFO  09:33:45,117 - #40 ;
INFO  09:33:45,117 - #20 int
INFO  09:33:45,117 - #20 niz
INFO  09:33:45,117 - #45 [
INFO  09:33:45,118 - #46 ]
INFO  09:33:45,118 - #40 ;
INFO  09:33:45,118 - #47 {
INFO  09:33:45,118 - #16 void
INFO  09:33:45,118 - #20 main
INFO  09:33:45,118 - #43 (
INFO  09:33:45,118 - #44 )
INFO  09:33:45,118 - #20 int
INFO  09:33:45,118 - #20 m
INFO  09:33:45,118 - #40 ;
INFO  09:33:45,119 - #20 int
INFO  09:33:45,119 - #20 k
INFO  09:33:45,119 - #40 ;
INFO  09:33:45,119 - #20 char
INFO  09:33:45,119 - #20 c
INFO  09:33:45,120 - #40 ;
INFO  09:33:45,120 - #47 {
INFO  09:33:45,120 - #20 g
INFO  09:33:45,120 - #37 =
INFO  09:33:45,120 - #20 N
INFO  09:33:45,120 - #40 ;
INFO  09:33:45,121 - #20 g
INFO  09:33:45,121 - #38 ++
INFO  09:33:45,122 - #40 ;
INFO  09:33:45,122 - #20 k
INFO  09:33:45,122 - #37 =
INFO  09:33:45,122 - #20 g
INFO  09:33:45,122 - #40 ;
INFO  09:33:45,122 - #20 k
INFO  09:33:45,123 - #38 ++
INFO  09:33:45,123 - #40 ;
INFO  09:33:45,123 - #13 print
INFO  09:33:45,123 - #43 (
INFO  09:33:45,123 - #20 k
INFO  09:33:45,123 - #44 )
INFO  09:33:45,123 - #40 ;
INFO  09:33:45,123 - #48 }
INFO  09:33:45,123 - #48 }
INFO  09:33:45,125 - 

================SINTAKSNO STABLO====================


INFO  09:33:45,125 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:33:45,126 - 

================SEMANTICKA OBRADA====================


INFO  09:33:45,136 - Deklarisana konstanta 'N' na liniji 2
INFO  09:33:45,136 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:33:45,136 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:33:45,136 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:33:45,136 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:33:45,136 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:33:45,137 - PROGRAM 2 na liniji 1
INFO  09:33:45,137 - ===================================
INFO  09:33:45,138 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  09:33:45,145 - Parsiranje uspesno zavrseno!
INFO  09:35:55,475 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:35:55,521 - #2 program
INFO  09:35:55,521 - #20 test
INFO  09:35:55,521 - #7 const
INFO  09:35:55,522 - #20 int
INFO  09:35:55,522 - #20 N
INFO  09:35:55,522 - #37 =
INFO  09:35:55,522 - #21 2
INFO  09:35:55,522 - #40 ;
INFO  09:35:55,523 - #20 int
INFO  09:35:55,523 - #20 g
INFO  09:35:55,523 - #40 ;
INFO  09:35:55,524 - #20 int
INFO  09:35:55,524 - #20 niz
INFO  09:35:55,524 - #45 [
INFO  09:35:55,524 - #46 ]
INFO  09:35:55,524 - #40 ;
INFO  09:35:55,524 - #47 {
INFO  09:35:55,524 - #16 void
INFO  09:35:55,524 - #20 main
INFO  09:35:55,524 - #43 (
INFO  09:35:55,525 - #44 )
INFO  09:35:55,525 - #20 int
INFO  09:35:55,525 - #20 m
INFO  09:35:55,525 - #40 ;
INFO  09:35:55,525 - #20 int
INFO  09:35:55,525 - #20 k
INFO  09:35:55,525 - #40 ;
INFO  09:35:55,525 - #20 char
INFO  09:35:55,526 - #20 c
INFO  09:35:55,526 - #40 ;
INFO  09:35:55,526 - #47 {
INFO  09:35:55,526 - #20 g
INFO  09:35:55,526 - #37 =
INFO  09:35:55,526 - #20 N
INFO  09:35:55,526 - #40 ;
INFO  09:35:55,527 - #20 g
INFO  09:35:55,527 - #38 ++
INFO  09:35:55,527 - #40 ;
INFO  09:35:55,527 - #20 k
INFO  09:35:55,528 - #37 =
INFO  09:35:55,528 - #20 g
INFO  09:35:55,528 - #40 ;
INFO  09:35:55,528 - #20 k
INFO  09:35:55,528 - #38 ++
INFO  09:35:55,528 - #40 ;
INFO  09:35:55,528 - #13 print
INFO  09:35:55,528 - #43 (
INFO  09:35:55,528 - #20 k
INFO  09:35:55,528 - #44 )
INFO  09:35:55,529 - #40 ;
INFO  09:35:55,529 - #48 }
INFO  09:35:55,529 - #48 }
INFO  09:35:55,530 - 

================SINTAKSNO STABLO====================


INFO  09:35:55,531 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:35:55,533 - 

================SEMANTICKA OBRADA====================


INFO  09:35:55,542 - Deklarisana konstanta 'N' na liniji 2
INFO  09:35:55,542 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:35:55,543 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:35:55,543 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:35:55,543 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:35:55,543 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:35:55,543 - PROGRAM 2 na liniji 1
INFO  09:35:55,544 - ===================================
INFO  09:35:55,544 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  09:35:55,551 - Parsiranje uspesno zavrseno!
INFO  09:37:01,216 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:37:01,263 - #2 program
INFO  09:37:01,263 - #20 test
INFO  09:37:01,263 - #7 const
INFO  09:37:01,264 - #20 int
INFO  09:37:01,264 - #20 N
INFO  09:37:01,264 - #37 =
INFO  09:37:01,264 - #21 2
INFO  09:37:01,264 - #40 ;
INFO  09:37:01,265 - #20 int
INFO  09:37:01,265 - #20 g
INFO  09:37:01,265 - #40 ;
INFO  09:37:01,265 - #20 int
INFO  09:37:01,266 - #20 niz
INFO  09:37:01,266 - #45 [
INFO  09:37:01,266 - #46 ]
INFO  09:37:01,266 - #40 ;
INFO  09:37:01,266 - #47 {
INFO  09:37:01,266 - #16 void
INFO  09:37:01,266 - #20 main
INFO  09:37:01,266 - #43 (
INFO  09:37:01,266 - #44 )
INFO  09:37:01,267 - #20 int
INFO  09:37:01,267 - #20 m
INFO  09:37:01,267 - #40 ;
INFO  09:37:01,267 - #20 int
INFO  09:37:01,267 - #20 k
INFO  09:37:01,267 - #40 ;
INFO  09:37:01,267 - #20 char
INFO  09:37:01,268 - #20 c
INFO  09:37:01,268 - #40 ;
INFO  09:37:01,269 - #47 {
INFO  09:37:01,269 - #20 g
INFO  09:37:01,269 - #37 =
INFO  09:37:01,269 - #20 N
INFO  09:37:01,270 - #40 ;
INFO  09:37:01,271 - #20 g
INFO  09:37:01,271 - #38 ++
INFO  09:37:01,271 - #40 ;
INFO  09:37:01,271 - #20 k
INFO  09:37:01,271 - #37 =
INFO  09:37:01,271 - #20 g
INFO  09:37:01,272 - #40 ;
INFO  09:37:01,272 - #20 k
INFO  09:37:01,272 - #38 ++
INFO  09:37:01,272 - #40 ;
INFO  09:37:01,272 - #13 print
INFO  09:37:01,272 - #43 (
INFO  09:37:01,272 - #20 k
INFO  09:37:01,272 - #44 )
INFO  09:37:01,272 - #40 ;
INFO  09:37:01,272 - #48 }
INFO  09:37:01,272 - #48 }
INFO  09:37:01,273 - 

================SINTAKSNO STABLO====================


INFO  09:37:01,274 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:37:01,275 - 

================SEMANTICKA OBRADA====================


INFO  09:37:01,285 - Deklarisana konstanta 'N' na liniji 2
INFO  09:37:01,286 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:37:01,286 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:37:01,286 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:37:01,286 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:37:01,286 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:37:01,287 - PROGRAM 2 na liniji 1
INFO  09:37:01,287 - ===================================
INFO  09:37:01,287 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  09:37:01,293 - Parsiranje uspesno zavrseno!
INFO  09:37:24,915 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:37:24,958 - #2 program
INFO  09:37:24,958 - #20 test
INFO  09:37:24,958 - #7 const
INFO  09:37:24,958 - #20 int
INFO  09:37:24,959 - #20 N
INFO  09:37:24,959 - #37 =
INFO  09:37:24,959 - #21 2
INFO  09:37:24,959 - #40 ;
INFO  09:37:24,960 - #20 int
INFO  09:37:24,960 - #20 g
INFO  09:37:24,960 - #40 ;
INFO  09:37:24,960 - #20 int
INFO  09:37:24,960 - #20 niz
INFO  09:37:24,960 - #45 [
INFO  09:37:24,960 - #46 ]
INFO  09:37:24,960 - #40 ;
INFO  09:37:24,961 - #47 {
INFO  09:37:24,961 - #16 void
INFO  09:37:24,961 - #20 main
INFO  09:37:24,961 - #43 (
INFO  09:37:24,961 - #44 )
INFO  09:37:24,961 - #20 int
INFO  09:37:24,961 - #20 m
INFO  09:37:24,961 - #40 ;
INFO  09:37:24,961 - #20 int
INFO  09:37:24,962 - #20 k
INFO  09:37:24,962 - #40 ;
INFO  09:37:24,962 - #20 char
INFO  09:37:24,962 - #20 c
INFO  09:37:24,962 - #40 ;
INFO  09:37:24,962 - #47 {
INFO  09:37:24,962 - #20 g
INFO  09:37:24,962 - #37 =
INFO  09:37:24,963 - #20 N
INFO  09:37:24,963 - #40 ;
INFO  09:37:24,963 - #20 g
INFO  09:37:24,964 - #38 ++
INFO  09:37:24,964 - #40 ;
INFO  09:37:24,964 - #20 k
INFO  09:37:24,964 - #37 =
INFO  09:37:24,964 - #20 g
INFO  09:37:24,964 - #40 ;
INFO  09:37:24,964 - #20 k
INFO  09:37:24,964 - #38 ++
INFO  09:37:24,964 - #40 ;
INFO  09:37:24,964 - #13 print
INFO  09:37:24,965 - #43 (
INFO  09:37:24,965 - #20 k
INFO  09:37:24,965 - #44 )
INFO  09:37:24,965 - #40 ;
INFO  09:37:24,965 - #48 }
INFO  09:37:24,965 - #48 }
INFO  09:37:24,966 - 

================SINTAKSNO STABLO====================


INFO  09:37:24,967 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:37:24,968 - 

================SEMANTICKA OBRADA====================


INFO  09:37:24,978 - Deklarisana konstanta 'N' na liniji 2
INFO  09:37:24,978 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:37:24,978 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:37:24,979 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:37:24,979 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:37:24,979 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:37:24,980 - PROGRAM 2 na liniji 1
INFO  09:37:24,981 - ===================================
INFO  09:37:24,981 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 09:37:24,986 - PC noObj na liniji 7!
INFO  09:37:24,986 - Parsiranje uspesno zavrseno!
INFO  09:37:41,250 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:37:41,295 - #2 program
INFO  09:37:41,295 - #20 test
INFO  09:37:41,295 - #7 const
INFO  09:37:41,296 - #20 int
INFO  09:37:41,296 - #20 N
INFO  09:37:41,296 - #37 =
INFO  09:37:41,296 - #21 2
INFO  09:37:41,296 - #40 ;
INFO  09:37:41,297 - #20 int
INFO  09:37:41,297 - #20 g
INFO  09:37:41,297 - #40 ;
INFO  09:37:41,297 - #20 int
INFO  09:37:41,298 - #20 niz
INFO  09:37:41,298 - #45 [
INFO  09:37:41,298 - #46 ]
INFO  09:37:41,298 - #40 ;
INFO  09:37:41,298 - #47 {
INFO  09:37:41,298 - #16 void
INFO  09:37:41,298 - #20 main
INFO  09:37:41,298 - #43 (
INFO  09:37:41,298 - #44 )
INFO  09:37:41,298 - #20 int
INFO  09:37:41,298 - #20 m
INFO  09:37:41,298 - #40 ;
INFO  09:37:41,299 - #20 int
INFO  09:37:41,299 - #20 k
INFO  09:37:41,299 - #40 ;
INFO  09:37:41,299 - #20 char
INFO  09:37:41,299 - #20 c
INFO  09:37:41,299 - #40 ;
INFO  09:37:41,299 - #47 {
INFO  09:37:41,299 - #20 g
INFO  09:37:41,299 - #37 =
INFO  09:37:41,300 - #20 N
INFO  09:37:41,300 - #40 ;
INFO  09:37:41,300 - #20 g
INFO  09:37:41,301 - #38 ++
INFO  09:37:41,301 - #40 ;
INFO  09:37:41,301 - #20 k
INFO  09:37:41,301 - #37 =
INFO  09:37:41,301 - #20 g
INFO  09:37:41,301 - #40 ;
INFO  09:37:41,302 - #20 k
INFO  09:37:41,302 - #38 ++
INFO  09:37:41,302 - #40 ;
INFO  09:37:41,302 - #13 print
INFO  09:37:41,302 - #43 (
INFO  09:37:41,302 - #20 k
INFO  09:37:41,302 - #44 )
INFO  09:37:41,302 - #40 ;
INFO  09:37:41,302 - #48 }
INFO  09:37:41,303 - #48 }
INFO  09:37:41,304 - 

================SINTAKSNO STABLO====================


INFO  09:37:41,305 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:37:41,307 - 

================SEMANTICKA OBRADA====================


INFO  09:37:41,316 - Deklarisana konstanta 'N' na liniji 2
INFO  09:37:41,317 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:37:41,317 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:37:41,317 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:37:41,317 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:37:41,317 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:37:41,318 - PROGRAM 2 na liniji 1
INFO  09:37:41,318 - ===================================
INFO  09:37:41,318 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 09:37:41,324 - PC main na liniji 7!
INFO  09:37:41,324 - Parsiranje uspesno zavrseno!
INFO  09:38:28,125 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:38:28,200 - #2 program
INFO  09:38:28,200 - #20 test
INFO  09:38:28,201 - #7 const
INFO  09:38:28,202 - #20 int
INFO  09:38:28,202 - #20 N
INFO  09:38:28,203 - #37 =
INFO  09:38:28,203 - #21 2
INFO  09:38:28,203 - #40 ;
INFO  09:38:28,204 - #20 int
INFO  09:38:28,205 - #20 g
INFO  09:38:28,205 - #40 ;
INFO  09:38:28,205 - #20 int
INFO  09:38:28,205 - #20 niz
INFO  09:38:28,206 - #45 [
INFO  09:38:28,206 - #46 ]
INFO  09:38:28,206 - #40 ;
INFO  09:38:28,206 - #47 {
INFO  09:38:28,206 - #16 void
INFO  09:38:28,206 - #20 main
INFO  09:38:28,206 - #43 (
INFO  09:38:28,207 - #44 )
INFO  09:38:28,207 - #20 int
INFO  09:38:28,207 - #20 m
INFO  09:38:28,207 - #40 ;
INFO  09:38:28,207 - #20 int
INFO  09:38:28,208 - #20 k
INFO  09:38:28,208 - #40 ;
INFO  09:38:28,208 - #20 char
INFO  09:38:28,208 - #20 c
INFO  09:38:28,208 - #40 ;
INFO  09:38:28,208 - #47 {
INFO  09:38:28,208 - #20 g
INFO  09:38:28,208 - #37 =
INFO  09:38:28,209 - #20 N
INFO  09:38:28,209 - #40 ;
INFO  09:38:28,210 - #20 g
INFO  09:38:28,210 - #38 ++
INFO  09:38:28,210 - #40 ;
INFO  09:38:28,210 - #20 k
INFO  09:38:28,210 - #37 =
INFO  09:38:28,211 - #20 g
INFO  09:38:28,211 - #40 ;
INFO  09:38:28,211 - #20 k
INFO  09:38:28,211 - #38 ++
INFO  09:38:28,211 - #40 ;
INFO  09:38:28,211 - #13 print
INFO  09:38:28,211 - #43 (
INFO  09:38:28,211 - #20 k
INFO  09:38:28,211 - #44 )
INFO  09:38:28,211 - #40 ;
INFO  09:38:28,211 - #48 }
INFO  09:38:28,212 - #48 }
INFO  09:38:28,213 - 

================SINTAKSNO STABLO====================


INFO  09:38:28,214 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:38:28,216 - 

================SEMANTICKA OBRADA====================


INFO  09:38:28,229 - Deklarisana konstanta 'N' na liniji 2
INFO  09:38:28,230 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:38:28,230 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:38:28,230 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:38:28,230 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:38:28,230 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:38:28,231 - PROGRAM 2 na liniji 1
INFO  09:38:28,232 - ===================================
INFO  09:38:28,232 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 09:38:28,238 - PC main na liniji 7!
INFO  09:38:28,239 - Parsiranje uspesno zavrseno!
INFO  09:39:43,435 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:39:43,480 - #2 program
INFO  09:39:43,480 - #20 test
INFO  09:39:43,480 - #7 const
INFO  09:39:43,480 - #20 int
INFO  09:39:43,481 - #20 N
INFO  09:39:43,481 - #37 =
INFO  09:39:43,481 - #21 2
INFO  09:39:43,481 - #40 ;
INFO  09:39:43,482 - #20 int
INFO  09:39:43,482 - #20 g
INFO  09:39:43,482 - #40 ;
INFO  09:39:43,482 - #20 int
INFO  09:39:43,483 - #20 niz
INFO  09:39:43,483 - #45 [
INFO  09:39:43,483 - #46 ]
INFO  09:39:43,483 - #40 ;
INFO  09:39:43,483 - #47 {
INFO  09:39:43,483 - #16 void
INFO  09:39:43,483 - #20 main
INFO  09:39:43,483 - #43 (
INFO  09:39:43,483 - #44 )
INFO  09:39:43,484 - #20 int
INFO  09:39:43,484 - #20 m
INFO  09:39:43,484 - #40 ;
INFO  09:39:43,484 - #20 int
INFO  09:39:43,484 - #20 k
INFO  09:39:43,484 - #40 ;
INFO  09:39:43,484 - #20 char
INFO  09:39:43,484 - #20 c
INFO  09:39:43,484 - #40 ;
INFO  09:39:43,484 - #47 {
INFO  09:39:43,485 - #20 g
INFO  09:39:43,485 - #37 =
INFO  09:39:43,485 - #20 N
INFO  09:39:43,485 - #40 ;
INFO  09:39:43,486 - #20 g
INFO  09:39:43,486 - #38 ++
INFO  09:39:43,486 - #40 ;
INFO  09:39:43,486 - #20 k
INFO  09:39:43,486 - #37 =
INFO  09:39:43,486 - #20 g
INFO  09:39:43,486 - #40 ;
INFO  09:39:43,486 - #20 k
INFO  09:39:43,487 - #38 ++
INFO  09:39:43,487 - #40 ;
INFO  09:39:43,487 - #13 print
INFO  09:39:43,487 - #43 (
INFO  09:39:43,487 - #20 k
INFO  09:39:43,487 - #44 )
INFO  09:39:43,487 - #40 ;
INFO  09:39:43,487 - #48 }
INFO  09:39:43,487 - #48 }
INFO  09:39:43,488 - 

================SINTAKSNO STABLO====================


INFO  09:39:43,489 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:39:43,490 - 

================SEMANTICKA OBRADA====================


INFO  09:39:43,499 - Deklarisana konstanta 'N' na liniji 2
INFO  09:39:43,500 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:39:43,500 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:39:43,500 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:39:43,500 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:39:43,500 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:39:43,501 - PROGRAM 2 na liniji 1
INFO  09:39:43,501 - ===================================
INFO  09:39:43,501 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 09:39:43,507 - METHOD N
ERROR 09:39:43,507 - METHOD g
ERROR 09:39:43,507 - METHOD niz
ERROR 09:39:43,507 - METHOD main
ERROR 09:39:43,507 - PC main na liniji 7!
INFO  09:39:43,508 - Parsiranje uspesno zavrseno!
INFO  09:40:10,289 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:40:10,343 - #2 program
INFO  09:40:10,343 - #20 test
INFO  09:40:10,343 - #7 const
INFO  09:40:10,344 - #20 int
INFO  09:40:10,344 - #20 N
INFO  09:40:10,345 - #37 =
INFO  09:40:10,345 - #21 2
INFO  09:40:10,345 - #40 ;
INFO  09:40:10,345 - #20 int
INFO  09:40:10,346 - #20 g
INFO  09:40:10,346 - #40 ;
INFO  09:40:10,346 - #20 int
INFO  09:40:10,346 - #20 niz
INFO  09:40:10,346 - #45 [
INFO  09:40:10,346 - #46 ]
INFO  09:40:10,346 - #40 ;
INFO  09:40:10,347 - #47 {
INFO  09:40:10,347 - #16 void
INFO  09:40:10,347 - #20 main
INFO  09:40:10,347 - #43 (
INFO  09:40:10,347 - #44 )
INFO  09:40:10,347 - #20 int
INFO  09:40:10,347 - #20 m
INFO  09:40:10,347 - #40 ;
INFO  09:40:10,347 - #20 int
INFO  09:40:10,348 - #20 k
INFO  09:40:10,348 - #40 ;
INFO  09:40:10,348 - #20 char
INFO  09:40:10,348 - #20 c
INFO  09:40:10,348 - #40 ;
INFO  09:40:10,348 - #47 {
INFO  09:40:10,348 - #20 g
INFO  09:40:10,348 - #37 =
INFO  09:40:10,349 - #20 N
INFO  09:40:10,349 - #40 ;
INFO  09:40:10,350 - #20 g
INFO  09:40:10,350 - #38 ++
INFO  09:40:10,350 - #40 ;
INFO  09:40:10,350 - #20 k
INFO  09:40:10,351 - #37 =
INFO  09:40:10,351 - #20 g
INFO  09:40:10,351 - #40 ;
INFO  09:40:10,351 - #20 k
INFO  09:40:10,351 - #38 ++
INFO  09:40:10,351 - #40 ;
INFO  09:40:10,351 - #13 print
INFO  09:40:10,351 - #43 (
INFO  09:40:10,351 - #20 k
INFO  09:40:10,351 - #44 )
INFO  09:40:10,351 - #40 ;
INFO  09:40:10,352 - #48 }
INFO  09:40:10,352 - #48 }
INFO  09:40:10,353 - 

================SINTAKSNO STABLO====================


INFO  09:40:10,354 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:40:10,355 - 

================SEMANTICKA OBRADA====================


INFO  09:40:10,367 - Deklarisana konstanta 'N' na liniji 2
INFO  09:40:10,367 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:40:10,367 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:40:10,368 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:40:10,368 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:40:10,368 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:40:10,369 - PROGRAM 2 na liniji 1
INFO  09:40:10,370 - ===================================
INFO  09:40:10,370 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 09:40:10,377 - METHOD main
ERROR 09:40:10,377 - PC main na liniji 7!
INFO  09:40:10,377 - Parsiranje uspesno zavrseno!
INFO  09:40:37,116 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:40:37,161 - #2 program
INFO  09:40:37,161 - #20 test
INFO  09:40:37,161 - #7 const
INFO  09:40:37,162 - #20 int
INFO  09:40:37,162 - #20 N
INFO  09:40:37,162 - #37 =
INFO  09:40:37,162 - #21 2
INFO  09:40:37,162 - #40 ;
INFO  09:40:37,163 - #20 int
INFO  09:40:37,163 - #20 g
INFO  09:40:37,163 - #40 ;
INFO  09:40:37,164 - #20 int
INFO  09:40:37,164 - #20 niz
INFO  09:40:37,164 - #45 [
INFO  09:40:37,164 - #46 ]
INFO  09:40:37,164 - #40 ;
INFO  09:40:37,164 - #47 {
INFO  09:40:37,164 - #16 void
INFO  09:40:37,164 - #20 main
INFO  09:40:37,164 - #43 (
INFO  09:40:37,164 - #44 )
INFO  09:40:37,164 - #20 int
INFO  09:40:37,165 - #20 m
INFO  09:40:37,165 - #40 ;
INFO  09:40:37,165 - #20 int
INFO  09:40:37,165 - #20 k
INFO  09:40:37,165 - #40 ;
INFO  09:40:37,165 - #20 char
INFO  09:40:37,165 - #20 c
INFO  09:40:37,165 - #40 ;
INFO  09:40:37,166 - #47 {
INFO  09:40:37,166 - #20 g
INFO  09:40:37,166 - #37 =
INFO  09:40:37,166 - #20 N
INFO  09:40:37,166 - #40 ;
INFO  09:40:37,167 - #20 g
INFO  09:40:37,167 - #38 ++
INFO  09:40:37,167 - #40 ;
INFO  09:40:37,167 - #20 k
INFO  09:40:37,168 - #37 =
INFO  09:40:37,168 - #20 g
INFO  09:40:37,168 - #40 ;
INFO  09:40:37,168 - #20 k
INFO  09:40:37,168 - #38 ++
INFO  09:40:37,168 - #40 ;
INFO  09:40:37,168 - #13 print
INFO  09:40:37,168 - #43 (
INFO  09:40:37,168 - #20 k
INFO  09:40:37,168 - #44 )
INFO  09:40:37,168 - #40 ;
INFO  09:40:37,168 - #48 }
INFO  09:40:37,169 - #48 }
INFO  09:40:37,170 - 

================SINTAKSNO STABLO====================


INFO  09:40:37,172 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:40:37,174 - 

================SEMANTICKA OBRADA====================


INFO  09:40:37,183 - Deklarisana konstanta 'N' na liniji 2
INFO  09:40:37,183 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:40:37,183 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:40:37,184 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:40:37,184 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:40:37,184 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:40:37,184 - PROGRAM 2 na liniji 1
INFO  09:40:37,185 - ===================================
INFO  09:40:37,185 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 09:40:37,192 - PC main na liniji 7!
ERROR 09:40:37,192 - currentMethod localSymbolsm
ERROR 09:40:37,192 - currentMethod localSymbolsk
INFO  09:40:37,192 - Parsiranje uspesno zavrseno!
INFO  09:41:11,627 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:41:11,674 - #2 program
INFO  09:41:11,675 - #20 test
INFO  09:41:11,675 - #7 const
INFO  09:41:11,675 - #20 int
INFO  09:41:11,675 - #20 N
INFO  09:41:11,676 - #37 =
INFO  09:41:11,676 - #21 2
INFO  09:41:11,676 - #40 ;
INFO  09:41:11,676 - #20 int
INFO  09:41:11,677 - #20 g
INFO  09:41:11,677 - #40 ;
INFO  09:41:11,677 - #20 int
INFO  09:41:11,677 - #20 niz
INFO  09:41:11,677 - #45 [
INFO  09:41:11,677 - #46 ]
INFO  09:41:11,677 - #40 ;
INFO  09:41:11,677 - #47 {
INFO  09:41:11,677 - #16 void
INFO  09:41:11,677 - #20 main
INFO  09:41:11,677 - #43 (
INFO  09:41:11,678 - #44 )
INFO  09:41:11,678 - #20 int
INFO  09:41:11,678 - #20 m
INFO  09:41:11,678 - #40 ;
INFO  09:41:11,678 - #20 int
INFO  09:41:11,678 - #20 k
INFO  09:41:11,678 - #40 ;
INFO  09:41:11,678 - #20 char
INFO  09:41:11,679 - #20 c
INFO  09:41:11,679 - #40 ;
INFO  09:41:11,679 - #47 {
INFO  09:41:11,679 - #20 g
INFO  09:41:11,679 - #37 =
INFO  09:41:11,680 - #20 N
INFO  09:41:11,680 - #40 ;
INFO  09:41:11,680 - #20 g
INFO  09:41:11,681 - #38 ++
INFO  09:41:11,681 - #40 ;
INFO  09:41:11,681 - #20 k
INFO  09:41:11,681 - #37 =
INFO  09:41:11,681 - #20 g
INFO  09:41:11,681 - #40 ;
INFO  09:41:11,681 - #20 k
INFO  09:41:11,681 - #38 ++
INFO  09:41:11,682 - #40 ;
INFO  09:41:11,682 - #13 print
INFO  09:41:11,682 - #43 (
INFO  09:41:11,682 - #20 k
INFO  09:41:11,682 - #44 )
INFO  09:41:11,682 - #40 ;
INFO  09:41:11,683 - #48 }
INFO  09:41:11,683 - #48 }
INFO  09:41:11,684 - 

================SINTAKSNO STABLO====================


INFO  09:41:11,685 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:41:11,686 - 

================SEMANTICKA OBRADA====================


INFO  09:41:11,695 - Deklarisana konstanta 'N' na liniji 2
INFO  09:41:11,696 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:41:11,696 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:41:11,696 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:41:11,696 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:41:11,696 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:41:11,697 - PROGRAM 2 na liniji 1
INFO  09:41:11,698 - ===================================
INFO  09:41:11,698 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 09:41:11,704 - PC main na liniji 7!
INFO  09:41:11,704 - Parsiranje uspesno zavrseno!
INFO  09:41:25,889 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:41:25,935 - #2 program
INFO  09:41:25,935 - #20 test
INFO  09:41:25,935 - #7 const
INFO  09:41:25,935 - #20 int
INFO  09:41:25,936 - #20 N
INFO  09:41:25,936 - #37 =
INFO  09:41:25,936 - #21 2
INFO  09:41:25,936 - #40 ;
INFO  09:41:25,937 - #20 int
INFO  09:41:25,937 - #20 g
INFO  09:41:25,937 - #40 ;
INFO  09:41:25,938 - #20 int
INFO  09:41:25,938 - #20 niz
INFO  09:41:25,938 - #45 [
INFO  09:41:25,938 - #46 ]
INFO  09:41:25,938 - #40 ;
INFO  09:41:25,938 - #47 {
INFO  09:41:25,938 - #16 void
INFO  09:41:25,938 - #20 main
INFO  09:41:25,938 - #43 (
INFO  09:41:25,939 - #44 )
INFO  09:41:25,939 - #20 int
INFO  09:41:25,939 - #20 m
INFO  09:41:25,939 - #40 ;
INFO  09:41:25,939 - #20 int
INFO  09:41:25,939 - #20 k
INFO  09:41:25,939 - #40 ;
INFO  09:41:25,939 - #20 char
INFO  09:41:25,940 - #20 c
INFO  09:41:25,940 - #40 ;
INFO  09:41:25,940 - #47 {
INFO  09:41:25,940 - #20 g
INFO  09:41:25,940 - #37 =
INFO  09:41:25,940 - #20 N
INFO  09:41:25,940 - #40 ;
INFO  09:41:25,941 - #20 g
INFO  09:41:25,941 - #38 ++
INFO  09:41:25,941 - #40 ;
INFO  09:41:25,941 - #20 k
INFO  09:41:25,941 - #37 =
INFO  09:41:25,941 - #20 g
INFO  09:41:25,942 - #40 ;
INFO  09:41:25,942 - #20 k
INFO  09:41:25,942 - #38 ++
INFO  09:41:25,942 - #40 ;
INFO  09:41:25,942 - #13 print
INFO  09:41:25,943 - #43 (
INFO  09:41:25,943 - #20 k
INFO  09:41:25,943 - #44 )
INFO  09:41:25,943 - #40 ;
INFO  09:41:25,943 - #48 }
INFO  09:41:25,943 - #48 }
INFO  09:41:25,944 - 

================SINTAKSNO STABLO====================


INFO  09:41:25,945 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:41:25,946 - 

================SEMANTICKA OBRADA====================


INFO  09:41:25,956 - Deklarisana konstanta 'N' na liniji 2
INFO  09:41:25,957 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:41:25,957 - Deklarisan globalni niz 'niz' na liniji 5
INFO  09:41:25,957 - Deklarisana promenljiva 'm' na liniji 8
INFO  09:41:25,957 - Deklarisana promenljiva 'k' na liniji 9
INFO  09:41:25,957 - Deklarisana promenljiva 'c' na liniji 10
INFO  09:41:25,957 - PROGRAM 2 na liniji 1
INFO  09:41:25,958 - ===================================
INFO  09:41:25,958 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  09:41:25,964 - Parsiranje uspesno zavrseno!
INFO  10:06:07,637 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:06:07,703 - #2 program
INFO  10:06:07,703 - #20 test
INFO  10:06:07,703 - #7 const
INFO  10:06:07,705 - #20 int
INFO  10:06:07,705 - #20 N
INFO  10:06:07,706 - #37 =
INFO  10:06:07,706 - #21 2
INFO  10:06:07,706 - #40 ;
INFO  10:06:07,707 - #20 int
INFO  10:06:07,708 - #20 g
INFO  10:06:07,708 - #40 ;
INFO  10:06:07,708 - #20 int
INFO  10:06:07,708 - #20 niz
INFO  10:06:07,709 - #45 [
INFO  10:06:07,709 - #46 ]
INFO  10:06:07,709 - #40 ;
INFO  10:06:07,709 - #47 {
INFO  10:06:07,709 - #16 void
INFO  10:06:07,709 - #20 main
INFO  10:06:07,709 - #43 (
INFO  10:06:07,709 - #44 )
INFO  10:06:07,710 - #20 int
INFO  10:06:07,710 - #20 m
INFO  10:06:07,710 - #40 ;
INFO  10:06:07,710 - #20 int
INFO  10:06:07,710 - #20 k
INFO  10:06:07,710 - #40 ;
INFO  10:06:07,710 - #20 char
INFO  10:06:07,711 - #20 c
INFO  10:06:07,711 - #40 ;
INFO  10:06:07,711 - #47 {
INFO  10:06:07,711 - #20 g
INFO  10:06:07,711 - #37 =
INFO  10:06:07,712 - #20 N
INFO  10:06:07,712 - #40 ;
INFO  10:06:07,712 - #20 g
INFO  10:06:07,713 - #38 ++
INFO  10:06:07,713 - #40 ;
INFO  10:06:07,713 - #20 k
INFO  10:06:07,713 - #37 =
INFO  10:06:07,713 - #20 g
INFO  10:06:07,713 - #40 ;
INFO  10:06:07,713 - #20 k
INFO  10:06:07,713 - #38 ++
INFO  10:06:07,713 - #40 ;
INFO  10:06:07,713 - #20 m
INFO  10:06:07,713 - #37 =
INFO  10:06:07,713 - #21 2
INFO  10:06:07,714 - #26 *
INFO  10:06:07,714 - #21 1
INFO  10:06:07,715 - #26 *
INFO  10:06:07,715 - #21 3
INFO  10:06:07,715 - #40 ;
INFO  10:06:07,715 - #13 print
INFO  10:06:07,715 - #43 (
INFO  10:06:07,715 - #20 m
INFO  10:06:07,715 - #44 )
INFO  10:06:07,715 - #40 ;
INFO  10:06:07,715 - #48 }
INFO  10:06:07,716 - #48 }
INFO  10:06:07,716 - 

================SINTAKSNO STABLO====================


INFO  10:06:07,718 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         g
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   N
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               g
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorIncrement(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                ) [DesignatorIncrement]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 m
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermMulop(
                        TermMulop(
                          TermSingle(
                            FactorNumConst(
                             2
                            ) [FactorNumConst]
                          ) [TermSingle]
                          MulopMul(
                          ) [MulopMul]
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermMulop]
                        MulopMul(
                        ) [MulopMul]
                        FactorNumConst(
                         3
                        ) [FactorNumConst]
                      ) [TermMulop]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     m
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:06:07,720 - 

================SEMANTICKA OBRADA====================


INFO  10:06:07,732 - Deklarisana konstanta 'N' na liniji 2
INFO  10:06:07,732 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  10:06:07,732 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:06:07,733 - Deklarisana promenljiva 'm' na liniji 7
INFO  10:06:07,733 - Deklarisana promenljiva 'k' na liniji 8
INFO  10:06:07,733 - Deklarisana promenljiva 'c' na liniji 9
INFO  10:06:07,733 - PROGRAM 2 na liniji 1
INFO  10:06:07,734 - ===================================
INFO  10:06:07,734 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:06:07,741 - Parsiranje uspesno zavrseno!
INFO  10:06:59,933 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:06:59,979 - #2 program
INFO  10:06:59,979 - #20 test
INFO  10:06:59,979 - #7 const
INFO  10:06:59,980 - #20 int
INFO  10:06:59,980 - #20 N
INFO  10:06:59,980 - #37 =
INFO  10:06:59,980 - #21 2
INFO  10:06:59,980 - #40 ;
INFO  10:06:59,981 - #20 int
INFO  10:06:59,981 - #20 g
INFO  10:06:59,981 - #40 ;
INFO  10:06:59,982 - #20 int
INFO  10:06:59,982 - #20 niz
INFO  10:06:59,982 - #45 [
INFO  10:06:59,982 - #46 ]
INFO  10:06:59,982 - #40 ;
INFO  10:06:59,982 - #47 {
INFO  10:06:59,982 - #16 void
INFO  10:06:59,982 - #20 main
INFO  10:06:59,982 - #43 (
INFO  10:06:59,983 - #44 )
INFO  10:06:59,983 - #20 int
INFO  10:06:59,983 - #20 m
INFO  10:06:59,983 - #40 ;
INFO  10:06:59,983 - #20 int
INFO  10:06:59,983 - #20 k
INFO  10:06:59,983 - #40 ;
INFO  10:06:59,983 - #20 char
INFO  10:06:59,984 - #20 c
INFO  10:06:59,984 - #40 ;
INFO  10:06:59,984 - #47 {
INFO  10:06:59,984 - #20 g
INFO  10:06:59,984 - #37 =
INFO  10:06:59,984 - #20 N
INFO  10:06:59,984 - #40 ;
INFO  10:06:59,985 - #20 g
INFO  10:06:59,985 - #38 ++
INFO  10:06:59,985 - #40 ;
INFO  10:06:59,985 - #20 m
INFO  10:06:59,986 - #37 =
INFO  10:06:59,986 - #20 N
INFO  10:06:59,986 - #26 *
INFO  10:06:59,986 - #20 g
INFO  10:06:59,987 - #26 *
INFO  10:06:59,987 - #21 1
INFO  10:06:59,987 - #40 ;
INFO  10:06:59,987 - #13 print
INFO  10:06:59,987 - #43 (
INFO  10:06:59,987 - #20 m
INFO  10:06:59,988 - #44 )
INFO  10:06:59,988 - #40 ;
INFO  10:06:59,988 - #48 }
INFO  10:06:59,988 - #48 }
INFO  10:06:59,989 - 

================SINTAKSNO STABLO====================


INFO  10:06:59,990 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 k
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               N
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorIncrement(
                  DesignatorSimple(
                   g
                  ) [DesignatorSimple]
                ) [DesignatorIncrement]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 m
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermMulop(
                        TermMulop(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               N
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                          MulopMul(
                          ) [MulopMul]
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermMulop]
                        MulopMul(
                        ) [MulopMul]
                        FactorNumConst(
                         1
                        ) [FactorNumConst]
                      ) [TermMulop]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     m
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:06:59,991 - 

================SEMANTICKA OBRADA====================


INFO  10:07:00,001 - Deklarisana konstanta 'N' na liniji 2
INFO  10:07:00,001 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  10:07:00,001 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:07:00,002 - Deklarisana promenljiva 'm' na liniji 7
INFO  10:07:00,002 - Deklarisana promenljiva 'k' na liniji 8
INFO  10:07:00,002 - Deklarisana promenljiva 'c' na liniji 9
INFO  10:07:00,003 - PROGRAM 2 na liniji 1
INFO  10:07:00,006 - ===================================
INFO  10:07:00,006 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:07:00,013 - Parsiranje uspesno zavrseno!
INFO  10:07:20,239 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:07:20,286 - #2 program
INFO  10:07:20,286 - #20 test
INFO  10:07:20,286 - #7 const
INFO  10:07:20,287 - #20 int
INFO  10:07:20,287 - #20 N
INFO  10:07:20,287 - #37 =
INFO  10:07:20,287 - #21 2
INFO  10:07:20,287 - #40 ;
INFO  10:07:20,288 - #20 int
INFO  10:07:20,288 - #20 g
INFO  10:07:20,288 - #40 ;
INFO  10:07:20,288 - #20 int
INFO  10:07:20,288 - #20 niz
INFO  10:07:20,288 - #45 [
INFO  10:07:20,289 - #46 ]
INFO  10:07:20,289 - #40 ;
INFO  10:07:20,289 - #47 {
INFO  10:07:20,289 - #16 void
INFO  10:07:20,289 - #20 main
INFO  10:07:20,289 - #43 (
INFO  10:07:20,289 - #44 )
INFO  10:07:20,289 - #20 int
INFO  10:07:20,289 - #20 m
INFO  10:07:20,289 - #40 ;
INFO  10:07:20,289 - #20 int
INFO  10:07:20,290 - #20 k
INFO  10:07:20,290 - #40 ;
INFO  10:07:20,290 - #47 {
INFO  10:07:20,290 - #20 g
INFO  10:07:20,290 - #37 =
INFO  10:07:20,291 - #20 N
INFO  10:07:20,291 - #40 ;
INFO  10:07:20,292 - #20 g
INFO  10:07:20,292 - #38 ++
INFO  10:07:20,292 - #40 ;
INFO  10:07:20,292 - #20 m
INFO  10:07:20,293 - #37 =
INFO  10:07:20,293 - #20 N
INFO  10:07:20,293 - #26 *
INFO  10:07:20,293 - #20 g
INFO  10:07:20,294 - #26 *
INFO  10:07:20,294 - #21 1
INFO  10:07:20,294 - #40 ;
INFO  10:07:20,295 - #13 print
INFO  10:07:20,295 - #43 (
INFO  10:07:20,295 - #20 m
INFO  10:07:20,295 - #44 )
INFO  10:07:20,295 - #40 ;
INFO  10:07:20,295 - #48 }
INFO  10:07:20,295 - #48 }
INFO  10:07:20,297 - 

================SINTAKSNO STABLO====================


INFO  10:07:20,297 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               N
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorIncrement(
                  DesignatorSimple(
                   g
                  ) [DesignatorSimple]
                ) [DesignatorIncrement]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 m
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermMulop(
                        TermMulop(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               N
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                          MulopMul(
                          ) [MulopMul]
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermMulop]
                        MulopMul(
                        ) [MulopMul]
                        FactorNumConst(
                         1
                        ) [FactorNumConst]
                      ) [TermMulop]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     m
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:07:20,298 - 

================SEMANTICKA OBRADA====================


INFO  10:07:20,308 - Deklarisana konstanta 'N' na liniji 2
INFO  10:07:20,308 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  10:07:20,308 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:07:20,308 - Deklarisana promenljiva 'm' na liniji 7
INFO  10:07:20,308 - Deklarisana promenljiva 'k' na liniji 8
INFO  10:07:20,309 - PROGRAM 2 na liniji 1
INFO  10:07:20,309 - ===================================
INFO  10:07:20,309 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:07:20,316 - Parsiranje uspesno zavrseno!
INFO  10:07:27,940 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:07:27,985 - #2 program
INFO  10:07:27,986 - #20 test
INFO  10:07:27,986 - #7 const
INFO  10:07:27,987 - #20 int
INFO  10:07:27,987 - #20 N
INFO  10:07:27,987 - #37 =
INFO  10:07:27,987 - #21 2
INFO  10:07:27,988 - #40 ;
INFO  10:07:27,988 - #20 int
INFO  10:07:27,989 - #20 g
INFO  10:07:27,989 - #40 ;
INFO  10:07:27,989 - #20 int
INFO  10:07:27,990 - #20 niz
INFO  10:07:27,990 - #45 [
INFO  10:07:27,990 - #46 ]
INFO  10:07:27,990 - #40 ;
INFO  10:07:27,990 - #47 {
INFO  10:07:27,990 - #16 void
INFO  10:07:27,990 - #20 main
INFO  10:07:27,990 - #43 (
INFO  10:07:27,990 - #44 )
INFO  10:07:27,990 - #20 int
INFO  10:07:27,991 - #20 m
INFO  10:07:27,991 - #40 ;
INFO  10:07:27,991 - #20 int
INFO  10:07:27,991 - #20 k
INFO  10:07:27,991 - #40 ;
INFO  10:07:27,991 - #47 {
INFO  10:07:27,991 - #20 g
INFO  10:07:27,991 - #37 =
INFO  10:07:27,991 - #20 N
INFO  10:07:27,992 - #40 ;
INFO  10:07:27,993 - #20 g
INFO  10:07:27,993 - #38 ++
INFO  10:07:27,993 - #40 ;
INFO  10:07:27,993 - #20 m
INFO  10:07:27,993 - #37 =
INFO  10:07:27,994 - #20 N
INFO  10:07:27,994 - #26 *
INFO  10:07:27,994 - #20 g
INFO  10:07:27,995 - #26 *
INFO  10:07:27,995 - #21 1
INFO  10:07:27,995 - #40 ;
INFO  10:07:27,996 - #13 print
INFO  10:07:27,996 - #43 (
INFO  10:07:27,996 - #20 m
INFO  10:07:27,996 - #44 )
INFO  10:07:27,996 - #40 ;
INFO  10:07:27,996 - #48 }
INFO  10:07:27,996 - #48 }
INFO  10:07:27,997 - 

================SINTAKSNO STABLO====================


INFO  10:07:27,998 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               N
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorIncrement(
                  DesignatorSimple(
                   g
                  ) [DesignatorSimple]
                ) [DesignatorIncrement]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 m
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermMulop(
                        TermMulop(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               N
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                          MulopMul(
                          ) [MulopMul]
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermMulop]
                        MulopMul(
                        ) [MulopMul]
                        FactorNumConst(
                         1
                        ) [FactorNumConst]
                      ) [TermMulop]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     m
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:07:27,999 - 

================SEMANTICKA OBRADA====================


INFO  10:07:28,013 - Deklarisana konstanta 'N' na liniji 2
INFO  10:07:28,013 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  10:07:28,013 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:07:28,014 - Deklarisana promenljiva 'm' na liniji 7
INFO  10:07:28,014 - Deklarisana promenljiva 'k' na liniji 8
INFO  10:07:28,014 - PROGRAM 2 na liniji 1
INFO  10:07:28,015 - ===================================
INFO  10:07:28,015 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:07:28,021 - Parsiranje uspesno zavrseno!
INFO  10:13:00,631 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:13:00,691 - #2 program
INFO  10:13:00,691 - #20 test
INFO  10:13:00,691 - #7 const
INFO  10:13:00,692 - #20 int
INFO  10:13:00,692 - #20 N
INFO  10:13:00,693 - #37 =
INFO  10:13:00,693 - #21 2
INFO  10:13:00,693 - #40 ;
INFO  10:13:00,694 - #20 int
INFO  10:13:00,694 - #20 g
INFO  10:13:00,694 - #40 ;
INFO  10:13:00,695 - #20 int
INFO  10:13:00,695 - #20 niz
INFO  10:13:00,695 - #45 [
INFO  10:13:00,695 - #46 ]
INFO  10:13:00,695 - #40 ;
INFO  10:13:00,696 - #47 {
INFO  10:13:00,696 - #16 void
INFO  10:13:00,696 - #20 main
INFO  10:13:00,696 - #43 (
INFO  10:13:00,696 - #44 )
INFO  10:13:00,696 - #20 int
INFO  10:13:00,696 - #20 m
INFO  10:13:00,696 - #40 ;
INFO  10:13:00,697 - #20 int
INFO  10:13:00,697 - #20 k
INFO  10:13:00,697 - #40 ;
INFO  10:13:00,697 - #47 {
INFO  10:13:00,697 - #20 g
INFO  10:13:00,697 - #37 =
INFO  10:13:00,698 - #20 N
INFO  10:13:00,698 - #40 ;
INFO  10:13:00,699 - #20 g
INFO  10:13:00,699 - #38 ++
INFO  10:13:00,699 - #40 ;
INFO  10:13:00,699 - #20 m
INFO  10:13:00,699 - #37 =
INFO  10:13:00,699 - #20 g
INFO  10:13:00,700 - #24 +
INFO  10:13:00,700 - #20 N
INFO  10:13:00,701 - #25 -
INFO  10:13:00,701 - #21 2
INFO  10:13:00,702 - #40 ;
INFO  10:13:00,702 - #13 print
INFO  10:13:00,702 - #43 (
INFO  10:13:00,702 - #20 m
INFO  10:13:00,702 - #44 )
INFO  10:13:00,702 - #40 ;
INFO  10:13:00,702 - #48 }
INFO  10:13:00,703 - #48 }
INFO  10:13:00,704 - 

================SINTAKSNO STABLO====================


INFO  10:13:00,705 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               N
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorIncrement(
                  DesignatorSimple(
                   g
                  ) [DesignatorSimple]
                ) [DesignatorIncrement]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 m
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprAddop(
                      ExprAddop(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               g
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                        AddopPlus(
                        ) [AddopPlus]
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             N
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprAddop]
                      AddopMinus(
                      ) [AddopMinus]
                      TermSingle(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprAddop]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     m
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:13:00,705 - 

================SEMANTICKA OBRADA====================


INFO  10:13:00,716 - Deklarisana konstanta 'N' na liniji 2
INFO  10:13:00,716 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  10:13:00,716 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:13:00,716 - Deklarisana promenljiva 'm' na liniji 7
INFO  10:13:00,716 - Deklarisana promenljiva 'k' na liniji 8
INFO  10:13:00,717 - PROGRAM 2 na liniji 1
INFO  10:13:00,718 - ===================================
INFO  10:13:00,718 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:13:00,724 - Parsiranje uspesno zavrseno!
INFO  10:13:44,998 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:13:45,046 - #2 program
INFO  10:13:45,046 - #20 test
INFO  10:13:45,046 - #7 const
INFO  10:13:45,047 - #20 int
INFO  10:13:45,047 - #20 N
INFO  10:13:45,048 - #37 =
INFO  10:13:45,048 - #21 2
INFO  10:13:45,048 - #40 ;
INFO  10:13:45,048 - #20 int
INFO  10:13:45,049 - #20 g
INFO  10:13:45,049 - #40 ;
INFO  10:13:45,049 - #20 int
INFO  10:13:45,049 - #20 niz
INFO  10:13:45,049 - #45 [
INFO  10:13:45,049 - #46 ]
INFO  10:13:45,049 - #40 ;
INFO  10:13:45,049 - #47 {
INFO  10:13:45,049 - #16 void
INFO  10:13:45,049 - #20 main
INFO  10:13:45,050 - #43 (
INFO  10:13:45,050 - #44 )
INFO  10:13:45,050 - #20 int
INFO  10:13:45,050 - #20 m
INFO  10:13:45,051 - #40 ;
INFO  10:13:45,051 - #20 int
INFO  10:13:45,051 - #20 k
INFO  10:13:45,051 - #40 ;
INFO  10:13:45,051 - #47 {
INFO  10:13:45,052 - #20 g
INFO  10:13:45,052 - #37 =
INFO  10:13:45,052 - #20 N
INFO  10:13:45,052 - #40 ;
INFO  10:13:45,053 - #20 g
INFO  10:13:45,054 - #38 ++
INFO  10:13:45,054 - #40 ;
INFO  10:13:45,054 - #20 m
INFO  10:13:45,054 - #37 =
INFO  10:13:45,054 - #25 -
INFO  10:13:45,054 - #20 g
INFO  10:13:45,054 - #24 +
INFO  10:13:45,055 - #20 N
INFO  10:13:45,056 - #24 +
INFO  10:13:45,056 - #21 2
INFO  10:13:45,056 - #40 ;
INFO  10:13:45,057 - #13 print
INFO  10:13:45,057 - #43 (
INFO  10:13:45,057 - #20 m
INFO  10:13:45,057 - #44 )
INFO  10:13:45,057 - #40 ;
INFO  10:13:45,057 - #48 }
INFO  10:13:45,058 - #48 }
INFO  10:13:45,059 - 

================SINTAKSNO STABLO====================


INFO  10:13:45,060 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               N
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorIncrement(
                  DesignatorSimple(
                   g
                  ) [DesignatorSimple]
                ) [DesignatorIncrement]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 m
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprAddop(
                      ExprAddop(
                        ExprNeg(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               g
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprNeg]
                        AddopPlus(
                        ) [AddopPlus]
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             N
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprAddop]
                      AddopPlus(
                      ) [AddopPlus]
                      TermSingle(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprAddop]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     m
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:13:45,060 - 

================SEMANTICKA OBRADA====================


INFO  10:13:45,073 - Deklarisana konstanta 'N' na liniji 2
INFO  10:13:45,074 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  10:13:45,074 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:13:45,074 - Deklarisana promenljiva 'm' na liniji 7
INFO  10:13:45,074 - Deklarisana promenljiva 'k' na liniji 8
INFO  10:13:45,074 - PROGRAM 2 na liniji 1
INFO  10:13:45,075 - ===================================
INFO  10:13:45,075 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:13:45,082 - Parsiranje uspesno zavrseno!
INFO  10:18:04,155 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:18:04,212 - #2 program
INFO  10:18:04,212 - #20 test
INFO  10:18:04,212 - #7 const
INFO  10:18:04,213 - #20 int
INFO  10:18:04,214 - #20 N
INFO  10:18:04,214 - #37 =
INFO  10:18:04,214 - #21 2
INFO  10:18:04,214 - #40 ;
INFO  10:18:04,215 - #20 int
INFO  10:18:04,216 - #20 g
INFO  10:18:04,216 - #40 ;
INFO  10:18:04,216 - #20 int
INFO  10:18:04,217 - #20 niz
INFO  10:18:04,217 - #45 [
INFO  10:18:04,217 - #46 ]
INFO  10:18:04,217 - #40 ;
INFO  10:18:04,217 - #47 {
INFO  10:18:04,217 - #16 void
INFO  10:18:04,217 - #20 main
INFO  10:18:04,217 - #43 (
INFO  10:18:04,218 - #44 )
INFO  10:18:04,218 - #20 int
INFO  10:18:04,218 - #20 m
INFO  10:18:04,218 - #40 ;
INFO  10:18:04,218 - #20 int
INFO  10:18:04,219 - #20 k
INFO  10:18:04,219 - #40 ;
INFO  10:18:04,219 - #47 {
INFO  10:18:04,219 - #20 g
INFO  10:18:04,219 - #37 =
INFO  10:18:04,219 - #20 N
INFO  10:18:04,219 - #40 ;
INFO  10:18:04,220 - #20 g
INFO  10:18:04,220 - #38 ++
INFO  10:18:04,220 - #40 ;
INFO  10:18:04,220 - #20 m
INFO  10:18:04,221 - #37 =
INFO  10:18:04,221 - #25 -
INFO  10:18:04,221 - #43 (
INFO  10:18:04,221 - #20 g
INFO  10:18:04,221 - #24 +
INFO  10:18:04,221 - #20 N
INFO  10:18:04,222 - #44 )
INFO  10:18:04,222 - #26 *
INFO  10:18:04,222 - #21 2
INFO  10:18:04,223 - #40 ;
INFO  10:18:04,223 - #13 print
INFO  10:18:04,224 - #43 (
INFO  10:18:04,224 - #20 m
INFO  10:18:04,224 - #44 )
INFO  10:18:04,224 - #40 ;
INFO  10:18:04,224 - #48 }
INFO  10:18:04,224 - #48 }
INFO  10:18:04,225 - 

================SINTAKSNO STABLO====================


INFO  10:18:04,226 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               N
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorIncrement(
                  DesignatorSimple(
                   g
                  ) [DesignatorSimple]
                ) [DesignatorIncrement]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 m
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprNeg(
                      TermMulop(
                        TermSingle(
                          FactorExpr(
                            ExprOne(
                              ExprAddop(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       g
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                                AddopPlus(
                                ) [AddopPlus]
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     N
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprAddop]
                            ) [ExprOne]
                          ) [FactorExpr]
                        ) [TermSingle]
                        MulopMul(
                        ) [MulopMul]
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermMulop]
                    ) [ExprNeg]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     m
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:18:04,227 - 

================SEMANTICKA OBRADA====================


INFO  10:18:04,241 - Deklarisana konstanta 'N' na liniji 2
INFO  10:18:04,241 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  10:18:04,241 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:18:04,241 - Deklarisana promenljiva 'm' na liniji 7
INFO  10:18:04,241 - Deklarisana promenljiva 'k' na liniji 8
INFO  10:18:04,242 - PROGRAM 2 na liniji 1
INFO  10:18:04,242 - ===================================
INFO  10:18:04,243 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:18:04,249 - Parsiranje uspesno zavrseno!
INFO  10:37:32,662 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:37:32,708 - #2 program
INFO  10:37:32,708 - #20 test301
INFO  10:37:32,708 - #7 const
INFO  10:37:32,709 - #20 int
INFO  10:37:32,709 - #20 nula
INFO  10:37:32,709 - #37 =
INFO  10:37:32,709 - #21 0
INFO  10:37:32,709 - #40 ;
INFO  10:37:32,710 - #7 const
INFO  10:37:32,710 - #20 int
INFO  10:37:32,711 - #20 jedan
INFO  10:37:32,711 - #37 =
INFO  10:37:32,711 - #21 1
INFO  10:37:32,711 - #40 ;
INFO  10:37:32,711 - #7 const
INFO  10:37:32,711 - #20 int
INFO  10:37:32,711 - #20 pet
INFO  10:37:32,711 - #37 =
INFO  10:37:32,711 - #21 5
INFO  10:37:32,711 - #40 ;
INFO  10:37:32,711 - #20 int
INFO  10:37:32,711 - #20 niz
INFO  10:37:32,712 - #45 [
INFO  10:37:32,712 - #46 ]
INFO  10:37:32,712 - #40 ;
INFO  10:37:32,712 - #20 char
INFO  10:37:32,712 - #20 nizch
INFO  10:37:32,712 - #45 [
INFO  10:37:32,712 - #46 ]
INFO  10:37:32,712 - #40 ;
INFO  10:37:32,713 - #47 {
INFO  10:37:32,713 - #16 void
INFO  10:37:32,713 - #20 main
INFO  10:37:32,713 - #43 (
INFO  10:37:32,713 - #44 )
INFO  10:37:32,713 - #20 int
INFO  10:37:32,713 - #20 bodovi
INFO  10:37:32,713 - #40 ;
INFO  10:37:32,713 - #20 bool
INFO  10:37:32,714 - #20 bt
INFO  10:37:32,714 - #40 ;
INFO  10:37:32,714 - #47 {
INFO  10:37:32,714 - #20 bodovi
INFO  10:37:32,714 - #37 =
INFO  10:37:32,714 - #21 0
INFO  10:37:32,714 - #40 ;
INFO  10:37:32,715 - #20 bodovi
INFO  10:37:32,715 - #38 ++
INFO  10:37:32,715 - #40 ;
INFO  10:37:32,716 - #20 bodovi
INFO  10:37:32,716 - #37 =
INFO  10:37:32,716 - #20 bodovi
INFO  10:37:32,716 - #24 +
INFO  10:37:32,716 - #20 jedan
INFO  10:37:32,717 - #40 ;
INFO  10:37:32,717 - #20 bodovi
INFO  10:37:32,717 - #37 =
INFO  10:37:32,717 - #20 bodovi
INFO  10:37:32,717 - #26 *
INFO  10:37:32,717 - #20 pet
INFO  10:37:32,718 - #40 ;
INFO  10:37:32,718 - #20 bodovi
INFO  10:37:32,718 - #39 --
INFO  10:37:32,718 - #40 ;
INFO  10:37:32,718 - #13 print
INFO  10:37:32,718 - #43 (
INFO  10:37:32,719 - #20 bodovi
INFO  10:37:32,719 - #44 )
INFO  10:37:32,719 - #40 ;
INFO  10:37:32,719 - #20 niz
INFO  10:37:32,719 - #37 =
INFO  10:37:32,719 - #12 new
INFO  10:37:32,719 - #20 int
INFO  10:37:32,719 - #45 [
INFO  10:37:32,719 - #21 3
INFO  10:37:32,719 - #46 ]
INFO  10:37:32,719 - #40 ;
INFO  10:37:32,719 - #20 niz
INFO  10:37:32,720 - #45 [
INFO  10:37:32,720 - #20 nula
INFO  10:37:32,720 - #46 ]
INFO  10:37:32,720 - #37 =
INFO  10:37:32,720 - #20 jedan
INFO  10:37:32,720 - #40 ;
INFO  10:37:32,720 - #20 niz
INFO  10:37:32,720 - #45 [
INFO  10:37:32,720 - #21 1
INFO  10:37:32,720 - #46 ]
INFO  10:37:32,721 - #37 =
INFO  10:37:32,721 - #21 2
INFO  10:37:32,721 - #40 ;
INFO  10:37:32,721 - #20 niz
INFO  10:37:32,721 - #45 [
INFO  10:37:32,721 - #20 niz
INFO  10:37:32,721 - #45 [
INFO  10:37:32,721 - #20 jedan
INFO  10:37:32,721 - #46 ]
INFO  10:37:32,722 - #46 ]
INFO  10:37:32,722 - #37 =
INFO  10:37:32,722 - #20 niz
INFO  10:37:32,722 - #45 [
INFO  10:37:32,722 - #20 niz
INFO  10:37:32,722 - #45 [
INFO  10:37:32,722 - #21 0
INFO  10:37:32,722 - #46 ]
INFO  10:37:32,722 - #46 ]
INFO  10:37:32,722 - #26 *
INFO  10:37:32,722 - #21 3
INFO  10:37:32,722 - #40 ;
INFO  10:37:32,722 - #20 bodovi
INFO  10:37:32,722 - #37 =
INFO  10:37:32,723 - #20 niz
INFO  10:37:32,723 - #45 [
INFO  10:37:32,723 - #21 2
INFO  10:37:32,723 - #46 ]
INFO  10:37:32,723 - #27 /
INFO  10:37:32,723 - #20 niz
INFO  10:37:32,723 - #45 [
INFO  10:37:32,723 - #21 0
INFO  10:37:32,724 - #46 ]
INFO  10:37:32,724 - #40 ;
INFO  10:37:32,724 - #13 print
INFO  10:37:32,724 - #43 (
INFO  10:37:32,724 - #20 bodovi
INFO  10:37:32,724 - #44 )
INFO  10:37:32,724 - #40 ;
INFO  10:37:32,724 - #13 print
INFO  10:37:32,725 - #43 (
INFO  10:37:32,725 - #20 niz
INFO  10:37:32,725 - #45 [
INFO  10:37:32,725 - #21 2
INFO  10:37:32,725 - #46 ]
INFO  10:37:32,725 - #44 )
INFO  10:37:32,725 - #40 ;
INFO  10:37:32,725 - #20 nizch
INFO  10:37:32,725 - #37 =
INFO  10:37:32,725 - #12 new
INFO  10:37:32,725 - #20 char
INFO  10:37:32,725 - #45 [
INFO  10:37:32,725 - #21 3
INFO  10:37:32,725 - #46 ]
INFO  10:37:32,725 - #40 ;
INFO  10:37:32,725 - #20 nizch
INFO  10:37:32,726 - #45 [
INFO  10:37:32,726 - #21 0
INFO  10:37:32,726 - #46 ]
INFO  10:37:32,726 - #37 =
INFO  10:37:32,726 - #22 a
INFO  10:37:32,726 - #40 ;
INFO  10:37:32,730 - #20 nizch
INFO  10:37:32,730 - #45 [
INFO  10:37:32,730 - #20 jedan
INFO  10:37:32,730 - #46 ]
INFO  10:37:32,730 - #37 =
INFO  10:37:32,730 - #22 b
INFO  10:37:32,730 - #40 ;
INFO  10:37:32,730 - #20 nizch
INFO  10:37:32,730 - #45 [
INFO  10:37:32,730 - #20 pet
INFO  10:37:32,730 - #25 -
INFO  10:37:32,730 - #21 3
INFO  10:37:32,731 - #46 ]
INFO  10:37:32,731 - #37 =
INFO  10:37:32,731 - #22 c
INFO  10:37:32,731 - #40 ;
INFO  10:37:32,731 - #13 print
INFO  10:37:32,731 - #43 (
INFO  10:37:32,732 - #20 nizch
INFO  10:37:32,732 - #45 [
INFO  10:37:32,732 - #21 1
INFO  10:37:32,732 - #46 ]
INFO  10:37:32,732 - #44 )
INFO  10:37:32,732 - #40 ;
INFO  10:37:32,732 - #13 print
INFO  10:37:32,732 - #43 (
INFO  10:37:32,733 - #20 nizch
INFO  10:37:32,733 - #45 [
INFO  10:37:32,733 - #20 jedan
INFO  10:37:32,733 - #26 *
INFO  10:37:32,733 - #21 2
INFO  10:37:32,733 - #46 ]
INFO  10:37:32,733 - #44 )
INFO  10:37:32,733 - #40 ;
INFO  10:37:32,733 - #20 bodovi
INFO  10:37:32,733 - #37 =
INFO  10:37:32,733 - #20 bodovi
INFO  10:37:32,733 - #24 +
INFO  10:37:32,733 - #43 (
INFO  10:37:32,733 - #20 pet
INFO  10:37:32,733 - #26 *
INFO  10:37:32,734 - #20 jedan
INFO  10:37:32,734 - #25 -
INFO  10:37:32,734 - #21 1
INFO  10:37:32,734 - #44 )
INFO  10:37:32,734 - #26 *
INFO  10:37:32,734 - #20 bodovi
INFO  10:37:32,734 - #25 -
INFO  10:37:32,734 - #43 (
INFO  10:37:32,735 - #21 3
INFO  10:37:32,735 - #28 %
INFO  10:37:32,735 - #21 2
INFO  10:37:32,735 - #24 +
INFO  10:37:32,735 - #21 3
INFO  10:37:32,735 - #26 *
INFO  10:37:32,736 - #21 2
INFO  10:37:32,736 - #25 -
INFO  10:37:32,736 - #21 3
INFO  10:37:32,736 - #44 )
INFO  10:37:32,736 - #40 ;
INFO  10:37:32,736 - #13 print
INFO  10:37:32,736 - #43 (
INFO  10:37:32,736 - #20 bodovi
INFO  10:37:32,736 - #44 )
INFO  10:37:32,736 - #40 ;
INFO  10:37:32,736 - #14 read
INFO  10:37:32,736 - #43 (
INFO  10:37:32,736 - #20 bodovi
INFO  10:37:32,736 - #44 )
INFO  10:37:32,736 - #40 ;
INFO  10:37:32,736 - #20 bt
INFO  10:37:32,737 - #37 =
INFO  10:37:32,737 - #23 true
INFO  10:37:32,737 - #40 ;
INFO  10:37:32,737 - #48 }
INFO  10:37:32,737 - #48 }
INFO  10:37:32,738 - 

================SINTAKSNO STABLO====================


INFO  10:37:32,744 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclMulti(
          ProgramDeclMulti(
            ProgramDeclEps(
            ) [ProgramDeclEps]
            PartConstDeclaration(
              ConstDeclaration(
                Type(
                 int
                ) [Type]
                ConstSingle(
                  ConstPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstPart]
                ) [ConstSingle]
              ) [ConstDeclaration]
            ) [PartConstDeclaration]
          ) [ProgramDeclMulti]
          PartConstDeclaration(
            ConstDeclaration(
              Type(
               int
              ) [Type]
              ConstSingle(
                ConstPart(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [ConstPart]
              ) [ConstSingle]
            ) [ConstDeclaration]
          ) [PartConstDeclaration]
        ) [ProgramDeclMulti]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarArray(
               niz
              ) [VarArray]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         char
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             nizch
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 bodovi
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementMulti(
                                                  StatementMulti(
                                                    StatementSingle(
                                                      StmtDesign(
                                                        DesignatorAssignment(
                                                          DesignatorSimple(
                                                           bodovi
                                                          ) [DesignatorSimple]
                                                          AssignmentExpr(
                                                            ExprOne(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorNumConst(
                                                                   0
                                                                  ) [FactorNumConst]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [ExprOne]
                                                          ) [AssignmentExpr]
                                                        ) [DesignatorAssignment]
                                                      ) [StmtDesign]
                                                    ) [StatementSingle]
                                                    StmtDesign(
                                                      DesignatorIncrement(
                                                        DesignatorSimple(
                                                         bodovi
                                                        ) [DesignatorSimple]
                                                      ) [DesignatorIncrement]
                                                    ) [StmtDesign]
                                                  ) [StatementMulti]
                                                  StmtDesign(
                                                    DesignatorAssignment(
                                                      DesignatorSimple(
                                                       bodovi
                                                      ) [DesignatorSimple]
                                                      AssignmentExpr(
                                                        ExprOne(
                                                          ExprAddop(
                                                            ExprSingle(
                                                              TermSingle(
                                                                FactorDesignator(
                                                                  DesignatorSimple(
                                                                   bodovi
                                                                  ) [DesignatorSimple]
                                                                ) [FactorDesignator]
                                                              ) [TermSingle]
                                                            ) [ExprSingle]
                                                            AddopPlus(
                                                            ) [AddopPlus]
                                                            TermSingle(
                                                              FactorDesignator(
                                                                DesignatorSimple(
                                                                 jedan
                                                                ) [DesignatorSimple]
                                                              ) [FactorDesignator]
                                                            ) [TermSingle]
                                                          ) [ExprAddop]
                                                        ) [ExprOne]
                                                      ) [AssignmentExpr]
                                                    ) [DesignatorAssignment]
                                                  ) [StmtDesign]
                                                ) [StatementMulti]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     bodovi
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermMulop(
                                                            TermSingle(
                                                              FactorDesignator(
                                                                DesignatorSimple(
                                                                 bodovi
                                                                ) [DesignatorSimple]
                                                              ) [FactorDesignator]
                                                            ) [TermSingle]
                                                            MulopMul(
                                                            ) [MulopMul]
                                                            FactorDesignator(
                                                              DesignatorSimple(
                                                               pet
                                                              ) [DesignatorSimple]
                                                            ) [FactorDesignator]
                                                          ) [TermMulop]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDesign(
                                                DesignatorDecrement(
                                                  DesignatorSimple(
                                                   bodovi
                                                  ) [DesignatorSimple]
                                                ) [DesignatorDecrement]
                                              ) [StmtDesign]
                                            ) [StatementMulti]
                                            StmtPrint(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorDesignator(
                                                      DesignatorSimple(
                                                       bodovi
                                                      ) [DesignatorSimple]
                                                    ) [FactorDesignator]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [StmtPrint]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               niz
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNewArray(
                                                        Type(
                                                         int
                                                        ) [Type]
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               3
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [FactorNewArray]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorArray(
                                             niz
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorDesignator(
                                                      DesignatorSimple(
                                                       nula
                                                      ) [DesignatorSimple]
                                                    ) [FactorDesignator]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [DesignatorArray]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorDesignator(
                                                      DesignatorSimple(
                                                       jedan
                                                      ) [DesignatorSimple]
                                                    ) [FactorDesignator]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorArray(
                                           niz
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   1
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [DesignatorArray]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   2
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorArray(
                                         niz
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorDesignator(
                                                  DesignatorArray(
                                                   niz
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorDesignator(
                                                            DesignatorSimple(
                                                             jedan
                                                            ) [DesignatorSimple]
                                                          ) [FactorDesignator]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [DesignatorArray]
                                                ) [FactorDesignator]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [DesignatorArray]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermMulop(
                                                TermSingle(
                                                  FactorDesignator(
                                                    DesignatorArray(
                                                     niz
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorDesignator(
                                                              DesignatorArray(
                                                               niz
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       0
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                              ) [DesignatorArray]
                                                            ) [FactorDesignator]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [DesignatorArray]
                                                  ) [FactorDesignator]
                                                ) [TermSingle]
                                                MulopMul(
                                                ) [MulopMul]
                                                FactorNumConst(
                                                 3
                                                ) [FactorNumConst]
                                              ) [TermMulop]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       bodovi
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermMulop(
                                              TermSingle(
                                                FactorDesignator(
                                                  DesignatorArray(
                                                   niz
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           2
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [DesignatorArray]
                                                ) [FactorDesignator]
                                              ) [TermSingle]
                                              MulopDiv(
                                              ) [MulopDiv]
                                              FactorDesignator(
                                                DesignatorArray(
                                                 niz
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         0
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [DesignatorArray]
                                              ) [FactorDesignator]
                                            ) [TermMulop]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtPrint(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorSimple(
                                           bodovi
                                          ) [DesignatorSimple]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [StmtPrint]
                              ) [StatementMulti]
                              StmtPrint(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorArray(
                                         niz
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 2
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [DesignatorArray]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [StmtPrint]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 nizch
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNewArray(
                                          Type(
                                           char
                                          ) [Type]
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 3
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [FactorNewArray]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorArray(
                               nizch
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       0
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [DesignatorArray]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorCharConst(
                                       a
                                      ) [FactorCharConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorArray(
                             nizch
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       jedan
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [DesignatorArray]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorCharConst(
                                     b
                                    ) [FactorCharConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorArray(
                           nizch
                            ExprOne(
                              ExprAddop(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       pet
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                                AddopMinus(
                                ) [AddopMinus]
                                TermSingle(
                                  FactorNumConst(
                                   3
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprAddop]
                            ) [ExprOne]
                          ) [DesignatorArray]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorCharConst(
                                   c
                                  ) [FactorCharConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtPrint(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorArray(
                               nizch
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [DesignatorArray]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [StmtPrint]
                  ) [StatementMulti]
                  StmtPrint(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorArray(
                             nizch
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         jedan
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [DesignatorArray]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [StmtPrint]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     bodovi
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprAddop(
                          ExprAddop(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   bodovi
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                            AddopPlus(
                            ) [AddopPlus]
                            TermMulop(
                              TermSingle(
                                FactorExpr(
                                  ExprOne(
                                    ExprAddop(
                                      ExprSingle(
                                        TermMulop(
                                          TermSingle(
                                            FactorDesignator(
                                              DesignatorSimple(
                                               pet
                                              ) [DesignatorSimple]
                                            ) [FactorDesignator]
                                          ) [TermSingle]
                                          MulopMul(
                                          ) [MulopMul]
                                          FactorDesignator(
                                            DesignatorSimple(
                                             jedan
                                            ) [DesignatorSimple]
                                          ) [FactorDesignator]
                                        ) [TermMulop]
                                      ) [ExprSingle]
                                      AddopMinus(
                                      ) [AddopMinus]
                                      TermSingle(
                                        FactorNumConst(
                                         1
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprAddop]
                                  ) [ExprOne]
                                ) [FactorExpr]
                              ) [TermSingle]
                              MulopMul(
                              ) [MulopMul]
                              FactorDesignator(
                                DesignatorSimple(
                                 bodovi
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermMulop]
                          ) [ExprAddop]
                          AddopMinus(
                          ) [AddopMinus]
                          TermSingle(
                            FactorExpr(
                              ExprOne(
                                ExprAddop(
                                  ExprAddop(
                                    ExprSingle(
                                      TermMulop(
                                        TermSingle(
                                          FactorNumConst(
                                           3
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                        MulopMod(
                                        ) [MulopMod]
                                        FactorNumConst(
                                         2
                                        ) [FactorNumConst]
                                      ) [TermMulop]
                                    ) [ExprSingle]
                                    AddopPlus(
                                    ) [AddopPlus]
                                    TermMulop(
                                      TermSingle(
                                        FactorNumConst(
                                         3
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                      MulopMul(
                                      ) [MulopMul]
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermMulop]
                                  ) [ExprAddop]
                                  AddopMinus(
                                  ) [AddopMinus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [FactorExpr]
                          ) [TermSingle]
                        ) [ExprAddop]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtPrint(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         bodovi
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtPrint]
            ) [StatementMulti]
            StmtRead(
              DesignatorSimple(
               bodovi
              ) [DesignatorSimple]
            ) [StmtRead]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               bt
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorBoolConst(
                       true
                      ) [FactorBoolConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:37:32,747 - 

================SEMANTICKA OBRADA====================


INFO  10:37:32,759 - Deklarisana konstanta 'nula' na liniji 5
INFO  10:37:32,759 - Deklarisana konstanta 'jedan' na liniji 6
INFO  10:37:32,759 - Deklarisana konstanta 'pet' na liniji 7
INFO  10:37:32,759 - Deklarisan globalni niz 'niz' na liniji 9
INFO  10:37:32,760 - Deklarisan globalni niz 'nizch' na liniji 10
INFO  10:37:32,760 - Deklarisana promenljiva 'bodovi' na liniji 14
INFO  10:37:32,760 - Deklarisana promenljiva 'bt' na liniji 15
INFO  10:37:32,760 - Pristup elementu niza 'niz' na liniji 26
INFO  10:37:32,760 - Pristup elementu niza 'niz' na liniji 27
INFO  10:37:32,760 - Pristup elementu niza 'niz' na liniji 28
INFO  10:37:32,760 - Pristup elementu niza 'niz' na liniji 28
INFO  10:37:32,761 - Pristup elementu niza 'niz' na liniji 28
INFO  10:37:32,761 - Pristup elementu niza 'niz' na liniji 28
INFO  10:37:32,761 - Pristup elementu niza 'niz' na liniji 29
INFO  10:37:32,761 - Pristup elementu niza 'niz' na liniji 29
INFO  10:37:32,761 - Pristup elementu niza 'niz' na liniji 31
INFO  10:37:32,761 - Pristup elementu niza 'nizch' na liniji 35
INFO  10:37:32,761 - Pristup elementu niza 'nizch' na liniji 36
INFO  10:37:32,761 - Pristup elementu niza 'nizch' na liniji 37
INFO  10:37:32,761 - Pristup elementu niza 'nizch' na liniji 38
INFO  10:37:32,761 - Pristup elementu niza 'nizch' na liniji 39
INFO  10:37:32,761 - PROGRAM 2 na liniji 3
INFO  10:37:32,762 - ===================================
INFO  10:37:32,762 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:37:32,769 - Parsiranje uspesno zavrseno!
INFO  10:38:02,050 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:38:02,116 - #2 program
INFO  10:38:02,116 - #20 test301
INFO  10:38:02,116 - #7 const
INFO  10:38:02,117 - #20 int
INFO  10:38:02,117 - #20 nula
INFO  10:38:02,118 - #37 =
INFO  10:38:02,118 - #21 0
INFO  10:38:02,118 - #40 ;
INFO  10:38:02,119 - #7 const
INFO  10:38:02,119 - #20 int
INFO  10:38:02,119 - #20 jedan
INFO  10:38:02,119 - #37 =
INFO  10:38:02,119 - #21 1
INFO  10:38:02,120 - #40 ;
INFO  10:38:02,120 - #7 const
INFO  10:38:02,120 - #20 int
INFO  10:38:02,120 - #20 pet
INFO  10:38:02,120 - #37 =
INFO  10:38:02,120 - #21 5
INFO  10:38:02,120 - #40 ;
INFO  10:38:02,120 - #20 int
INFO  10:38:02,120 - #20 niz
INFO  10:38:02,120 - #45 [
INFO  10:38:02,120 - #46 ]
INFO  10:38:02,121 - #40 ;
INFO  10:38:02,121 - #20 char
INFO  10:38:02,121 - #20 nizch
INFO  10:38:02,121 - #45 [
INFO  10:38:02,122 - #46 ]
INFO  10:38:02,122 - #40 ;
INFO  10:38:02,122 - #47 {
INFO  10:38:02,122 - #16 void
INFO  10:38:02,122 - #20 main
INFO  10:38:02,122 - #43 (
INFO  10:38:02,122 - #44 )
INFO  10:38:02,122 - #20 int
INFO  10:38:02,123 - #20 bodovi
INFO  10:38:02,123 - #40 ;
INFO  10:38:02,123 - #20 bool
INFO  10:38:02,124 - #20 bt
INFO  10:38:02,124 - #40 ;
INFO  10:38:02,124 - #47 {
INFO  10:38:02,124 - #20 bodovi
INFO  10:38:02,124 - #37 =
INFO  10:38:02,125 - #21 0
INFO  10:38:02,125 - #40 ;
INFO  10:38:02,125 - #20 bodovi
INFO  10:38:02,126 - #38 ++
INFO  10:38:02,126 - #40 ;
INFO  10:38:02,126 - #20 bodovi
INFO  10:38:02,126 - #37 =
INFO  10:38:02,126 - #20 bodovi
INFO  10:38:02,126 - #24 +
INFO  10:38:02,126 - #20 jedan
INFO  10:38:02,127 - #40 ;
INFO  10:38:02,127 - #20 bodovi
INFO  10:38:02,128 - #37 =
INFO  10:38:02,128 - #20 bodovi
INFO  10:38:02,128 - #26 *
INFO  10:38:02,128 - #20 pet
INFO  10:38:02,128 - #40 ;
INFO  10:38:02,129 - #20 bodovi
INFO  10:38:02,129 - #39 --
INFO  10:38:02,129 - #40 ;
INFO  10:38:02,129 - #13 print
INFO  10:38:02,129 - #43 (
INFO  10:38:02,130 - #20 bodovi
INFO  10:38:02,130 - #44 )
INFO  10:38:02,130 - #40 ;
INFO  10:38:02,130 - #20 niz
INFO  10:38:02,130 - #37 =
INFO  10:38:02,130 - #12 new
INFO  10:38:02,130 - #20 int
INFO  10:38:02,130 - #45 [
INFO  10:38:02,130 - #21 3
INFO  10:38:02,130 - #46 ]
INFO  10:38:02,130 - #40 ;
INFO  10:38:02,131 - #20 niz
INFO  10:38:02,131 - #45 [
INFO  10:38:02,131 - #20 nula
INFO  10:38:02,131 - #46 ]
INFO  10:38:02,131 - #37 =
INFO  10:38:02,131 - #20 jedan
INFO  10:38:02,131 - #40 ;
INFO  10:38:02,132 - #20 niz
INFO  10:38:02,132 - #45 [
INFO  10:38:02,132 - #21 1
INFO  10:38:02,132 - #46 ]
INFO  10:38:02,132 - #37 =
INFO  10:38:02,132 - #21 2
INFO  10:38:02,132 - #40 ;
INFO  10:38:02,132 - #20 niz
INFO  10:38:02,132 - #45 [
INFO  10:38:02,132 - #20 niz
INFO  10:38:02,133 - #45 [
INFO  10:38:02,133 - #20 jedan
INFO  10:38:02,133 - #46 ]
INFO  10:38:02,135 - #46 ]
INFO  10:38:02,135 - #37 =
INFO  10:38:02,135 - #20 niz
INFO  10:38:02,135 - #45 [
INFO  10:38:02,135 - #20 niz
INFO  10:38:02,136 - #45 [
INFO  10:38:02,136 - #21 0
INFO  10:38:02,136 - #46 ]
INFO  10:38:02,136 - #46 ]
INFO  10:38:02,136 - #26 *
INFO  10:38:02,136 - #21 3
INFO  10:38:02,136 - #40 ;
INFO  10:38:02,136 - #20 bodovi
INFO  10:38:02,136 - #37 =
INFO  10:38:02,136 - #20 niz
INFO  10:38:02,136 - #45 [
INFO  10:38:02,136 - #21 2
INFO  10:38:02,136 - #46 ]
INFO  10:38:02,136 - #27 /
INFO  10:38:02,137 - #20 niz
INFO  10:38:02,137 - #45 [
INFO  10:38:02,137 - #21 0
INFO  10:38:02,137 - #46 ]
INFO  10:38:02,137 - #40 ;
INFO  10:38:02,137 - #13 print
INFO  10:38:02,138 - #43 (
INFO  10:38:02,138 - #20 bodovi
INFO  10:38:02,138 - #44 )
INFO  10:38:02,138 - #40 ;
INFO  10:38:02,138 - #13 print
INFO  10:38:02,138 - #43 (
INFO  10:38:02,138 - #20 niz
INFO  10:38:02,138 - #45 [
INFO  10:38:02,138 - #21 2
INFO  10:38:02,138 - #46 ]
INFO  10:38:02,138 - #44 )
INFO  10:38:02,138 - #40 ;
INFO  10:38:02,138 - #20 nizch
INFO  10:38:02,139 - #37 =
INFO  10:38:02,139 - #12 new
INFO  10:38:02,139 - #20 char
INFO  10:38:02,139 - #45 [
INFO  10:38:02,139 - #21 3
INFO  10:38:02,139 - #46 ]
INFO  10:38:02,139 - #40 ;
INFO  10:38:02,139 - #20 nizch
INFO  10:38:02,139 - #45 [
INFO  10:38:02,139 - #21 0
INFO  10:38:02,139 - #46 ]
INFO  10:38:02,139 - #37 =
INFO  10:38:02,139 - #22 a
INFO  10:38:02,139 - #40 ;
INFO  10:38:02,143 - #20 nizch
INFO  10:38:02,144 - #45 [
INFO  10:38:02,144 - #20 jedan
INFO  10:38:02,144 - #46 ]
INFO  10:38:02,144 - #37 =
INFO  10:38:02,144 - #22 b
INFO  10:38:02,144 - #40 ;
INFO  10:38:02,144 - #20 nizch
INFO  10:38:02,144 - #45 [
INFO  10:38:02,144 - #20 pet
INFO  10:38:02,144 - #25 -
INFO  10:38:02,144 - #21 3
INFO  10:38:02,145 - #46 ]
INFO  10:38:02,145 - #37 =
INFO  10:38:02,145 - #22 c
INFO  10:38:02,145 - #40 ;
INFO  10:38:02,145 - #13 print
INFO  10:38:02,145 - #43 (
INFO  10:38:02,145 - #20 nizch
INFO  10:38:02,145 - #45 [
INFO  10:38:02,145 - #21 1
INFO  10:38:02,145 - #46 ]
INFO  10:38:02,146 - #44 )
INFO  10:38:02,146 - #40 ;
INFO  10:38:02,146 - #13 print
INFO  10:38:02,146 - #43 (
INFO  10:38:02,146 - #20 nizch
INFO  10:38:02,146 - #45 [
INFO  10:38:02,146 - #20 jedan
INFO  10:38:02,146 - #26 *
INFO  10:38:02,146 - #21 2
INFO  10:38:02,146 - #46 ]
INFO  10:38:02,146 - #44 )
INFO  10:38:02,146 - #40 ;
INFO  10:38:02,147 - #20 bodovi
INFO  10:38:02,147 - #37 =
INFO  10:38:02,147 - #20 bodovi
INFO  10:38:02,147 - #24 +
INFO  10:38:02,147 - #43 (
INFO  10:38:02,147 - #20 pet
INFO  10:38:02,147 - #26 *
INFO  10:38:02,147 - #20 jedan
INFO  10:38:02,147 - #25 -
INFO  10:38:02,147 - #21 1
INFO  10:38:02,147 - #44 )
INFO  10:38:02,148 - #26 *
INFO  10:38:02,148 - #20 bodovi
INFO  10:38:02,148 - #25 -
INFO  10:38:02,148 - #43 (
INFO  10:38:02,148 - #21 3
INFO  10:38:02,148 - #28 %
INFO  10:38:02,148 - #21 2
INFO  10:38:02,152 - #24 +
INFO  10:38:02,152 - #21 3
INFO  10:38:02,152 - #26 *
INFO  10:38:02,152 - #21 2
INFO  10:38:02,152 - #25 -
INFO  10:38:02,152 - #21 3
INFO  10:38:02,152 - #44 )
INFO  10:38:02,152 - #40 ;
INFO  10:38:02,152 - #13 print
INFO  10:38:02,152 - #43 (
INFO  10:38:02,152 - #20 bodovi
INFO  10:38:02,152 - #44 )
INFO  10:38:02,152 - #40 ;
INFO  10:38:02,152 - #20 bt
INFO  10:38:02,152 - #37 =
INFO  10:38:02,153 - #23 true
INFO  10:38:02,153 - #40 ;
INFO  10:38:02,153 - #48 }
INFO  10:38:02,153 - #48 }
INFO  10:38:02,154 - 

================SINTAKSNO STABLO====================


INFO  10:38:02,160 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclMulti(
          ProgramDeclMulti(
            ProgramDeclEps(
            ) [ProgramDeclEps]
            PartConstDeclaration(
              ConstDeclaration(
                Type(
                 int
                ) [Type]
                ConstSingle(
                  ConstPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstPart]
                ) [ConstSingle]
              ) [ConstDeclaration]
            ) [PartConstDeclaration]
          ) [ProgramDeclMulti]
          PartConstDeclaration(
            ConstDeclaration(
              Type(
               int
              ) [Type]
              ConstSingle(
                ConstPart(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [ConstPart]
              ) [ConstSingle]
            ) [ConstDeclaration]
          ) [PartConstDeclaration]
        ) [ProgramDeclMulti]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarArray(
               niz
              ) [VarArray]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         char
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             nizch
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 bodovi
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementMulti(
                                                  StatementSingle(
                                                    StmtDesign(
                                                      DesignatorAssignment(
                                                        DesignatorSimple(
                                                         bodovi
                                                        ) [DesignatorSimple]
                                                        AssignmentExpr(
                                                          ExprOne(
                                                            ExprSingle(
                                                              TermSingle(
                                                                FactorNumConst(
                                                                 0
                                                                ) [FactorNumConst]
                                                              ) [TermSingle]
                                                            ) [ExprSingle]
                                                          ) [ExprOne]
                                                        ) [AssignmentExpr]
                                                      ) [DesignatorAssignment]
                                                    ) [StmtDesign]
                                                  ) [StatementSingle]
                                                  StmtDesign(
                                                    DesignatorIncrement(
                                                      DesignatorSimple(
                                                       bodovi
                                                      ) [DesignatorSimple]
                                                    ) [DesignatorIncrement]
                                                  ) [StmtDesign]
                                                ) [StatementMulti]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     bodovi
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprAddop(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorDesignator(
                                                                DesignatorSimple(
                                                                 bodovi
                                                                ) [DesignatorSimple]
                                                              ) [FactorDesignator]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                          AddopPlus(
                                                          ) [AddopPlus]
                                                          TermSingle(
                                                            FactorDesignator(
                                                              DesignatorSimple(
                                                               jedan
                                                              ) [DesignatorSimple]
                                                            ) [FactorDesignator]
                                                          ) [TermSingle]
                                                        ) [ExprAddop]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorSimple(
                                                   bodovi
                                                  ) [DesignatorSimple]
                                                  AssignmentExpr(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermMulop(
                                                          TermSingle(
                                                            FactorDesignator(
                                                              DesignatorSimple(
                                                               bodovi
                                                              ) [DesignatorSimple]
                                                            ) [FactorDesignator]
                                                          ) [TermSingle]
                                                          MulopMul(
                                                          ) [MulopMul]
                                                          FactorDesignator(
                                                            DesignatorSimple(
                                                             pet
                                                            ) [DesignatorSimple]
                                                          ) [FactorDesignator]
                                                        ) [TermMulop]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementMulti]
                                            StmtDesign(
                                              DesignatorDecrement(
                                                DesignatorSimple(
                                                 bodovi
                                                ) [DesignatorSimple]
                                              ) [DesignatorDecrement]
                                            ) [StmtDesign]
                                          ) [StatementMulti]
                                          StmtPrint(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorDesignator(
                                                    DesignatorSimple(
                                                     bodovi
                                                    ) [DesignatorSimple]
                                                  ) [FactorDesignator]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [StmtPrint]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             niz
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNewArray(
                                                      Type(
                                                       int
                                                      ) [Type]
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             3
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [FactorNewArray]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorArray(
                                           niz
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorDesignator(
                                                    DesignatorSimple(
                                                     nula
                                                    ) [DesignatorSimple]
                                                  ) [FactorDesignator]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [DesignatorArray]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorDesignator(
                                                    DesignatorSimple(
                                                     jedan
                                                    ) [DesignatorSimple]
                                                  ) [FactorDesignator]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorArray(
                                         niz
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [DesignatorArray]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 2
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorArray(
                                       niz
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorDesignator(
                                                DesignatorArray(
                                                 niz
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorSimple(
                                                           jedan
                                                          ) [DesignatorSimple]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [DesignatorArray]
                                              ) [FactorDesignator]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [DesignatorArray]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermMulop(
                                              TermSingle(
                                                FactorDesignator(
                                                  DesignatorArray(
                                                   niz
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorDesignator(
                                                            DesignatorArray(
                                                             niz
                                                              ExprOne(
                                                                ExprSingle(
                                                                  TermSingle(
                                                                    FactorNumConst(
                                                                     0
                                                                    ) [FactorNumConst]
                                                                  ) [TermSingle]
                                                                ) [ExprSingle]
                                                              ) [ExprOne]
                                                            ) [DesignatorArray]
                                                          ) [FactorDesignator]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [DesignatorArray]
                                                ) [FactorDesignator]
                                              ) [TermSingle]
                                              MulopMul(
                                              ) [MulopMul]
                                              FactorNumConst(
                                               3
                                              ) [FactorNumConst]
                                            ) [TermMulop]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     bodovi
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermMulop(
                                            TermSingle(
                                              FactorDesignator(
                                                DesignatorArray(
                                                 niz
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         2
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [DesignatorArray]
                                              ) [FactorDesignator]
                                            ) [TermSingle]
                                            MulopDiv(
                                            ) [MulopDiv]
                                            FactorDesignator(
                                              DesignatorArray(
                                               niz
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       0
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [DesignatorArray]
                                            ) [FactorDesignator]
                                          ) [TermMulop]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtPrint(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         bodovi
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [StmtPrint]
                            ) [StatementMulti]
                            StmtPrint(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorArray(
                                       niz
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               2
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [DesignatorArray]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [StmtPrint]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               nizch
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNewArray(
                                        Type(
                                         char
                                        ) [Type]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               3
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [FactorNewArray]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorArray(
                             nizch
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     0
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [DesignatorArray]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorCharConst(
                                     a
                                    ) [FactorCharConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorArray(
                           nizch
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     jedan
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [DesignatorArray]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorCharConst(
                                   b
                                  ) [FactorCharConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorArray(
                         nizch
                          ExprOne(
                            ExprAddop(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     pet
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                              AddopMinus(
                              ) [AddopMinus]
                              TermSingle(
                                FactorNumConst(
                                 3
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprAddop]
                          ) [ExprOne]
                        ) [DesignatorArray]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorCharConst(
                                 c
                                ) [FactorCharConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtPrint(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorArray(
                             nizch
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     1
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [DesignatorArray]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [StmtPrint]
                ) [StatementMulti]
                StmtPrint(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorArray(
                           nizch
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       jedan
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   2
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [DesignatorArray]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [StmtPrint]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bodovi
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprAddop(
                        ExprAddop(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 bodovi
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                          AddopPlus(
                          ) [AddopPlus]
                          TermMulop(
                            TermSingle(
                              FactorExpr(
                                ExprOne(
                                  ExprAddop(
                                    ExprSingle(
                                      TermMulop(
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorSimple(
                                             pet
                                            ) [DesignatorSimple]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                        MulopMul(
                                        ) [MulopMul]
                                        FactorDesignator(
                                          DesignatorSimple(
                                           jedan
                                          ) [DesignatorSimple]
                                        ) [FactorDesignator]
                                      ) [TermMulop]
                                    ) [ExprSingle]
                                    AddopMinus(
                                    ) [AddopMinus]
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprAddop]
                                ) [ExprOne]
                              ) [FactorExpr]
                            ) [TermSingle]
                            MulopMul(
                            ) [MulopMul]
                            FactorDesignator(
                              DesignatorSimple(
                               bodovi
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermMulop]
                        ) [ExprAddop]
                        AddopMinus(
                        ) [AddopMinus]
                        TermSingle(
                          FactorExpr(
                            ExprOne(
                              ExprAddop(
                                ExprAddop(
                                  ExprSingle(
                                    TermMulop(
                                      TermSingle(
                                        FactorNumConst(
                                         3
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                      MulopMod(
                                      ) [MulopMod]
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermMulop]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       3
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprAddop]
                                AddopMinus(
                                ) [AddopMinus]
                                TermSingle(
                                  FactorNumConst(
                                   3
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprAddop]
                            ) [ExprOne]
                          ) [FactorExpr]
                        ) [TermSingle]
                      ) [ExprAddop]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtPrint(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       bodovi
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtPrint]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               bt
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorBoolConst(
                       true
                      ) [FactorBoolConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:38:02,163 - 

================SEMANTICKA OBRADA====================


INFO  10:38:02,179 - Deklarisana konstanta 'nula' na liniji 5
INFO  10:38:02,179 - Deklarisana konstanta 'jedan' na liniji 6
INFO  10:38:02,179 - Deklarisana konstanta 'pet' na liniji 7
INFO  10:38:02,179 - Deklarisan globalni niz 'niz' na liniji 9
INFO  10:38:02,179 - Deklarisan globalni niz 'nizch' na liniji 10
INFO  10:38:02,180 - Deklarisana promenljiva 'bodovi' na liniji 14
INFO  10:38:02,180 - Deklarisana promenljiva 'bt' na liniji 15
INFO  10:38:02,181 - Pristup elementu niza 'niz' na liniji 26
INFO  10:38:02,181 - Pristup elementu niza 'niz' na liniji 27
INFO  10:38:02,181 - Pristup elementu niza 'niz' na liniji 28
INFO  10:38:02,181 - Pristup elementu niza 'niz' na liniji 28
INFO  10:38:02,181 - Pristup elementu niza 'niz' na liniji 28
INFO  10:38:02,181 - Pristup elementu niza 'niz' na liniji 28
INFO  10:38:02,181 - Pristup elementu niza 'niz' na liniji 29
INFO  10:38:02,181 - Pristup elementu niza 'niz' na liniji 29
INFO  10:38:02,181 - Pristup elementu niza 'niz' na liniji 31
INFO  10:38:02,181 - Pristup elementu niza 'nizch' na liniji 35
INFO  10:38:02,181 - Pristup elementu niza 'nizch' na liniji 36
INFO  10:38:02,181 - Pristup elementu niza 'nizch' na liniji 37
INFO  10:38:02,181 - Pristup elementu niza 'nizch' na liniji 38
INFO  10:38:02,181 - Pristup elementu niza 'nizch' na liniji 39
INFO  10:38:02,182 - PROGRAM 2 na liniji 3
INFO  10:38:02,183 - ===================================
INFO  10:38:02,183 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:38:02,192 - Parsiranje uspesno zavrseno!
INFO  15:21:18,650 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:21:18,723 - #2 program
INFO  15:21:18,724 - #20 test301
INFO  15:21:18,724 - #7 const
INFO  15:21:18,725 - #20 int
INFO  15:21:18,725 - #20 nula
INFO  15:21:18,725 - #37 =
INFO  15:21:18,726 - #21 0
INFO  15:21:18,726 - #40 ;
INFO  15:21:18,727 - #7 const
INFO  15:21:18,728 - #20 int
INFO  15:21:18,728 - #20 jedan
INFO  15:21:18,728 - #37 =
INFO  15:21:18,728 - #21 1
INFO  15:21:18,728 - #40 ;
INFO  15:21:18,728 - #7 const
INFO  15:21:18,728 - #20 int
INFO  15:21:18,728 - #20 pet
INFO  15:21:18,729 - #37 =
INFO  15:21:18,729 - #21 5
INFO  15:21:18,729 - #40 ;
INFO  15:21:18,729 - #20 int
INFO  15:21:18,729 - #20 niz
INFO  15:21:18,729 - #45 [
INFO  15:21:18,729 - #46 ]
INFO  15:21:18,730 - #40 ;
INFO  15:21:18,730 - #20 char
INFO  15:21:18,732 - #20 nizch
INFO  15:21:18,732 - #45 [
INFO  15:21:18,732 - #46 ]
INFO  15:21:18,732 - #40 ;
INFO  15:21:18,732 - #47 {
INFO  15:21:18,733 - #16 void
INFO  15:21:18,733 - #20 main
INFO  15:21:18,733 - #43 (
INFO  15:21:18,734 - #44 )
INFO  15:21:18,734 - #20 int
INFO  15:21:18,734 - #20 bodovi
INFO  15:21:18,734 - #40 ;
INFO  15:21:18,734 - #20 bool
INFO  15:21:18,735 - #20 bt
INFO  15:21:18,735 - #40 ;
INFO  15:21:18,735 - #47 {
INFO  15:21:18,735 - #20 bodovi
INFO  15:21:18,735 - #37 =
INFO  15:21:18,736 - #21 0
INFO  15:21:18,736 - #40 ;
INFO  15:21:18,737 - #20 bodovi
INFO  15:21:18,737 - #38 ++
INFO  15:21:18,737 - #40 ;
INFO  15:21:18,737 - #20 bodovi
INFO  15:21:18,738 - #37 =
INFO  15:21:18,738 - #20 bodovi
INFO  15:21:18,738 - #24 +
INFO  15:21:18,738 - #20 jedan
INFO  15:21:18,739 - #40 ;
INFO  15:21:18,739 - #20 bodovi
INFO  15:21:18,739 - #37 =
INFO  15:21:18,739 - #20 bodovi
INFO  15:21:18,739 - #26 *
INFO  15:21:18,739 - #20 pet
INFO  15:21:18,740 - #40 ;
INFO  15:21:18,740 - #20 bodovi
INFO  15:21:18,741 - #39 --
INFO  15:21:18,741 - #40 ;
INFO  15:21:18,741 - #13 print
INFO  15:21:18,741 - #43 (
INFO  15:21:18,741 - #20 bodovi
INFO  15:21:18,741 - #44 )
INFO  15:21:18,741 - #40 ;
INFO  15:21:18,741 - #20 niz
INFO  15:21:18,742 - #37 =
INFO  15:21:18,742 - #12 new
INFO  15:21:18,742 - #20 int
INFO  15:21:18,742 - #45 [
INFO  15:21:18,742 - #21 3
INFO  15:21:18,742 - #46 ]
INFO  15:21:18,742 - #40 ;
INFO  15:21:18,742 - #20 niz
INFO  15:21:18,742 - #45 [
INFO  15:21:18,742 - #20 nula
INFO  15:21:18,743 - #46 ]
INFO  15:21:18,743 - #37 =
INFO  15:21:18,743 - #20 jedan
INFO  15:21:18,743 - #40 ;
INFO  15:21:18,743 - #20 niz
INFO  15:21:18,743 - #45 [
INFO  15:21:18,744 - #21 1
INFO  15:21:18,744 - #46 ]
INFO  15:21:18,744 - #37 =
INFO  15:21:18,744 - #21 2
INFO  15:21:18,744 - #40 ;
INFO  15:21:18,744 - #20 niz
INFO  15:21:18,744 - #45 [
INFO  15:21:18,744 - #20 niz
INFO  15:21:18,745 - #45 [
INFO  15:21:18,745 - #20 jedan
INFO  15:21:18,745 - #46 ]
INFO  15:21:18,745 - #46 ]
INFO  15:21:18,745 - #37 =
INFO  15:21:18,745 - #20 niz
INFO  15:21:18,745 - #45 [
INFO  15:21:18,745 - #20 niz
INFO  15:21:18,746 - #45 [
INFO  15:21:18,746 - #21 0
INFO  15:21:18,746 - #46 ]
INFO  15:21:18,746 - #46 ]
INFO  15:21:18,746 - #26 *
INFO  15:21:18,746 - #21 3
INFO  15:21:18,746 - #40 ;
INFO  15:21:18,746 - #20 bodovi
INFO  15:21:18,746 - #37 =
INFO  15:21:18,747 - #20 niz
INFO  15:21:18,747 - #45 [
INFO  15:21:18,747 - #21 2
INFO  15:21:18,747 - #46 ]
INFO  15:21:18,747 - #27 /
INFO  15:21:18,747 - #20 niz
INFO  15:21:18,748 - #45 [
INFO  15:21:18,748 - #21 0
INFO  15:21:18,748 - #46 ]
INFO  15:21:18,748 - #40 ;
INFO  15:21:18,748 - #13 print
INFO  15:21:18,748 - #43 (
INFO  15:21:18,749 - #20 bodovi
INFO  15:21:18,749 - #44 )
INFO  15:21:18,749 - #40 ;
INFO  15:21:18,749 - #13 print
INFO  15:21:18,749 - #43 (
INFO  15:21:18,749 - #20 niz
INFO  15:21:18,749 - #45 [
INFO  15:21:18,749 - #21 2
INFO  15:21:18,749 - #46 ]
INFO  15:21:18,750 - #44 )
INFO  15:21:18,750 - #40 ;
INFO  15:21:18,750 - #20 nizch
INFO  15:21:18,750 - #37 =
INFO  15:21:18,750 - #12 new
INFO  15:21:18,750 - #20 char
INFO  15:21:18,750 - #45 [
INFO  15:21:18,750 - #21 3
INFO  15:21:18,750 - #46 ]
INFO  15:21:18,750 - #40 ;
INFO  15:21:18,750 - #20 nizch
INFO  15:21:18,751 - #45 [
INFO  15:21:18,751 - #21 0
INFO  15:21:18,751 - #46 ]
INFO  15:21:18,751 - #37 =
INFO  15:21:18,751 - #22 a
INFO  15:21:18,751 - #40 ;
INFO  15:21:18,754 - #20 nizch
INFO  15:21:18,754 - #45 [
INFO  15:21:18,754 - #20 jedan
INFO  15:21:18,754 - #46 ]
INFO  15:21:18,754 - #37 =
INFO  15:21:18,754 - #22 b
INFO  15:21:18,754 - #40 ;
INFO  15:21:18,754 - #20 nizch
INFO  15:21:18,755 - #45 [
INFO  15:21:18,755 - #20 pet
INFO  15:21:18,755 - #25 -
INFO  15:21:18,755 - #21 3
INFO  15:21:18,755 - #46 ]
INFO  15:21:18,755 - #37 =
INFO  15:21:18,756 - #22 c
INFO  15:21:18,756 - #40 ;
INFO  15:21:18,756 - #13 print
INFO  15:21:18,756 - #43 (
INFO  15:21:18,756 - #20 nizch
INFO  15:21:18,756 - #45 [
INFO  15:21:18,756 - #21 1
INFO  15:21:18,756 - #46 ]
INFO  15:21:18,756 - #44 )
INFO  15:21:18,756 - #40 ;
INFO  15:21:18,756 - #13 print
INFO  15:21:18,756 - #43 (
INFO  15:21:18,756 - #20 nizch
INFO  15:21:18,756 - #45 [
INFO  15:21:18,757 - #20 jedan
INFO  15:21:18,757 - #26 *
INFO  15:21:18,757 - #21 2
INFO  15:21:18,757 - #46 ]
INFO  15:21:18,757 - #44 )
INFO  15:21:18,757 - #40 ;
INFO  15:21:18,757 - #20 bodovi
INFO  15:21:18,757 - #37 =
INFO  15:21:18,758 - #20 bodovi
INFO  15:21:18,758 - #24 +
INFO  15:21:18,758 - #43 (
INFO  15:21:18,758 - #20 pet
INFO  15:21:18,758 - #26 *
INFO  15:21:18,758 - #20 jedan
INFO  15:21:18,758 - #25 -
INFO  15:21:18,758 - #21 1
INFO  15:21:18,758 - #44 )
INFO  15:21:18,758 - #26 *
INFO  15:21:18,759 - #20 bodovi
INFO  15:21:18,759 - #25 -
INFO  15:21:18,759 - #43 (
INFO  15:21:18,759 - #21 3
INFO  15:21:18,759 - #28 %
INFO  15:21:18,759 - #21 2
INFO  15:21:18,759 - #24 +
INFO  15:21:18,759 - #21 3
INFO  15:21:18,759 - #26 *
INFO  15:21:18,759 - #21 2
INFO  15:21:18,759 - #25 -
INFO  15:21:18,759 - #21 3
INFO  15:21:18,759 - #44 )
INFO  15:21:18,759 - #40 ;
INFO  15:21:18,759 - #13 print
INFO  15:21:18,759 - #43 (
INFO  15:21:18,759 - #20 bodovi
INFO  15:21:18,759 - #44 )
INFO  15:21:18,759 - #40 ;
INFO  15:21:18,759 - #20 bt
INFO  15:21:18,759 - #37 =
INFO  15:21:18,760 - #23 true
INFO  15:21:18,760 - #40 ;
INFO  15:21:18,760 - #13 print
INFO  15:21:18,760 - #43 (
INFO  15:21:18,760 - #20 bt
INFO  15:21:18,760 - #49 ?
INFO  15:21:18,760 - #20 bodovi
INFO  15:21:18,760 - #50 :
INFO  15:21:18,760 - #20 bodovi
INFO  15:21:18,760 - #24 +
INFO  15:21:18,760 - #21 10
INFO  15:21:18,760 - #44 )
INFO  15:21:18,761 - #40 ;
INFO  15:21:18,761 - #13 print
INFO  15:21:18,761 - #43 (
INFO  15:21:18,761 - #23 false
INFO  15:21:18,761 - #49 ?
INFO  15:21:18,761 - #20 bodovi
INFO  15:21:18,761 - #24 +
INFO  15:21:18,761 - #21 20
INFO  15:21:18,761 - #50 :
INFO  15:21:18,761 - #20 bodovi
INFO  15:21:18,761 - #24 +
INFO  15:21:18,762 - #21 30
INFO  15:21:18,762 - #44 )
INFO  15:21:18,762 - #40 ;
INFO  15:21:18,762 - #48 }
INFO  15:21:18,762 - #48 }
INFO  15:21:18,763 - 

================SINTAKSNO STABLO====================


INFO  15:21:18,772 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclMulti(
          ProgramDeclMulti(
            ProgramDeclEps(
            ) [ProgramDeclEps]
            PartConstDeclaration(
              ConstDeclaration(
                Type(
                 int
                ) [Type]
                ConstSingle(
                  ConstPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstPart]
                ) [ConstSingle]
              ) [ConstDeclaration]
            ) [PartConstDeclaration]
          ) [ProgramDeclMulti]
          PartConstDeclaration(
            ConstDeclaration(
              Type(
               int
              ) [Type]
              ConstSingle(
                ConstPart(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [ConstPart]
              ) [ConstSingle]
            ) [ConstDeclaration]
          ) [PartConstDeclaration]
        ) [ProgramDeclMulti]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarArray(
               niz
              ) [VarArray]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         char
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             nizch
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 bodovi
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementMulti(
                                                  StatementMulti(
                                                    StatementMulti(
                                                      StatementSingle(
                                                        StmtDesign(
                                                          DesignatorAssignment(
                                                            DesignatorSimple(
                                                             bodovi
                                                            ) [DesignatorSimple]
                                                            AssignmentExpr(
                                                              ExprOne(
                                                                ExprSingle(
                                                                  TermSingle(
                                                                    FactorNumConst(
                                                                     0
                                                                    ) [FactorNumConst]
                                                                  ) [TermSingle]
                                                                ) [ExprSingle]
                                                              ) [ExprOne]
                                                            ) [AssignmentExpr]
                                                          ) [DesignatorAssignment]
                                                        ) [StmtDesign]
                                                      ) [StatementSingle]
                                                      StmtDesign(
                                                        DesignatorIncrement(
                                                          DesignatorSimple(
                                                           bodovi
                                                          ) [DesignatorSimple]
                                                        ) [DesignatorIncrement]
                                                      ) [StmtDesign]
                                                    ) [StatementMulti]
                                                    StmtDesign(
                                                      DesignatorAssignment(
                                                        DesignatorSimple(
                                                         bodovi
                                                        ) [DesignatorSimple]
                                                        AssignmentExpr(
                                                          ExprOne(
                                                            ExprAddop(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorDesignator(
                                                                    DesignatorSimple(
                                                                     bodovi
                                                                    ) [DesignatorSimple]
                                                                  ) [FactorDesignator]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                              AddopPlus(
                                                              ) [AddopPlus]
                                                              TermSingle(
                                                                FactorDesignator(
                                                                  DesignatorSimple(
                                                                   jedan
                                                                  ) [DesignatorSimple]
                                                                ) [FactorDesignator]
                                                              ) [TermSingle]
                                                            ) [ExprAddop]
                                                          ) [ExprOne]
                                                        ) [AssignmentExpr]
                                                      ) [DesignatorAssignment]
                                                    ) [StmtDesign]
                                                  ) [StatementMulti]
                                                  StmtDesign(
                                                    DesignatorAssignment(
                                                      DesignatorSimple(
                                                       bodovi
                                                      ) [DesignatorSimple]
                                                      AssignmentExpr(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermMulop(
                                                              TermSingle(
                                                                FactorDesignator(
                                                                  DesignatorSimple(
                                                                   bodovi
                                                                  ) [DesignatorSimple]
                                                                ) [FactorDesignator]
                                                              ) [TermSingle]
                                                              MulopMul(
                                                              ) [MulopMul]
                                                              FactorDesignator(
                                                                DesignatorSimple(
                                                                 pet
                                                                ) [DesignatorSimple]
                                                              ) [FactorDesignator]
                                                            ) [TermMulop]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [AssignmentExpr]
                                                    ) [DesignatorAssignment]
                                                  ) [StmtDesign]
                                                ) [StatementMulti]
                                                StmtDesign(
                                                  DesignatorDecrement(
                                                    DesignatorSimple(
                                                     bodovi
                                                    ) [DesignatorSimple]
                                                  ) [DesignatorDecrement]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtPrint(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorSimple(
                                                         bodovi
                                                        ) [DesignatorSimple]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [StmtPrint]
                                            ) [StatementMulti]
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorSimple(
                                                 niz
                                                ) [DesignatorSimple]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNewArray(
                                                          Type(
                                                           int
                                                          ) [Type]
                                                          ExprOne(
                                                            ExprSingle(
                                                              TermSingle(
                                                                FactorNumConst(
                                                                 3
                                                                ) [FactorNumConst]
                                                              ) [TermSingle]
                                                            ) [ExprSingle]
                                                          ) [ExprOne]
                                                        ) [FactorNewArray]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorArray(
                                               niz
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorSimple(
                                                         nula
                                                        ) [DesignatorSimple]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [DesignatorArray]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorSimple(
                                                         jedan
                                                        ) [DesignatorSimple]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorArray(
                                             niz
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     1
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [DesignatorArray]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     2
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorArray(
                                           niz
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorDesignator(
                                                    DesignatorArray(
                                                     niz
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorDesignator(
                                                              DesignatorSimple(
                                                               jedan
                                                              ) [DesignatorSimple]
                                                            ) [FactorDesignator]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [DesignatorArray]
                                                  ) [FactorDesignator]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [DesignatorArray]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermMulop(
                                                  TermSingle(
                                                    FactorDesignator(
                                                      DesignatorArray(
                                                       niz
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorDesignator(
                                                                DesignatorArray(
                                                                 niz
                                                                  ExprOne(
                                                                    ExprSingle(
                                                                      TermSingle(
                                                                        FactorNumConst(
                                                                         0
                                                                        ) [FactorNumConst]
                                                                      ) [TermSingle]
                                                                    ) [ExprSingle]
                                                                  ) [ExprOne]
                                                                ) [DesignatorArray]
                                                              ) [FactorDesignator]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [DesignatorArray]
                                                    ) [FactorDesignator]
                                                  ) [TermSingle]
                                                  MulopMul(
                                                  ) [MulopMul]
                                                  FactorNumConst(
                                                   3
                                                  ) [FactorNumConst]
                                                ) [TermMulop]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         bodovi
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermMulop(
                                                TermSingle(
                                                  FactorDesignator(
                                                    DesignatorArray(
                                                     niz
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             2
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [DesignatorArray]
                                                  ) [FactorDesignator]
                                                ) [TermSingle]
                                                MulopDiv(
                                                ) [MulopDiv]
                                                FactorDesignator(
                                                  DesignatorArray(
                                                   niz
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           0
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [DesignatorArray]
                                                ) [FactorDesignator]
                                              ) [TermMulop]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtPrint(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorSimple(
                                             bodovi
                                            ) [DesignatorSimple]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [StmtPrint]
                                ) [StatementMulti]
                                StmtPrint(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorArray(
                                           niz
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   2
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [DesignatorArray]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [StmtPrint]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   nizch
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNewArray(
                                            Type(
                                             char
                                            ) [Type]
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   3
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [FactorNewArray]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorArray(
                                 nizch
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         0
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [DesignatorArray]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorCharConst(
                                         a
                                        ) [FactorCharConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorArray(
                               nizch
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         jedan
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [DesignatorArray]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorCharConst(
                                       b
                                      ) [FactorCharConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorArray(
                             nizch
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         pet
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopMinus(
                                  ) [AddopMinus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [DesignatorArray]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorCharConst(
                                     c
                                    ) [FactorCharConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtPrint(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorArray(
                                 nizch
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         1
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [DesignatorArray]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [StmtPrint]
                    ) [StatementMulti]
                    StmtPrint(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorArray(
                               nizch
                                ExprOne(
                                  ExprSingle(
                                    TermMulop(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorSimple(
                                           jedan
                                          ) [DesignatorSimple]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                      MulopMul(
                                      ) [MulopMul]
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermMulop]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [DesignatorArray]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [StmtPrint]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       bodovi
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprAddop(
                            ExprAddop(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     bodovi
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                              AddopPlus(
                              ) [AddopPlus]
                              TermMulop(
                                TermSingle(
                                  FactorExpr(
                                    ExprOne(
                                      ExprAddop(
                                        ExprSingle(
                                          TermMulop(
                                            TermSingle(
                                              FactorDesignator(
                                                DesignatorSimple(
                                                 pet
                                                ) [DesignatorSimple]
                                              ) [FactorDesignator]
                                            ) [TermSingle]
                                            MulopMul(
                                            ) [MulopMul]
                                            FactorDesignator(
                                              DesignatorSimple(
                                               jedan
                                              ) [DesignatorSimple]
                                            ) [FactorDesignator]
                                          ) [TermMulop]
                                        ) [ExprSingle]
                                        AddopMinus(
                                        ) [AddopMinus]
                                        TermSingle(
                                          FactorNumConst(
                                           1
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprAddop]
                                    ) [ExprOne]
                                  ) [FactorExpr]
                                ) [TermSingle]
                                MulopMul(
                                ) [MulopMul]
                                FactorDesignator(
                                  DesignatorSimple(
                                   bodovi
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermMulop]
                            ) [ExprAddop]
                            AddopMinus(
                            ) [AddopMinus]
                            TermSingle(
                              FactorExpr(
                                ExprOne(
                                  ExprAddop(
                                    ExprAddop(
                                      ExprSingle(
                                        TermMulop(
                                          TermSingle(
                                            FactorNumConst(
                                             3
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                          MulopMod(
                                          ) [MulopMod]
                                          FactorNumConst(
                                           2
                                          ) [FactorNumConst]
                                        ) [TermMulop]
                                      ) [ExprSingle]
                                      AddopPlus(
                                      ) [AddopPlus]
                                      TermMulop(
                                        TermSingle(
                                          FactorNumConst(
                                           3
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                        MulopMul(
                                        ) [MulopMul]
                                        FactorNumConst(
                                         2
                                        ) [FactorNumConst]
                                      ) [TermMulop]
                                    ) [ExprAddop]
                                    AddopMinus(
                                    ) [AddopMinus]
                                    TermSingle(
                                      FactorNumConst(
                                       3
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprAddop]
                                ) [ExprOne]
                              ) [FactorExpr]
                            ) [TermSingle]
                          ) [ExprAddop]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtPrint(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           bodovi
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [StmtPrint]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtPrint(
              ExprTernary(
                TernaryCond(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         bt
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [TernaryCond]
                TerExpr1(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         bodovi
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [TerExpr1]
                TerExpr2(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           bodovi
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorNumConst(
                       10
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [TerExpr2]
              ) [ExprTernary]
            ) [StmtPrint]
          ) [StatementMulti]
          StmtPrint(
            ExprTernary(
              TernaryCond(
                ExprSingle(
                  TermSingle(
                    FactorBoolConst(
                     false
                    ) [FactorBoolConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TernaryCond]
              TerExpr1(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         bodovi
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorNumConst(
                     20
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [TerExpr1]
              TerExpr2(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         bodovi
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorNumConst(
                     30
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [TerExpr2]
            ) [ExprTernary]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  15:21:18,777 - 

================SEMANTICKA OBRADA====================


INFO  15:21:18,800 - Deklarisana konstanta 'nula' na liniji 5
INFO  15:21:18,800 - Deklarisana konstanta 'jedan' na liniji 6
INFO  15:21:18,800 - Deklarisana konstanta 'pet' na liniji 7
INFO  15:21:18,801 - Deklarisan globalni niz 'niz' na liniji 9
INFO  15:21:18,801 - Deklarisan globalni niz 'nizch' na liniji 10
INFO  15:21:18,801 - Deklarisana promenljiva 'bodovi' na liniji 14
INFO  15:21:18,802 - Deklarisana promenljiva 'bt' na liniji 15
INFO  15:21:18,802 - Pristup elementu niza 'niz' na liniji 26
INFO  15:21:18,803 - Pristup elementu niza 'niz' na liniji 27
INFO  15:21:18,803 - Pristup elementu niza 'niz' na liniji 28
INFO  15:21:18,803 - Pristup elementu niza 'niz' na liniji 28
INFO  15:21:18,803 - Pristup elementu niza 'niz' na liniji 28
INFO  15:21:18,803 - Pristup elementu niza 'niz' na liniji 28
INFO  15:21:18,803 - Pristup elementu niza 'niz' na liniji 29
INFO  15:21:18,803 - Pristup elementu niza 'niz' na liniji 29
INFO  15:21:18,803 - Pristup elementu niza 'niz' na liniji 31
INFO  15:21:18,803 - Pristup elementu niza 'nizch' na liniji 35
INFO  15:21:18,803 - Pristup elementu niza 'nizch' na liniji 36
INFO  15:21:18,803 - Pristup elementu niza 'nizch' na liniji 37
INFO  15:21:18,803 - Pristup elementu niza 'nizch' na liniji 38
INFO  15:21:18,804 - Pristup elementu niza 'nizch' na liniji 39
INFO  15:21:18,804 - PROGRAM 2 na liniji 3
INFO  15:21:18,805 - ===================================
INFO  15:21:18,805 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  15:22:28,086 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:22:28,141 - #2 program
INFO  15:22:28,141 - #20 test301
INFO  15:22:28,141 - #7 const
INFO  15:22:28,143 - #20 int
INFO  15:22:28,143 - #20 nula
INFO  15:22:28,143 - #37 =
INFO  15:22:28,143 - #21 0
INFO  15:22:28,143 - #40 ;
INFO  15:22:28,144 - #7 const
INFO  15:22:28,145 - #20 int
INFO  15:22:28,145 - #20 jedan
INFO  15:22:28,145 - #37 =
INFO  15:22:28,145 - #21 1
INFO  15:22:28,145 - #40 ;
INFO  15:22:28,145 - #7 const
INFO  15:22:28,145 - #20 int
INFO  15:22:28,145 - #20 pet
INFO  15:22:28,145 - #37 =
INFO  15:22:28,145 - #21 5
INFO  15:22:28,145 - #40 ;
INFO  15:22:28,145 - #20 int
INFO  15:22:28,146 - #20 niz
INFO  15:22:28,146 - #45 [
INFO  15:22:28,146 - #46 ]
INFO  15:22:28,146 - #40 ;
INFO  15:22:28,146 - #20 char
INFO  15:22:28,147 - #20 nizch
INFO  15:22:28,147 - #45 [
INFO  15:22:28,147 - #46 ]
INFO  15:22:28,147 - #40 ;
INFO  15:22:28,147 - #47 {
INFO  15:22:28,147 - #16 void
INFO  15:22:28,147 - #20 main
INFO  15:22:28,147 - #43 (
INFO  15:22:28,147 - #44 )
INFO  15:22:28,147 - #20 int
INFO  15:22:28,147 - #20 bodovi
INFO  15:22:28,147 - #40 ;
INFO  15:22:28,148 - #20 bool
INFO  15:22:28,148 - #20 bt
INFO  15:22:28,148 - #40 ;
INFO  15:22:28,148 - #47 {
INFO  15:22:28,148 - #20 bodovi
INFO  15:22:28,148 - #37 =
INFO  15:22:28,149 - #21 0
INFO  15:22:28,149 - #40 ;
INFO  15:22:28,149 - #20 bodovi
INFO  15:22:28,150 - #38 ++
INFO  15:22:28,150 - #40 ;
INFO  15:22:28,150 - #20 bodovi
INFO  15:22:28,150 - #37 =
INFO  15:22:28,150 - #20 bodovi
INFO  15:22:28,150 - #24 +
INFO  15:22:28,150 - #20 jedan
INFO  15:22:28,151 - #40 ;
INFO  15:22:28,151 - #20 bodovi
INFO  15:22:28,151 - #37 =
INFO  15:22:28,151 - #20 bodovi
INFO  15:22:28,151 - #26 *
INFO  15:22:28,151 - #20 pet
INFO  15:22:28,152 - #40 ;
INFO  15:22:28,152 - #20 bodovi
INFO  15:22:28,152 - #39 --
INFO  15:22:28,153 - #40 ;
INFO  15:22:28,153 - #13 print
INFO  15:22:28,153 - #43 (
INFO  15:22:28,153 - #20 bodovi
INFO  15:22:28,153 - #44 )
INFO  15:22:28,153 - #40 ;
INFO  15:22:28,153 - #20 niz
INFO  15:22:28,153 - #37 =
INFO  15:22:28,153 - #12 new
INFO  15:22:28,153 - #20 int
INFO  15:22:28,153 - #45 [
INFO  15:22:28,153 - #21 3
INFO  15:22:28,154 - #46 ]
INFO  15:22:28,154 - #40 ;
INFO  15:22:28,154 - #20 niz
INFO  15:22:28,154 - #45 [
INFO  15:22:28,154 - #20 nula
INFO  15:22:28,154 - #46 ]
INFO  15:22:28,154 - #37 =
INFO  15:22:28,155 - #20 jedan
INFO  15:22:28,155 - #40 ;
INFO  15:22:28,156 - #20 niz
INFO  15:22:28,159 - #45 [
INFO  15:22:28,159 - #21 1
INFO  15:22:28,159 - #46 ]
INFO  15:22:28,159 - #37 =
INFO  15:22:28,159 - #21 2
INFO  15:22:28,159 - #40 ;
INFO  15:22:28,159 - #20 niz
INFO  15:22:28,160 - #45 [
INFO  15:22:28,160 - #20 niz
INFO  15:22:28,160 - #45 [
INFO  15:22:28,160 - #20 jedan
INFO  15:22:28,160 - #46 ]
INFO  15:22:28,160 - #46 ]
INFO  15:22:28,160 - #37 =
INFO  15:22:28,160 - #20 niz
INFO  15:22:28,160 - #45 [
INFO  15:22:28,160 - #20 niz
INFO  15:22:28,160 - #45 [
INFO  15:22:28,160 - #21 0
INFO  15:22:28,160 - #46 ]
INFO  15:22:28,160 - #46 ]
INFO  15:22:28,160 - #26 *
INFO  15:22:28,161 - #21 3
INFO  15:22:28,161 - #40 ;
INFO  15:22:28,161 - #20 bodovi
INFO  15:22:28,161 - #37 =
INFO  15:22:28,161 - #20 niz
INFO  15:22:28,161 - #45 [
INFO  15:22:28,161 - #21 2
INFO  15:22:28,161 - #46 ]
INFO  15:22:28,161 - #27 /
INFO  15:22:28,161 - #20 niz
INFO  15:22:28,162 - #45 [
INFO  15:22:28,162 - #21 0
INFO  15:22:28,162 - #46 ]
INFO  15:22:28,162 - #40 ;
INFO  15:22:28,162 - #13 print
INFO  15:22:28,162 - #43 (
INFO  15:22:28,162 - #20 bodovi
INFO  15:22:28,162 - #44 )
INFO  15:22:28,162 - #40 ;
INFO  15:22:28,163 - #13 print
INFO  15:22:28,163 - #43 (
INFO  15:22:28,163 - #20 niz
INFO  15:22:28,163 - #45 [
INFO  15:22:28,163 - #21 2
INFO  15:22:28,163 - #46 ]
INFO  15:22:28,163 - #44 )
INFO  15:22:28,163 - #40 ;
INFO  15:22:28,163 - #20 nizch
INFO  15:22:28,163 - #37 =
INFO  15:22:28,163 - #12 new
INFO  15:22:28,163 - #20 char
INFO  15:22:28,163 - #45 [
INFO  15:22:28,163 - #21 3
INFO  15:22:28,163 - #46 ]
INFO  15:22:28,163 - #40 ;
INFO  15:22:28,164 - #20 nizch
INFO  15:22:28,164 - #45 [
INFO  15:22:28,164 - #21 0
INFO  15:22:28,164 - #46 ]
INFO  15:22:28,164 - #37 =
INFO  15:22:28,164 - #22 a
INFO  15:22:28,164 - #40 ;
INFO  15:22:28,164 - #20 nizch
INFO  15:22:28,164 - #45 [
INFO  15:22:28,164 - #20 jedan
INFO  15:22:28,164 - #46 ]
INFO  15:22:28,164 - #37 =
INFO  15:22:28,164 - #22 b
INFO  15:22:28,164 - #40 ;
INFO  15:22:28,165 - #20 nizch
INFO  15:22:28,165 - #45 [
INFO  15:22:28,165 - #20 pet
INFO  15:22:28,165 - #25 -
INFO  15:22:28,165 - #21 3
INFO  15:22:28,165 - #46 ]
INFO  15:22:28,166 - #37 =
INFO  15:22:28,166 - #22 c
INFO  15:22:28,166 - #40 ;
INFO  15:22:28,166 - #13 print
INFO  15:22:28,166 - #43 (
INFO  15:22:28,166 - #20 nizch
INFO  15:22:28,166 - #45 [
INFO  15:22:28,166 - #21 1
INFO  15:22:28,166 - #46 ]
INFO  15:22:28,166 - #44 )
INFO  15:22:28,166 - #40 ;
INFO  15:22:28,166 - #13 print
INFO  15:22:28,166 - #43 (
INFO  15:22:28,166 - #20 nizch
INFO  15:22:28,166 - #45 [
INFO  15:22:28,166 - #20 jedan
INFO  15:22:28,166 - #26 *
INFO  15:22:28,166 - #21 2
INFO  15:22:28,166 - #46 ]
INFO  15:22:28,166 - #44 )
INFO  15:22:28,167 - #40 ;
INFO  15:22:28,167 - #20 bodovi
INFO  15:22:28,167 - #37 =
INFO  15:22:28,167 - #20 bodovi
INFO  15:22:28,167 - #24 +
INFO  15:22:28,167 - #43 (
INFO  15:22:28,167 - #20 pet
INFO  15:22:28,167 - #26 *
INFO  15:22:28,167 - #20 jedan
INFO  15:22:28,167 - #25 -
INFO  15:22:28,167 - #21 1
INFO  15:22:28,167 - #44 )
INFO  15:22:28,167 - #26 *
INFO  15:22:28,167 - #20 bodovi
INFO  15:22:28,167 - #25 -
INFO  15:22:28,167 - #43 (
INFO  15:22:28,167 - #21 3
INFO  15:22:28,167 - #28 %
INFO  15:22:28,168 - #21 2
INFO  15:22:28,168 - #24 +
INFO  15:22:28,168 - #21 3
INFO  15:22:28,168 - #26 *
INFO  15:22:28,168 - #21 2
INFO  15:22:28,168 - #25 -
INFO  15:22:28,168 - #21 3
INFO  15:22:28,168 - #44 )
INFO  15:22:28,168 - #40 ;
INFO  15:22:28,168 - #13 print
INFO  15:22:28,168 - #43 (
INFO  15:22:28,169 - #20 bodovi
INFO  15:22:28,169 - #44 )
INFO  15:22:28,169 - #40 ;
INFO  15:22:28,169 - #20 bt
INFO  15:22:28,169 - #37 =
INFO  15:22:28,169 - #23 true
INFO  15:22:28,169 - #40 ;
INFO  15:22:28,169 - #20 bt
INFO  15:22:28,169 - #49 ?
ERROR 15:22:28,169 - 
Sintaksna greska na liniji 48, koloni 5 za simbol "?"!
INFO  15:22:28,169 - #20 bodovi
INFO  15:22:28,169 - #50 :
INFO  15:22:28,169 - #20 bodovi
INFO  15:22:28,170 - #24 +
INFO  15:22:28,170 - #21 10
INFO  15:22:28,170 - #40 ;
INFO  15:22:28,170 - #48 }
INFO  15:22:28,170 - #48 }
ERROR 15:22:28,170 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 56, koloni 0!
INFO  15:23:02,781 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:23:02,837 - #2 program
INFO  15:23:02,837 - #20 test301
INFO  15:23:02,837 - #7 const
INFO  15:23:02,838 - #20 int
INFO  15:23:02,838 - #20 nula
INFO  15:23:02,839 - #37 =
INFO  15:23:02,839 - #21 0
INFO  15:23:02,839 - #40 ;
INFO  15:23:02,840 - #7 const
INFO  15:23:02,840 - #20 int
INFO  15:23:02,840 - #20 jedan
INFO  15:23:02,840 - #37 =
INFO  15:23:02,841 - #21 1
INFO  15:23:02,841 - #40 ;
INFO  15:23:02,841 - #7 const
INFO  15:23:02,841 - #20 int
INFO  15:23:02,841 - #20 pet
INFO  15:23:02,841 - #37 =
INFO  15:23:02,841 - #21 5
INFO  15:23:02,841 - #40 ;
INFO  15:23:02,841 - #20 int
INFO  15:23:02,841 - #20 niz
INFO  15:23:02,842 - #45 [
INFO  15:23:02,842 - #46 ]
INFO  15:23:02,842 - #40 ;
INFO  15:23:02,842 - #20 char
INFO  15:23:02,843 - #20 nizch
INFO  15:23:02,843 - #45 [
INFO  15:23:02,843 - #46 ]
INFO  15:23:02,843 - #40 ;
INFO  15:23:02,843 - #47 {
INFO  15:23:02,843 - #16 void
INFO  15:23:02,843 - #20 main
INFO  15:23:02,844 - #43 (
INFO  15:23:02,844 - #44 )
INFO  15:23:02,844 - #20 int
INFO  15:23:02,844 - #20 bodovi
INFO  15:23:02,844 - #40 ;
INFO  15:23:02,844 - #20 bool
INFO  15:23:02,845 - #20 bt
INFO  15:23:02,845 - #40 ;
INFO  15:23:02,845 - #47 {
INFO  15:23:02,845 - #20 bt
INFO  15:23:02,845 - #37 =
INFO  15:23:02,845 - #23 true
INFO  15:23:02,845 - #40 ;
INFO  15:23:02,846 - #20 bt
INFO  15:23:02,846 - #49 ?
ERROR 15:23:02,846 - 
Sintaksna greska na liniji 21, koloni 5 za simbol "?"!
INFO  15:23:02,847 - #20 bodovi
INFO  15:23:02,847 - #37 =
INFO  15:23:02,847 - #21 2
INFO  15:23:02,847 - #50 :
INFO  15:23:02,848 - #20 bodovi
INFO  15:23:02,848 - #37 =
INFO  15:23:02,848 - #21 10
INFO  15:23:02,848 - #40 ;
INFO  15:23:02,848 - #13 print
INFO  15:23:02,848 - #43 (
INFO  15:23:02,848 - #20 bodovi
INFO  15:23:02,848 - #44 )
INFO  15:23:02,848 - #40 ;
INFO  15:23:02,849 - #48 }
INFO  15:23:02,849 - #48 }
ERROR 15:23:02,850 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 30, koloni 0!
INFO  15:24:27,927 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:24:27,975 - #2 program
INFO  15:24:27,975 - #20 test301
INFO  15:24:27,975 - #7 const
INFO  15:24:27,976 - #20 int
INFO  15:24:27,976 - #20 nula
INFO  15:24:27,976 - #37 =
INFO  15:24:27,976 - #21 0
INFO  15:24:27,976 - #40 ;
INFO  15:24:27,977 - #7 const
INFO  15:24:27,977 - #20 int
INFO  15:24:27,977 - #20 jedan
INFO  15:24:27,977 - #37 =
INFO  15:24:27,977 - #21 1
INFO  15:24:27,977 - #40 ;
INFO  15:24:27,977 - #7 const
INFO  15:24:27,977 - #20 int
INFO  15:24:27,977 - #20 pet
INFO  15:24:27,978 - #37 =
INFO  15:24:27,978 - #21 5
INFO  15:24:27,978 - #40 ;
INFO  15:24:27,978 - #20 int
INFO  15:24:27,978 - #20 niz
INFO  15:24:27,978 - #45 [
INFO  15:24:27,978 - #46 ]
INFO  15:24:27,978 - #40 ;
INFO  15:24:27,979 - #20 char
INFO  15:24:27,979 - #20 nizch
INFO  15:24:27,979 - #45 [
INFO  15:24:27,979 - #46 ]
INFO  15:24:27,979 - #40 ;
INFO  15:24:27,979 - #47 {
INFO  15:24:27,979 - #16 void
INFO  15:24:27,979 - #20 main
INFO  15:24:27,979 - #43 (
INFO  15:24:27,980 - #44 )
INFO  15:24:27,980 - #20 int
INFO  15:24:27,980 - #20 bodovi
INFO  15:24:27,980 - #40 ;
INFO  15:24:27,980 - #20 bool
INFO  15:24:27,980 - #20 bt
INFO  15:24:27,980 - #40 ;
INFO  15:24:27,980 - #47 {
INFO  15:24:27,981 - #20 bt
INFO  15:24:27,981 - #37 =
INFO  15:24:27,981 - #23 true
INFO  15:24:27,981 - #40 ;
INFO  15:24:27,981 - #20 bt
INFO  15:24:27,982 - #49 ?
ERROR 15:24:27,982 - 
Sintaksna greska na liniji 21, koloni 5 za simbol "?"!
INFO  15:24:27,982 - #20 bodovi
INFO  15:24:27,982 - #50 :
INFO  15:24:27,982 - #20 bodovi
INFO  15:24:27,982 - #40 ;
INFO  15:24:27,983 - #13 print
INFO  15:24:27,983 - #43 (
INFO  15:24:27,983 - #20 bodovi
INFO  15:24:27,983 - #44 )
INFO  15:24:27,983 - #40 ;
INFO  15:24:27,983 - #48 }
INFO  15:24:27,983 - #48 }
ERROR 15:24:27,983 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 27, koloni 1!
INFO  15:24:58,633 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:24:58,678 - #2 program
INFO  15:24:58,679 - #20 test301
INFO  15:24:58,679 - #7 const
INFO  15:24:58,679 - #20 int
INFO  15:24:58,679 - #20 nula
INFO  15:24:58,680 - #37 =
INFO  15:24:58,680 - #21 0
INFO  15:24:58,680 - #40 ;
INFO  15:24:58,680 - #7 const
INFO  15:24:58,680 - #20 int
INFO  15:24:58,680 - #20 jedan
INFO  15:24:58,680 - #37 =
INFO  15:24:58,680 - #21 1
INFO  15:24:58,680 - #40 ;
INFO  15:24:58,680 - #7 const
INFO  15:24:58,680 - #20 int
INFO  15:24:58,680 - #20 pet
INFO  15:24:58,680 - #37 =
INFO  15:24:58,680 - #21 5
INFO  15:24:58,680 - #40 ;
INFO  15:24:58,680 - #20 int
INFO  15:24:58,680 - #20 niz
INFO  15:24:58,680 - #45 [
INFO  15:24:58,680 - #46 ]
INFO  15:24:58,681 - #40 ;
INFO  15:24:58,681 - #20 char
INFO  15:24:58,681 - #20 nizch
INFO  15:24:58,681 - #45 [
INFO  15:24:58,681 - #46 ]
INFO  15:24:58,681 - #40 ;
INFO  15:24:58,682 - #47 {
INFO  15:24:58,682 - #16 void
INFO  15:24:58,682 - #20 main
INFO  15:24:58,682 - #43 (
INFO  15:24:58,682 - #44 )
INFO  15:24:58,682 - #20 int
INFO  15:24:58,682 - #20 bodovi
INFO  15:24:58,682 - #40 ;
INFO  15:24:58,682 - #20 bool
INFO  15:24:58,683 - #20 bt
INFO  15:24:58,683 - #40 ;
INFO  15:24:58,683 - #47 {
INFO  15:24:58,683 - #20 bt
INFO  15:24:58,683 - #37 =
INFO  15:24:58,683 - #23 true
INFO  15:24:58,683 - #40 ;
INFO  15:24:58,684 - #20 bodovi
INFO  15:24:58,684 - #37 =
INFO  15:24:58,684 - #20 bt
INFO  15:24:58,684 - #49 ?
INFO  15:24:58,685 - #21 1
INFO  15:24:58,685 - #50 :
INFO  15:24:58,685 - #21 2
INFO  15:24:58,685 - #40 ;
INFO  15:24:58,685 - #13 print
INFO  15:24:58,685 - #43 (
INFO  15:24:58,685 - #20 bodovi
INFO  15:24:58,685 - #44 )
INFO  15:24:58,685 - #40 ;
INFO  15:24:58,685 - #48 }
INFO  15:24:58,685 - #48 }
INFO  15:24:58,686 - 

================SINTAKSNO STABLO====================


INFO  15:24:58,687 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclMulti(
          ProgramDeclMulti(
            ProgramDeclEps(
            ) [ProgramDeclEps]
            PartConstDeclaration(
              ConstDeclaration(
                Type(
                 int
                ) [Type]
                ConstSingle(
                  ConstPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstPart]
                ) [ConstSingle]
              ) [ConstDeclaration]
            ) [PartConstDeclaration]
          ) [ProgramDeclMulti]
          PartConstDeclaration(
            ConstDeclaration(
              Type(
               int
              ) [Type]
              ConstSingle(
                ConstPart(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [ConstPart]
              ) [ConstSingle]
            ) [ConstDeclaration]
          ) [PartConstDeclaration]
        ) [ProgramDeclMulti]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarArray(
               niz
              ) [VarArray]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         char
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             nizch
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 bodovi
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 bodovi
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprTernary(
                    TernaryCond(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             bt
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [TernaryCond]
                    TerExpr1(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [TerExpr1]
                    TerExpr2(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [TerExpr2]
                  ) [ExprTernary]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     bodovi
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  15:24:58,688 - 

================SEMANTICKA OBRADA====================


INFO  15:24:58,700 - Deklarisana konstanta 'nula' na liniji 5
INFO  15:24:58,700 - Deklarisana konstanta 'jedan' na liniji 6
INFO  15:24:58,700 - Deklarisana konstanta 'pet' na liniji 7
INFO  15:24:58,700 - Deklarisan globalni niz 'niz' na liniji 9
INFO  15:24:58,700 - Deklarisan globalni niz 'nizch' na liniji 10
INFO  15:24:58,701 - Deklarisana promenljiva 'bodovi' na liniji 14
INFO  15:24:58,701 - Deklarisana promenljiva 'bt' na liniji 15
INFO  15:24:58,702 - PROGRAM 2 na liniji 3
INFO  15:24:58,702 - ===================================
INFO  15:24:58,703 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  15:24:58,709 - Parsiranje uspesno zavrseno!
INFO  15:49:21,973 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:49:22,116 - #2 program
INFO  15:49:22,116 - #20 test301
INFO  15:49:22,116 - #47 {
INFO  15:49:22,117 - #16 void
INFO  15:49:22,117 - #20 main
INFO  15:49:22,118 - #43 (
INFO  15:49:22,118 - #44 )
INFO  15:49:22,118 - #20 int
INFO  15:49:22,118 - #20 bodovi
INFO  15:49:22,119 - #40 ;
INFO  15:49:22,119 - #20 bool
INFO  15:49:22,119 - #20 bt
INFO  15:49:22,120 - #40 ;
INFO  15:49:22,120 - #47 {
INFO  15:49:22,120 - #20 bt
INFO  15:49:22,120 - #37 =
INFO  15:49:22,120 - #23 true
INFO  15:49:22,120 - #40 ;
INFO  15:49:22,121 - #20 bodovi
INFO  15:49:22,121 - #37 =
INFO  15:49:22,122 - #20 bt
INFO  15:49:22,122 - #49 ?
INFO  15:49:22,122 - #21 1
INFO  15:49:22,122 - #50 :
INFO  15:49:22,123 - #21 2
INFO  15:49:22,123 - #40 ;
INFO  15:49:22,123 - #13 print
INFO  15:49:22,123 - #43 (
INFO  15:49:22,124 - #20 bodovi
INFO  15:49:22,124 - #44 )
INFO  15:49:22,124 - #40 ;
INFO  15:49:22,124 - #48 }
INFO  15:49:22,124 - #48 }
INFO  15:49:22,126 - 

================SINTAKSNO STABLO====================


INFO  15:49:22,127 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 bodovi
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 bodovi
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprTernary(
                    TernaryCond(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             bt
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [TernaryCond]
                    TerExpr1(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [TerExpr1]
                    TerExpr2(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [TerExpr2]
                  ) [ExprTernary]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     bodovi
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  15:49:22,128 - 

================SEMANTICKA OBRADA====================


INFO  15:49:22,146 - Deklarisana promenljiva 'bodovi' na liniji 7
INFO  15:49:22,147 - Deklarisana promenljiva 'bt' na liniji 8
INFO  15:49:22,147 - PROGRAM 0 na liniji 3
INFO  15:49:22,148 - ===================================
INFO  15:49:22,148 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  15:49:22,157 - Parsiranje uspesno zavrseno!
INFO  15:51:40,923 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:51:40,970 - #2 program
INFO  15:51:40,970 - #20 test301
INFO  15:51:40,971 - #47 {
INFO  15:51:40,971 - #16 void
INFO  15:51:40,971 - #20 main
INFO  15:51:40,971 - #43 (
INFO  15:51:40,971 - #44 )
INFO  15:51:40,972 - #20 int
INFO  15:51:40,972 - #20 bodovi
INFO  15:51:40,972 - #40 ;
INFO  15:51:40,972 - #20 bool
INFO  15:51:40,972 - #20 bt
INFO  15:51:40,972 - #40 ;
INFO  15:51:40,972 - #47 {
INFO  15:51:40,973 - #20 bt
INFO  15:51:40,973 - #37 =
INFO  15:51:40,973 - #23 true
INFO  15:51:40,973 - #40 ;
INFO  15:51:40,973 - #20 bodovi
INFO  15:51:40,974 - #37 =
INFO  15:51:40,974 - #20 bt
INFO  15:51:40,974 - #49 ?
INFO  15:51:40,974 - #21 1
INFO  15:51:40,974 - #50 :
INFO  15:51:40,974 - #21 2
INFO  15:51:40,974 - #40 ;
INFO  15:51:40,975 - #13 print
INFO  15:51:40,975 - #43 (
INFO  15:51:40,975 - #20 bodovi
INFO  15:51:40,975 - #44 )
INFO  15:51:40,975 - #40 ;
INFO  15:51:40,975 - #48 }
INFO  15:51:40,975 - #48 }
INFO  15:51:40,976 - 

================SINTAKSNO STABLO====================


INFO  15:51:40,977 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 bodovi
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 bodovi
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprTernary(
                    TernaryCond(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             bt
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [TernaryCond]
                    TerExpr1(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [TerExpr1]
                    TerExpr2(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [TerExpr2]
                  ) [ExprTernary]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     bodovi
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  15:51:40,978 - 

================SEMANTICKA OBRADA====================


INFO  15:51:40,988 - Deklarisana promenljiva 'bodovi' na liniji 7
INFO  15:51:40,988 - Deklarisana promenljiva 'bt' na liniji 8
INFO  15:51:40,988 - PROGRAM 0 na liniji 3
INFO  15:51:40,988 - ===================================
INFO  15:51:40,988 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  15:51:40,994 - Parsiranje uspesno zavrseno!
INFO  15:53:56,748 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:53:56,796 - #2 program
INFO  15:53:56,796 - #20 test301
INFO  15:53:56,796 - #47 {
INFO  15:53:56,797 - #16 void
INFO  15:53:56,797 - #20 main
INFO  15:53:56,797 - #43 (
INFO  15:53:56,797 - #44 )
INFO  15:53:56,797 - #20 int
INFO  15:53:56,797 - #20 bodovi
INFO  15:53:56,798 - #40 ;
INFO  15:53:56,798 - #20 bool
INFO  15:53:56,798 - #20 bt
INFO  15:53:56,798 - #40 ;
INFO  15:53:56,798 - #47 {
INFO  15:53:56,799 - #20 bt
INFO  15:53:56,799 - #37 =
INFO  15:53:56,799 - #23 true
INFO  15:53:56,799 - #40 ;
INFO  15:53:56,800 - #20 bodovi
INFO  15:53:56,800 - #37 =
INFO  15:53:56,800 - #20 bt
INFO  15:53:56,800 - #49 ?
INFO  15:53:56,800 - #21 1
INFO  15:53:56,800 - #50 :
INFO  15:53:56,801 - #21 2
INFO  15:53:56,801 - #40 ;
INFO  15:53:56,801 - #13 print
INFO  15:53:56,801 - #43 (
INFO  15:53:56,801 - #20 bodovi
INFO  15:53:56,801 - #44 )
INFO  15:53:56,802 - #40 ;
INFO  15:53:56,802 - #48 }
INFO  15:53:56,802 - #48 }
INFO  15:53:56,803 - 

================SINTAKSNO STABLO====================


INFO  15:53:56,804 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 bodovi
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 bodovi
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprTernary(
                    TernaryCond(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             bt
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [TernaryCond]
                    TerExpr1(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [TerExpr1]
                    TerExpr2(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [TerExpr2]
                  ) [ExprTernary]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     bodovi
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  15:53:56,804 - 

================SEMANTICKA OBRADA====================


INFO  15:53:56,815 - Deklarisana promenljiva 'bodovi' na liniji 7
INFO  15:53:56,815 - Deklarisana promenljiva 'bt' na liniji 8
INFO  15:53:56,816 - PROGRAM 0 na liniji 3
INFO  15:53:56,816 - ===================================
INFO  15:53:56,816 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 15:53:56,821 - TernaryCondition 8
ERROR 15:53:56,821 - TernaryExpr1 12
ERROR 15:53:56,821 - TernaryExpr2 15
INFO  15:53:56,822 - Parsiranje uspesno zavrseno!
INFO  15:54:51,558 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:54:51,603 - #2 program
INFO  15:54:51,603 - #20 test301
INFO  15:54:51,603 - #47 {
INFO  15:54:51,604 - #16 void
INFO  15:54:51,604 - #20 main
INFO  15:54:51,604 - #43 (
INFO  15:54:51,604 - #44 )
INFO  15:54:51,604 - #20 int
INFO  15:54:51,604 - #20 bodovi
INFO  15:54:51,605 - #40 ;
INFO  15:54:51,605 - #20 bool
INFO  15:54:51,606 - #20 bt
INFO  15:54:51,606 - #40 ;
INFO  15:54:51,606 - #47 {
INFO  15:54:51,606 - #20 bt
INFO  15:54:51,606 - #37 =
INFO  15:54:51,606 - #23 false
INFO  15:54:51,606 - #40 ;
INFO  15:54:51,607 - #20 bodovi
INFO  15:54:51,607 - #37 =
INFO  15:54:51,607 - #20 bt
INFO  15:54:51,607 - #49 ?
INFO  15:54:51,608 - #21 1
INFO  15:54:51,608 - #50 :
INFO  15:54:51,608 - #21 2
INFO  15:54:51,608 - #40 ;
INFO  15:54:51,608 - #13 print
INFO  15:54:51,609 - #43 (
INFO  15:54:51,609 - #20 bodovi
INFO  15:54:51,609 - #44 )
INFO  15:54:51,609 - #40 ;
INFO  15:54:51,609 - #48 }
INFO  15:54:51,609 - #48 }
INFO  15:54:51,610 - 

================SINTAKSNO STABLO====================


INFO  15:54:51,611 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 bodovi
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           false
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 bodovi
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprTernary(
                    TernaryCond(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             bt
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [TernaryCond]
                    TerExpr1(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [TerExpr1]
                    TerExpr2(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [TerExpr2]
                  ) [ExprTernary]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     bodovi
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  15:54:51,611 - 

================SEMANTICKA OBRADA====================


INFO  15:54:51,622 - Deklarisana promenljiva 'bodovi' na liniji 7
INFO  15:54:51,623 - Deklarisana promenljiva 'bt' na liniji 8
INFO  15:54:51,623 - PROGRAM 0 na liniji 3
INFO  15:54:51,623 - ===================================
INFO  15:54:51,624 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 15:54:51,629 - TernaryCondition 8
ERROR 15:54:51,629 - TernaryExpr1 12
ERROR 15:54:51,629 - TernaryExpr2 15
INFO  15:54:51,630 - Parsiranje uspesno zavrseno!
INFO  15:55:24,652 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:55:24,722 - #2 program
INFO  15:55:24,722 - #20 test301
INFO  15:55:24,722 - #47 {
INFO  15:55:24,724 - #16 void
INFO  15:55:24,724 - #20 main
INFO  15:55:24,724 - #43 (
INFO  15:55:24,724 - #44 )
INFO  15:55:24,724 - #20 int
INFO  15:55:24,724 - #20 bodovi
INFO  15:55:24,725 - #40 ;
INFO  15:55:24,725 - #20 bool
INFO  15:55:24,725 - #20 bt
INFO  15:55:24,725 - #40 ;
INFO  15:55:24,726 - #47 {
INFO  15:55:24,726 - #20 bt
INFO  15:55:24,726 - #37 =
INFO  15:55:24,726 - #23 false
INFO  15:55:24,727 - #40 ;
INFO  15:55:24,728 - #20 bodovi
INFO  15:55:24,728 - #37 =
INFO  15:55:24,728 - #21 2
INFO  15:55:24,728 - #40 ;
INFO  15:55:24,729 - #13 print
INFO  15:55:24,729 - #43 (
INFO  15:55:24,729 - #20 bt
INFO  15:55:24,729 - #49 ?
INFO  15:55:24,729 - #20 bodovi
INFO  15:55:24,729 - #50 :
INFO  15:55:24,730 - #20 bodovi
INFO  15:55:24,730 - #24 +
INFO  15:55:24,730 - #21 10
INFO  15:55:24,731 - #44 )
INFO  15:55:24,732 - #40 ;
INFO  15:55:24,732 - #48 }
INFO  15:55:24,733 - #48 }
INFO  15:55:24,735 - 

================SINTAKSNO STABLO====================


INFO  15:55:24,736 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 bodovi
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           false
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 bodovi
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprTernary(
              TernaryCond(
                ExprSingle(
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       bt
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TernaryCond]
              TerExpr1(
                ExprSingle(
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       bodovi
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TerExpr1]
              TerExpr2(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         bodovi
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorNumConst(
                     10
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [TerExpr2]
            ) [ExprTernary]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  15:55:24,738 - 

================SEMANTICKA OBRADA====================


INFO  15:55:24,757 - Deklarisana promenljiva 'bodovi' na liniji 7
INFO  15:55:24,757 - Deklarisana promenljiva 'bt' na liniji 8
INFO  15:55:24,758 - PROGRAM 0 na liniji 3
INFO  15:55:24,759 - ===================================
INFO  15:55:24,759 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 15:55:24,768 - TernaryCondition 10
ERROR 15:55:24,768 - TernaryExpr1 14
ERROR 15:55:24,768 - TernaryExpr2 23
INFO  15:57:27,190 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:57:27,268 - #2 program
INFO  15:57:27,268 - #20 test301
INFO  15:57:27,268 - #47 {
INFO  15:57:27,269 - #16 void
INFO  15:57:27,269 - #20 main
INFO  15:57:27,269 - #43 (
INFO  15:57:27,270 - #44 )
INFO  15:57:27,270 - #20 int
INFO  15:57:27,270 - #20 bodovi
INFO  15:57:27,271 - #40 ;
INFO  15:57:27,271 - #20 bool
INFO  15:57:27,271 - #20 bt
INFO  15:57:27,271 - #40 ;
INFO  15:57:27,271 - #47 {
INFO  15:57:27,272 - #20 bt
INFO  15:57:27,272 - #37 =
INFO  15:57:27,272 - #23 false
INFO  15:57:27,272 - #40 ;
INFO  15:57:27,273 - #20 bodovi
INFO  15:57:27,273 - #37 =
INFO  15:57:27,274 - #21 2
INFO  15:57:27,274 - #40 ;
INFO  15:57:27,274 - #13 print
INFO  15:57:27,274 - #43 (
INFO  15:57:27,274 - #20 bt
INFO  15:57:27,274 - #49 ?
INFO  15:57:27,275 - #20 bodovi
INFO  15:57:27,275 - #50 :
INFO  15:57:27,275 - #20 bodovi
INFO  15:57:27,275 - #24 +
INFO  15:57:27,275 - #21 10
INFO  15:57:27,277 - #44 )
INFO  15:57:27,277 - #40 ;
INFO  15:57:27,278 - #48 }
INFO  15:57:27,278 - #48 }
INFO  15:57:27,279 - 

================SINTAKSNO STABLO====================


INFO  15:57:27,280 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 bodovi
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           false
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 bodovi
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprTernary(
              TernaryCond(
                ExprSingle(
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       bt
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TernaryCond]
              TerExpr1(
                ExprSingle(
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       bodovi
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TerExpr1]
              TerExpr2(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         bodovi
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorNumConst(
                     10
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [TerExpr2]
            ) [ExprTernary]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  15:57:27,282 - 

================SEMANTICKA OBRADA====================


INFO  15:57:27,299 - Deklarisana promenljiva 'bodovi' na liniji 7
INFO  15:57:27,299 - Deklarisana promenljiva 'bt' na liniji 8
INFO  15:57:27,300 - PROGRAM 0 na liniji 3
INFO  15:57:27,301 - ===================================
INFO  15:57:27,301 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 15:57:27,310 - TernaryCondition 10
ERROR 15:57:27,310 - TernaryExpr1 14
ERROR 15:57:27,310 - TernaryExpr2 23
INFO  15:57:27,311 - Parsiranje uspesno zavrseno!
INFO  15:57:41,730 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:57:41,791 - #2 program
INFO  15:57:41,791 - #20 test301
INFO  15:57:41,791 - #47 {
INFO  15:57:41,792 - #16 void
INFO  15:57:41,792 - #20 main
INFO  15:57:41,792 - #43 (
INFO  15:57:41,792 - #44 )
INFO  15:57:41,792 - #20 int
INFO  15:57:41,793 - #20 bodovi
INFO  15:57:41,793 - #40 ;
INFO  15:57:41,793 - #20 bool
INFO  15:57:41,793 - #20 bt
INFO  15:57:41,793 - #40 ;
INFO  15:57:41,794 - #47 {
INFO  15:57:41,794 - #20 bt
INFO  15:57:41,794 - #37 =
INFO  15:57:41,794 - #23 true
INFO  15:57:41,794 - #40 ;
INFO  15:57:41,795 - #20 bodovi
INFO  15:57:41,795 - #37 =
INFO  15:57:41,796 - #21 2
INFO  15:57:41,796 - #40 ;
INFO  15:57:41,796 - #13 print
INFO  15:57:41,796 - #43 (
INFO  15:57:41,796 - #20 bt
INFO  15:57:41,796 - #49 ?
INFO  15:57:41,796 - #20 bodovi
INFO  15:57:41,796 - #50 :
INFO  15:57:41,797 - #20 bodovi
INFO  15:57:41,797 - #24 +
INFO  15:57:41,797 - #21 10
INFO  15:57:41,799 - #44 )
INFO  15:57:41,799 - #40 ;
INFO  15:57:41,799 - #48 }
INFO  15:57:41,799 - #48 }
INFO  15:57:41,800 - 

================SINTAKSNO STABLO====================


INFO  15:57:41,801 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 bodovi
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 bodovi
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprTernary(
              TernaryCond(
                ExprSingle(
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       bt
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TernaryCond]
              TerExpr1(
                ExprSingle(
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       bodovi
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TerExpr1]
              TerExpr2(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         bodovi
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorNumConst(
                     10
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [TerExpr2]
            ) [ExprTernary]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  15:57:41,804 - 

================SEMANTICKA OBRADA====================


INFO  15:57:41,817 - Deklarisana promenljiva 'bodovi' na liniji 7
INFO  15:57:41,817 - Deklarisana promenljiva 'bt' na liniji 8
INFO  15:57:41,818 - PROGRAM 0 na liniji 3
INFO  15:57:41,819 - ===================================
INFO  15:57:41,819 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 15:57:41,825 - TernaryCondition 10
ERROR 15:57:41,825 - TernaryExpr1 14
ERROR 15:57:41,825 - TernaryExpr2 23
INFO  15:57:41,826 - Parsiranje uspesno zavrseno!
INFO  15:57:54,966 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:57:55,016 - #2 program
INFO  15:57:55,017 - #20 test301
INFO  15:57:55,017 - #47 {
INFO  15:57:55,018 - #16 void
INFO  15:57:55,018 - #20 main
INFO  15:57:55,018 - #43 (
INFO  15:57:55,018 - #44 )
INFO  15:57:55,019 - #20 int
INFO  15:57:55,019 - #20 bodovi
INFO  15:57:55,019 - #40 ;
INFO  15:57:55,020 - #20 bool
INFO  15:57:55,020 - #20 bt
INFO  15:57:55,020 - #40 ;
INFO  15:57:55,020 - #47 {
INFO  15:57:55,021 - #20 bt
INFO  15:57:55,021 - #37 =
INFO  15:57:55,021 - #23 true
INFO  15:57:55,021 - #40 ;
INFO  15:57:55,021 - #20 bodovi
INFO  15:57:55,022 - #37 =
INFO  15:57:55,022 - #21 2
INFO  15:57:55,022 - #40 ;
INFO  15:57:55,023 - #13 print
INFO  15:57:55,023 - #43 (
INFO  15:57:55,023 - #20 bt
INFO  15:57:55,023 - #49 ?
INFO  15:57:55,023 - #20 bodovi
INFO  15:57:55,026 - #50 :
INFO  15:57:55,027 - #20 bodovi
INFO  15:57:55,027 - #24 +
INFO  15:57:55,027 - #21 10
INFO  15:57:55,028 - #44 )
INFO  15:57:55,029 - #40 ;
INFO  15:57:55,029 - #13 print
INFO  15:57:55,030 - #43 (
INFO  15:57:55,030 - #23 false
INFO  15:57:55,030 - #49 ?
INFO  15:57:55,030 - #20 bodovi
INFO  15:57:55,030 - #24 +
INFO  15:57:55,030 - #21 20
INFO  15:57:55,030 - #50 :
INFO  15:57:55,030 - #20 bodovi
INFO  15:57:55,030 - #24 +
INFO  15:57:55,030 - #21 30
INFO  15:57:55,030 - #44 )
INFO  15:57:55,030 - #40 ;
INFO  15:57:55,030 - #48 }
INFO  15:57:55,031 - #48 }
INFO  15:57:55,032 - 

================SINTAKSNO STABLO====================


INFO  15:57:55,033 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 bodovi
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     bt
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorBoolConst(
                             true
                            ) [FactorBoolConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bodovi
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtPrint(
              ExprTernary(
                TernaryCond(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         bt
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [TernaryCond]
                TerExpr1(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         bodovi
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [TerExpr1]
                TerExpr2(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           bodovi
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorNumConst(
                       10
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [TerExpr2]
              ) [ExprTernary]
            ) [StmtPrint]
          ) [StatementMulti]
          StmtPrint(
            ExprTernary(
              TernaryCond(
                ExprSingle(
                  TermSingle(
                    FactorBoolConst(
                     false
                    ) [FactorBoolConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TernaryCond]
              TerExpr1(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         bodovi
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorNumConst(
                     20
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [TerExpr1]
              TerExpr2(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         bodovi
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorNumConst(
                     30
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [TerExpr2]
            ) [ExprTernary]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  15:57:55,035 - 

================SEMANTICKA OBRADA====================


INFO  15:57:55,047 - Deklarisana promenljiva 'bodovi' na liniji 7
INFO  15:57:55,047 - Deklarisana promenljiva 'bt' na liniji 8
INFO  15:57:55,048 - PROGRAM 0 na liniji 3
INFO  15:57:55,048 - ===================================
INFO  15:57:55,048 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 15:57:55,054 - TernaryCondition 10
ERROR 15:57:55,054 - TernaryExpr1 14
ERROR 15:57:55,054 - TernaryExpr2 23
ERROR 15:57:55,054 - TernaryCondition 28
ERROR 15:57:55,054 - TernaryExpr1 38
ERROR 15:57:55,054 - TernaryExpr2 47
INFO  15:57:55,055 - Parsiranje uspesno zavrseno!
INFO  15:58:09,566 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:58:09,610 - #2 program
INFO  15:58:09,611 - #20 test301
INFO  15:58:09,611 - #47 {
INFO  15:58:09,611 - #16 void
INFO  15:58:09,611 - #20 main
INFO  15:58:09,612 - #43 (
INFO  15:58:09,612 - #44 )
INFO  15:58:09,612 - #20 int
INFO  15:58:09,612 - #20 bodovi
INFO  15:58:09,612 - #40 ;
INFO  15:58:09,612 - #20 bool
INFO  15:58:09,613 - #20 bt
INFO  15:58:09,613 - #40 ;
INFO  15:58:09,613 - #47 {
INFO  15:58:09,613 - #20 bt
INFO  15:58:09,613 - #37 =
INFO  15:58:09,613 - #23 true
INFO  15:58:09,613 - #40 ;
INFO  15:58:09,614 - #20 bodovi
INFO  15:58:09,614 - #37 =
INFO  15:58:09,614 - #21 2
INFO  15:58:09,614 - #40 ;
INFO  15:58:09,614 - #13 print
INFO  15:58:09,615 - #43 (
INFO  15:58:09,615 - #20 bt
INFO  15:58:09,615 - #49 ?
INFO  15:58:09,615 - #20 bodovi
INFO  15:58:09,615 - #50 :
INFO  15:58:09,615 - #20 bodovi
INFO  15:58:09,615 - #24 +
INFO  15:58:09,615 - #21 10
INFO  15:58:09,616 - #44 )
INFO  15:58:09,617 - #40 ;
INFO  15:58:09,617 - #13 print
INFO  15:58:09,617 - #43 (
INFO  15:58:09,617 - #23 false
INFO  15:58:09,617 - #49 ?
INFO  15:58:09,617 - #20 bodovi
INFO  15:58:09,617 - #24 +
INFO  15:58:09,617 - #21 20
INFO  15:58:09,617 - #50 :
INFO  15:58:09,618 - #20 bodovi
INFO  15:58:09,618 - #24 +
INFO  15:58:09,618 - #21 30
INFO  15:58:09,618 - #44 )
INFO  15:58:09,618 - #40 ;
INFO  15:58:09,618 - #13 print
INFO  15:58:09,618 - #43 (
INFO  15:58:09,618 - #20 bodovi
INFO  15:58:09,618 - #31 >
ERROR 15:58:09,618 - 
Sintaksna greska na liniji 17, koloni 15 za simbol ">"!
INFO  15:58:09,618 - #21 10
INFO  15:58:09,618 - #49 ?
INFO  15:58:09,619 - #22 +
INFO  15:58:09,619 - #50 :
INFO  15:58:09,619 - #22 -
INFO  15:58:09,619 - #44 )
INFO  15:58:09,619 - #40 ;
INFO  15:58:09,619 - #48 }
INFO  15:58:09,619 - #48 }
ERROR 15:58:09,619 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 19, koloni 1!
INFO  15:58:32,993 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:58:33,040 - #2 program
INFO  15:58:33,040 - #20 test301
INFO  15:58:33,040 - #47 {
INFO  15:58:33,041 - #16 void
INFO  15:58:33,041 - #20 main
INFO  15:58:33,041 - #43 (
INFO  15:58:33,041 - #44 )
INFO  15:58:33,042 - #20 int
INFO  15:58:33,042 - #20 bodovi
INFO  15:58:33,042 - #40 ;
INFO  15:58:33,042 - #20 bool
INFO  15:58:33,043 - #20 bt
INFO  15:58:33,043 - #40 ;
INFO  15:58:33,043 - #47 {
INFO  15:58:33,043 - #20 bt
INFO  15:58:33,043 - #37 =
INFO  15:58:33,043 - #23 true
INFO  15:58:33,043 - #40 ;
INFO  15:58:33,044 - #20 bodovi
INFO  15:58:33,044 - #37 =
INFO  15:58:33,044 - #21 2
INFO  15:58:33,044 - #40 ;
INFO  15:58:33,044 - #13 print
INFO  15:58:33,044 - #43 (
INFO  15:58:33,044 - #20 bt
INFO  15:58:33,044 - #49 ?
INFO  15:58:33,045 - #20 bodovi
INFO  15:58:33,045 - #50 :
INFO  15:58:33,045 - #20 bodovi
INFO  15:58:33,045 - #24 +
INFO  15:58:33,046 - #21 10
INFO  15:58:33,047 - #44 )
INFO  15:58:33,047 - #40 ;
INFO  15:58:33,047 - #13 print
INFO  15:58:33,048 - #43 (
INFO  15:58:33,048 - #23 true
INFO  15:58:33,048 - #49 ?
INFO  15:58:33,048 - #22 +
INFO  15:58:33,048 - #50 :
INFO  15:58:33,048 - #22 -
INFO  15:58:33,048 - #44 )
INFO  15:58:33,048 - #40 ;
INFO  15:58:33,048 - #13 print
INFO  15:58:33,048 - #43 (
INFO  15:58:33,049 - #23 false
INFO  15:58:33,049 - #49 ?
INFO  15:58:33,049 - #20 bodovi
INFO  15:58:33,049 - #24 +
INFO  15:58:33,049 - #21 20
INFO  15:58:33,049 - #50 :
INFO  15:58:33,049 - #20 bodovi
INFO  15:58:33,049 - #24 +
INFO  15:58:33,049 - #21 30
INFO  15:58:33,049 - #44 )
INFO  15:58:33,050 - #40 ;
INFO  15:58:33,050 - #48 }
INFO  15:58:33,050 - #48 }
INFO  15:58:33,051 - 

================SINTAKSNO STABLO====================


INFO  15:58:33,052 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 bodovi
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       bt
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorBoolConst(
                               true
                              ) [FactorBoolConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     bodovi
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             2
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtPrint(
                ExprTernary(
                  TernaryCond(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           bt
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [TernaryCond]
                  TerExpr1(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           bodovi
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [TerExpr1]
                  TerExpr2(
                    ExprAddop(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             bodovi
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                      AddopPlus(
                      ) [AddopPlus]
                      TermSingle(
                        FactorNumConst(
                         10
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprAddop]
                  ) [TerExpr2]
                ) [ExprTernary]
              ) [StmtPrint]
            ) [StatementMulti]
            StmtPrint(
              ExprTernary(
                TernaryCond(
                  ExprSingle(
                    TermSingle(
                      FactorBoolConst(
                       true
                      ) [FactorBoolConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [TernaryCond]
                TerExpr1(
                  ExprSingle(
                    TermSingle(
                      FactorCharConst(
                       +
                      ) [FactorCharConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [TerExpr1]
                TerExpr2(
                  ExprSingle(
                    TermSingle(
                      FactorCharConst(
                       -
                      ) [FactorCharConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [TerExpr2]
              ) [ExprTernary]
            ) [StmtPrint]
          ) [StatementMulti]
          StmtPrint(
            ExprTernary(
              TernaryCond(
                ExprSingle(
                  TermSingle(
                    FactorBoolConst(
                     false
                    ) [FactorBoolConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TernaryCond]
              TerExpr1(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         bodovi
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorNumConst(
                     20
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [TerExpr1]
              TerExpr2(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         bodovi
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorNumConst(
                     30
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [TerExpr2]
            ) [ExprTernary]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  15:58:33,053 - 

================SEMANTICKA OBRADA====================


INFO  15:58:33,064 - Deklarisana promenljiva 'bodovi' na liniji 7
INFO  15:58:33,064 - Deklarisana promenljiva 'bt' na liniji 8
INFO  15:58:33,064 - PROGRAM 0 na liniji 3
INFO  15:58:33,065 - ===================================
INFO  15:58:33,065 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 15:58:33,071 - TernaryCondition 10
ERROR 15:58:33,071 - TernaryExpr1 14
ERROR 15:58:33,071 - TernaryExpr2 23
ERROR 15:58:33,071 - TernaryCondition 28
ERROR 15:58:33,072 - TernaryExpr1 36
ERROR 15:58:33,072 - TernaryExpr2 43
ERROR 15:58:33,072 - TernaryCondition 48
ERROR 15:58:33,072 - TernaryExpr1 58
ERROR 15:58:33,072 - TernaryExpr2 67
INFO  15:58:33,072 - Parsiranje uspesno zavrseno!
INFO  15:59:02,928 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:59:02,991 - #2 program
INFO  15:59:02,991 - #20 test301
INFO  15:59:02,992 - #47 {
INFO  15:59:02,993 - #16 void
INFO  15:59:02,993 - #20 main
INFO  15:59:02,993 - #43 (
INFO  15:59:02,993 - #44 )
INFO  15:59:02,993 - #20 int
INFO  15:59:02,993 - #20 bodovi
INFO  15:59:02,994 - #40 ;
INFO  15:59:02,994 - #20 bool
INFO  15:59:02,995 - #20 bt
INFO  15:59:02,995 - #40 ;
INFO  15:59:02,995 - #47 {
INFO  15:59:02,995 - #20 bt
INFO  15:59:02,995 - #37 =
INFO  15:59:02,995 - #23 true
INFO  15:59:02,995 - #40 ;
INFO  15:59:02,996 - #20 bodovi
INFO  15:59:02,997 - #37 =
INFO  15:59:02,997 - #21 2
INFO  15:59:02,997 - #40 ;
INFO  15:59:02,997 - #13 print
INFO  15:59:02,997 - #43 (
INFO  15:59:02,997 - #20 bt
INFO  15:59:02,999 - #49 ?
INFO  15:59:02,999 - #20 bodovi
INFO  15:59:02,999 - #50 :
INFO  15:59:02,999 - #20 bodovi
INFO  15:59:02,999 - #24 +
INFO  15:59:02,999 - #21 10
INFO  15:59:03,001 - #44 )
INFO  15:59:03,001 - #40 ;
INFO  15:59:03,001 - #13 print
INFO  15:59:03,001 - #43 (
INFO  15:59:03,002 - #23 true
INFO  15:59:03,002 - #49 ?
INFO  15:59:03,002 - #22 +
INFO  15:59:03,002 - #50 :
INFO  15:59:03,002 - #22 -
INFO  15:59:03,002 - #44 )
INFO  15:59:03,002 - #40 ;
INFO  15:59:03,003 - #13 print
INFO  15:59:03,003 - #43 (
INFO  15:59:03,003 - #23 false
INFO  15:59:03,003 - #49 ?
INFO  15:59:03,003 - #20 bodovi
INFO  15:59:03,003 - #24 +
INFO  15:59:03,004 - #21 20
INFO  15:59:03,004 - #50 :
INFO  15:59:03,004 - #20 bodovi
INFO  15:59:03,004 - #24 +
INFO  15:59:03,004 - #21 30
INFO  15:59:03,004 - #44 )
INFO  15:59:03,004 - #40 ;
INFO  15:59:03,004 - #48 }
INFO  15:59:03,004 - #48 }
INFO  15:59:03,006 - 

================SINTAKSNO STABLO====================


INFO  15:59:03,007 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 bodovi
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       bt
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorBoolConst(
                               true
                              ) [FactorBoolConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     bodovi
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             2
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtPrint(
                ExprTernary(
                  TernaryCond(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           bt
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [TernaryCond]
                  TerExpr1(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           bodovi
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [TerExpr1]
                  TerExpr2(
                    ExprAddop(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             bodovi
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                      AddopPlus(
                      ) [AddopPlus]
                      TermSingle(
                        FactorNumConst(
                         10
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprAddop]
                  ) [TerExpr2]
                ) [ExprTernary]
              ) [StmtPrint]
            ) [StatementMulti]
            StmtPrint(
              ExprTernary(
                TernaryCond(
                  ExprSingle(
                    TermSingle(
                      FactorBoolConst(
                       true
                      ) [FactorBoolConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [TernaryCond]
                TerExpr1(
                  ExprSingle(
                    TermSingle(
                      FactorCharConst(
                       +
                      ) [FactorCharConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [TerExpr1]
                TerExpr2(
                  ExprSingle(
                    TermSingle(
                      FactorCharConst(
                       -
                      ) [FactorCharConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [TerExpr2]
              ) [ExprTernary]
            ) [StmtPrint]
          ) [StatementMulti]
          StmtPrint(
            ExprTernary(
              TernaryCond(
                ExprSingle(
                  TermSingle(
                    FactorBoolConst(
                     false
                    ) [FactorBoolConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TernaryCond]
              TerExpr1(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         bodovi
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorNumConst(
                     20
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [TerExpr1]
              TerExpr2(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         bodovi
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorNumConst(
                     30
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [TerExpr2]
            ) [ExprTernary]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  15:59:03,008 - 

================SEMANTICKA OBRADA====================


INFO  15:59:03,023 - Deklarisana promenljiva 'bodovi' na liniji 7
INFO  15:59:03,023 - Deklarisana promenljiva 'bt' na liniji 8
INFO  15:59:03,024 - PROGRAM 0 na liniji 3
INFO  15:59:03,025 - ===================================
INFO  15:59:03,025 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  15:59:03,033 - Parsiranje uspesno zavrseno!
INFO  17:06:08,364 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:06:08,409 - #2 program
INFO  17:06:08,409 - #20 test301
INFO  17:06:08,410 - #47 {
INFO  17:06:08,410 - #16 void
INFO  17:06:08,410 - #20 main
INFO  17:06:08,410 - #43 (
INFO  17:06:08,410 - #44 )
INFO  17:06:08,410 - #20 int
INFO  17:06:08,410 - #20 bodovi
INFO  17:06:08,411 - #40 ;
INFO  17:06:08,411 - #20 bool
INFO  17:06:08,411 - #20 bt
INFO  17:06:08,411 - #40 ;
INFO  17:06:08,411 - #47 {
INFO  17:06:08,411 - #20 bt
INFO  17:06:08,411 - #37 =
INFO  17:06:08,412 - #23 true
INFO  17:06:08,412 - #40 ;
INFO  17:06:08,412 - #20 bodovi
INFO  17:06:08,412 - #37 =
INFO  17:06:08,412 - #21 2
INFO  17:06:08,412 - #40 ;
INFO  17:06:08,413 - #13 print
INFO  17:06:08,413 - #43 (
INFO  17:06:08,413 - #20 bt
INFO  17:06:08,413 - #49 ?
INFO  17:06:08,413 - #20 bodovi
INFO  17:06:08,413 - #50 :
INFO  17:06:08,413 - #20 bodovi
INFO  17:06:08,413 - #24 +
INFO  17:06:08,413 - #21 10
INFO  17:06:08,414 - #44 )
INFO  17:06:08,415 - #40 ;
INFO  17:06:08,415 - #13 print
INFO  17:06:08,415 - #43 (
INFO  17:06:08,415 - #23 true
INFO  17:06:08,415 - #49 ?
INFO  17:06:08,415 - #22 +
INFO  17:06:08,416 - #50 :
INFO  17:06:08,416 - #22 -
INFO  17:06:08,416 - #44 )
INFO  17:06:08,416 - #40 ;
INFO  17:06:08,416 - #13 print
INFO  17:06:08,416 - #43 (
INFO  17:06:08,416 - #23 false
INFO  17:06:08,416 - #49 ?
INFO  17:06:08,416 - #20 bodovi
INFO  17:06:08,416 - #24 +
INFO  17:06:08,416 - #21 20
INFO  17:06:08,416 - #50 :
INFO  17:06:08,417 - #20 bodovi
INFO  17:06:08,417 - #24 +
INFO  17:06:08,417 - #21 30
INFO  17:06:08,417 - #44 )
INFO  17:06:08,417 - #40 ;
INFO  17:06:08,417 - #48 }
INFO  17:06:08,417 - #48 }
INFO  17:06:08,418 - 

================SINTAKSNO STABLO====================


INFO  17:06:08,419 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 bodovi
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       bt
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorBoolConst(
                               true
                              ) [FactorBoolConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     bodovi
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             2
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtPrint(
                ExprTernary(
                  TernaryCond(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           bt
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [TernaryCond]
                  TerExpr1(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           bodovi
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [TerExpr1]
                  TerExpr2(
                    ExprAddop(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             bodovi
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                      AddopPlus(
                      ) [AddopPlus]
                      TermSingle(
                        FactorNumConst(
                         10
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprAddop]
                  ) [TerExpr2]
                ) [ExprTernary]
              ) [StmtPrint]
            ) [StatementMulti]
            StmtPrint(
              ExprTernary(
                TernaryCond(
                  ExprSingle(
                    TermSingle(
                      FactorBoolConst(
                       true
                      ) [FactorBoolConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [TernaryCond]
                TerExpr1(
                  ExprSingle(
                    TermSingle(
                      FactorCharConst(
                       +
                      ) [FactorCharConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [TerExpr1]
                TerExpr2(
                  ExprSingle(
                    TermSingle(
                      FactorCharConst(
                       -
                      ) [FactorCharConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [TerExpr2]
              ) [ExprTernary]
            ) [StmtPrint]
          ) [StatementMulti]
          StmtPrint(
            ExprTernary(
              TernaryCond(
                ExprSingle(
                  TermSingle(
                    FactorBoolConst(
                     false
                    ) [FactorBoolConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TernaryCond]
              TerExpr1(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         bodovi
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorNumConst(
                     20
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [TerExpr1]
              TerExpr2(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         bodovi
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorNumConst(
                     30
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [TerExpr2]
            ) [ExprTernary]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  17:06:08,422 - 

================SEMANTICKA OBRADA====================


INFO  17:06:08,432 - Deklarisana promenljiva 'bodovi' na liniji 7
INFO  17:06:08,432 - Deklarisana promenljiva 'bt' na liniji 8
INFO  17:06:08,432 - PROGRAM 0 na liniji 3
INFO  17:06:08,433 - ===================================
INFO  17:06:08,433 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  17:06:08,441 - Parsiranje uspesno zavrseno!
INFO  17:07:28,463 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:07:28,530 - #2 program
INFO  17:07:28,531 - #20 test301
INFO  17:07:28,531 - #47 {
INFO  17:07:28,532 - #16 void
INFO  17:07:28,532 - #20 main
INFO  17:07:28,532 - #43 (
INFO  17:07:28,532 - #44 )
INFO  17:07:28,533 - #20 int
INFO  17:07:28,533 - #20 bodovi
INFO  17:07:28,533 - #40 ;
INFO  17:07:28,534 - #20 bool
INFO  17:07:28,534 - #20 bt
INFO  17:07:28,534 - #40 ;
INFO  17:07:28,535 - #47 {
INFO  17:07:28,535 - #20 bodovi
INFO  17:07:28,535 - #37 =
INFO  17:07:28,535 - #21 0
INFO  17:07:28,536 - #40 ;
INFO  17:07:28,537 - #20 bt
INFO  17:07:28,537 - #37 =
INFO  17:07:28,537 - #23 true
INFO  17:07:28,538 - #40 ;
INFO  17:07:28,538 - #8 if
INFO  17:07:28,538 - #43 (
INFO  17:07:28,541 - #20 bt
INFO  17:07:28,541 - #44 )
INFO  17:07:28,542 - #47 {
INFO  17:07:28,542 - #20 bodovi
INFO  17:07:28,542 - #37 =
INFO  17:07:28,542 - #21 1
INFO  17:07:28,543 - #40 ;
INFO  17:07:28,543 - #48 }
INFO  17:07:28,543 - #13 print
INFO  17:07:28,544 - #43 (
INFO  17:07:28,544 - #20 bodovi
INFO  17:07:28,544 - #44 )
INFO  17:07:28,544 - #40 ;
INFO  17:07:28,545 - #48 }
INFO  17:07:28,545 - #48 }
INFO  17:07:28,547 - 

================SINTAKSNO STABLO====================


INFO  17:07:28,548 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 bodovi
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     bodovi
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             0
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondSingle(
                    CondTermSingle(
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 bt
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermSingle]
                  ) [CondSingle]
                ) [IfCond]
                Stmt(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         bodovi
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                ) [Stmt]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     bodovi
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  17:07:28,550 - 

================SEMANTICKA OBRADA====================


INFO  17:07:28,567 - Deklarisana promenljiva 'bodovi' na liniji 7
INFO  17:07:28,568 - Deklarisana promenljiva 'bt' na liniji 8
INFO  17:07:28,568 - PROGRAM 0 na liniji 3
INFO  17:07:28,569 - ===================================
INFO  17:07:28,569 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  17:07:28,579 - Parsiranje uspesno zavrseno!
INFO  17:08:29,789 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:08:29,835 - #2 program
INFO  17:08:29,835 - #20 test301
INFO  17:08:29,835 - #47 {
INFO  17:08:29,836 - #16 void
INFO  17:08:29,836 - #20 main
INFO  17:08:29,836 - #43 (
INFO  17:08:29,836 - #44 )
INFO  17:08:29,837 - #20 int
INFO  17:08:29,837 - #20 bodovi
INFO  17:08:29,837 - #40 ;
INFO  17:08:29,837 - #20 bool
INFO  17:08:29,837 - #20 bt
INFO  17:08:29,838 - #40 ;
INFO  17:08:29,838 - #47 {
INFO  17:08:29,838 - #20 bodovi
INFO  17:08:29,838 - #37 =
INFO  17:08:29,838 - #21 0
INFO  17:08:29,838 - #40 ;
INFO  17:08:29,838 - #20 bt
INFO  17:08:29,839 - #37 =
INFO  17:08:29,839 - #23 false
INFO  17:08:29,839 - #40 ;
INFO  17:08:29,839 - #8 if
INFO  17:08:29,839 - #43 (
INFO  17:08:29,840 - #20 bt
INFO  17:08:29,840 - #44 )
INFO  17:08:29,841 - #47 {
INFO  17:08:29,841 - #20 bodovi
INFO  17:08:29,841 - #37 =
INFO  17:08:29,841 - #21 1
INFO  17:08:29,841 - #40 ;
INFO  17:08:29,841 - #48 }
INFO  17:08:29,841 - #6 else
INFO  17:08:29,842 - #47 {
INFO  17:08:29,842 - #20 bodovi
INFO  17:08:29,842 - #37 =
INFO  17:08:29,842 - #21 2
INFO  17:08:29,842 - #40 ;
INFO  17:08:29,842 - #48 }
INFO  17:08:29,842 - #13 print
INFO  17:08:29,842 - #43 (
INFO  17:08:29,842 - #20 bodovi
INFO  17:08:29,842 - #44 )
INFO  17:08:29,842 - #40 ;
INFO  17:08:29,842 - #48 }
INFO  17:08:29,842 - #48 }
INFO  17:08:29,844 - 

================SINTAKSNO STABLO====================


INFO  17:08:29,845 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 bodovi
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     bodovi
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             0
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           false
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIfElse(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondSingle(
                    CondTermSingle(
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 bt
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermSingle]
                  ) [CondSingle]
                ) [IfCond]
                Stmt(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         bodovi
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                ) [Stmt]
              ) [StmtIfBody]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       bodovi
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
            ) [StmtIfElse]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     bodovi
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  17:08:29,847 - 

================SEMANTICKA OBRADA====================


INFO  17:08:29,858 - Deklarisana promenljiva 'bodovi' na liniji 7
INFO  17:08:29,858 - Deklarisana promenljiva 'bt' na liniji 8
INFO  17:08:29,859 - PROGRAM 0 na liniji 3
INFO  17:08:29,859 - ===================================
INFO  17:08:29,859 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  17:08:29,867 - Parsiranje uspesno zavrseno!
INFO  17:21:28,176 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:21:28,248 - #2 program
INFO  17:21:28,248 - #20 test301
INFO  17:21:28,248 - #47 {
INFO  17:21:28,250 - #16 void
INFO  17:21:28,250 - #20 main
INFO  17:21:28,250 - #43 (
INFO  17:21:28,250 - #44 )
INFO  17:21:28,250 - #20 int
INFO  17:21:28,250 - #20 bodovi
INFO  17:21:28,251 - #40 ;
INFO  17:21:28,251 - #20 bool
INFO  17:21:28,251 - #20 bt
INFO  17:21:28,252 - #40 ;
INFO  17:21:28,252 - #47 {
INFO  17:21:28,252 - #20 bodovi
INFO  17:21:28,252 - #37 =
INFO  17:21:28,252 - #21 0
INFO  17:21:28,252 - #40 ;
INFO  17:21:28,254 - #20 bt
INFO  17:21:28,254 - #37 =
INFO  17:21:28,254 - #23 false
INFO  17:21:28,254 - #40 ;
INFO  17:21:28,254 - #8 if
INFO  17:21:28,255 - #43 (
INFO  17:21:28,257 - #20 bodovi
INFO  17:21:28,257 - #29 ==
INFO  17:21:28,257 - #21 0
INFO  17:21:28,258 - #44 )
INFO  17:21:28,258 - #47 {
INFO  17:21:28,259 - #20 bodovi
INFO  17:21:28,259 - #37 =
INFO  17:21:28,259 - #21 1
INFO  17:21:28,259 - #40 ;
INFO  17:21:28,259 - #48 }
INFO  17:21:28,259 - #13 print
INFO  17:21:28,260 - #43 (
INFO  17:21:28,260 - #20 bodovi
INFO  17:21:28,260 - #44 )
INFO  17:21:28,260 - #40 ;
INFO  17:21:28,260 - #48 }
INFO  17:21:28,260 - #48 }
INFO  17:21:28,261 - 

================SINTAKSNO STABLO====================


INFO  17:21:28,262 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 bodovi
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     bodovi
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             0
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           false
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondSingle(
                    CondTermSingle(
                      CondFactRelop(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 bodovi
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                        RelopEQ(
                        ) [RelopEQ]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               0
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactRelop]
                    ) [CondTermSingle]
                  ) [CondSingle]
                ) [IfCond]
                Stmt(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         bodovi
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                ) [Stmt]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     bodovi
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  17:21:28,266 - 

================SEMANTICKA OBRADA====================


INFO  17:21:28,281 - Deklarisana promenljiva 'bodovi' na liniji 7
INFO  17:21:28,282 - Deklarisana promenljiva 'bt' na liniji 8
INFO  17:21:28,282 - PROGRAM 0 na liniji 3
INFO  17:21:28,283 - ===================================
INFO  17:21:28,283 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  17:21:28,291 - Parsiranje uspesno zavrseno!
INFO  17:21:46,607 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:21:46,654 - #2 program
INFO  17:21:46,655 - #20 test301
INFO  17:21:46,655 - #47 {
INFO  17:21:46,655 - #16 void
INFO  17:21:46,656 - #20 main
INFO  17:21:46,656 - #43 (
INFO  17:21:46,656 - #44 )
INFO  17:21:46,656 - #20 int
INFO  17:21:46,656 - #20 bodovi
INFO  17:21:46,656 - #40 ;
INFO  17:21:46,657 - #20 bool
INFO  17:21:46,657 - #20 bt
INFO  17:21:46,657 - #40 ;
INFO  17:21:46,657 - #47 {
INFO  17:21:46,657 - #20 bodovi
INFO  17:21:46,657 - #37 =
INFO  17:21:46,657 - #21 0
INFO  17:21:46,657 - #40 ;
INFO  17:21:46,658 - #20 bt
INFO  17:21:46,658 - #37 =
INFO  17:21:46,658 - #23 false
INFO  17:21:46,658 - #40 ;
INFO  17:21:46,658 - #8 if
INFO  17:21:46,658 - #43 (
INFO  17:21:46,659 - #20 bodovi
INFO  17:21:46,659 - #32 >=
INFO  17:21:46,659 - #21 0
INFO  17:21:46,660 - #44 )
INFO  17:21:46,661 - #47 {
INFO  17:21:46,661 - #20 bodovi
INFO  17:21:46,661 - #37 =
INFO  17:21:46,661 - #21 1
INFO  17:21:46,661 - #40 ;
INFO  17:21:46,661 - #48 }
INFO  17:21:46,661 - #13 print
INFO  17:21:46,661 - #43 (
INFO  17:21:46,661 - #20 bodovi
INFO  17:21:46,661 - #44 )
INFO  17:21:46,661 - #40 ;
INFO  17:21:46,662 - #48 }
INFO  17:21:46,662 - #48 }
INFO  17:21:46,663 - 

================SINTAKSNO STABLO====================


INFO  17:21:46,664 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 bodovi
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     bodovi
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             0
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           false
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondSingle(
                    CondTermSingle(
                      CondFactRelop(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 bodovi
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                        RelopGE(
                        ) [RelopGE]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               0
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactRelop]
                    ) [CondTermSingle]
                  ) [CondSingle]
                ) [IfCond]
                Stmt(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         bodovi
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                ) [Stmt]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     bodovi
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  17:21:46,664 - 

================SEMANTICKA OBRADA====================


INFO  17:21:46,677 - Deklarisana promenljiva 'bodovi' na liniji 7
INFO  17:21:46,677 - Deklarisana promenljiva 'bt' na liniji 8
INFO  17:21:46,677 - PROGRAM 0 na liniji 3
INFO  17:21:46,678 - ===================================
INFO  17:21:46,678 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  17:21:46,685 - Parsiranje uspesno zavrseno!
INFO  17:22:08,815 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:22:08,872 - #2 program
INFO  17:22:08,872 - #20 test301
INFO  17:22:08,872 - #47 {
INFO  17:22:08,873 - #16 void
INFO  17:22:08,873 - #20 main
INFO  17:22:08,873 - #43 (
INFO  17:22:08,873 - #44 )
INFO  17:22:08,873 - #20 int
INFO  17:22:08,873 - #20 bodovi
INFO  17:22:08,874 - #40 ;
INFO  17:22:08,874 - #20 bool
INFO  17:22:08,874 - #20 bt
INFO  17:22:08,874 - #40 ;
INFO  17:22:08,874 - #47 {
INFO  17:22:08,875 - #20 bodovi
INFO  17:22:08,875 - #37 =
INFO  17:22:08,875 - #21 0
INFO  17:22:08,875 - #40 ;
INFO  17:22:08,875 - #20 bt
INFO  17:22:08,876 - #37 =
INFO  17:22:08,876 - #23 false
INFO  17:22:08,876 - #40 ;
INFO  17:22:08,876 - #8 if
INFO  17:22:08,876 - #43 (
INFO  17:22:08,879 - #20 bodovi
INFO  17:22:08,879 - #33 <
INFO  17:22:08,879 - #21 0
INFO  17:22:08,880 - #44 )
INFO  17:22:08,882 - #47 {
INFO  17:22:08,882 - #20 bodovi
INFO  17:22:08,882 - #37 =
INFO  17:22:08,882 - #21 1
INFO  17:22:08,882 - #40 ;
INFO  17:22:08,882 - #48 }
INFO  17:22:08,882 - #13 print
INFO  17:22:08,883 - #43 (
INFO  17:22:08,883 - #20 bodovi
INFO  17:22:08,883 - #44 )
INFO  17:22:08,883 - #40 ;
INFO  17:22:08,883 - #48 }
INFO  17:22:08,883 - #48 }
INFO  17:22:08,884 - 

================SINTAKSNO STABLO====================


INFO  17:22:08,886 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 bodovi
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     bodovi
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             0
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           false
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondSingle(
                    CondTermSingle(
                      CondFactRelop(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 bodovi
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                        RelopLT(
                        ) [RelopLT]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               0
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactRelop]
                    ) [CondTermSingle]
                  ) [CondSingle]
                ) [IfCond]
                Stmt(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         bodovi
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                ) [Stmt]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     bodovi
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  17:22:08,887 - 

================SEMANTICKA OBRADA====================


INFO  17:22:08,900 - Deklarisana promenljiva 'bodovi' na liniji 7
INFO  17:22:08,900 - Deklarisana promenljiva 'bt' na liniji 8
INFO  17:22:08,901 - PROGRAM 0 na liniji 3
INFO  17:22:08,901 - ===================================
INFO  17:22:08,901 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  17:22:08,907 - Parsiranje uspesno zavrseno!
INFO  17:22:54,455 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:22:54,501 - #2 program
INFO  17:22:54,501 - #20 test301
INFO  17:22:54,501 - #47 {
INFO  17:22:54,502 - #16 void
INFO  17:22:54,502 - #20 main
INFO  17:22:54,502 - #43 (
INFO  17:22:54,502 - #44 )
INFO  17:22:54,502 - #20 int
INFO  17:22:54,502 - #20 bodovi
INFO  17:22:54,502 - #40 ;
INFO  17:22:54,503 - #20 bool
INFO  17:22:54,503 - #20 bt
INFO  17:22:54,503 - #40 ;
INFO  17:22:54,503 - #47 {
INFO  17:22:54,503 - #20 bodovi
INFO  17:22:54,503 - #37 =
INFO  17:22:54,503 - #21 0
INFO  17:22:54,503 - #40 ;
INFO  17:22:54,504 - #20 bt
INFO  17:22:54,504 - #37 =
INFO  17:22:54,504 - #23 false
INFO  17:22:54,504 - #40 ;
INFO  17:22:54,505 - #8 if
INFO  17:22:54,505 - #43 (
INFO  17:22:54,505 - #20 bodovi
INFO  17:22:54,506 - #29 ==
INFO  17:22:54,506 - #21 0
INFO  17:22:54,507 - #44 )
INFO  17:22:54,507 - #47 {
INFO  17:22:54,507 - #20 bodovi
INFO  17:22:54,507 - #37 =
INFO  17:22:54,507 - #21 1
INFO  17:22:54,507 - #40 ;
INFO  17:22:54,507 - #8 if
INFO  17:22:54,508 - #43 (
INFO  17:22:54,508 - #20 bt
INFO  17:22:54,508 - #44 )
INFO  17:22:54,508 - #47 {
INFO  17:22:54,508 - #20 bodovi
INFO  17:22:54,508 - #37 =
INFO  17:22:54,508 - #21 2
INFO  17:22:54,508 - #40 ;
INFO  17:22:54,508 - #48 }
INFO  17:22:54,508 - #6 else
INFO  17:22:54,509 - #20 bodovi
INFO  17:22:54,509 - #37 =
INFO  17:22:54,509 - #21 3
INFO  17:22:54,509 - #40 ;
INFO  17:22:54,509 - #48 }
INFO  17:22:54,509 - #13 print
INFO  17:22:54,510 - #43 (
INFO  17:22:54,510 - #20 bodovi
INFO  17:22:54,510 - #44 )
INFO  17:22:54,510 - #40 ;
INFO  17:22:54,510 - #48 }
INFO  17:22:54,510 - #48 }
INFO  17:22:54,511 - 

================SINTAKSNO STABLO====================


INFO  17:22:54,513 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 bodovi
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     bodovi
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             0
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           false
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondSingle(
                    CondTermSingle(
                      CondFactRelop(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 bodovi
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                        RelopEQ(
                        ) [RelopEQ]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               0
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactRelop]
                    ) [CondTermSingle]
                  ) [CondSingle]
                ) [IfCond]
                Stmt(
                  StatementMulti(
                    StatementSingle(
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           bodovi
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   1
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementSingle]
                    StmtIfElse(
                      IfKeyword(
                      ) [IfKeyword]
                      StmtIfBody(
                        IfCond(
                          CondSingle(
                            CondTermSingle(
                              CondFactSingle(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         bt
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [CondFactSingle]
                            ) [CondTermSingle]
                          ) [CondSingle]
                        ) [IfCond]
                        Stmt(
                          StatementSingle(
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 bodovi
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         2
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementSingle]
                        ) [Stmt]
                      ) [StmtIfBody]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           bodovi
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   3
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StmtIfElse]
                  ) [StatementMulti]
                ) [Stmt]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     bodovi
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  17:22:54,515 - 

================SEMANTICKA OBRADA====================


INFO  17:22:54,526 - Deklarisana promenljiva 'bodovi' na liniji 7
INFO  17:22:54,526 - Deklarisana promenljiva 'bt' na liniji 8
INFO  17:22:54,527 - PROGRAM 0 na liniji 3
INFO  17:22:54,528 - ===================================
INFO  17:22:54,528 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  17:22:54,537 - Parsiranje uspesno zavrseno!
INFO  17:24:53,685 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:24:53,730 - #2 program
INFO  17:24:53,730 - #20 test301
INFO  17:24:53,731 - #47 {
INFO  17:24:53,731 - #16 void
INFO  17:24:53,731 - #20 main
INFO  17:24:53,731 - #43 (
INFO  17:24:53,732 - #44 )
INFO  17:24:53,732 - #20 int
INFO  17:24:53,732 - #20 x
INFO  17:24:53,732 - #41 ,
INFO  17:24:53,732 - #20 y
INFO  17:24:53,732 - #40 ;
INFO  17:24:53,732 - #20 bool
INFO  17:24:53,733 - #20 bt
INFO  17:24:53,733 - #40 ;
INFO  17:24:53,733 - #47 {
INFO  17:24:53,733 - #20 x
INFO  17:24:53,733 - #37 =
INFO  17:24:53,733 - #21 1
INFO  17:24:53,733 - #40 ;
INFO  17:24:53,734 - #20 y
INFO  17:24:53,734 - #37 =
INFO  17:24:53,734 - #21 1
INFO  17:24:53,734 - #40 ;
INFO  17:24:53,734 - #8 if
INFO  17:24:53,734 - #43 (
INFO  17:24:53,735 - #20 x
INFO  17:24:53,735 - #31 >
INFO  17:24:53,736 - #21 0
INFO  17:24:53,736 - #35 &&
INFO  17:24:53,737 - #20 y
INFO  17:24:53,737 - #33 <
INFO  17:24:53,737 - #21 2
INFO  17:24:53,737 - #44 )
INFO  17:24:53,737 - #20 x
INFO  17:24:53,737 - #37 =
INFO  17:24:53,737 - #21 2
INFO  17:24:53,737 - #40 ;
INFO  17:24:53,737 - #13 print
INFO  17:24:53,738 - #43 (
INFO  17:24:53,738 - #20 x
INFO  17:24:53,738 - #44 )
INFO  17:24:53,738 - #40 ;
INFO  17:24:53,738 - #48 }
INFO  17:24:53,738 - #48 }
INFO  17:24:53,739 - 

================SINTAKSNO STABLO====================


INFO  17:24:53,740 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarNormal(
                   x
                  ) [VarNormal]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   y
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondSingle(
                    CondTermAnd(
                      CondTermSingle(
                        CondFactRelop(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   x
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                          RelopGT(
                          ) [RelopGT]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 0
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactRelop]
                      ) [CondTermSingle]
                      CondFactRelop(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 y
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                        RelopLT(
                        ) [RelopLT]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactRelop]
                    ) [CondTermAnd]
                  ) [CondSingle]
                ) [IfCond]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             2
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  17:24:53,741 - 

================SEMANTICKA OBRADA====================


INFO  17:24:53,753 - Deklarisana promenljiva 'x' na liniji 7
INFO  17:24:53,753 - Deklarisana promenljiva 'y' na liniji 7
INFO  17:24:53,753 - Deklarisana promenljiva 'bt' na liniji 8
INFO  17:24:53,754 - PROGRAM 0 na liniji 3
INFO  17:24:53,754 - ===================================
INFO  17:24:53,755 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  17:24:53,761 - Parsiranje uspesno zavrseno!
INFO  17:25:42,613 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:25:42,668 - #2 program
INFO  17:25:42,668 - #20 test301
INFO  17:25:42,668 - #47 {
INFO  17:25:42,669 - #16 void
INFO  17:25:42,669 - #20 main
INFO  17:25:42,669 - #43 (
INFO  17:25:42,669 - #44 )
INFO  17:25:42,669 - #20 int
INFO  17:25:42,669 - #20 x
INFO  17:25:42,670 - #41 ,
INFO  17:25:42,670 - #20 y
INFO  17:25:42,670 - #40 ;
INFO  17:25:42,670 - #20 bool
INFO  17:25:42,670 - #20 bt
INFO  17:25:42,670 - #40 ;
INFO  17:25:42,671 - #47 {
INFO  17:25:42,671 - #20 x
INFO  17:25:42,671 - #37 =
INFO  17:25:42,671 - #21 1
INFO  17:25:42,671 - #40 ;
INFO  17:25:42,672 - #20 y
INFO  17:25:42,672 - #37 =
INFO  17:25:42,672 - #21 1
INFO  17:25:42,672 - #40 ;
INFO  17:25:42,672 - #8 if
INFO  17:25:42,672 - #43 (
INFO  17:25:42,674 - #20 x
INFO  17:25:42,674 - #32 >=
INFO  17:25:42,674 - #21 0
INFO  17:25:42,675 - #36 ||
INFO  17:25:42,676 - #20 y
INFO  17:25:42,676 - #34 <=
INFO  17:25:42,676 - #21 2
INFO  17:25:42,676 - #44 )
INFO  17:25:42,676 - #20 x
INFO  17:25:42,677 - #37 =
INFO  17:25:42,677 - #21 3
INFO  17:25:42,677 - #40 ;
INFO  17:25:42,677 - #13 print
INFO  17:25:42,677 - #43 (
INFO  17:25:42,677 - #20 x
INFO  17:25:42,677 - #44 )
INFO  17:25:42,677 - #40 ;
INFO  17:25:42,677 - #48 }
INFO  17:25:42,677 - #48 }
INFO  17:25:42,678 - 

================SINTAKSNO STABLO====================


INFO  17:25:42,681 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarNormal(
                   x
                  ) [VarNormal]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   y
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondOr(
                    CondSingle(
                      CondTermSingle(
                        CondFactRelop(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   x
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                          RelopGE(
                          ) [RelopGE]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 0
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactRelop]
                      ) [CondTermSingle]
                    ) [CondSingle]
                    CondTermSingle(
                      CondFactRelop(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 y
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                        RelopLE(
                        ) [RelopLE]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactRelop]
                    ) [CondTermSingle]
                  ) [CondOr]
                ) [IfCond]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             3
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  17:25:42,683 - 

================SEMANTICKA OBRADA====================


INFO  17:25:42,696 - Deklarisana promenljiva 'x' na liniji 7
INFO  17:25:42,697 - Deklarisana promenljiva 'y' na liniji 7
INFO  17:25:42,697 - Deklarisana promenljiva 'bt' na liniji 8
INFO  17:25:42,697 - PROGRAM 0 na liniji 3
INFO  17:25:42,698 - ===================================
INFO  17:25:42,698 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  17:25:42,706 - Parsiranje uspesno zavrseno!
INFO  17:28:04,850 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:28:04,900 - #2 program
INFO  17:28:04,900 - #20 test301
INFO  17:28:04,900 - #47 {
INFO  17:28:04,900 - #16 void
INFO  17:28:04,900 - #20 main
INFO  17:28:04,900 - #43 (
INFO  17:28:04,900 - #44 )
INFO  17:28:04,900 - #20 int
INFO  17:28:04,900 - #20 x
INFO  17:28:04,900 - #41 ,
INFO  17:28:04,901 - #20 y
INFO  17:28:04,901 - #40 ;
INFO  17:28:04,901 - #20 bool
INFO  17:28:04,901 - #20 bt
INFO  17:28:04,901 - #40 ;
INFO  17:28:04,901 - #47 {
INFO  17:28:04,901 - #20 x
INFO  17:28:04,902 - #37 =
INFO  17:28:04,902 - #21 1
INFO  17:28:04,902 - #40 ;
INFO  17:28:04,902 - #20 y
INFO  17:28:04,902 - #37 =
INFO  17:28:04,903 - #21 1
INFO  17:28:04,903 - #40 ;
INFO  17:28:04,903 - #8 if
INFO  17:28:04,903 - #43 (
INFO  17:28:04,904 - #20 x
INFO  17:28:04,904 - #30 !=
INFO  17:28:04,904 - #21 0
INFO  17:28:04,905 - #35 &&
INFO  17:28:04,906 - #20 y
INFO  17:28:04,906 - #31 >
INFO  17:28:04,906 - #21 2
INFO  17:28:04,906 - #36 ||
INFO  17:28:04,906 - #20 x
INFO  17:28:04,906 - #29 ==
INFO  17:28:04,906 - #21 1
INFO  17:28:04,907 - #44 )
INFO  17:28:04,907 - #20 x
INFO  17:28:04,907 - #37 =
INFO  17:28:04,907 - #21 4
INFO  17:28:04,907 - #40 ;
INFO  17:28:04,907 - #13 print
INFO  17:28:04,908 - #43 (
INFO  17:28:04,908 - #20 x
INFO  17:28:04,908 - #44 )
INFO  17:28:04,908 - #40 ;
INFO  17:28:04,908 - #48 }
INFO  17:28:04,908 - #48 }
INFO  17:28:04,909 - 

================SINTAKSNO STABLO====================


INFO  17:28:04,910 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarNormal(
                   x
                  ) [VarNormal]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   y
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondOr(
                    CondSingle(
                      CondTermAnd(
                        CondTermSingle(
                          CondFactRelop(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     x
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                            RelopNE(
                            ) [RelopNE]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   0
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactRelop]
                        ) [CondTermSingle]
                        CondFactRelop(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   y
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                          RelopGT(
                          ) [RelopGT]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 2
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactRelop]
                      ) [CondTermAnd]
                    ) [CondSingle]
                    CondTermSingle(
                      CondFactRelop(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 x
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                        RelopEQ(
                        ) [RelopEQ]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactRelop]
                    ) [CondTermSingle]
                  ) [CondOr]
                ) [IfCond]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             4
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  17:28:04,911 - 

================SEMANTICKA OBRADA====================


INFO  17:28:04,925 - Deklarisana promenljiva 'x' na liniji 7
INFO  17:28:04,925 - Deklarisana promenljiva 'y' na liniji 7
INFO  17:28:04,925 - Deklarisana promenljiva 'bt' na liniji 8
INFO  17:28:04,925 - PROGRAM 0 na liniji 3
INFO  17:28:04,926 - ===================================
INFO  17:28:04,926 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  17:28:04,933 - Parsiranje uspesno zavrseno!
INFO  22:43:51,109 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:43:51,167 - #2 program
INFO  22:43:51,167 - #20 test301
INFO  22:43:51,167 - #47 {
INFO  22:43:51,168 - #16 void
INFO  22:43:51,169 - #20 main
INFO  22:43:51,169 - #43 (
INFO  22:43:51,169 - #44 )
INFO  22:43:51,169 - #20 int
INFO  22:43:51,169 - #20 x
INFO  22:43:51,170 - #41 ,
INFO  22:43:51,170 - #20 y
INFO  22:43:51,170 - #40 ;
INFO  22:43:51,170 - #20 bool
INFO  22:43:51,171 - #20 bt
INFO  22:43:51,171 - #40 ;
INFO  22:43:51,171 - #47 {
INFO  22:43:51,171 - #20 x
INFO  22:43:51,171 - #37 =
INFO  22:43:51,172 - #21 1
INFO  22:43:51,172 - #40 ;
INFO  22:43:51,172 - #20 y
INFO  22:43:51,173 - #37 =
INFO  22:43:51,173 - #21 1
INFO  22:43:51,173 - #40 ;
INFO  22:43:51,173 - #8 if
INFO  22:43:51,173 - #43 (
INFO  22:43:51,176 - #20 x
INFO  22:43:51,176 - #30 !=
INFO  22:43:51,176 - #21 0
INFO  22:43:51,177 - #35 &&
INFO  22:43:51,177 - #20 y
INFO  22:43:51,177 - #31 >
INFO  22:43:51,177 - #21 2
INFO  22:43:51,178 - #36 ||
INFO  22:43:51,178 - #20 x
INFO  22:43:51,178 - #29 ==
INFO  22:43:51,178 - #21 1
INFO  22:43:51,179 - #44 )
INFO  22:43:51,179 - #20 x
INFO  22:43:51,179 - #37 =
INFO  22:43:51,179 - #21 4
INFO  22:43:51,179 - #40 ;
INFO  22:43:51,179 - #13 print
INFO  22:43:51,179 - #43 (
INFO  22:43:51,179 - #20 x
INFO  22:43:51,180 - #44 )
INFO  22:43:51,180 - #40 ;
INFO  22:43:51,180 - #48 }
INFO  22:43:51,180 - #48 }
INFO  22:43:51,181 - 

================SINTAKSNO STABLO====================


INFO  22:43:51,182 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarNormal(
                   x
                  ) [VarNormal]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   y
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondOr(
                    CondSingle(
                      CondTermAnd(
                        CondTermSingle(
                          CondFactRelop(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     x
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                            RelopNE(
                            ) [RelopNE]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   0
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactRelop]
                        ) [CondTermSingle]
                        CondFactRelop(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   y
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                          RelopGT(
                          ) [RelopGT]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 2
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactRelop]
                      ) [CondTermAnd]
                    ) [CondSingle]
                    CondTermSingle(
                      CondFactRelop(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 x
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                        RelopEQ(
                        ) [RelopEQ]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactRelop]
                    ) [CondTermSingle]
                  ) [CondOr]
                ) [IfCond]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             4
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:43:51,183 - 

================SEMANTICKA OBRADA====================


INFO  22:43:51,194 - Deklarisana promenljiva 'x' na liniji 7
INFO  22:43:51,194 - Deklarisana promenljiva 'y' na liniji 7
INFO  22:43:51,194 - Deklarisana promenljiva 'bt' na liniji 8
INFO  22:43:51,195 - ===================================
INFO  22:43:51,195 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  22:45:04,222 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:45:04,283 - #2 program
INFO  22:45:04,283 - #20 test301
INFO  22:45:04,283 - #47 {
INFO  22:45:04,284 - #16 void
INFO  22:45:04,284 - #20 main
INFO  22:45:04,284 - #43 (
INFO  22:45:04,284 - #44 )
INFO  22:45:04,284 - #20 int
INFO  22:45:04,284 - #20 x
INFO  22:45:04,285 - #41 ,
INFO  22:45:04,285 - #20 y
INFO  22:45:04,285 - #40 ;
INFO  22:45:04,285 - #20 bool
INFO  22:45:04,285 - #20 bt
INFO  22:45:04,285 - #40 ;
INFO  22:45:04,285 - #47 {
INFO  22:45:04,286 - #20 x
INFO  22:45:04,286 - #37 =
INFO  22:45:04,286 - #21 1
INFO  22:45:04,286 - #40 ;
INFO  22:45:04,287 - #20 y
INFO  22:45:04,287 - #37 =
INFO  22:45:04,287 - #21 1
INFO  22:45:04,287 - #40 ;
INFO  22:45:04,287 - #8 if
INFO  22:45:04,287 - #43 (
INFO  22:45:04,289 - #20 x
INFO  22:45:04,290 - #30 !=
INFO  22:45:04,290 - #21 0
INFO  22:45:04,291 - #35 &&
INFO  22:45:04,291 - #20 y
INFO  22:45:04,291 - #31 >
INFO  22:45:04,291 - #21 2
INFO  22:45:04,291 - #36 ||
INFO  22:45:04,292 - #20 x
INFO  22:45:04,292 - #29 ==
INFO  22:45:04,292 - #21 1
INFO  22:45:04,292 - #44 )
INFO  22:45:04,292 - #20 x
INFO  22:45:04,292 - #37 =
INFO  22:45:04,293 - #21 4
INFO  22:45:04,293 - #40 ;
INFO  22:45:04,293 - #13 print
INFO  22:45:04,293 - #43 (
INFO  22:45:04,293 - #20 x
INFO  22:45:04,293 - #44 )
INFO  22:45:04,294 - #40 ;
INFO  22:45:04,294 - #48 }
INFO  22:45:04,294 - #48 }
INFO  22:45:04,295 - 

================SINTAKSNO STABLO====================


INFO  22:45:04,297 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarNormal(
                   x
                  ) [VarNormal]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   y
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondOr(
                    CondSingle(
                      CondTermAnd(
                        CondTermSingle(
                          CondFactRelop(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     x
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                            RelopNE(
                            ) [RelopNE]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   0
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactRelop]
                        ) [CondTermSingle]
                        CondFactRelop(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   y
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                          RelopGT(
                          ) [RelopGT]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 2
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactRelop]
                      ) [CondTermAnd]
                    ) [CondSingle]
                    CondTermSingle(
                      CondFactRelop(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 x
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                        RelopEQ(
                        ) [RelopEQ]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactRelop]
                    ) [CondTermSingle]
                  ) [CondOr]
                ) [IfCond]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             4
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:45:04,298 - 

================SEMANTICKA OBRADA====================


INFO  22:45:04,313 - Deklarisana promenljiva 'x' na liniji 7
INFO  22:45:04,313 - Deklarisana promenljiva 'y' na liniji 7
INFO  22:45:04,313 - Deklarisana promenljiva 'bt' na liniji 8
INFO  22:45:04,315 - ===================================
INFO  22:45:04,315 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  22:45:04,323 - Parsiranje uspesno zavrseno!
INFO  22:49:00,077 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:49:00,123 - #2 program
INFO  22:49:00,123 - #20 test301
INFO  22:49:00,123 - #47 {
INFO  22:49:00,124 - #16 void
INFO  22:49:00,124 - #20 main
INFO  22:49:00,124 - #43 (
INFO  22:49:00,124 - #44 )
INFO  22:49:00,124 - #20 int
INFO  22:49:00,124 - #20 x
INFO  22:49:00,124 - #41 ,
INFO  22:49:00,125 - #20 y
INFO  22:49:00,125 - #40 ;
INFO  22:49:00,125 - #20 bool
INFO  22:49:00,125 - #20 bt
INFO  22:49:00,125 - #40 ;
INFO  22:49:00,125 - #47 {
INFO  22:49:00,125 - #20 x
INFO  22:49:00,125 - #37 =
INFO  22:49:00,125 - #21 1
INFO  22:49:00,125 - #40 ;
INFO  22:49:00,126 - #20 y
INFO  22:49:00,126 - #37 =
INFO  22:49:00,126 - #21 1
INFO  22:49:00,126 - #40 ;
INFO  22:49:00,126 - #8 if
INFO  22:49:00,127 - #43 (
INFO  22:49:00,128 - #20 x
INFO  22:49:00,128 - #30 !=
INFO  22:49:00,128 - #21 0
INFO  22:49:00,129 - #35 &&
INFO  22:49:00,129 - #20 y
INFO  22:49:00,129 - #31 >
INFO  22:49:00,129 - #21 2
INFO  22:49:00,129 - #36 ||
INFO  22:49:00,130 - #20 x
INFO  22:49:00,130 - #29 ==
INFO  22:49:00,130 - #21 1
INFO  22:49:00,130 - #44 )
INFO  22:49:00,130 - #20 x
INFO  22:49:00,130 - #37 =
INFO  22:49:00,131 - #21 4
INFO  22:49:00,131 - #40 ;
INFO  22:49:00,131 - #13 print
INFO  22:49:00,131 - #43 (
INFO  22:49:00,131 - #20 x
INFO  22:49:00,131 - #44 )
INFO  22:49:00,131 - #40 ;
INFO  22:49:00,131 - #20 x
INFO  22:49:00,131 - #41 ,
ERROR 22:49:00,131 - 
Sintaksna greska na liniji 16, koloni 3 za simbol ","!
INFO  22:49:00,132 - #20 y
INFO  22:49:00,132 - #40 ;
INFO  22:49:00,132 - #48 }
INFO  22:49:00,132 - #48 }
ERROR 22:49:00,132 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 18, koloni 1!
INFO  22:50:22,908 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:50:22,961 - #2 program
INFO  22:50:22,961 - #20 test301
INFO  22:50:22,961 - #47 {
INFO  22:50:22,963 - #20 int
INFO  22:50:22,963 - #20 fun
INFO  22:50:22,964 - #43 (
INFO  22:50:22,964 - #44 )
INFO  22:50:22,964 - #47 {
INFO  22:50:22,964 - #15 return
INFO  22:50:22,965 - #21 1
INFO  22:50:22,965 - #40 ;
INFO  22:50:22,965 - #48 }
INFO  22:50:22,966 - #16 void
INFO  22:50:22,966 - #20 main
INFO  22:50:22,966 - #43 (
INFO  22:50:22,966 - #44 )
INFO  22:50:22,966 - #20 int
INFO  22:50:22,966 - #20 x
INFO  22:50:22,966 - #41 ,
INFO  22:50:22,967 - #20 y
INFO  22:50:22,967 - #40 ;
INFO  22:50:22,967 - #20 bool
INFO  22:50:22,967 - #20 bt
INFO  22:50:22,967 - #40 ;
INFO  22:50:22,968 - #47 {
INFO  22:50:22,968 - #20 x
INFO  22:50:22,968 - #37 =
INFO  22:50:22,968 - #21 1
INFO  22:50:22,968 - #40 ;
INFO  22:50:22,968 - #20 y
INFO  22:50:22,969 - #37 =
INFO  22:50:22,969 - #21 1
INFO  22:50:22,969 - #40 ;
INFO  22:50:22,969 - #8 if
INFO  22:50:22,969 - #43 (
INFO  22:50:22,970 - #20 x
INFO  22:50:22,970 - #30 !=
INFO  22:50:22,970 - #21 0
INFO  22:50:22,971 - #35 &&
INFO  22:50:22,972 - #20 y
INFO  22:50:22,972 - #31 >
INFO  22:50:22,972 - #21 2
INFO  22:50:22,972 - #36 ||
INFO  22:50:22,973 - #20 x
INFO  22:50:22,973 - #29 ==
INFO  22:50:22,973 - #21 1
INFO  22:50:22,973 - #44 )
INFO  22:50:22,974 - #20 x
INFO  22:50:22,974 - #37 =
INFO  22:50:22,974 - #21 4
INFO  22:50:22,974 - #40 ;
INFO  22:50:22,974 - #13 print
INFO  22:50:22,975 - #43 (
INFO  22:50:22,975 - #20 x
INFO  22:50:22,975 - #44 )
INFO  22:50:22,975 - #40 ;
INFO  22:50:22,975 - #48 }
INFO  22:50:22,975 - #48 }
INFO  22:50:22,976 - 

================SINTAKSNO STABLO====================


INFO  22:50:22,978 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType6(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType6]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarNormal(
                   x
                  ) [VarNormal]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   y
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondOr(
                    CondSingle(
                      CondTermAnd(
                        CondTermSingle(
                          CondFactRelop(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     x
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                            RelopNE(
                            ) [RelopNE]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   0
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactRelop]
                        ) [CondTermSingle]
                        CondFactRelop(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   y
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                          RelopGT(
                          ) [RelopGT]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 2
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactRelop]
                      ) [CondTermAnd]
                    ) [CondSingle]
                    CondTermSingle(
                      CondFactRelop(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 x
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                        RelopEQ(
                        ) [RelopEQ]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactRelop]
                    ) [CondTermSingle]
                  ) [CondOr]
                ) [IfCond]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             4
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  22:50:22,978 - 

================SEMANTICKA OBRADA====================


INFO  22:50:22,995 - Deklarisana promenljiva 'x' na liniji 12
INFO  22:50:22,995 - Deklarisana promenljiva 'y' na liniji 12
INFO  22:50:22,996 - Deklarisana promenljiva 'bt' na liniji 13
INFO  22:50:22,997 - ===================================
INFO  22:50:22,998 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  22:50:23,007 - Parsiranje uspesno zavrseno!
INFO  22:58:37,673 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:58:37,721 - #2 program
INFO  22:58:37,721 - #20 test301
INFO  22:58:37,721 - #47 {
INFO  22:58:37,722 - #16 void
INFO  22:58:37,722 - #20 main
INFO  22:58:37,722 - #43 (
INFO  22:58:37,722 - #44 )
INFO  22:58:37,722 - #20 int
INFO  22:58:37,722 - #20 x
INFO  22:58:37,723 - #41 ,
INFO  22:58:37,723 - #20 y
INFO  22:58:37,723 - #40 ;
INFO  22:58:37,723 - #20 bool
INFO  22:58:37,723 - #20 bt
INFO  22:58:37,723 - #40 ;
INFO  22:58:37,724 - #20 int
INFO  22:58:37,724 - #20 niz
INFO  22:58:37,724 - #45 [
INFO  22:58:37,724 - #46 ]
INFO  22:58:37,724 - #40 ;
INFO  22:58:37,724 - #47 {
INFO  22:58:37,724 - #20 x
INFO  22:58:37,724 - #37 =
INFO  22:58:37,725 - #21 1
INFO  22:58:37,725 - #40 ;
INFO  22:58:37,725 - #20 y
INFO  22:58:37,726 - #37 =
INFO  22:58:37,726 - #21 1
INFO  22:58:37,726 - #40 ;
INFO  22:58:37,727 - #20 niz
INFO  22:58:37,727 - #37 =
INFO  22:58:37,727 - #12 new
INFO  22:58:37,727 - #20 int
INFO  22:58:37,727 - #45 [
INFO  22:58:37,727 - #21 2
INFO  22:58:37,727 - #46 ]
INFO  22:58:37,727 - #40 ;
INFO  22:58:37,727 - #20 niz
INFO  22:58:37,728 - #45 [
INFO  22:58:37,728 - #21 0
INFO  22:58:37,728 - #46 ]
INFO  22:58:37,728 - #37 =
INFO  22:58:37,728 - #21 1
INFO  22:58:37,728 - #40 ;
INFO  22:58:37,728 - #20 niz
INFO  22:58:37,728 - #45 [
INFO  22:58:37,728 - #21 0
INFO  22:58:37,728 - #46 ]
INFO  22:58:37,729 - #38 ++
INFO  22:58:37,729 - #40 ;
INFO  22:58:37,729 - #13 print
INFO  22:58:37,729 - #43 (
INFO  22:58:37,729 - #20 niz
INFO  22:58:37,729 - #45 [
INFO  22:58:37,729 - #21 0
INFO  22:58:37,729 - #46 ]
INFO  22:58:37,729 - #44 )
INFO  22:58:37,729 - #40 ;
INFO  22:58:37,729 - #48 }
INFO  22:58:37,729 - #48 }
INFO  22:58:37,730 - 

================SINTAKSNO STABLO====================


INFO  22:58:37,732 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     niz
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNewArray(
                              Type(
                               int
                              ) [Type]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [FactorNewArray]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   niz
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           0
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorArray(
                 niz
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         0
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [DesignatorArray]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorArray(
                     niz
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             0
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [DesignatorArray]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:58:37,734 - 

================SEMANTICKA OBRADA====================


INFO  22:58:37,745 - Deklarisana promenljiva 'x' na liniji 8
INFO  22:58:37,745 - Deklarisana promenljiva 'y' na liniji 8
INFO  22:58:37,745 - Deklarisana promenljiva 'bt' na liniji 9
INFO  22:58:37,745 - Deklarisan niz 'niz' na liniji 10
INFO  22:58:37,745 - Pristup elementu niza 'niz' na liniji 18
INFO  22:58:37,745 - Pristup elementu niza 'niz' na liniji 19
INFO  22:58:37,745 - Pristup elementu niza 'niz' na liniji 20
INFO  22:58:37,746 - ===================================
INFO  22:58:37,746 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  22:58:37,752 - Parsiranje uspesno zavrseno!
