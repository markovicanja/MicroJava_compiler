ERROR 15:50:36,236 - Nema dovoljno argumenata! ( Ocekivani ulaz: <ulaz>.mj <izlaz>.obj )
INFO  15:54:04,137 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:54:04,186 - #2 program
INFO  15:54:04,186 - #20 p
INFO  15:54:04,186 - #7 const
INFO  15:54:04,187 - #20 int
INFO  15:54:04,187 - #20 size
INFO  15:54:04,188 - #37 =
INFO  15:54:04,188 - #21 10
INFO  15:54:04,188 - #40 ;
INFO  15:54:04,188 - #4 class
INFO  15:54:04,189 - #20 Table
INFO  15:54:04,189 - #47 {
INFO  15:54:04,189 - #20 int
INFO  15:54:04,189 - #20 pos
INFO  15:54:04,189 - #45 [
INFO  15:54:04,189 - #46 ]
INFO  15:54:04,189 - #41 ,
INFO  15:54:04,189 - #20 neg
INFO  15:54:04,189 - #45 [
INFO  15:54:04,190 - #46 ]
INFO  15:54:04,190 - #40 ;
INFO  15:54:04,190 - #47 {
INFO  15:54:04,190 - #16 void
INFO  15:54:04,190 - #20 putp
INFO  15:54:04,190 - #43 (
INFO  15:54:04,190 - #20 int
INFO  15:54:04,190 - #20 a
INFO  15:54:04,190 - #41 ,
INFO  15:54:04,191 - #20 int
INFO  15:54:04,191 - #20 idx
INFO  15:54:04,191 - #44 )
INFO  15:54:04,191 - #47 {
INFO  15:54:04,191 - #20 this
INFO  15:54:04,191 - #42 .
ERROR 15:54:04,191 - 
Sintaksna greska na liniji 7, koloni 36 za simbol "."!
INFO  15:54:04,191 - #20 pos
INFO  15:54:04,191 - #45 [
INFO  15:54:04,191 - #20 idx
INFO  15:54:04,192 - #46 ]
INFO  15:54:04,192 - #37 =
INFO  15:54:04,192 - #20 a
INFO  15:54:04,192 - #40 ;
INFO  15:54:04,192 - #48 }
INFO  15:54:04,192 - #16 void
INFO  15:54:04,192 - #20 putn
INFO  15:54:04,192 - #43 (
INFO  15:54:04,193 - #20 int
INFO  15:54:04,193 - #20 a
INFO  15:54:04,193 - #41 ,
INFO  15:54:04,193 - #20 int
INFO  15:54:04,193 - #20 idx
INFO  15:54:04,193 - #44 )
ERROR 15:54:04,193 - Oporavak od greske u definiciji formalnih parametara funkcije na liniji 7, koloni 36 za simbol "."!
INFO  15:54:04,194 - #47 {
INFO  15:54:04,194 - #20 this
INFO  15:54:04,194 - #42 .
ERROR 15:54:04,194 - 
Sintaksna greska na liniji 8, koloni 36 za simbol "."!
INFO  15:54:04,194 - #20 neg
INFO  15:54:04,194 - #45 [
INFO  15:54:04,194 - #20 idx
INFO  15:54:04,194 - #46 ]
INFO  15:54:04,194 - #37 =
INFO  15:54:04,194 - #20 a
INFO  15:54:04,194 - #40 ;
INFO  15:54:04,194 - #48 }
INFO  15:54:04,195 - #20 int
INFO  15:54:04,195 - #20 getp
INFO  15:54:04,195 - #43 (
INFO  15:54:04,195 - #20 int
INFO  15:54:04,195 - #20 idx
INFO  15:54:04,195 - #44 )
INFO  15:54:04,195 - #47 {
INFO  15:54:04,195 - #15 return
INFO  15:54:04,195 - #20 pos
ERROR 15:54:04,195 - Oporavak od greske u definiciji formalnih parametara funkcije na liniji 8, koloni 36 za simbol "."!
INFO  15:54:04,195 - #45 [
INFO  15:54:04,195 - #20 idx
INFO  15:54:04,195 - #46 ]
INFO  15:54:04,196 - #40 ;
INFO  15:54:04,196 - #48 }
INFO  15:54:04,197 - #20 int
INFO  15:54:04,197 - #20 getn
INFO  15:54:04,197 - #43 (
INFO  15:54:04,197 - #20 int
INFO  15:54:04,197 - #20 idx
INFO  15:54:04,198 - #44 )
INFO  15:54:04,198 - #47 {
INFO  15:54:04,198 - #15 return
INFO  15:54:04,198 - #20 neg
INFO  15:54:04,198 - #45 [
INFO  15:54:04,198 - #20 idx
INFO  15:54:04,198 - #46 ]
INFO  15:54:04,198 - #40 ;
INFO  15:54:04,199 - #48 }
INFO  15:54:04,199 - #48 }
INFO  15:54:04,199 - #48 }
INFO  15:54:04,199 - #20 Table
INFO  15:54:04,200 - #20 val
INFO  15:54:04,200 - #40 ;
INFO  15:54:04,200 - #47 {
INFO  15:54:04,200 - #16 void
INFO  15:54:04,200 - #20 f
INFO  15:54:04,201 - #43 (
INFO  15:54:04,201 - #20 char
INFO  15:54:04,201 - #20 ch
INFO  15:54:04,201 - #41 ,
INFO  15:54:04,201 - #20 int
INFO  15:54:04,201 - #20 a
INFO  15:54:04,201 - #41 ,
INFO  15:54:04,201 - #20 int
INFO  15:54:04,201 - #20 arg
INFO  15:54:04,201 - #44 )
INFO  15:54:04,201 - #20 int
INFO  15:54:04,201 - #20 x
INFO  15:54:04,201 - #40 ;
INFO  15:54:04,202 - #47 {
INFO  15:54:04,202 - #20 x
INFO  15:54:04,202 - #37 =
INFO  15:54:04,202 - #20 arg
INFO  15:54:04,202 - #40 ;
INFO  15:54:04,202 - #48 }
INFO  15:54:04,202 - #16 void
INFO  15:54:04,202 - #20 main
INFO  15:54:04,202 - #43 (
INFO  15:54:04,203 - #44 )
INFO  15:54:04,203 - #20 int
INFO  15:54:04,203 - #20 x
INFO  15:54:04,203 - #41 ,
INFO  15:54:04,203 - #20 i
INFO  15:54:04,203 - #40 ;
INFO  15:54:04,203 - #20 char
INFO  15:54:04,203 - #20 c
INFO  15:54:04,203 - #40 ;
INFO  15:54:04,203 - #47 {
INFO  15:54:04,203 - #20 val
INFO  15:54:04,203 - #37 =
INFO  15:54:04,204 - #12 new
INFO  15:54:04,204 - #20 Table
INFO  15:54:04,204 - #40 ;
INFO  15:54:04,204 - #20 val
INFO  15:54:04,204 - #37 =
INFO  15:54:04,204 - #12 new
INFO  15:54:04,204 - #20 int
INFO  15:54:04,204 - #45 [
INFO  15:54:04,204 - #20 size
INFO  15:54:04,204 - #46 ]
INFO  15:54:04,204 - #40 ;
INFO  15:54:04,204 - #20 val
INFO  15:54:04,205 - #37 =
INFO  15:54:04,205 - #12 new
INFO  15:54:04,207 - #20 int
INFO  15:54:04,207 - #45 [
INFO  15:54:04,207 - #20 size
INFO  15:54:04,207 - #46 ]
INFO  15:54:04,207 - #40 ;
INFO  15:54:04,207 - #20 i
INFO  15:54:04,207 - #37 =
INFO  15:54:04,207 - #21 0
INFO  15:54:04,207 - #40 ;
INFO  15:54:04,207 - #10 do
INFO  15:54:04,207 - #47 {
INFO  15:54:04,208 - #20 putp
INFO  15:54:04,208 - #43 (
INFO  15:54:04,208 - #21 0
INFO  15:54:04,208 - #41 ,
INFO  15:54:04,208 - #20 i
INFO  15:54:04,209 - #44 )
INFO  15:54:04,209 - #40 ;
INFO  15:54:04,209 - #20 putn
INFO  15:54:04,209 - #43 (
INFO  15:54:04,209 - #21 0
INFO  15:54:04,209 - #41 ,
INFO  15:54:04,209 - #20 i
INFO  15:54:04,209 - #44 )
INFO  15:54:04,209 - #40 ;
INFO  15:54:04,209 - #20 i
INFO  15:54:04,209 - #38 ++
INFO  15:54:04,209 - #40 ;
INFO  15:54:04,209 - #48 }
INFO  15:54:04,209 - #11 while
INFO  15:54:04,210 - #43 (
INFO  15:54:04,210 - #20 i
INFO  15:54:04,210 - #33 <
INFO  15:54:04,210 - #20 size
INFO  15:54:04,211 - #44 )
INFO  15:54:04,211 - #40 ;
INFO  15:54:04,211 - #20 f
INFO  15:54:04,211 - #43 (
INFO  15:54:04,211 - #20 c
INFO  15:54:04,212 - #41 ,
INFO  15:54:04,212 - #20 x
INFO  15:54:04,212 - #41 ,
INFO  15:54:04,212 - #20 i
INFO  15:54:04,212 - #44 )
INFO  15:54:04,212 - #40 ;
INFO  15:54:04,212 - #14 read
INFO  15:54:04,212 - #43 (
INFO  15:54:04,212 - #20 x
INFO  15:54:04,212 - #44 )
INFO  15:54:04,212 - #40 ;
INFO  15:54:04,212 - #10 do
INFO  15:54:04,212 - #47 {
INFO  15:54:04,212 - #8 if
INFO  15:54:04,212 - #43 (
INFO  15:54:04,212 - #20 x
INFO  15:54:04,212 - #34 <=
INFO  15:54:04,212 - #21 0
INFO  15:54:04,213 - #44 )
INFO  15:54:04,213 - #3 break
INFO  15:54:04,213 - #40 ;
INFO  15:54:04,213 - #8 if
INFO  15:54:04,214 - #43 (
INFO  15:54:04,214 - #21 0
INFO  15:54:04,214 - #34 <=
INFO  15:54:04,214 - #20 x
INFO  15:54:04,214 - #35 &&
INFO  15:54:04,214 - #20 x
INFO  15:54:04,214 - #33 <
INFO  15:54:04,214 - #20 size
INFO  15:54:04,214 - #44 )
INFO  15:54:04,215 - #47 {
INFO  15:54:04,215 - #20 putp
INFO  15:54:04,215 - #43 (
INFO  15:54:04,215 - #20 getp
INFO  15:54:04,215 - #43 (
INFO  15:54:04,215 - #20 x
INFO  15:54:04,215 - #44 )
INFO  15:54:04,215 - #24 +
INFO  15:54:04,215 - #21 1
INFO  15:54:04,216 - #44 )
INFO  15:54:04,216 - #40 ;
INFO  15:54:04,216 - #48 }
INFO  15:54:04,216 - #6 else
INFO  15:54:04,216 - #8 if
INFO  15:54:04,216 - #43 (
INFO  15:54:04,216 - #20 size
INFO  15:54:04,216 - #33 <
INFO  15:54:04,216 - #20 x
INFO  15:54:04,216 - #35 &&
INFO  15:54:04,216 - #20 x
INFO  15:54:04,216 - #33 <
INFO  15:54:04,216 - #21 0
INFO  15:54:04,216 - #44 )
INFO  15:54:04,216 - #47 {
INFO  15:54:04,216 - #20 putn
INFO  15:54:04,216 - #43 (
INFO  15:54:04,216 - #20 getn
INFO  15:54:04,216 - #43 (
INFO  15:54:04,217 - #20 x
INFO  15:54:04,217 - #44 )
INFO  15:54:04,217 - #24 +
INFO  15:54:04,217 - #21 1
INFO  15:54:04,217 - #44 )
INFO  15:54:04,217 - #40 ;
INFO  15:54:04,217 - #48 }
INFO  15:54:04,217 - #14 read
INFO  15:54:04,217 - #43 (
INFO  15:54:04,218 - #20 x
INFO  15:54:04,218 - #44 )
INFO  15:54:04,218 - #40 ;
INFO  15:54:04,218 - #48 }
INFO  15:54:04,218 - #11 while
INFO  15:54:04,218 - #43 (
INFO  15:54:04,218 - #23 true
INFO  15:54:04,218 - #44 )
INFO  15:54:04,218 - #40 ;
INFO  15:54:04,218 - #13 print
INFO  15:54:04,218 - #43 (
INFO  15:54:04,218 - #20 x
INFO  15:54:04,219 - #49 ?
INFO  15:54:04,219 - #22 -
INFO  15:54:04,219 - #50 :
INFO  15:54:04,219 - #22 +
INFO  15:54:04,219 - #44 )
INFO  15:54:04,219 - #40 ;
INFO  15:54:04,219 - #48 }
INFO  15:54:04,219 - #48 }
INFO  15:54:04,220 - 

================SINTAKSNO STABLO====================


INFO  15:54:04,224 - Program(
  ProgName(
   p
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               size
                NumConst(
                 10
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartClassDeclaration(
        ClassDecl1(
         Table
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   pos
                  ) [VarArray]
                ) [VarSingle]
                VarArray(
                 neg
                ) [VarArray]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          MethodDecMulti(
            MethodDeclSingle(
              MethodVoidDeclaration(
                MethodVoid2(
                  MethodVoidName(
                   putp
                  ) [MethodVoidName]
                  ParamSingle(
                    ParamError(
                    ) [ParamError]
                  ) [ParamSingle]
                  StatementSingle(
                    StmtReturnExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorArray(
                               pos
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         idx
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [DesignatorArray]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [StmtReturnExpr]
                  ) [StatementSingle]
                ) [MethodVoid2]
              ) [MethodVoidDeclaration]
            ) [MethodDeclSingle]
            MethodTypeDeclaration(
              MethodType2(
                MethodTypeName(
                  Type(
                   int
                  ) [Type]
                 getn
                ) [MethodTypeName]
                ParamSingle(
                  ParamNormal(
                    Type(
                     int
                    ) [Type]
                   idx
                  ) [ParamNormal]
                ) [ParamSingle]
                StatementSingle(
                  StmtReturnExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorArray(
                             neg
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       idx
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [DesignatorArray]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [StmtReturnExpr]
                ) [StatementSingle]
              ) [MethodType2]
            ) [MethodTypeDeclaration]
          ) [MethodDecMulti]
        ) [ClassDecl1]
      ) [PartClassDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         Table
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           val
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodVoidDeclaration(
        MethodVoid0(
          MethodVoidName(
           f
          ) [MethodVoidName]
          ParamMulti(
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   char
                  ) [Type]
                 ch
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               a
              ) [ParamNormal]
            ) [ParamMulti]
            ParamNormal(
              Type(
               int
              ) [Type]
             arg
            ) [ParamNormal]
          ) [ParamMulti]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 x
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           arg
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
        ) [MethodVoid0]
      ) [MethodVoidDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarNormal(
                   x
                  ) [VarNormal]
                ) [VarSingle]
                VarNormal(
                 i
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               c
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementSingle(
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               val
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNew(
                                        Type(
                                         Table
                                        ) [Type]
                                      ) [FactorNew]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementSingle]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             val
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNewArray(
                                      Type(
                                       int
                                      ) [Type]
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorDesignator(
                                              DesignatorSimple(
                                               size
                                              ) [DesignatorSimple]
                                            ) [FactorDesignator]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [FactorNewArray]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           val
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNewArray(
                                    Type(
                                     int
                                    ) [Type]
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorSimple(
                                             size
                                            ) [DesignatorSimple]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [FactorNewArray]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         i
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 0
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDoWhile(
                    DoHead(
                    ) [DoHead]
                    Stmt(
                      StatementMulti(
                        StatementMulti(
                          StatementSingle(
                            StmtDesign(
                              DesignatorMethodCallParams(
                                DesignatorSimple(
                                 putp
                                ) [DesignatorSimple]
                                ActParsMulti(
                                  ActParsSingle(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           0
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [ActParsSingle]
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorSimple(
                                           i
                                          ) [DesignatorSimple]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [ActParsMulti]
                              ) [DesignatorMethodCallParams]
                            ) [StmtDesign]
                          ) [StatementSingle]
                          StmtDesign(
                            DesignatorMethodCallParams(
                              DesignatorSimple(
                               putn
                              ) [DesignatorSimple]
                              ActParsMulti(
                                ActParsSingle(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         0
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [ActParsSingle]
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         i
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [ActParsMulti]
                            ) [DesignatorMethodCallParams]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorIncrement(
                            DesignatorSimple(
                             i
                            ) [DesignatorSimple]
                          ) [DesignatorIncrement]
                        ) [StmtDesign]
                      ) [StatementMulti]
                    ) [Stmt]
                    CondOne(
                      CondTermOne(
                        CondFactTwo(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   i
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                          RelopLT(
                          ) [RelopLT]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   size
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactTwo]
                      ) [CondTermOne]
                    ) [CondOne]
                  ) [StmtDoWhile]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorMethodCallParams(
                    DesignatorSimple(
                     f
                    ) [DesignatorSimple]
                    ActParsMulti(
                      ActParsMulti(
                        ActParsSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   c
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [ActParsSingle]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 x
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [ActParsMulti]
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               i
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [ActParsMulti]
                  ) [DesignatorMethodCallParams]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtRead(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
              ) [StmtRead]
            ) [StatementMulti]
            StmtDoWhile(
              DoHead(
              ) [DoHead]
              Stmt(
                StatementMulti(
                  StatementMulti(
                    StatementSingle(
                      StmtIf(
                        StmtIfBody(
                          IfCond(
                            CondOne(
                              CondTermOne(
                                CondFactTwo(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorSimple(
                                           x
                                          ) [DesignatorSimple]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                  RelopLE(
                                  ) [RelopLE]
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         0
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [CondFactTwo]
                              ) [CondTermOne]
                            ) [CondOne]
                          ) [IfCond]
                          StmtBreak(
                          ) [StmtBreak]
                        ) [StmtIfBody]
                      ) [StmtIf]
                    ) [StatementSingle]
                    StmtIfElse(
                      StmtIfBody(
                        IfCond(
                          CondOne(
                            CondTermTwo(
                              CondTermOne(
                                CondFactTwo(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         0
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                  RelopLE(
                                  ) [RelopLE]
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorSimple(
                                           x
                                          ) [DesignatorSimple]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [CondFactTwo]
                              ) [CondTermOne]
                              CondFactTwo(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         x
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                                RelopLT(
                                ) [RelopLT]
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         size
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [CondFactTwo]
                            ) [CondTermTwo]
                          ) [CondOne]
                        ) [IfCond]
                        Stmt(
                          StatementSingle(
                            StmtDesign(
                              DesignatorMethodCallParams(
                                DesignatorSimple(
                                 putp
                                ) [DesignatorSimple]
                                ActParsSingle(
                                  ExprOne(
                                    ExprAddop(
                                      ExprSingle(
                                        TermSingle(
                                          FuncCallParams(
                                            DesignatorSimple(
                                             getp
                                            ) [DesignatorSimple]
                                            ActParsSingle(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorDesignator(
                                                      DesignatorSimple(
                                                       x
                                                      ) [DesignatorSimple]
                                                    ) [FactorDesignator]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [ActParsSingle]
                                          ) [FuncCallParams]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                      AddopPlus(
                                      ) [AddopPlus]
                                      TermSingle(
                                        FactorNumConst(
                                         1
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprAddop]
                                  ) [ExprOne]
                                ) [ActParsSingle]
                              ) [DesignatorMethodCallParams]
                            ) [StmtDesign]
                          ) [StatementSingle]
                        ) [Stmt]
                      ) [StmtIfBody]
                      StmtIf(
                        StmtIfBody(
                          IfCond(
                            CondOne(
                              CondTermTwo(
                                CondTermOne(
                                  CondFactTwo(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorSimple(
                                             size
                                            ) [DesignatorSimple]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                    RelopLT(
                                    ) [RelopLT]
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorSimple(
                                             x
                                            ) [DesignatorSimple]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [CondFactTwo]
                                ) [CondTermOne]
                                CondFactTwo(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorSimple(
                                           x
                                          ) [DesignatorSimple]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                  RelopLT(
                                  ) [RelopLT]
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         0
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [CondFactTwo]
                              ) [CondTermTwo]
                            ) [CondOne]
                          ) [IfCond]
                          Stmt(
                            StatementSingle(
                              StmtDesign(
                                DesignatorMethodCallParams(
                                  DesignatorSimple(
                                   putn
                                  ) [DesignatorSimple]
                                  ActParsSingle(
                                    ExprOne(
                                      ExprAddop(
                                        ExprSingle(
                                          TermSingle(
                                            FuncCallParams(
                                              DesignatorSimple(
                                               getn
                                              ) [DesignatorSimple]
                                              ActParsSingle(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorSimple(
                                                         x
                                                        ) [DesignatorSimple]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [ActParsSingle]
                                            ) [FuncCallParams]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                        AddopPlus(
                                        ) [AddopPlus]
                                        TermSingle(
                                          FactorNumConst(
                                           1
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprAddop]
                                    ) [ExprOne]
                                  ) [ActParsSingle]
                                ) [DesignatorMethodCallParams]
                              ) [StmtDesign]
                            ) [StatementSingle]
                          ) [Stmt]
                        ) [StmtIfBody]
                      ) [StmtIf]
                    ) [StmtIfElse]
                  ) [StatementMulti]
                  StmtRead(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [StmtRead]
                ) [StatementMulti]
              ) [Stmt]
              CondOne(
                CondTermOne(
                  CondFactOne(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [CondFactOne]
                ) [CondTermOne]
              ) [CondOne]
            ) [StmtDoWhile]
          ) [StatementMulti]
          StmtPrint(
            ExprTernary(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
              ExprSingle(
                TermSingle(
                  FactorCharConst(
                   -
                  ) [FactorCharConst]
                ) [TermSingle]
              ) [ExprSingle]
              ExprSingle(
                TermSingle(
                  FactorCharConst(
                   +
                  ) [FactorCharConst]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprTernary]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  15:54:04,226 - 

================SEMANTICKA OBRADA====================


INFO  15:54:04,263 - Deklarisana konstanta 'size' na liniji 2
INFO  15:54:04,263 - Deklarisan niz 'pos' na liniji 5
INFO  15:54:04,263 - Deklarisan niz 'neg' na liniji 5
ERROR 15:54:04,263 - Semanticka greska - 'idx' nije deklarisano na liniji 9
ERROR 15:54:04,263 - Semanticka greska - nevalidan pristup elementu niza na liniji 9
INFO  15:54:04,264 - Pristup elementu niza 'pos' na liniji 9
ERROR 15:54:04,264 - Semanticka greska - return naredba u funkciji koja nema povratnu vrednost na liniji 9
INFO  15:54:04,264 - Formalni parametar funkcije getn: 'idx' na liniji 10
INFO  15:54:04,264 - Pristup elementu niza 'neg' na liniji 10
ERROR 15:54:04,264 - Semanticka greska - nije pronadjen tip 'Table' u tabeli simbola!
INFO  15:54:04,264 - Deklarisana globalna promenljiva 'val' na liniji 14
INFO  15:54:04,264 - Formalni parametar funkcije f: 'ch' na liniji 16
INFO  15:54:04,264 - Formalni parametar funkcije f: 'a' na liniji 16
INFO  15:54:04,264 - Formalni parametar funkcije f: 'arg' na liniji 16
INFO  15:54:04,264 - Deklarisana promenljiva 'x' na liniji 17
INFO  15:54:04,265 - Deklarisana promenljiva 'x' na liniji 21
INFO  15:54:04,265 - Deklarisana promenljiva 'i' na liniji 21
INFO  15:54:04,265 - Deklarisana promenljiva 'c' na liniji 21
ERROR 15:54:04,265 - Semanticka greska - nije pronadjen tip 'Table' u tabeli simbola!
ERROR 15:54:04,265 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 24
ERROR 15:54:04,265 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
INFO  15:54:04,265 - Pronadjen poziv funkcije 'putp' na liniji 28
ERROR 15:54:04,265 - Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 28
ERROR 15:54:04,265 - Semanticka greska - 'putn' nije deklarisano na liniji 29
ERROR 15:54:04,265 - Semanticka greska - ime 'noObj' nije funkcija na liniji 29
INFO  15:54:04,265 - Pronadjen poziv funkcije 'f' na liniji 33
ERROR 15:54:04,265 - Semanticka greska - 'getp' nije deklarisano na liniji 40
ERROR 15:54:04,266 - Semanticka greska - ime 'noObj' nije funkcija na liniji 40
ERROR 15:54:04,266 - Semanticka greska - clanovi izraza nisu tipa int na liniji 40
ERROR 15:54:04,266 - Semanticka greska - clanovi izraza nisu kompatibilni na liniji 40
INFO  15:54:04,266 - Pronadjen poziv funkcije 'putp' na liniji 40
ERROR 15:54:04,266 - Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 40
ERROR 15:54:04,266 - Semanticka greska - 'putn' nije deklarisano na liniji 44
INFO  15:54:04,266 - Pronadjen poziv funkcije 'getn' na liniji 44
ERROR 15:54:04,266 - Semanticka greska - ime 'noObj' nije funkcija na liniji 44
INFO  15:54:04,267 - ===================================
ERROR 15:54:04,267 - Parsiranje nije uspesno zavrseno!
INFO  16:07:47,958 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:07:48,005 - #2 program
INFO  16:07:48,005 - #20 test301
INFO  16:07:48,005 - #7 const
INFO  16:07:48,006 - #20 int
INFO  16:07:48,006 - #20 nula
INFO  16:07:48,006 - #37 =
INFO  16:07:48,006 - #21 0
INFO  16:07:48,007 - #40 ;
INFO  16:07:48,007 - #7 const
INFO  16:07:48,007 - #20 int
INFO  16:07:48,007 - #20 jedan
INFO  16:07:48,007 - #37 =
INFO  16:07:48,008 - #21 1
INFO  16:07:48,008 - #40 ;
INFO  16:07:48,008 - #7 const
INFO  16:07:48,008 - #20 int
INFO  16:07:48,008 - #20 pet
INFO  16:07:48,008 - #37 =
INFO  16:07:48,008 - #21 5
INFO  16:07:48,008 - #40 ;
INFO  16:07:48,008 - #20 int
INFO  16:07:48,008 - #20 niz
INFO  16:07:48,008 - #45 [
INFO  16:07:48,008 - #46 ]
INFO  16:07:48,008 - #40 ;
INFO  16:07:48,009 - #20 char
INFO  16:07:48,009 - #20 nizch
INFO  16:07:48,009 - #45 [
INFO  16:07:48,009 - #46 ]
INFO  16:07:48,009 - #40 ;
INFO  16:07:48,009 - #47 {
INFO  16:07:48,009 - #16 void
INFO  16:07:48,009 - #20 main
INFO  16:07:48,009 - #43 (
INFO  16:07:48,010 - #44 )
INFO  16:07:48,010 - #20 int
INFO  16:07:48,010 - #20 bodovi
INFO  16:07:48,010 - #40 ;
INFO  16:07:48,010 - #20 bool
INFO  16:07:48,010 - #20 bt
INFO  16:07:48,010 - #40 ;
INFO  16:07:48,010 - #47 {
INFO  16:07:48,011 - #20 bodovi
INFO  16:07:48,011 - #37 =
INFO  16:07:48,011 - #21 0
INFO  16:07:48,011 - #40 ;
INFO  16:07:48,011 - #20 bodovi
INFO  16:07:48,012 - #38 ++
INFO  16:07:48,012 - #40 ;
INFO  16:07:48,012 - #20 bodovi
INFO  16:07:48,012 - #37 =
INFO  16:07:48,012 - #20 bodovi
INFO  16:07:48,012 - #24 +
INFO  16:07:48,012 - #20 jedan
INFO  16:07:48,013 - #40 ;
INFO  16:07:48,013 - #20 bodovi
INFO  16:07:48,013 - #37 =
INFO  16:07:48,013 - #20 bodovi
INFO  16:07:48,013 - #26 *
INFO  16:07:48,013 - #20 pet
INFO  16:07:48,014 - #40 ;
INFO  16:07:48,014 - #20 bodovi
INFO  16:07:48,014 - #39 --
INFO  16:07:48,014 - #40 ;
INFO  16:07:48,015 - #13 print
INFO  16:07:48,015 - #43 (
INFO  16:07:48,015 - #20 bodovi
INFO  16:07:48,015 - #44 )
INFO  16:07:48,016 - #40 ;
INFO  16:07:48,016 - #20 niz
INFO  16:07:48,016 - #37 =
INFO  16:07:48,016 - #12 new
INFO  16:07:48,016 - #20 int
INFO  16:07:48,016 - #45 [
INFO  16:07:48,016 - #21 3
INFO  16:07:48,016 - #46 ]
INFO  16:07:48,017 - #40 ;
INFO  16:07:48,017 - #20 niz
INFO  16:07:48,017 - #45 [
INFO  16:07:48,017 - #20 nula
INFO  16:07:48,017 - #46 ]
INFO  16:07:48,017 - #37 =
INFO  16:07:48,018 - #20 jedan
INFO  16:07:48,018 - #40 ;
INFO  16:07:48,018 - #20 niz
INFO  16:07:48,018 - #45 [
INFO  16:07:48,018 - #21 1
INFO  16:07:48,019 - #46 ]
INFO  16:07:48,019 - #37 =
INFO  16:07:48,019 - #21 2
INFO  16:07:48,019 - #40 ;
INFO  16:07:48,019 - #20 niz
INFO  16:07:48,019 - #45 [
INFO  16:07:48,019 - #20 niz
INFO  16:07:48,019 - #45 [
INFO  16:07:48,019 - #20 jedan
INFO  16:07:48,019 - #46 ]
INFO  16:07:48,019 - #46 ]
INFO  16:07:48,019 - #37 =
INFO  16:07:48,019 - #20 niz
INFO  16:07:48,020 - #45 [
INFO  16:07:48,020 - #20 niz
INFO  16:07:48,020 - #45 [
INFO  16:07:48,020 - #21 0
INFO  16:07:48,020 - #46 ]
INFO  16:07:48,020 - #46 ]
INFO  16:07:48,020 - #26 *
INFO  16:07:48,020 - #21 3
INFO  16:07:48,020 - #40 ;
INFO  16:07:48,020 - #20 bodovi
INFO  16:07:48,020 - #37 =
INFO  16:07:48,020 - #20 niz
INFO  16:07:48,020 - #45 [
INFO  16:07:48,021 - #21 2
INFO  16:07:48,021 - #46 ]
INFO  16:07:48,021 - #27 /
INFO  16:07:48,021 - #20 niz
INFO  16:07:48,021 - #45 [
INFO  16:07:48,021 - #21 0
INFO  16:07:48,021 - #46 ]
INFO  16:07:48,021 - #40 ;
INFO  16:07:48,021 - #13 print
INFO  16:07:48,022 - #43 (
INFO  16:07:48,022 - #20 bodovi
INFO  16:07:48,022 - #44 )
INFO  16:07:48,022 - #40 ;
INFO  16:07:48,022 - #13 print
INFO  16:07:48,022 - #43 (
INFO  16:07:48,022 - #20 niz
INFO  16:07:48,022 - #45 [
INFO  16:07:48,022 - #21 2
INFO  16:07:48,022 - #46 ]
INFO  16:07:48,022 - #44 )
INFO  16:07:48,022 - #40 ;
INFO  16:07:48,022 - #20 nizch
INFO  16:07:48,022 - #37 =
INFO  16:07:48,023 - #12 new
INFO  16:07:48,023 - #20 char
INFO  16:07:48,023 - #45 [
INFO  16:07:48,023 - #21 3
INFO  16:07:48,023 - #46 ]
INFO  16:07:48,023 - #40 ;
INFO  16:07:48,023 - #20 nizch
INFO  16:07:48,023 - #45 [
INFO  16:07:48,023 - #21 0
INFO  16:07:48,023 - #46 ]
INFO  16:07:48,023 - #37 =
INFO  16:07:48,023 - #22 a
INFO  16:07:48,023 - #40 ;
INFO  16:07:48,026 - #20 nizch
INFO  16:07:48,026 - #45 [
INFO  16:07:48,026 - #20 jedan
INFO  16:07:48,026 - #46 ]
INFO  16:07:48,027 - #37 =
INFO  16:07:48,027 - #22 b
INFO  16:07:48,027 - #40 ;
INFO  16:07:48,027 - #20 nizch
INFO  16:07:48,027 - #45 [
INFO  16:07:48,027 - #20 pet
INFO  16:07:48,027 - #25 -
INFO  16:07:48,027 - #21 3
INFO  16:07:48,027 - #46 ]
INFO  16:07:48,028 - #37 =
INFO  16:07:48,028 - #22 c
INFO  16:07:48,028 - #40 ;
INFO  16:07:48,028 - #13 print
INFO  16:07:48,028 - #43 (
INFO  16:07:48,028 - #20 nizch
INFO  16:07:48,028 - #45 [
INFO  16:07:48,028 - #21 1
INFO  16:07:48,028 - #46 ]
INFO  16:07:48,028 - #44 )
INFO  16:07:48,028 - #40 ;
INFO  16:07:48,028 - #13 print
INFO  16:07:48,028 - #43 (
INFO  16:07:48,028 - #20 nizch
INFO  16:07:48,028 - #45 [
INFO  16:07:48,028 - #20 jedan
INFO  16:07:48,028 - #26 *
INFO  16:07:48,028 - #21 2
INFO  16:07:48,028 - #46 ]
INFO  16:07:48,028 - #44 )
INFO  16:07:48,028 - #40 ;
INFO  16:07:48,028 - #20 bodovi
INFO  16:07:48,029 - #37 =
INFO  16:07:48,029 - #20 bodovi
INFO  16:07:48,029 - #24 +
INFO  16:07:48,029 - #43 (
INFO  16:07:48,029 - #20 pet
INFO  16:07:48,029 - #26 *
INFO  16:07:48,029 - #20 jedan
INFO  16:07:48,029 - #25 -
INFO  16:07:48,029 - #21 1
INFO  16:07:48,029 - #44 )
INFO  16:07:48,029 - #26 *
INFO  16:07:48,029 - #20 bodovi
INFO  16:07:48,029 - #25 -
INFO  16:07:48,029 - #43 (
INFO  16:07:48,029 - #21 3
INFO  16:07:48,029 - #28 %
INFO  16:07:48,029 - #21 2
INFO  16:07:48,030 - #24 +
INFO  16:07:48,030 - #21 3
INFO  16:07:48,030 - #26 *
INFO  16:07:48,030 - #21 2
INFO  16:07:48,030 - #25 -
INFO  16:07:48,030 - #21 3
INFO  16:07:48,030 - #44 )
INFO  16:07:48,030 - #40 ;
INFO  16:07:48,030 - #13 print
INFO  16:07:48,030 - #43 (
INFO  16:07:48,030 - #20 bodovi
INFO  16:07:48,030 - #44 )
INFO  16:07:48,030 - #40 ;
INFO  16:07:48,031 - #14 read
INFO  16:07:48,031 - #43 (
INFO  16:07:48,031 - #20 bodovi
INFO  16:07:48,031 - #44 )
INFO  16:07:48,031 - #40 ;
INFO  16:07:48,031 - #20 bt
INFO  16:07:48,031 - #37 =
INFO  16:07:48,031 - #23 true
INFO  16:07:48,031 - #40 ;
INFO  16:07:48,031 - #13 print
INFO  16:07:48,031 - #43 (
INFO  16:07:48,031 - #20 bt
INFO  16:07:48,032 - #49 ?
INFO  16:07:48,032 - #20 bodovi
INFO  16:07:48,032 - #50 :
INFO  16:07:48,032 - #20 bodovi
INFO  16:07:48,032 - #24 +
INFO  16:07:48,032 - #21 10
INFO  16:07:48,032 - #44 )
INFO  16:07:48,032 - #40 ;
INFO  16:07:48,032 - #13 print
INFO  16:07:48,032 - #43 (
INFO  16:07:48,032 - #23 false
INFO  16:07:48,032 - #49 ?
INFO  16:07:48,032 - #20 bodovi
INFO  16:07:48,032 - #24 +
INFO  16:07:48,032 - #21 20
INFO  16:07:48,032 - #50 :
INFO  16:07:48,032 - #20 bodovi
INFO  16:07:48,032 - #24 +
INFO  16:07:48,033 - #21 30
INFO  16:07:48,033 - #44 )
INFO  16:07:48,033 - #40 ;
INFO  16:07:48,033 - #13 print
INFO  16:07:48,033 - #43 (
INFO  16:07:48,033 - #20 bodovi
INFO  16:07:48,033 - #49 ?
INFO  16:07:48,033 - #22 +
INFO  16:07:48,033 - #50 :
INFO  16:07:48,033 - #22 -
INFO  16:07:48,033 - #44 )
INFO  16:07:48,033 - #40 ;
INFO  16:07:48,033 - #48 }
INFO  16:07:48,033 - #48 }
INFO  16:07:48,034 - 

================SINTAKSNO STABLO====================


INFO  16:07:48,040 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclMulti(
          ProgramDeclMulti(
            ProgramDeclEps(
            ) [ProgramDeclEps]
            PartConstDeclaration(
              ConstDeclaration(
                Type(
                 int
                ) [Type]
                ConstSingle(
                  ConstPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstPart]
                ) [ConstSingle]
              ) [ConstDeclaration]
            ) [PartConstDeclaration]
          ) [ProgramDeclMulti]
          PartConstDeclaration(
            ConstDeclaration(
              Type(
               int
              ) [Type]
              ConstSingle(
                ConstPart(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [ConstPart]
              ) [ConstSingle]
            ) [ConstDeclaration]
          ) [PartConstDeclaration]
        ) [ProgramDeclMulti]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarArray(
             niz
            ) [GlobalVarArray]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         char
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           nizch
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 bodovi
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementMulti(
                                                  StatementMulti(
                                                    StatementMulti(
                                                      StatementMulti(
                                                        StatementMulti(
                                                          StatementSingle(
                                                            StmtDesign(
                                                              DesignatorAssignment(
                                                                DesignatorSimple(
                                                                 bodovi
                                                                ) [DesignatorSimple]
                                                                AssignmentExpr(
                                                                  ExprOne(
                                                                    ExprSingle(
                                                                      TermSingle(
                                                                        FactorNumConst(
                                                                         0
                                                                        ) [FactorNumConst]
                                                                      ) [TermSingle]
                                                                    ) [ExprSingle]
                                                                  ) [ExprOne]
                                                                ) [AssignmentExpr]
                                                              ) [DesignatorAssignment]
                                                            ) [StmtDesign]
                                                          ) [StatementSingle]
                                                          StmtDesign(
                                                            DesignatorIncrement(
                                                              DesignatorSimple(
                                                               bodovi
                                                              ) [DesignatorSimple]
                                                            ) [DesignatorIncrement]
                                                          ) [StmtDesign]
                                                        ) [StatementMulti]
                                                        StmtDesign(
                                                          DesignatorAssignment(
                                                            DesignatorSimple(
                                                             bodovi
                                                            ) [DesignatorSimple]
                                                            AssignmentExpr(
                                                              ExprOne(
                                                                ExprAddop(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorDesignator(
                                                                        DesignatorSimple(
                                                                         bodovi
                                                                        ) [DesignatorSimple]
                                                                      ) [FactorDesignator]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                  AddopPlus(
                                                                  ) [AddopPlus]
                                                                  TermSingle(
                                                                    FactorDesignator(
                                                                      DesignatorSimple(
                                                                       jedan
                                                                      ) [DesignatorSimple]
                                                                    ) [FactorDesignator]
                                                                  ) [TermSingle]
                                                                ) [ExprAddop]
                                                              ) [ExprOne]
                                                            ) [AssignmentExpr]
                                                          ) [DesignatorAssignment]
                                                        ) [StmtDesign]
                                                      ) [StatementMulti]
                                                      StmtDesign(
                                                        DesignatorAssignment(
                                                          DesignatorSimple(
                                                           bodovi
                                                          ) [DesignatorSimple]
                                                          AssignmentExpr(
                                                            ExprOne(
                                                              ExprSingle(
                                                                TermMulop(
                                                                  TermSingle(
                                                                    FactorDesignator(
                                                                      DesignatorSimple(
                                                                       bodovi
                                                                      ) [DesignatorSimple]
                                                                    ) [FactorDesignator]
                                                                  ) [TermSingle]
                                                                  MulopMul(
                                                                  ) [MulopMul]
                                                                  FactorDesignator(
                                                                    DesignatorSimple(
                                                                     pet
                                                                    ) [DesignatorSimple]
                                                                  ) [FactorDesignator]
                                                                ) [TermMulop]
                                                              ) [ExprSingle]
                                                            ) [ExprOne]
                                                          ) [AssignmentExpr]
                                                        ) [DesignatorAssignment]
                                                      ) [StmtDesign]
                                                    ) [StatementMulti]
                                                    StmtDesign(
                                                      DesignatorDecrement(
                                                        DesignatorSimple(
                                                         bodovi
                                                        ) [DesignatorSimple]
                                                      ) [DesignatorDecrement]
                                                    ) [StmtDesign]
                                                  ) [StatementMulti]
                                                  StmtPrint(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorDesignator(
                                                            DesignatorSimple(
                                                             bodovi
                                                            ) [DesignatorSimple]
                                                          ) [FactorDesignator]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [StmtPrint]
                                                ) [StatementMulti]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     niz
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNewArray(
                                                              Type(
                                                               int
                                                              ) [Type]
                                                              ExprOne(
                                                                ExprSingle(
                                                                  TermSingle(
                                                                    FactorNumConst(
                                                                     3
                                                                    ) [FactorNumConst]
                                                                  ) [TermSingle]
                                                                ) [ExprSingle]
                                                              ) [ExprOne]
                                                            ) [FactorNewArray]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorArray(
                                                   niz
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorDesignator(
                                                            DesignatorSimple(
                                                             nula
                                                            ) [DesignatorSimple]
                                                          ) [FactorDesignator]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [DesignatorArray]
                                                  AssignmentExpr(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorDesignator(
                                                            DesignatorSimple(
                                                             jedan
                                                            ) [DesignatorSimple]
                                                          ) [FactorDesignator]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementMulti]
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorArray(
                                                 niz
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [DesignatorArray]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         2
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorArray(
                                               niz
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorArray(
                                                         niz
                                                          ExprOne(
                                                            ExprSingle(
                                                              TermSingle(
                                                                FactorDesignator(
                                                                  DesignatorSimple(
                                                                   jedan
                                                                  ) [DesignatorSimple]
                                                                ) [FactorDesignator]
                                                              ) [TermSingle]
                                                            ) [ExprSingle]
                                                          ) [ExprOne]
                                                        ) [DesignatorArray]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [DesignatorArray]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermMulop(
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorArray(
                                                           niz
                                                            ExprOne(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorDesignator(
                                                                    DesignatorArray(
                                                                     niz
                                                                      ExprOne(
                                                                        ExprSingle(
                                                                          TermSingle(
                                                                            FactorNumConst(
                                                                             0
                                                                            ) [FactorNumConst]
                                                                          ) [TermSingle]
                                                                        ) [ExprSingle]
                                                                      ) [ExprOne]
                                                                    ) [DesignatorArray]
                                                                  ) [FactorDesignator]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [ExprOne]
                                                          ) [DesignatorArray]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                      MulopMul(
                                                      ) [MulopMul]
                                                      FactorNumConst(
                                                       3
                                                      ) [FactorNumConst]
                                                    ) [TermMulop]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             bodovi
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermMulop(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorArray(
                                                         niz
                                                          ExprOne(
                                                            ExprSingle(
                                                              TermSingle(
                                                                FactorNumConst(
                                                                 2
                                                                ) [FactorNumConst]
                                                              ) [TermSingle]
                                                            ) [ExprSingle]
                                                          ) [ExprOne]
                                                        ) [DesignatorArray]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                    MulopDiv(
                                                    ) [MulopDiv]
                                                    FactorDesignator(
                                                      DesignatorArray(
                                                       niz
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               0
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [DesignatorArray]
                                                    ) [FactorDesignator]
                                                  ) [TermMulop]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtPrint(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorDesignator(
                                                DesignatorSimple(
                                                 bodovi
                                                ) [DesignatorSimple]
                                              ) [FactorDesignator]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [StmtPrint]
                                    ) [StatementMulti]
                                    StmtPrint(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorDesignator(
                                              DesignatorArray(
                                               niz
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       2
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [DesignatorArray]
                                            ) [FactorDesignator]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [StmtPrint]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       nizch
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNewArray(
                                                Type(
                                                 char
                                                ) [Type]
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       3
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [FactorNewArray]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorArray(
                                     nizch
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             0
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [DesignatorArray]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorCharConst(
                                             a
                                            ) [FactorCharConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorArray(
                                   nizch
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorSimple(
                                             jedan
                                            ) [DesignatorSimple]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [DesignatorArray]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorCharConst(
                                           b
                                          ) [FactorCharConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorArray(
                                 nizch
                                  ExprOne(
                                    ExprAddop(
                                      ExprSingle(
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorSimple(
                                             pet
                                            ) [DesignatorSimple]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                      AddopMinus(
                                      ) [AddopMinus]
                                      TermSingle(
                                        FactorNumConst(
                                         3
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprAddop]
                                  ) [ExprOne]
                                ) [DesignatorArray]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorCharConst(
                                         c
                                        ) [FactorCharConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtPrint(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorArray(
                                     nizch
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             1
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [DesignatorArray]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [StmtPrint]
                        ) [StatementMulti]
                        StmtPrint(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorArray(
                                   nizch
                                    ExprOne(
                                      ExprSingle(
                                        TermMulop(
                                          TermSingle(
                                            FactorDesignator(
                                              DesignatorSimple(
                                               jedan
                                              ) [DesignatorSimple]
                                            ) [FactorDesignator]
                                          ) [TermSingle]
                                          MulopMul(
                                          ) [MulopMul]
                                          FactorNumConst(
                                           2
                                          ) [FactorNumConst]
                                        ) [TermMulop]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [DesignatorArray]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [StmtPrint]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           bodovi
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprAddop(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         bodovi
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermMulop(
                                    TermSingle(
                                      FactorExpr(
                                        ExprOne(
                                          ExprAddop(
                                            ExprSingle(
                                              TermMulop(
                                                TermSingle(
                                                  FactorDesignator(
                                                    DesignatorSimple(
                                                     pet
                                                    ) [DesignatorSimple]
                                                  ) [FactorDesignator]
                                                ) [TermSingle]
                                                MulopMul(
                                                ) [MulopMul]
                                                FactorDesignator(
                                                  DesignatorSimple(
                                                   jedan
                                                  ) [DesignatorSimple]
                                                ) [FactorDesignator]
                                              ) [TermMulop]
                                            ) [ExprSingle]
                                            AddopMinus(
                                            ) [AddopMinus]
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprAddop]
                                        ) [ExprOne]
                                      ) [FactorExpr]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorDesignator(
                                      DesignatorSimple(
                                       bodovi
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermMulop]
                                ) [ExprAddop]
                                AddopMinus(
                                ) [AddopMinus]
                                TermSingle(
                                  FactorExpr(
                                    ExprOne(
                                      ExprAddop(
                                        ExprAddop(
                                          ExprSingle(
                                            TermMulop(
                                              TermSingle(
                                                FactorNumConst(
                                                 3
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                              MulopMod(
                                              ) [MulopMod]
                                              FactorNumConst(
                                               2
                                              ) [FactorNumConst]
                                            ) [TermMulop]
                                          ) [ExprSingle]
                                          AddopPlus(
                                          ) [AddopPlus]
                                          TermMulop(
                                            TermSingle(
                                              FactorNumConst(
                                               3
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                            MulopMul(
                                            ) [MulopMul]
                                            FactorNumConst(
                                             2
                                            ) [FactorNumConst]
                                          ) [TermMulop]
                                        ) [ExprAddop]
                                        AddopMinus(
                                        ) [AddopMinus]
                                        TermSingle(
                                          FactorNumConst(
                                           3
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprAddop]
                                    ) [ExprOne]
                                  ) [FactorExpr]
                                ) [TermSingle]
                              ) [ExprAddop]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtPrint(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               bodovi
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [StmtPrint]
                  ) [StatementMulti]
                  StmtRead(
                    DesignatorSimple(
                     bodovi
                    ) [DesignatorSimple]
                  ) [StmtRead]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     bt
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorBoolConst(
                             true
                            ) [FactorBoolConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtPrint(
                ExprTernary(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         bt
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         bodovi
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           bodovi
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorNumConst(
                       10
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprTernary]
              ) [StmtPrint]
            ) [StatementMulti]
            StmtPrint(
              ExprTernary(
                ExprSingle(
                  TermSingle(
                    FactorBoolConst(
                     false
                    ) [FactorBoolConst]
                  ) [TermSingle]
                ) [ExprSingle]
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         bodovi
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorNumConst(
                     20
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprAddop]
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         bodovi
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorNumConst(
                     30
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprTernary]
            ) [StmtPrint]
          ) [StatementMulti]
          StmtPrint(
            ExprTernary(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     bodovi
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
              ExprSingle(
                TermSingle(
                  FactorCharConst(
                   +
                  ) [FactorCharConst]
                ) [TermSingle]
              ) [ExprSingle]
              ExprSingle(
                TermSingle(
                  FactorCharConst(
                   -
                  ) [FactorCharConst]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprTernary]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  16:07:48,043 - 

================SEMANTICKA OBRADA====================


INFO  16:07:48,053 - Deklarisana konstanta 'nula' na liniji 5
INFO  16:07:48,053 - Deklarisana konstanta 'jedan' na liniji 6
INFO  16:07:48,053 - Deklarisana konstanta 'pet' na liniji 7
INFO  16:07:48,053 - Deklarisan globalni niz 'niz' na liniji 9
INFO  16:07:48,054 - Deklarisan globalni niz 'nizch' na liniji 10
INFO  16:07:48,054 - Deklarisana promenljiva 'bodovi' na liniji 14
INFO  16:07:48,054 - Deklarisana promenljiva 'bt' na liniji 15
INFO  16:07:48,054 - Pristup elementu niza 'niz' na liniji 26
INFO  16:07:48,054 - Pristup elementu niza 'niz' na liniji 27
INFO  16:07:48,054 - Pristup elementu niza 'niz' na liniji 28
INFO  16:07:48,054 - Pristup elementu niza 'niz' na liniji 28
INFO  16:07:48,054 - Pristup elementu niza 'niz' na liniji 28
INFO  16:07:48,055 - Pristup elementu niza 'niz' na liniji 28
INFO  16:07:48,055 - Pristup elementu niza 'niz' na liniji 29
INFO  16:07:48,055 - Pristup elementu niza 'niz' na liniji 29
INFO  16:07:48,055 - Pristup elementu niza 'niz' na liniji 31
INFO  16:07:48,055 - Pristup elementu niza 'nizch' na liniji 35
INFO  16:07:48,055 - Pristup elementu niza 'nizch' na liniji 36
INFO  16:07:48,055 - Pristup elementu niza 'nizch' na liniji 37
INFO  16:07:48,055 - Pristup elementu niza 'nizch' na liniji 38
INFO  16:07:48,055 - Pristup elementu niza 'nizch' na liniji 39
INFO  16:07:48,056 - ===================================
INFO  16:07:48,056 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  16:07:48,062 - Parsiranje uspesno zavrseno!
INFO  16:08:57,641 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:08:57,689 - #2 program
INFO  16:08:57,689 - #20 test302
INFO  16:08:57,689 - #7 const
INFO  16:08:57,689 - #20 int
INFO  16:08:57,689 - #20 jedan
INFO  16:08:57,690 - #37 =
INFO  16:08:57,690 - #21 1
INFO  16:08:57,690 - #40 ;
INFO  16:08:57,690 - #20 int
INFO  16:08:57,691 - #20 i
INFO  16:08:57,691 - #40 ;
INFO  16:08:57,691 - #20 bool
INFO  16:08:57,691 - #20 ibool
INFO  16:08:57,691 - #40 ;
INFO  16:08:57,691 - #20 int
INFO  16:08:57,691 - #20 niz
INFO  16:08:57,691 - #45 [
INFO  16:08:57,691 - #46 ]
INFO  16:08:57,691 - #40 ;
INFO  16:08:57,692 - #47 {
INFO  16:08:57,692 - #20 int
INFO  16:08:57,692 - #20 sum
INFO  16:08:57,692 - #43 (
INFO  16:08:57,692 - #20 int
INFO  16:08:57,692 - #20 z
INFO  16:08:57,692 - #41 ,
INFO  16:08:57,692 - #20 int
INFO  16:08:57,692 - #20 d
INFO  16:08:57,692 - #44 )
INFO  16:08:57,693 - #47 {
INFO  16:08:57,693 - #15 return
INFO  16:08:57,693 - #20 z
INFO  16:08:57,693 - #24 +
INFO  16:08:57,693 - #20 d
INFO  16:08:57,694 - #40 ;
INFO  16:08:57,694 - #48 }
INFO  16:08:57,695 - #20 int
INFO  16:08:57,695 - #20 inkrement
INFO  16:08:57,695 - #43 (
INFO  16:08:57,695 - #20 int
INFO  16:08:57,695 - #20 a
INFO  16:08:57,695 - #41 ,
INFO  16:08:57,695 - #20 int
INFO  16:08:57,695 - #20 inc
INFO  16:08:57,695 - #44 )
INFO  16:08:57,695 - #20 int
INFO  16:08:57,695 - #20 pom
INFO  16:08:57,695 - #40 ;
INFO  16:08:57,696 - #47 {
INFO  16:08:57,696 - #8 if
INFO  16:08:57,696 - #43 (
INFO  16:08:57,696 - #20 inc
INFO  16:08:57,696 - #29 ==
INFO  16:08:57,696 - #20 jedan
INFO  16:08:57,697 - #44 )
INFO  16:08:57,697 - #20 pom
INFO  16:08:57,698 - #37 =
INFO  16:08:57,698 - #21 1
INFO  16:08:57,698 - #40 ;
INFO  16:08:57,698 - #6 else
INFO  16:08:57,698 - #8 if
INFO  16:08:57,698 - #43 (
INFO  16:08:57,698 - #20 inc
INFO  16:08:57,699 - #29 ==
INFO  16:08:57,699 - #21 2
INFO  16:08:57,699 - #44 )
INFO  16:08:57,699 - #20 pom
INFO  16:08:57,699 - #37 =
INFO  16:08:57,699 - #20 a
INFO  16:08:57,699 - #40 ;
INFO  16:08:57,699 - #15 return
INFO  16:08:57,700 - #20 sum
INFO  16:08:57,700 - #43 (
INFO  16:08:57,700 - #20 a
INFO  16:08:57,700 - #41 ,
INFO  16:08:57,700 - #20 pom
INFO  16:08:57,700 - #44 )
INFO  16:08:57,700 - #40 ;
INFO  16:08:57,701 - #48 }
INFO  16:08:57,701 - #20 bool
INFO  16:08:57,701 - #20 verify
INFO  16:08:57,701 - #43 (
INFO  16:08:57,701 - #44 )
INFO  16:08:57,701 - #47 {
INFO  16:08:57,701 - #13 print
INFO  16:08:57,701 - #43 (
INFO  16:08:57,702 - #22 v
INFO  16:08:57,702 - #44 )
INFO  16:08:57,702 - #40 ;
INFO  16:08:57,702 - #15 return
INFO  16:08:57,702 - #23 false
INFO  16:08:57,702 - #40 ;
INFO  16:08:57,702 - #48 }
INFO  16:08:57,702 - #16 void
INFO  16:08:57,703 - #20 main
INFO  16:08:57,703 - #43 (
INFO  16:08:57,703 - #44 )
INFO  16:08:57,703 - #47 {
INFO  16:08:57,704 - #8 if
INFO  16:08:57,704 - #43 (
INFO  16:08:57,704 - #21 1
INFO  16:08:57,704 - #30 !=
INFO  16:08:57,704 - #21 1
INFO  16:08:57,704 - #44 )
INFO  16:08:57,704 - #13 print
INFO  16:08:57,704 - #43 (
INFO  16:08:57,705 - #25 -
INFO  16:08:57,705 - #21 6
INFO  16:08:57,705 - #44 )
INFO  16:08:57,705 - #40 ;
INFO  16:08:57,705 - #6 else
INFO  16:08:57,705 - #13 print
INFO  16:08:57,705 - #43 (
INFO  16:08:57,705 - #21 0
INFO  16:08:57,705 - #44 )
INFO  16:08:57,705 - #40 ;
INFO  16:08:57,706 - #20 ibool
INFO  16:08:57,706 - #37 =
INFO  16:08:57,706 - #23 false
INFO  16:08:57,706 - #40 ;
INFO  16:08:57,706 - #20 i
INFO  16:08:57,706 - #37 =
INFO  16:08:57,706 - #21 0
INFO  16:08:57,706 - #40 ;
INFO  16:08:57,706 - #10 do
INFO  16:08:57,706 - #47 {
INFO  16:08:57,707 - #8 if
INFO  16:08:57,707 - #43 (
INFO  16:08:57,707 - #20 i
INFO  16:08:57,707 - #29 ==
INFO  16:08:57,708 - #21 2
INFO  16:08:57,708 - #44 )
INFO  16:08:57,708 - #20 ibool
INFO  16:08:57,708 - #37 =
INFO  16:08:57,708 - #23 true
INFO  16:08:57,708 - #40 ;
INFO  16:08:57,708 - #20 i
INFO  16:08:57,708 - #38 ++
INFO  16:08:57,708 - #40 ;
INFO  16:08:57,708 - #48 }
INFO  16:08:57,708 - #11 while
INFO  16:08:57,708 - #43 (
INFO  16:08:57,708 - #20 i
INFO  16:08:57,708 - #33 <
INFO  16:08:57,709 - #21 5
INFO  16:08:57,709 - #44 )
INFO  16:08:57,709 - #40 ;
INFO  16:08:57,709 - #8 if
INFO  16:08:57,709 - #43 (
INFO  16:08:57,712 - #20 ibool
INFO  16:08:57,712 - #44 )
INFO  16:08:57,712 - #8 if
INFO  16:08:57,712 - #43 (
INFO  16:08:57,712 - #20 i
INFO  16:08:57,712 - #29 ==
INFO  16:08:57,712 - #21 5
INFO  16:08:57,712 - #44 )
INFO  16:08:57,712 - #13 print
INFO  16:08:57,712 - #43 (
INFO  16:08:57,712 - #21 1
INFO  16:08:57,712 - #44 )
INFO  16:08:57,712 - #40 ;
INFO  16:08:57,712 - #6 else
INFO  16:08:57,713 - #13 print
INFO  16:08:57,713 - #43 (
INFO  16:08:57,713 - #25 -
INFO  16:08:57,713 - #21 1
INFO  16:08:57,713 - #44 )
INFO  16:08:57,713 - #40 ;
INFO  16:08:57,713 - #20 niz
INFO  16:08:57,713 - #37 =
INFO  16:08:57,713 - #12 new
INFO  16:08:57,713 - #20 int
INFO  16:08:57,713 - #45 [
INFO  16:08:57,713 - #21 3
INFO  16:08:57,713 - #46 ]
INFO  16:08:57,713 - #40 ;
INFO  16:08:57,714 - #20 niz
INFO  16:08:57,714 - #45 [
INFO  16:08:57,714 - #21 0
INFO  16:08:57,714 - #46 ]
INFO  16:08:57,714 - #37 =
INFO  16:08:57,714 - #21 1
INFO  16:08:57,714 - #40 ;
INFO  16:08:57,714 - #20 niz
INFO  16:08:57,715 - #45 [
INFO  16:08:57,715 - #21 1
INFO  16:08:57,715 - #46 ]
INFO  16:08:57,715 - #37 =
INFO  16:08:57,715 - #21 2
INFO  16:08:57,715 - #40 ;
INFO  16:08:57,715 - #20 niz
INFO  16:08:57,715 - #45 [
INFO  16:08:57,715 - #21 2
INFO  16:08:57,716 - #46 ]
INFO  16:08:57,716 - #37 =
INFO  16:08:57,716 - #20 sum
INFO  16:08:57,716 - #43 (
INFO  16:08:57,716 - #20 niz
INFO  16:08:57,716 - #45 [
INFO  16:08:57,716 - #21 1
INFO  16:08:57,716 - #46 ]
INFO  16:08:57,716 - #41 ,
INFO  16:08:57,716 - #20 niz
INFO  16:08:57,716 - #45 [
INFO  16:08:57,716 - #21 0
INFO  16:08:57,716 - #46 ]
INFO  16:08:57,716 - #44 )
INFO  16:08:57,716 - #24 +
INFO  16:08:57,716 - #21 1
INFO  16:08:57,716 - #40 ;
INFO  16:08:57,717 - #8 if
INFO  16:08:57,717 - #43 (
INFO  16:08:57,717 - #20 verify
INFO  16:08:57,717 - #43 (
INFO  16:08:57,717 - #44 )
INFO  16:08:57,717 - #36 ||
INFO  16:08:57,717 - #20 niz
INFO  16:08:57,717 - #45 [
INFO  16:08:57,717 - #21 2
INFO  16:08:57,717 - #46 ]
INFO  16:08:57,717 - #29 ==
INFO  16:08:57,717 - #21 4
INFO  16:08:57,717 - #44 )
INFO  16:08:57,717 - #13 print
INFO  16:08:57,717 - #43 (
INFO  16:08:57,717 - #20 ord
INFO  16:08:57,717 - #43 (
INFO  16:08:57,717 - #22 A
INFO  16:08:57,717 - #44 )
INFO  16:08:57,718 - #44 )
INFO  16:08:57,718 - #40 ;
INFO  16:08:57,718 - #6 else
INFO  16:08:57,718 - #13 print
INFO  16:08:57,718 - #43 (
INFO  16:08:57,718 - #20 ord
INFO  16:08:57,718 - #43 (
INFO  16:08:57,718 - #22 a
INFO  16:08:57,718 - #44 )
INFO  16:08:57,718 - #44 )
INFO  16:08:57,718 - #40 ;
INFO  16:08:57,718 - #13 print
INFO  16:08:57,718 - #43 (
INFO  16:08:57,718 - #20 eol
INFO  16:08:57,718 - #44 )
INFO  16:08:57,718 - #40 ;
INFO  16:08:57,718 - #20 i
INFO  16:08:57,718 - #37 =
INFO  16:08:57,718 - #21 0
INFO  16:08:57,718 - #40 ;
INFO  16:08:57,718 - #10 do
INFO  16:08:57,718 - #47 {
INFO  16:08:57,718 - #8 if
INFO  16:08:57,719 - #43 (
INFO  16:08:57,719 - #20 i
INFO  16:08:57,719 - #29 ==
INFO  16:08:57,719 - #21 3
INFO  16:08:57,719 - #44 )
INFO  16:08:57,719 - #47 {
INFO  16:08:57,719 - #20 i
INFO  16:08:57,719 - #38 ++
INFO  16:08:57,719 - #40 ;
INFO  16:08:57,719 - #18 continue
INFO  16:08:57,719 - #40 ;
INFO  16:08:57,719 - #48 }
INFO  16:08:57,720 - #8 if
INFO  16:08:57,720 - #43 (
INFO  16:08:57,720 - #20 i
INFO  16:08:57,720 - #29 ==
INFO  16:08:57,720 - #21 4
INFO  16:08:57,720 - #44 )
INFO  16:08:57,720 - #3 break
INFO  16:08:57,720 - #40 ;
INFO  16:08:57,720 - #20 i
INFO  16:08:57,721 - #37 =
INFO  16:08:57,721 - #20 inkrement
INFO  16:08:57,721 - #43 (
INFO  16:08:57,721 - #20 i
INFO  16:08:57,721 - #41 ,
INFO  16:08:57,721 - #21 1
INFO  16:08:57,721 - #44 )
INFO  16:08:57,721 - #40 ;
INFO  16:08:57,721 - #48 }
INFO  16:08:57,721 - #11 while
INFO  16:08:57,721 - #43 (
INFO  16:08:57,721 - #20 i
INFO  16:08:57,721 - #33 <
INFO  16:08:57,722 - #21 10
INFO  16:08:57,722 - #44 )
INFO  16:08:57,722 - #40 ;
INFO  16:08:57,722 - #8 if
INFO  16:08:57,722 - #43 (
INFO  16:08:57,722 - #20 i
INFO  16:08:57,722 - #29 ==
INFO  16:08:57,722 - #21 3
INFO  16:08:57,722 - #35 &&
INFO  16:08:57,722 - #20 verify
INFO  16:08:57,722 - #43 (
INFO  16:08:57,722 - #44 )
INFO  16:08:57,722 - #44 )
INFO  16:08:57,722 - #13 print
INFO  16:08:57,722 - #43 (
INFO  16:08:57,722 - #25 -
INFO  16:08:57,722 - #21 4
INFO  16:08:57,722 - #44 )
INFO  16:08:57,722 - #40 ;
INFO  16:08:57,722 - #6 else
INFO  16:08:57,722 - #13 print
INFO  16:08:57,722 - #43 (
INFO  16:08:57,722 - #21 4
INFO  16:08:57,722 - #44 )
INFO  16:08:57,723 - #40 ;
INFO  16:08:57,723 - #14 read
INFO  16:08:57,723 - #43 (
INFO  16:08:57,723 - #20 niz
INFO  16:08:57,723 - #45 [
INFO  16:08:57,723 - #21 0
INFO  16:08:57,723 - #46 ]
INFO  16:08:57,723 - #44 )
INFO  16:08:57,723 - #40 ;
INFO  16:08:57,723 - #14 read
INFO  16:08:57,723 - #43 (
INFO  16:08:57,723 - #20 niz
INFO  16:08:57,723 - #45 [
INFO  16:08:57,723 - #21 1
INFO  16:08:57,723 - #46 ]
INFO  16:08:57,723 - #44 )
INFO  16:08:57,723 - #40 ;
INFO  16:08:57,723 - #14 read
INFO  16:08:57,723 - #43 (
INFO  16:08:57,723 - #20 niz
INFO  16:08:57,723 - #45 [
INFO  16:08:57,724 - #21 2
INFO  16:08:57,724 - #46 ]
INFO  16:08:57,724 - #44 )
INFO  16:08:57,724 - #40 ;
INFO  16:08:57,724 - #13 print
INFO  16:08:57,724 - #43 (
INFO  16:08:57,724 - #20 eol
INFO  16:08:57,724 - #44 )
INFO  16:08:57,724 - #40 ;
INFO  16:08:57,724 - #13 print
INFO  16:08:57,724 - #43 (
INFO  16:08:57,724 - #20 sum
INFO  16:08:57,724 - #43 (
INFO  16:08:57,724 - #20 sum
INFO  16:08:57,724 - #43 (
INFO  16:08:57,724 - #20 niz
INFO  16:08:57,724 - #45 [
INFO  16:08:57,725 - #21 0
INFO  16:08:57,725 - #46 ]
INFO  16:08:57,725 - #41 ,
INFO  16:08:57,725 - #20 niz
INFO  16:08:57,725 - #45 [
INFO  16:08:57,725 - #21 1
INFO  16:08:57,725 - #46 ]
INFO  16:08:57,725 - #44 )
INFO  16:08:57,725 - #41 ,
INFO  16:08:57,725 - #20 niz
INFO  16:08:57,725 - #45 [
INFO  16:08:57,725 - #21 2
INFO  16:08:57,725 - #46 ]
INFO  16:08:57,725 - #44 )
INFO  16:08:57,725 - #44 )
INFO  16:08:57,725 - #40 ;
INFO  16:08:57,725 - #13 print
INFO  16:08:57,725 - #43 (
INFO  16:08:57,726 - #20 eol
INFO  16:08:57,726 - #44 )
INFO  16:08:57,726 - #40 ;
INFO  16:08:57,726 - #13 print
INFO  16:08:57,726 - #43 (
INFO  16:08:57,726 - #20 inkrement
INFO  16:08:57,726 - #43 (
INFO  16:08:57,726 - #20 niz
INFO  16:08:57,726 - #45 [
INFO  16:08:57,726 - #21 2
INFO  16:08:57,726 - #46 ]
INFO  16:08:57,726 - #41 ,
INFO  16:08:57,726 - #21 2
INFO  16:08:57,726 - #44 )
INFO  16:08:57,726 - #44 )
INFO  16:08:57,726 - #40 ;
INFO  16:08:57,726 - #13 print
INFO  16:08:57,726 - #43 (
INFO  16:08:57,727 - #20 verify
INFO  16:08:57,727 - #43 (
INFO  16:08:57,727 - #44 )
INFO  16:08:57,727 - #49 ?
INFO  16:08:57,727 - #22 t
INFO  16:08:57,727 - #50 :
INFO  16:08:57,727 - #22 f
INFO  16:08:57,727 - #44 )
INFO  16:08:57,727 - #40 ;
INFO  16:08:57,727 - #48 }
INFO  16:08:57,727 - #48 }
INFO  16:08:57,728 - 

================SINTAKSNO STABLO====================


INFO  16:08:57,737 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclMulti(
          ProgramDeclEps(
          ) [ProgramDeclEps]
          PartConstDeclaration(
            ConstDeclaration(
              Type(
               int
              ) [Type]
              ConstSingle(
                ConstPart(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [ConstPart]
              ) [ConstSingle]
            ) [ConstDeclaration]
          ) [PartConstDeclaration]
        ) [ProgramDeclMulti]
        PartVarDeclaration(
          GlobalVarDeclaration(
            Type(
             int
            ) [Type]
            GlobalVarSingle(
              GlobalVarNormal(
               i
              ) [GlobalVarNormal]
            ) [GlobalVarSingle]
          ) [GlobalVarDeclaration]
        ) [PartVarDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           bool
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             ibool
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDecMulti(
        MethodDeclSingle(
          MethodTypeDeclaration(
            MethodType2(
              MethodTypeName(
                Type(
                 int
                ) [Type]
               sum
              ) [MethodTypeName]
              ParamMulti(
                ParamSingle(
                  ParamNormal(
                    Type(
                     int
                    ) [Type]
                   z
                  ) [ParamNormal]
                ) [ParamSingle]
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 d
                ) [ParamNormal]
              ) [ParamMulti]
              StatementSingle(
                StmtReturnExpr(
                  ExprOne(
                    ExprAddop(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             z
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                      AddopPlus(
                      ) [AddopPlus]
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           d
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprAddop]
                  ) [ExprOne]
                ) [StmtReturnExpr]
              ) [StatementSingle]
            ) [MethodType2]
          ) [MethodTypeDeclaration]
        ) [MethodDeclSingle]
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             inkrement
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 a
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               inc
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   pom
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementMulti(
              StatementSingle(
                StmtIfElse(
                  StmtIfBody(
                    IfCond(
                      CondOne(
                        CondTermOne(
                          CondFactTwo(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     inc
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                            RelopEQ(
                            ) [RelopEQ]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     jedan
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactTwo]
                        ) [CondTermOne]
                      ) [CondOne]
                    ) [IfCond]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         pom
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StmtIfBody]
                  StmtIf(
                    StmtIfBody(
                      IfCond(
                        CondOne(
                          CondTermOne(
                            CondFactTwo(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       inc
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                              RelopEQ(
                              ) [RelopEQ]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [CondFactTwo]
                          ) [CondTermOne]
                        ) [CondOne]
                      ) [IfCond]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           pom
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     a
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StmtIfBody]
                  ) [StmtIf]
                ) [StmtIfElse]
              ) [StatementSingle]
              StmtReturnExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FuncCallParams(
                        DesignatorSimple(
                         sum
                        ) [DesignatorSimple]
                        ActParsMulti(
                          ActParsSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     a
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsSingle]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   pom
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [ActParsMulti]
                      ) [FuncCallParams]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementMulti]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDecMulti]
      MethodTypeDeclaration(
        MethodType6(
          MethodTypeName(
            Type(
             bool
            ) [Type]
           verify
          ) [MethodTypeName]
          StatementMulti(
            StatementSingle(
              StmtPrint(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorCharConst(
                       v
                      ) [FactorCharConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtPrint]
            ) [StatementSingle]
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorBoolConst(
                     false
                    ) [FactorBoolConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementMulti]
        ) [MethodType6]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementMulti(
                                                  StatementSingle(
                                                    StmtIfElse(
                                                      StmtIfBody(
                                                        IfCond(
                                                          CondOne(
                                                            CondTermOne(
                                                              CondFactTwo(
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       1
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                                RelopNE(
                                                                ) [RelopNE]
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       1
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                              ) [CondFactTwo]
                                                            ) [CondTermOne]
                                                          ) [CondOne]
                                                        ) [IfCond]
                                                        StmtPrint(
                                                          ExprOne(
                                                            ExprNeg(
                                                              TermSingle(
                                                                FactorNumConst(
                                                                 6
                                                                ) [FactorNumConst]
                                                              ) [TermSingle]
                                                            ) [ExprNeg]
                                                          ) [ExprOne]
                                                        ) [StmtPrint]
                                                      ) [StmtIfBody]
                                                      StmtPrint(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               0
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [StmtPrint]
                                                    ) [StmtIfElse]
                                                  ) [StatementSingle]
                                                  StmtDesign(
                                                    DesignatorAssignment(
                                                      DesignatorSimple(
                                                       ibool
                                                      ) [DesignatorSimple]
                                                      AssignmentExpr(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorBoolConst(
                                                               false
                                                              ) [FactorBoolConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [AssignmentExpr]
                                                    ) [DesignatorAssignment]
                                                  ) [StmtDesign]
                                                ) [StatementMulti]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     i
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             0
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDoWhile(
                                                DoHead(
                                                ) [DoHead]
                                                Stmt(
                                                  StatementMulti(
                                                    StatementSingle(
                                                      StmtIf(
                                                        StmtIfBody(
                                                          IfCond(
                                                            CondOne(
                                                              CondTermOne(
                                                                CondFactTwo(
                                                                  ExprOne(
                                                                    ExprSingle(
                                                                      TermSingle(
                                                                        FactorDesignator(
                                                                          DesignatorSimple(
                                                                           i
                                                                          ) [DesignatorSimple]
                                                                        ) [FactorDesignator]
                                                                      ) [TermSingle]
                                                                    ) [ExprSingle]
                                                                  ) [ExprOne]
                                                                  RelopEQ(
                                                                  ) [RelopEQ]
                                                                  ExprOne(
                                                                    ExprSingle(
                                                                      TermSingle(
                                                                        FactorNumConst(
                                                                         2
                                                                        ) [FactorNumConst]
                                                                      ) [TermSingle]
                                                                    ) [ExprSingle]
                                                                  ) [ExprOne]
                                                                ) [CondFactTwo]
                                                              ) [CondTermOne]
                                                            ) [CondOne]
                                                          ) [IfCond]
                                                          StmtDesign(
                                                            DesignatorAssignment(
                                                              DesignatorSimple(
                                                               ibool
                                                              ) [DesignatorSimple]
                                                              AssignmentExpr(
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorBoolConst(
                                                                       true
                                                                      ) [FactorBoolConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                              ) [AssignmentExpr]
                                                            ) [DesignatorAssignment]
                                                          ) [StmtDesign]
                                                        ) [StmtIfBody]
                                                      ) [StmtIf]
                                                    ) [StatementSingle]
                                                    StmtDesign(
                                                      DesignatorIncrement(
                                                        DesignatorSimple(
                                                         i
                                                        ) [DesignatorSimple]
                                                      ) [DesignatorIncrement]
                                                    ) [StmtDesign]
                                                  ) [StatementMulti]
                                                ) [Stmt]
                                                CondOne(
                                                  CondTermOne(
                                                    CondFactTwo(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorDesignator(
                                                              DesignatorSimple(
                                                               i
                                                              ) [DesignatorSimple]
                                                            ) [FactorDesignator]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                      RelopLT(
                                                      ) [RelopLT]
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             5
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [CondFactTwo]
                                                  ) [CondTermOne]
                                                ) [CondOne]
                                              ) [StmtDoWhile]
                                            ) [StatementMulti]
                                            StmtIf(
                                              StmtIfBody(
                                                IfCond(
                                                  CondOne(
                                                    CondTermOne(
                                                      CondFactOne(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorDesignator(
                                                                DesignatorSimple(
                                                                 ibool
                                                                ) [DesignatorSimple]
                                                              ) [FactorDesignator]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [CondFactOne]
                                                    ) [CondTermOne]
                                                  ) [CondOne]
                                                ) [IfCond]
                                                StmtIfElse(
                                                  StmtIfBody(
                                                    IfCond(
                                                      CondOne(
                                                        CondTermOne(
                                                          CondFactTwo(
                                                            ExprOne(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorDesignator(
                                                                    DesignatorSimple(
                                                                     i
                                                                    ) [DesignatorSimple]
                                                                  ) [FactorDesignator]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [ExprOne]
                                                            RelopEQ(
                                                            ) [RelopEQ]
                                                            ExprOne(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorNumConst(
                                                                   5
                                                                  ) [FactorNumConst]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [ExprOne]
                                                          ) [CondFactTwo]
                                                        ) [CondTermOne]
                                                      ) [CondOne]
                                                    ) [IfCond]
                                                    StmtPrint(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             1
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [StmtPrint]
                                                  ) [StmtIfBody]
                                                  StmtPrint(
                                                    ExprOne(
                                                      ExprNeg(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           1
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprNeg]
                                                    ) [ExprOne]
                                                  ) [StmtPrint]
                                                ) [StmtIfElse]
                                              ) [StmtIfBody]
                                            ) [StmtIf]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               niz
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNewArray(
                                                        Type(
                                                         int
                                                        ) [Type]
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               3
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [FactorNewArray]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorArray(
                                             niz
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     0
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [DesignatorArray]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     1
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorArray(
                                           niz
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   1
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [DesignatorArray]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   2
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorArray(
                                         niz
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 2
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [DesignatorArray]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprAddop(
                                              ExprSingle(
                                                TermSingle(
                                                  FuncCallParams(
                                                    DesignatorSimple(
                                                     sum
                                                    ) [DesignatorSimple]
                                                    ActParsMulti(
                                                      ActParsSingle(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorDesignator(
                                                                DesignatorArray(
                                                                 niz
                                                                  ExprOne(
                                                                    ExprSingle(
                                                                      TermSingle(
                                                                        FactorNumConst(
                                                                         1
                                                                        ) [FactorNumConst]
                                                                      ) [TermSingle]
                                                                    ) [ExprSingle]
                                                                  ) [ExprOne]
                                                                ) [DesignatorArray]
                                                              ) [FactorDesignator]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [ActParsSingle]
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorDesignator(
                                                              DesignatorArray(
                                                               niz
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       0
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                              ) [DesignatorArray]
                                                            ) [FactorDesignator]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [ActParsMulti]
                                                  ) [FuncCallParams]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                              AddopPlus(
                                              ) [AddopPlus]
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprAddop]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtIfElse(
                                    StmtIfBody(
                                      IfCond(
                                        CondTwo(
                                          CondOne(
                                            CondTermOne(
                                              CondFactOne(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FuncCall(
                                                        DesignatorSimple(
                                                         verify
                                                        ) [DesignatorSimple]
                                                      ) [FuncCall]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [CondFactOne]
                                            ) [CondTermOne]
                                          ) [CondOne]
                                          CondTermOne(
                                            CondFactTwo(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorDesignator(
                                                      DesignatorArray(
                                                       niz
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               2
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [DesignatorArray]
                                                    ) [FactorDesignator]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                              RelopEQ(
                                              ) [RelopEQ]
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     4
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [CondFactTwo]
                                          ) [CondTermOne]
                                        ) [CondTwo]
                                      ) [IfCond]
                                      StmtPrint(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FuncCallParams(
                                                DesignatorSimple(
                                                 ord
                                                ) [DesignatorSimple]
                                                ActParsSingle(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorCharConst(
                                                         A
                                                        ) [FactorCharConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [ActParsSingle]
                                              ) [FuncCallParams]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [StmtPrint]
                                    ) [StmtIfBody]
                                    StmtPrint(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FuncCallParams(
                                              DesignatorSimple(
                                               ord
                                              ) [DesignatorSimple]
                                              ActParsSingle(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorCharConst(
                                                       a
                                                      ) [FactorCharConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [ActParsSingle]
                                            ) [FuncCallParams]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [StmtPrint]
                                  ) [StmtIfElse]
                                ) [StatementMulti]
                                StmtPrint(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorSimple(
                                           eol
                                          ) [DesignatorSimple]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [StmtPrint]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   i
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           0
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDoWhile(
                              DoHead(
                              ) [DoHead]
                              Stmt(
                                StatementMulti(
                                  StatementMulti(
                                    StatementSingle(
                                      StmtIf(
                                        StmtIfBody(
                                          IfCond(
                                            CondOne(
                                              CondTermOne(
                                                CondFactTwo(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorSimple(
                                                           i
                                                          ) [DesignatorSimple]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                  RelopEQ(
                                                  ) [RelopEQ]
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         3
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [CondFactTwo]
                                              ) [CondTermOne]
                                            ) [CondOne]
                                          ) [IfCond]
                                          Stmt(
                                            StatementMulti(
                                              StatementSingle(
                                                StmtDesign(
                                                  DesignatorIncrement(
                                                    DesignatorSimple(
                                                     i
                                                    ) [DesignatorSimple]
                                                  ) [DesignatorIncrement]
                                                ) [StmtDesign]
                                              ) [StatementSingle]
                                              StmtContinue(
                                              ) [StmtContinue]
                                            ) [StatementMulti]
                                          ) [Stmt]
                                        ) [StmtIfBody]
                                      ) [StmtIf]
                                    ) [StatementSingle]
                                    StmtIf(
                                      StmtIfBody(
                                        IfCond(
                                          CondOne(
                                            CondTermOne(
                                              CondFactTwo(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorSimple(
                                                         i
                                                        ) [DesignatorSimple]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                                RelopEQ(
                                                ) [RelopEQ]
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       4
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [CondFactTwo]
                                            ) [CondTermOne]
                                          ) [CondOne]
                                        ) [IfCond]
                                        StmtBreak(
                                        ) [StmtBreak]
                                      ) [StmtIfBody]
                                    ) [StmtIf]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       i
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FuncCallParams(
                                                DesignatorSimple(
                                                 inkrement
                                                ) [DesignatorSimple]
                                                ActParsMulti(
                                                  ActParsSingle(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorDesignator(
                                                            DesignatorSimple(
                                                             i
                                                            ) [DesignatorSimple]
                                                          ) [FactorDesignator]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [ActParsSingle]
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [ActParsMulti]
                                              ) [FuncCallParams]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                              ) [Stmt]
                              CondOne(
                                CondTermOne(
                                  CondFactTwo(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorSimple(
                                             i
                                            ) [DesignatorSimple]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                    RelopLT(
                                    ) [RelopLT]
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           10
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [CondFactTwo]
                                ) [CondTermOne]
                              ) [CondOne]
                            ) [StmtDoWhile]
                          ) [StatementMulti]
                          StmtIfElse(
                            StmtIfBody(
                              IfCond(
                                CondOne(
                                  CondTermTwo(
                                    CondTermOne(
                                      CondFactTwo(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorDesignator(
                                                DesignatorSimple(
                                                 i
                                                ) [DesignatorSimple]
                                              ) [FactorDesignator]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                        RelopEQ(
                                        ) [RelopEQ]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               3
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [CondFactTwo]
                                    ) [CondTermOne]
                                    CondFactOne(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FuncCall(
                                              DesignatorSimple(
                                               verify
                                              ) [DesignatorSimple]
                                            ) [FuncCall]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [CondFactOne]
                                  ) [CondTermTwo]
                                ) [CondOne]
                              ) [IfCond]
                              StmtPrint(
                                ExprOne(
                                  ExprNeg(
                                    TermSingle(
                                      FactorNumConst(
                                       4
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprNeg]
                                ) [ExprOne]
                              ) [StmtPrint]
                            ) [StmtIfBody]
                            StmtPrint(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     4
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [StmtPrint]
                          ) [StmtIfElse]
                        ) [StatementMulti]
                        StmtRead(
                          DesignatorArray(
                           niz
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   0
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [DesignatorArray]
                        ) [StmtRead]
                      ) [StatementMulti]
                      StmtRead(
                        DesignatorArray(
                         niz
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [DesignatorArray]
                      ) [StmtRead]
                    ) [StatementMulti]
                    StmtRead(
                      DesignatorArray(
                       niz
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [DesignatorArray]
                    ) [StmtRead]
                  ) [StatementMulti]
                  StmtPrint(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             eol
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [StmtPrint]
                ) [StatementMulti]
                StmtPrint(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           sum
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FuncCallParams(
                                      DesignatorSimple(
                                       sum
                                      ) [DesignatorSimple]
                                      ActParsMulti(
                                        ActParsSingle(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorDesignator(
                                                  DesignatorArray(
                                                   niz
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           0
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [DesignatorArray]
                                                ) [FactorDesignator]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [ActParsSingle]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorDesignator(
                                                DesignatorArray(
                                                 niz
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [DesignatorArray]
                                              ) [FactorDesignator]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [ActParsMulti]
                                    ) [FuncCallParams]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorArray(
                                     niz
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             2
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [DesignatorArray]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [StmtPrint]
              ) [StatementMulti]
              StmtPrint(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         eol
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtPrint]
            ) [StatementMulti]
            StmtPrint(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FuncCallParams(
                      DesignatorSimple(
                       inkrement
                      ) [DesignatorSimple]
                      ActParsMulti(
                        ActParsSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorArray(
                                   niz
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           2
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [DesignatorArray]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [ActParsSingle]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [ActParsMulti]
                    ) [FuncCallParams]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtPrint]
          ) [StatementMulti]
          StmtPrint(
            ExprTernary(
              ExprSingle(
                TermSingle(
                  FuncCall(
                    DesignatorSimple(
                     verify
                    ) [DesignatorSimple]
                  ) [FuncCall]
                ) [TermSingle]
              ) [ExprSingle]
              ExprSingle(
                TermSingle(
                  FactorCharConst(
                   t
                  ) [FactorCharConst]
                ) [TermSingle]
              ) [ExprSingle]
              ExprSingle(
                TermSingle(
                  FactorCharConst(
                   f
                  ) [FactorCharConst]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprTernary]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:08:57,740 - 

================SEMANTICKA OBRADA====================


INFO  16:08:57,751 - Deklarisana konstanta 'jedan' na liniji 5
INFO  16:08:57,751 - Deklarisana globalna promenljiva 'i' na liniji 7
INFO  16:08:57,751 - Deklarisana globalna promenljiva 'ibool' na liniji 8
INFO  16:08:57,751 - Deklarisan globalni niz 'niz' na liniji 10
INFO  16:08:57,752 - Formalni parametar funkcije sum: 'z' na liniji 14
INFO  16:08:57,752 - Formalni parametar funkcije sum: 'd' na liniji 14
INFO  16:08:57,752 - Formalni parametar funkcije inkrement: 'a' na liniji 19
INFO  16:08:57,752 - Formalni parametar funkcije inkrement: 'inc' na liniji 19
INFO  16:08:57,752 - Deklarisana promenljiva 'pom' na liniji 20
INFO  16:08:57,752 - Pronadjen poziv funkcije 'sum' na liniji 25
INFO  16:08:57,752 - Pristup elementu niza 'niz' na liniji 50
INFO  16:08:57,752 - Pristup elementu niza 'niz' na liniji 51
INFO  16:08:57,752 - Pristup elementu niza 'niz' na liniji 52
INFO  16:08:57,752 - Pristup elementu niza 'niz' na liniji 52
INFO  16:08:57,752 - Pristup elementu niza 'niz' na liniji 52
INFO  16:08:57,752 - Pronadjen poziv funkcije 'sum' na liniji 52
INFO  16:08:57,752 - Pronadjen poziv funkcije 'verify' na liniji 53
INFO  16:08:57,753 - Pristup elementu niza 'niz' na liniji 53
INFO  16:08:57,753 - Pronadjen poziv funkcije 'ord' na liniji 53
INFO  16:08:57,753 - Pronadjen poziv funkcije 'ord' na liniji 54
INFO  16:08:57,753 - Pronadjen poziv funkcije 'inkrement' na liniji 65
INFO  16:08:57,753 - Pronadjen poziv funkcije 'verify' na liniji 68
INFO  16:08:57,753 - Pristup elementu niza 'niz' na liniji 71
INFO  16:08:57,753 - Pristup elementu niza 'niz' na liniji 72
INFO  16:08:57,753 - Pristup elementu niza 'niz' na liniji 73
INFO  16:08:57,753 - Pristup elementu niza 'niz' na liniji 76
INFO  16:08:57,753 - Pristup elementu niza 'niz' na liniji 76
INFO  16:08:57,753 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  16:08:57,753 - Pristup elementu niza 'niz' na liniji 76
INFO  16:08:57,753 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  16:08:57,754 - Pristup elementu niza 'niz' na liniji 79
INFO  16:08:57,754 - Pronadjen poziv funkcije 'inkrement' na liniji 79
INFO  16:08:57,754 - Pronadjen poziv funkcije 'verify' na liniji 81
INFO  16:08:57,754 - ===================================
INFO  16:08:57,754 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  16:08:57,760 - Parsiranje uspesno zavrseno!
INFO  16:14:41,720 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:14:41,768 - #2 program
INFO  16:14:41,768 - #20 test302
INFO  16:14:41,768 - #7 const
INFO  16:14:41,769 - #20 int
INFO  16:14:41,769 - #20 jedan
INFO  16:14:41,769 - #37 =
INFO  16:14:41,769 - #21 1
INFO  16:14:41,769 - #40 ;
INFO  16:14:41,770 - #20 int
INFO  16:14:41,770 - #20 i
INFO  16:14:41,770 - #40 ;
INFO  16:14:41,770 - #20 bool
INFO  16:14:41,771 - #20 ibool
INFO  16:14:41,771 - #40 ;
INFO  16:14:41,771 - #20 int
INFO  16:14:41,771 - #20 niz
INFO  16:14:41,771 - #45 [
INFO  16:14:41,771 - #46 ]
INFO  16:14:41,771 - #40 ;
INFO  16:14:41,771 - #47 {
INFO  16:14:41,771 - #20 int
INFO  16:14:41,771 - #20 sum
INFO  16:14:41,771 - #43 (
INFO  16:14:41,772 - #20 int
INFO  16:14:41,772 - #20 z
INFO  16:14:41,772 - #41 ,
INFO  16:14:41,772 - #20 int
INFO  16:14:41,772 - #20 d
INFO  16:14:41,772 - #44 )
INFO  16:14:41,772 - #47 {
INFO  16:14:41,772 - #15 return
INFO  16:14:41,772 - #20 z
INFO  16:14:41,773 - #24 +
INFO  16:14:41,773 - #20 d
INFO  16:14:41,774 - #40 ;
INFO  16:14:41,774 - #48 }
INFO  16:14:41,774 - #20 int
INFO  16:14:41,774 - #20 inkrement
INFO  16:14:41,774 - #43 (
INFO  16:14:41,774 - #20 int
INFO  16:14:41,774 - #20 a
INFO  16:14:41,774 - #41 ,
INFO  16:14:41,775 - #20 int
INFO  16:14:41,775 - #20 inc
INFO  16:14:41,775 - #44 )
INFO  16:14:41,775 - #20 int
INFO  16:14:41,775 - #20 pom
INFO  16:14:41,775 - #40 ;
INFO  16:14:41,775 - #47 {
INFO  16:14:41,775 - #8 if
INFO  16:14:41,776 - #43 (
INFO  16:14:41,776 - #20 inc
INFO  16:14:41,776 - #29 ==
INFO  16:14:41,776 - #20 jedan
INFO  16:14:41,777 - #44 )
INFO  16:14:41,778 - #20 pom
INFO  16:14:41,778 - #37 =
INFO  16:14:41,778 - #21 1
INFO  16:14:41,778 - #40 ;
INFO  16:14:41,778 - #6 else
INFO  16:14:41,779 - #8 if
INFO  16:14:41,779 - #43 (
INFO  16:14:41,779 - #20 inc
INFO  16:14:41,779 - #29 ==
INFO  16:14:41,779 - #21 2
INFO  16:14:41,780 - #44 )
INFO  16:14:41,783 - #20 pom
INFO  16:14:41,783 - #37 =
INFO  16:14:41,783 - #20 a
INFO  16:14:41,783 - #40 ;
INFO  16:14:41,783 - #15 return
INFO  16:14:41,783 - #20 sum
INFO  16:14:41,783 - #43 (
INFO  16:14:41,784 - #20 a
INFO  16:14:41,784 - #41 ,
INFO  16:14:41,784 - #23 true
INFO  16:14:41,784 - #44 )
INFO  16:14:41,784 - #40 ;
INFO  16:14:41,784 - #48 }
INFO  16:14:41,784 - #20 bool
INFO  16:14:41,785 - #20 verify
INFO  16:14:41,785 - #43 (
INFO  16:14:41,785 - #44 )
INFO  16:14:41,785 - #47 {
INFO  16:14:41,785 - #13 print
INFO  16:14:41,785 - #43 (
INFO  16:14:41,785 - #22 v
INFO  16:14:41,785 - #44 )
INFO  16:14:41,785 - #40 ;
INFO  16:14:41,785 - #15 return
INFO  16:14:41,786 - #23 false
INFO  16:14:41,786 - #40 ;
INFO  16:14:41,786 - #48 }
INFO  16:14:41,786 - #16 void
INFO  16:14:41,786 - #20 main
INFO  16:14:41,786 - #43 (
INFO  16:14:41,786 - #44 )
INFO  16:14:41,786 - #47 {
INFO  16:14:41,786 - #8 if
INFO  16:14:41,786 - #43 (
INFO  16:14:41,786 - #21 1
INFO  16:14:41,787 - #30 !=
INFO  16:14:41,787 - #21 1
INFO  16:14:41,787 - #44 )
INFO  16:14:41,788 - #13 print
INFO  16:14:41,788 - #43 (
INFO  16:14:41,788 - #25 -
INFO  16:14:41,788 - #21 6
INFO  16:14:41,788 - #44 )
INFO  16:14:41,788 - #40 ;
INFO  16:14:41,788 - #6 else
INFO  16:14:41,788 - #13 print
INFO  16:14:41,788 - #43 (
INFO  16:14:41,788 - #21 0
INFO  16:14:41,788 - #44 )
INFO  16:14:41,788 - #40 ;
INFO  16:14:41,788 - #20 ibool
INFO  16:14:41,788 - #37 =
INFO  16:14:41,789 - #23 false
INFO  16:14:41,789 - #40 ;
INFO  16:14:41,789 - #20 i
INFO  16:14:41,789 - #37 =
INFO  16:14:41,789 - #21 0
INFO  16:14:41,789 - #40 ;
INFO  16:14:41,789 - #10 do
INFO  16:14:41,789 - #47 {
INFO  16:14:41,790 - #8 if
INFO  16:14:41,790 - #43 (
INFO  16:14:41,790 - #20 i
INFO  16:14:41,790 - #29 ==
INFO  16:14:41,790 - #21 2
INFO  16:14:41,790 - #44 )
INFO  16:14:41,790 - #20 ibool
INFO  16:14:41,790 - #37 =
INFO  16:14:41,790 - #23 true
INFO  16:14:41,790 - #40 ;
INFO  16:14:41,791 - #20 i
INFO  16:14:41,791 - #38 ++
INFO  16:14:41,791 - #40 ;
INFO  16:14:41,791 - #48 }
INFO  16:14:41,791 - #11 while
INFO  16:14:41,791 - #43 (
INFO  16:14:41,791 - #20 i
INFO  16:14:41,791 - #33 <
INFO  16:14:41,791 - #21 5
INFO  16:14:41,791 - #44 )
INFO  16:14:41,792 - #40 ;
INFO  16:14:41,792 - #8 if
INFO  16:14:41,792 - #43 (
INFO  16:14:41,795 - #20 ibool
INFO  16:14:41,795 - #44 )
INFO  16:14:41,795 - #8 if
INFO  16:14:41,795 - #43 (
INFO  16:14:41,795 - #20 i
INFO  16:14:41,795 - #29 ==
INFO  16:14:41,795 - #21 5
INFO  16:14:41,795 - #44 )
INFO  16:14:41,795 - #13 print
INFO  16:14:41,795 - #43 (
INFO  16:14:41,795 - #21 1
INFO  16:14:41,795 - #44 )
INFO  16:14:41,795 - #40 ;
INFO  16:14:41,795 - #6 else
INFO  16:14:41,795 - #13 print
INFO  16:14:41,795 - #43 (
INFO  16:14:41,795 - #25 -
INFO  16:14:41,795 - #21 1
INFO  16:14:41,795 - #44 )
INFO  16:14:41,796 - #40 ;
INFO  16:14:41,796 - #20 niz
INFO  16:14:41,796 - #37 =
INFO  16:14:41,796 - #12 new
INFO  16:14:41,796 - #20 int
INFO  16:14:41,796 - #45 [
INFO  16:14:41,796 - #21 3
INFO  16:14:41,796 - #46 ]
INFO  16:14:41,796 - #40 ;
INFO  16:14:41,796 - #20 niz
INFO  16:14:41,796 - #45 [
INFO  16:14:41,796 - #21 0
INFO  16:14:41,796 - #46 ]
INFO  16:14:41,796 - #37 =
INFO  16:14:41,797 - #21 1
INFO  16:14:41,797 - #40 ;
INFO  16:14:41,797 - #20 niz
INFO  16:14:41,797 - #45 [
INFO  16:14:41,797 - #21 1
INFO  16:14:41,797 - #46 ]
INFO  16:14:41,797 - #37 =
INFO  16:14:41,797 - #21 2
INFO  16:14:41,797 - #40 ;
INFO  16:14:41,797 - #20 niz
INFO  16:14:41,797 - #45 [
INFO  16:14:41,797 - #21 2
INFO  16:14:41,797 - #46 ]
INFO  16:14:41,797 - #37 =
INFO  16:14:41,797 - #20 sum
INFO  16:14:41,797 - #43 (
INFO  16:14:41,798 - #20 niz
INFO  16:14:41,798 - #45 [
INFO  16:14:41,798 - #21 1
INFO  16:14:41,798 - #46 ]
INFO  16:14:41,798 - #41 ,
INFO  16:14:41,798 - #20 niz
INFO  16:14:41,798 - #45 [
INFO  16:14:41,798 - #21 0
INFO  16:14:41,798 - #46 ]
INFO  16:14:41,798 - #44 )
INFO  16:14:41,798 - #24 +
INFO  16:14:41,798 - #21 1
INFO  16:14:41,798 - #40 ;
INFO  16:14:41,798 - #8 if
INFO  16:14:41,798 - #43 (
INFO  16:14:41,798 - #20 verify
INFO  16:14:41,798 - #43 (
INFO  16:14:41,799 - #44 )
INFO  16:14:41,799 - #36 ||
INFO  16:14:41,799 - #20 niz
INFO  16:14:41,799 - #45 [
INFO  16:14:41,799 - #21 2
INFO  16:14:41,799 - #46 ]
INFO  16:14:41,799 - #29 ==
INFO  16:14:41,799 - #21 4
INFO  16:14:41,799 - #44 )
INFO  16:14:41,799 - #13 print
INFO  16:14:41,799 - #43 (
INFO  16:14:41,799 - #20 ord
INFO  16:14:41,799 - #43 (
INFO  16:14:41,799 - #22 A
INFO  16:14:41,799 - #44 )
INFO  16:14:41,800 - #44 )
INFO  16:14:41,800 - #40 ;
INFO  16:14:41,800 - #6 else
INFO  16:14:41,800 - #13 print
INFO  16:14:41,800 - #43 (
INFO  16:14:41,800 - #20 ord
INFO  16:14:41,800 - #43 (
INFO  16:14:41,800 - #22 a
INFO  16:14:41,800 - #44 )
INFO  16:14:41,800 - #44 )
INFO  16:14:41,800 - #40 ;
INFO  16:14:41,800 - #13 print
INFO  16:14:41,800 - #43 (
INFO  16:14:41,800 - #20 eol
INFO  16:14:41,800 - #44 )
INFO  16:14:41,800 - #40 ;
INFO  16:14:41,800 - #20 i
INFO  16:14:41,800 - #37 =
INFO  16:14:41,800 - #21 0
INFO  16:14:41,800 - #40 ;
INFO  16:14:41,800 - #10 do
INFO  16:14:41,801 - #47 {
INFO  16:14:41,801 - #8 if
INFO  16:14:41,801 - #43 (
INFO  16:14:41,801 - #20 i
INFO  16:14:41,801 - #29 ==
INFO  16:14:41,801 - #21 3
INFO  16:14:41,801 - #44 )
INFO  16:14:41,801 - #47 {
INFO  16:14:41,801 - #20 i
INFO  16:14:41,801 - #38 ++
INFO  16:14:41,801 - #40 ;
INFO  16:14:41,801 - #18 continue
INFO  16:14:41,801 - #40 ;
INFO  16:14:41,801 - #48 }
INFO  16:14:41,802 - #8 if
INFO  16:14:41,802 - #43 (
INFO  16:14:41,802 - #20 i
INFO  16:14:41,802 - #29 ==
INFO  16:14:41,802 - #21 4
INFO  16:14:41,802 - #44 )
INFO  16:14:41,802 - #3 break
INFO  16:14:41,802 - #40 ;
INFO  16:14:41,802 - #20 i
INFO  16:14:41,803 - #37 =
INFO  16:14:41,803 - #20 inkrement
INFO  16:14:41,803 - #43 (
INFO  16:14:41,803 - #20 i
INFO  16:14:41,803 - #41 ,
INFO  16:14:41,803 - #21 1
INFO  16:14:41,803 - #44 )
INFO  16:14:41,803 - #40 ;
INFO  16:14:41,804 - #48 }
INFO  16:14:41,804 - #11 while
INFO  16:14:41,804 - #43 (
INFO  16:14:41,804 - #20 i
INFO  16:14:41,804 - #33 <
INFO  16:14:41,804 - #21 10
INFO  16:14:41,804 - #44 )
INFO  16:14:41,804 - #40 ;
INFO  16:14:41,804 - #8 if
INFO  16:14:41,804 - #43 (
INFO  16:14:41,805 - #20 i
INFO  16:14:41,805 - #29 ==
INFO  16:14:41,805 - #21 3
INFO  16:14:41,805 - #35 &&
INFO  16:14:41,805 - #20 verify
INFO  16:14:41,805 - #43 (
INFO  16:14:41,805 - #44 )
INFO  16:14:41,805 - #44 )
INFO  16:14:41,805 - #13 print
INFO  16:14:41,805 - #43 (
INFO  16:14:41,805 - #25 -
INFO  16:14:41,805 - #21 4
INFO  16:14:41,805 - #44 )
INFO  16:14:41,806 - #40 ;
INFO  16:14:41,806 - #6 else
INFO  16:14:41,806 - #13 print
INFO  16:14:41,806 - #43 (
INFO  16:14:41,806 - #21 4
INFO  16:14:41,806 - #44 )
INFO  16:14:41,806 - #40 ;
INFO  16:14:41,806 - #14 read
INFO  16:14:41,806 - #43 (
INFO  16:14:41,806 - #20 niz
INFO  16:14:41,806 - #45 [
INFO  16:14:41,806 - #21 0
INFO  16:14:41,806 - #46 ]
INFO  16:14:41,806 - #44 )
INFO  16:14:41,806 - #40 ;
INFO  16:14:41,806 - #14 read
INFO  16:14:41,806 - #43 (
INFO  16:14:41,806 - #20 niz
INFO  16:14:41,806 - #45 [
INFO  16:14:41,807 - #21 1
INFO  16:14:41,807 - #46 ]
INFO  16:14:41,807 - #44 )
INFO  16:14:41,807 - #40 ;
INFO  16:14:41,807 - #14 read
INFO  16:14:41,807 - #43 (
INFO  16:14:41,807 - #20 niz
INFO  16:14:41,807 - #45 [
INFO  16:14:41,807 - #21 2
INFO  16:14:41,807 - #46 ]
INFO  16:14:41,807 - #44 )
INFO  16:14:41,807 - #40 ;
INFO  16:14:41,807 - #13 print
INFO  16:14:41,807 - #43 (
INFO  16:14:41,807 - #20 eol
INFO  16:14:41,807 - #44 )
INFO  16:14:41,807 - #40 ;
INFO  16:14:41,807 - #13 print
INFO  16:14:41,807 - #43 (
INFO  16:14:41,807 - #20 sum
INFO  16:14:41,807 - #43 (
INFO  16:14:41,807 - #20 sum
INFO  16:14:41,807 - #43 (
INFO  16:14:41,807 - #20 niz
INFO  16:14:41,807 - #45 [
INFO  16:14:41,808 - #21 0
INFO  16:14:41,808 - #46 ]
INFO  16:14:41,808 - #41 ,
INFO  16:14:41,808 - #20 niz
INFO  16:14:41,808 - #45 [
INFO  16:14:41,808 - #21 1
INFO  16:14:41,808 - #46 ]
INFO  16:14:41,808 - #44 )
INFO  16:14:41,808 - #41 ,
INFO  16:14:41,808 - #20 niz
INFO  16:14:41,808 - #45 [
INFO  16:14:41,808 - #21 2
INFO  16:14:41,808 - #46 ]
INFO  16:14:41,808 - #44 )
INFO  16:14:41,808 - #44 )
INFO  16:14:41,808 - #40 ;
INFO  16:14:41,808 - #13 print
INFO  16:14:41,809 - #43 (
INFO  16:14:41,809 - #20 eol
INFO  16:14:41,809 - #44 )
INFO  16:14:41,809 - #40 ;
INFO  16:14:41,809 - #13 print
INFO  16:14:41,809 - #43 (
INFO  16:14:41,809 - #20 inkrement
INFO  16:14:41,809 - #43 (
INFO  16:14:41,809 - #20 niz
INFO  16:14:41,809 - #45 [
INFO  16:14:41,809 - #21 2
INFO  16:14:41,809 - #46 ]
INFO  16:14:41,809 - #41 ,
INFO  16:14:41,809 - #21 2
INFO  16:14:41,809 - #44 )
INFO  16:14:41,809 - #44 )
INFO  16:14:41,809 - #40 ;
INFO  16:14:41,809 - #13 print
INFO  16:14:41,810 - #43 (
INFO  16:14:41,810 - #20 verify
INFO  16:14:41,810 - #43 (
INFO  16:14:41,810 - #44 )
INFO  16:14:41,810 - #49 ?
INFO  16:14:41,810 - #22 t
INFO  16:14:41,810 - #50 :
INFO  16:14:41,810 - #22 f
INFO  16:14:41,810 - #44 )
INFO  16:14:41,810 - #40 ;
INFO  16:14:41,810 - #48 }
INFO  16:14:41,810 - #48 }
INFO  16:14:41,811 - 

================SINTAKSNO STABLO====================


INFO  16:14:41,820 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclMulti(
          ProgramDeclEps(
          ) [ProgramDeclEps]
          PartConstDeclaration(
            ConstDeclaration(
              Type(
               int
              ) [Type]
              ConstSingle(
                ConstPart(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [ConstPart]
              ) [ConstSingle]
            ) [ConstDeclaration]
          ) [PartConstDeclaration]
        ) [ProgramDeclMulti]
        PartVarDeclaration(
          GlobalVarDeclaration(
            Type(
             int
            ) [Type]
            GlobalVarSingle(
              GlobalVarNormal(
               i
              ) [GlobalVarNormal]
            ) [GlobalVarSingle]
          ) [GlobalVarDeclaration]
        ) [PartVarDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           bool
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             ibool
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDecMulti(
        MethodDeclSingle(
          MethodTypeDeclaration(
            MethodType2(
              MethodTypeName(
                Type(
                 int
                ) [Type]
               sum
              ) [MethodTypeName]
              ParamMulti(
                ParamSingle(
                  ParamNormal(
                    Type(
                     int
                    ) [Type]
                   z
                  ) [ParamNormal]
                ) [ParamSingle]
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 d
                ) [ParamNormal]
              ) [ParamMulti]
              StatementSingle(
                StmtReturnExpr(
                  ExprOne(
                    ExprAddop(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             z
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                      AddopPlus(
                      ) [AddopPlus]
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           d
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprAddop]
                  ) [ExprOne]
                ) [StmtReturnExpr]
              ) [StatementSingle]
            ) [MethodType2]
          ) [MethodTypeDeclaration]
        ) [MethodDeclSingle]
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             inkrement
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 a
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               inc
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   pom
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementMulti(
              StatementSingle(
                StmtIfElse(
                  StmtIfBody(
                    IfCond(
                      CondOne(
                        CondTermOne(
                          CondFactTwo(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     inc
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                            RelopEQ(
                            ) [RelopEQ]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     jedan
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactTwo]
                        ) [CondTermOne]
                      ) [CondOne]
                    ) [IfCond]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         pom
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StmtIfBody]
                  StmtIf(
                    StmtIfBody(
                      IfCond(
                        CondOne(
                          CondTermOne(
                            CondFactTwo(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       inc
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                              RelopEQ(
                              ) [RelopEQ]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [CondFactTwo]
                          ) [CondTermOne]
                        ) [CondOne]
                      ) [IfCond]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           pom
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     a
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StmtIfBody]
                  ) [StmtIf]
                ) [StmtIfElse]
              ) [StatementSingle]
              StmtReturnExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FuncCallParams(
                        DesignatorSimple(
                         sum
                        ) [DesignatorSimple]
                        ActParsMulti(
                          ActParsSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     a
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsSingle]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 true
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [ActParsMulti]
                      ) [FuncCallParams]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementMulti]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDecMulti]
      MethodTypeDeclaration(
        MethodType6(
          MethodTypeName(
            Type(
             bool
            ) [Type]
           verify
          ) [MethodTypeName]
          StatementMulti(
            StatementSingle(
              StmtPrint(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorCharConst(
                       v
                      ) [FactorCharConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtPrint]
            ) [StatementSingle]
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorBoolConst(
                     false
                    ) [FactorBoolConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementMulti]
        ) [MethodType6]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementMulti(
                                                  StatementSingle(
                                                    StmtIfElse(
                                                      StmtIfBody(
                                                        IfCond(
                                                          CondOne(
                                                            CondTermOne(
                                                              CondFactTwo(
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       1
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                                RelopNE(
                                                                ) [RelopNE]
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       1
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                              ) [CondFactTwo]
                                                            ) [CondTermOne]
                                                          ) [CondOne]
                                                        ) [IfCond]
                                                        StmtPrint(
                                                          ExprOne(
                                                            ExprNeg(
                                                              TermSingle(
                                                                FactorNumConst(
                                                                 6
                                                                ) [FactorNumConst]
                                                              ) [TermSingle]
                                                            ) [ExprNeg]
                                                          ) [ExprOne]
                                                        ) [StmtPrint]
                                                      ) [StmtIfBody]
                                                      StmtPrint(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               0
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [StmtPrint]
                                                    ) [StmtIfElse]
                                                  ) [StatementSingle]
                                                  StmtDesign(
                                                    DesignatorAssignment(
                                                      DesignatorSimple(
                                                       ibool
                                                      ) [DesignatorSimple]
                                                      AssignmentExpr(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorBoolConst(
                                                               false
                                                              ) [FactorBoolConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [AssignmentExpr]
                                                    ) [DesignatorAssignment]
                                                  ) [StmtDesign]
                                                ) [StatementMulti]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     i
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             0
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDoWhile(
                                                DoHead(
                                                ) [DoHead]
                                                Stmt(
                                                  StatementMulti(
                                                    StatementSingle(
                                                      StmtIf(
                                                        StmtIfBody(
                                                          IfCond(
                                                            CondOne(
                                                              CondTermOne(
                                                                CondFactTwo(
                                                                  ExprOne(
                                                                    ExprSingle(
                                                                      TermSingle(
                                                                        FactorDesignator(
                                                                          DesignatorSimple(
                                                                           i
                                                                          ) [DesignatorSimple]
                                                                        ) [FactorDesignator]
                                                                      ) [TermSingle]
                                                                    ) [ExprSingle]
                                                                  ) [ExprOne]
                                                                  RelopEQ(
                                                                  ) [RelopEQ]
                                                                  ExprOne(
                                                                    ExprSingle(
                                                                      TermSingle(
                                                                        FactorNumConst(
                                                                         2
                                                                        ) [FactorNumConst]
                                                                      ) [TermSingle]
                                                                    ) [ExprSingle]
                                                                  ) [ExprOne]
                                                                ) [CondFactTwo]
                                                              ) [CondTermOne]
                                                            ) [CondOne]
                                                          ) [IfCond]
                                                          StmtDesign(
                                                            DesignatorAssignment(
                                                              DesignatorSimple(
                                                               ibool
                                                              ) [DesignatorSimple]
                                                              AssignmentExpr(
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorBoolConst(
                                                                       true
                                                                      ) [FactorBoolConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                              ) [AssignmentExpr]
                                                            ) [DesignatorAssignment]
                                                          ) [StmtDesign]
                                                        ) [StmtIfBody]
                                                      ) [StmtIf]
                                                    ) [StatementSingle]
                                                    StmtDesign(
                                                      DesignatorIncrement(
                                                        DesignatorSimple(
                                                         i
                                                        ) [DesignatorSimple]
                                                      ) [DesignatorIncrement]
                                                    ) [StmtDesign]
                                                  ) [StatementMulti]
                                                ) [Stmt]
                                                CondOne(
                                                  CondTermOne(
                                                    CondFactTwo(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorDesignator(
                                                              DesignatorSimple(
                                                               i
                                                              ) [DesignatorSimple]
                                                            ) [FactorDesignator]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                      RelopLT(
                                                      ) [RelopLT]
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             5
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [CondFactTwo]
                                                  ) [CondTermOne]
                                                ) [CondOne]
                                              ) [StmtDoWhile]
                                            ) [StatementMulti]
                                            StmtIf(
                                              StmtIfBody(
                                                IfCond(
                                                  CondOne(
                                                    CondTermOne(
                                                      CondFactOne(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorDesignator(
                                                                DesignatorSimple(
                                                                 ibool
                                                                ) [DesignatorSimple]
                                                              ) [FactorDesignator]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [CondFactOne]
                                                    ) [CondTermOne]
                                                  ) [CondOne]
                                                ) [IfCond]
                                                StmtIfElse(
                                                  StmtIfBody(
                                                    IfCond(
                                                      CondOne(
                                                        CondTermOne(
                                                          CondFactTwo(
                                                            ExprOne(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorDesignator(
                                                                    DesignatorSimple(
                                                                     i
                                                                    ) [DesignatorSimple]
                                                                  ) [FactorDesignator]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [ExprOne]
                                                            RelopEQ(
                                                            ) [RelopEQ]
                                                            ExprOne(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorNumConst(
                                                                   5
                                                                  ) [FactorNumConst]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [ExprOne]
                                                          ) [CondFactTwo]
                                                        ) [CondTermOne]
                                                      ) [CondOne]
                                                    ) [IfCond]
                                                    StmtPrint(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             1
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [StmtPrint]
                                                  ) [StmtIfBody]
                                                  StmtPrint(
                                                    ExprOne(
                                                      ExprNeg(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           1
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprNeg]
                                                    ) [ExprOne]
                                                  ) [StmtPrint]
                                                ) [StmtIfElse]
                                              ) [StmtIfBody]
                                            ) [StmtIf]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               niz
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNewArray(
                                                        Type(
                                                         int
                                                        ) [Type]
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               3
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [FactorNewArray]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorArray(
                                             niz
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     0
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [DesignatorArray]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     1
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorArray(
                                           niz
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   1
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [DesignatorArray]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   2
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorArray(
                                         niz
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 2
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [DesignatorArray]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprAddop(
                                              ExprSingle(
                                                TermSingle(
                                                  FuncCallParams(
                                                    DesignatorSimple(
                                                     sum
                                                    ) [DesignatorSimple]
                                                    ActParsMulti(
                                                      ActParsSingle(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorDesignator(
                                                                DesignatorArray(
                                                                 niz
                                                                  ExprOne(
                                                                    ExprSingle(
                                                                      TermSingle(
                                                                        FactorNumConst(
                                                                         1
                                                                        ) [FactorNumConst]
                                                                      ) [TermSingle]
                                                                    ) [ExprSingle]
                                                                  ) [ExprOne]
                                                                ) [DesignatorArray]
                                                              ) [FactorDesignator]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [ActParsSingle]
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorDesignator(
                                                              DesignatorArray(
                                                               niz
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       0
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                              ) [DesignatorArray]
                                                            ) [FactorDesignator]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [ActParsMulti]
                                                  ) [FuncCallParams]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                              AddopPlus(
                                              ) [AddopPlus]
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprAddop]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtIfElse(
                                    StmtIfBody(
                                      IfCond(
                                        CondTwo(
                                          CondOne(
                                            CondTermOne(
                                              CondFactOne(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FuncCall(
                                                        DesignatorSimple(
                                                         verify
                                                        ) [DesignatorSimple]
                                                      ) [FuncCall]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [CondFactOne]
                                            ) [CondTermOne]
                                          ) [CondOne]
                                          CondTermOne(
                                            CondFactTwo(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorDesignator(
                                                      DesignatorArray(
                                                       niz
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               2
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [DesignatorArray]
                                                    ) [FactorDesignator]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                              RelopEQ(
                                              ) [RelopEQ]
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     4
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [CondFactTwo]
                                          ) [CondTermOne]
                                        ) [CondTwo]
                                      ) [IfCond]
                                      StmtPrint(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FuncCallParams(
                                                DesignatorSimple(
                                                 ord
                                                ) [DesignatorSimple]
                                                ActParsSingle(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorCharConst(
                                                         A
                                                        ) [FactorCharConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [ActParsSingle]
                                              ) [FuncCallParams]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [StmtPrint]
                                    ) [StmtIfBody]
                                    StmtPrint(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FuncCallParams(
                                              DesignatorSimple(
                                               ord
                                              ) [DesignatorSimple]
                                              ActParsSingle(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorCharConst(
                                                       a
                                                      ) [FactorCharConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [ActParsSingle]
                                            ) [FuncCallParams]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [StmtPrint]
                                  ) [StmtIfElse]
                                ) [StatementMulti]
                                StmtPrint(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorSimple(
                                           eol
                                          ) [DesignatorSimple]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [StmtPrint]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   i
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           0
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDoWhile(
                              DoHead(
                              ) [DoHead]
                              Stmt(
                                StatementMulti(
                                  StatementMulti(
                                    StatementSingle(
                                      StmtIf(
                                        StmtIfBody(
                                          IfCond(
                                            CondOne(
                                              CondTermOne(
                                                CondFactTwo(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorSimple(
                                                           i
                                                          ) [DesignatorSimple]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                  RelopEQ(
                                                  ) [RelopEQ]
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         3
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [CondFactTwo]
                                              ) [CondTermOne]
                                            ) [CondOne]
                                          ) [IfCond]
                                          Stmt(
                                            StatementMulti(
                                              StatementSingle(
                                                StmtDesign(
                                                  DesignatorIncrement(
                                                    DesignatorSimple(
                                                     i
                                                    ) [DesignatorSimple]
                                                  ) [DesignatorIncrement]
                                                ) [StmtDesign]
                                              ) [StatementSingle]
                                              StmtContinue(
                                              ) [StmtContinue]
                                            ) [StatementMulti]
                                          ) [Stmt]
                                        ) [StmtIfBody]
                                      ) [StmtIf]
                                    ) [StatementSingle]
                                    StmtIf(
                                      StmtIfBody(
                                        IfCond(
                                          CondOne(
                                            CondTermOne(
                                              CondFactTwo(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorSimple(
                                                         i
                                                        ) [DesignatorSimple]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                                RelopEQ(
                                                ) [RelopEQ]
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       4
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [CondFactTwo]
                                            ) [CondTermOne]
                                          ) [CondOne]
                                        ) [IfCond]
                                        StmtBreak(
                                        ) [StmtBreak]
                                      ) [StmtIfBody]
                                    ) [StmtIf]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       i
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FuncCallParams(
                                                DesignatorSimple(
                                                 inkrement
                                                ) [DesignatorSimple]
                                                ActParsMulti(
                                                  ActParsSingle(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorDesignator(
                                                            DesignatorSimple(
                                                             i
                                                            ) [DesignatorSimple]
                                                          ) [FactorDesignator]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [ActParsSingle]
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [ActParsMulti]
                                              ) [FuncCallParams]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                              ) [Stmt]
                              CondOne(
                                CondTermOne(
                                  CondFactTwo(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorSimple(
                                             i
                                            ) [DesignatorSimple]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                    RelopLT(
                                    ) [RelopLT]
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           10
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [CondFactTwo]
                                ) [CondTermOne]
                              ) [CondOne]
                            ) [StmtDoWhile]
                          ) [StatementMulti]
                          StmtIfElse(
                            StmtIfBody(
                              IfCond(
                                CondOne(
                                  CondTermTwo(
                                    CondTermOne(
                                      CondFactTwo(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorDesignator(
                                                DesignatorSimple(
                                                 i
                                                ) [DesignatorSimple]
                                              ) [FactorDesignator]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                        RelopEQ(
                                        ) [RelopEQ]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               3
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [CondFactTwo]
                                    ) [CondTermOne]
                                    CondFactOne(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FuncCall(
                                              DesignatorSimple(
                                               verify
                                              ) [DesignatorSimple]
                                            ) [FuncCall]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [CondFactOne]
                                  ) [CondTermTwo]
                                ) [CondOne]
                              ) [IfCond]
                              StmtPrint(
                                ExprOne(
                                  ExprNeg(
                                    TermSingle(
                                      FactorNumConst(
                                       4
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprNeg]
                                ) [ExprOne]
                              ) [StmtPrint]
                            ) [StmtIfBody]
                            StmtPrint(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     4
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [StmtPrint]
                          ) [StmtIfElse]
                        ) [StatementMulti]
                        StmtRead(
                          DesignatorArray(
                           niz
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   0
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [DesignatorArray]
                        ) [StmtRead]
                      ) [StatementMulti]
                      StmtRead(
                        DesignatorArray(
                         niz
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [DesignatorArray]
                      ) [StmtRead]
                    ) [StatementMulti]
                    StmtRead(
                      DesignatorArray(
                       niz
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [DesignatorArray]
                    ) [StmtRead]
                  ) [StatementMulti]
                  StmtPrint(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             eol
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [StmtPrint]
                ) [StatementMulti]
                StmtPrint(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           sum
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FuncCallParams(
                                      DesignatorSimple(
                                       sum
                                      ) [DesignatorSimple]
                                      ActParsMulti(
                                        ActParsSingle(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorDesignator(
                                                  DesignatorArray(
                                                   niz
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           0
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [DesignatorArray]
                                                ) [FactorDesignator]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [ActParsSingle]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorDesignator(
                                                DesignatorArray(
                                                 niz
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [DesignatorArray]
                                              ) [FactorDesignator]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [ActParsMulti]
                                    ) [FuncCallParams]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorArray(
                                     niz
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             2
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [DesignatorArray]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [StmtPrint]
              ) [StatementMulti]
              StmtPrint(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         eol
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtPrint]
            ) [StatementMulti]
            StmtPrint(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FuncCallParams(
                      DesignatorSimple(
                       inkrement
                      ) [DesignatorSimple]
                      ActParsMulti(
                        ActParsSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorArray(
                                   niz
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           2
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [DesignatorArray]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [ActParsSingle]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [ActParsMulti]
                    ) [FuncCallParams]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtPrint]
          ) [StatementMulti]
          StmtPrint(
            ExprTernary(
              ExprSingle(
                TermSingle(
                  FuncCall(
                    DesignatorSimple(
                     verify
                    ) [DesignatorSimple]
                  ) [FuncCall]
                ) [TermSingle]
              ) [ExprSingle]
              ExprSingle(
                TermSingle(
                  FactorCharConst(
                   t
                  ) [FactorCharConst]
                ) [TermSingle]
              ) [ExprSingle]
              ExprSingle(
                TermSingle(
                  FactorCharConst(
                   f
                  ) [FactorCharConst]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprTernary]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:14:41,823 - 

================SEMANTICKA OBRADA====================


INFO  16:14:41,832 - Deklarisana konstanta 'jedan' na liniji 5
INFO  16:14:41,833 - Deklarisana globalna promenljiva 'i' na liniji 7
INFO  16:14:41,833 - Deklarisana globalna promenljiva 'ibool' na liniji 8
INFO  16:14:41,833 - Deklarisan globalni niz 'niz' na liniji 10
INFO  16:14:41,833 - Formalni parametar funkcije sum: 'z' na liniji 14
INFO  16:14:41,833 - Formalni parametar funkcije sum: 'd' na liniji 14
INFO  16:14:41,833 - Formalni parametar funkcije inkrement: 'a' na liniji 19
INFO  16:14:41,834 - Formalni parametar funkcije inkrement: 'inc' na liniji 19
INFO  16:14:41,834 - Deklarisana promenljiva 'pom' na liniji 20
INFO  16:14:41,834 - Pronadjen poziv funkcije 'sum' na liniji 25
ERROR 16:14:41,834 - Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 25
INFO  16:14:41,834 - Pristup elementu niza 'niz' na liniji 50
INFO  16:14:41,834 - Pristup elementu niza 'niz' na liniji 51
INFO  16:14:41,834 - Pristup elementu niza 'niz' na liniji 52
INFO  16:14:41,834 - Pristup elementu niza 'niz' na liniji 52
INFO  16:14:41,835 - Pristup elementu niza 'niz' na liniji 52
INFO  16:14:41,835 - Pronadjen poziv funkcije 'sum' na liniji 52
INFO  16:14:41,835 - Pronadjen poziv funkcije 'verify' na liniji 53
INFO  16:14:41,835 - Pristup elementu niza 'niz' na liniji 53
INFO  16:14:41,835 - Pronadjen poziv funkcije 'ord' na liniji 53
INFO  16:14:41,835 - Pronadjen poziv funkcije 'ord' na liniji 54
INFO  16:14:41,835 - Pronadjen poziv funkcije 'inkrement' na liniji 65
INFO  16:14:41,835 - Pronadjen poziv funkcije 'verify' na liniji 68
INFO  16:14:41,835 - Pristup elementu niza 'niz' na liniji 71
INFO  16:14:41,835 - Pristup elementu niza 'niz' na liniji 72
INFO  16:14:41,835 - Pristup elementu niza 'niz' na liniji 73
INFO  16:14:41,835 - Pristup elementu niza 'niz' na liniji 76
INFO  16:14:41,835 - Pristup elementu niza 'niz' na liniji 76
INFO  16:14:41,835 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  16:14:41,835 - Pristup elementu niza 'niz' na liniji 76
INFO  16:14:41,835 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  16:14:41,835 - Pristup elementu niza 'niz' na liniji 79
INFO  16:14:41,836 - Pronadjen poziv funkcije 'inkrement' na liniji 79
INFO  16:14:41,836 - Pronadjen poziv funkcije 'verify' na liniji 81
INFO  16:14:41,836 - ===================================
ERROR 16:14:41,836 - Parsiranje nije uspesno zavrseno!
INFO  16:14:48,507 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:14:48,551 - #2 program
INFO  16:14:48,551 - #20 test302
INFO  16:14:48,551 - #7 const
INFO  16:14:48,552 - #20 int
INFO  16:14:48,552 - #20 jedan
INFO  16:14:48,552 - #37 =
INFO  16:14:48,553 - #21 1
INFO  16:14:48,553 - #40 ;
INFO  16:14:48,553 - #20 int
INFO  16:14:48,553 - #20 i
INFO  16:14:48,553 - #40 ;
INFO  16:14:48,554 - #20 bool
INFO  16:14:48,554 - #20 ibool
INFO  16:14:48,554 - #40 ;
INFO  16:14:48,554 - #20 int
INFO  16:14:48,554 - #20 niz
INFO  16:14:48,554 - #45 [
INFO  16:14:48,554 - #46 ]
INFO  16:14:48,554 - #40 ;
INFO  16:14:48,554 - #47 {
INFO  16:14:48,554 - #20 int
INFO  16:14:48,554 - #20 sum
INFO  16:14:48,554 - #43 (
INFO  16:14:48,555 - #20 int
INFO  16:14:48,555 - #20 z
INFO  16:14:48,555 - #41 ,
INFO  16:14:48,555 - #20 int
INFO  16:14:48,555 - #20 d
INFO  16:14:48,555 - #44 )
INFO  16:14:48,555 - #47 {
INFO  16:14:48,555 - #15 return
INFO  16:14:48,556 - #20 z
INFO  16:14:48,556 - #24 +
INFO  16:14:48,556 - #20 d
INFO  16:14:48,557 - #40 ;
INFO  16:14:48,557 - #48 }
INFO  16:14:48,558 - #20 int
INFO  16:14:48,558 - #20 inkrement
INFO  16:14:48,558 - #43 (
INFO  16:14:48,558 - #20 int
INFO  16:14:48,558 - #20 a
INFO  16:14:48,558 - #41 ,
INFO  16:14:48,558 - #20 int
INFO  16:14:48,558 - #20 inc
INFO  16:14:48,558 - #44 )
INFO  16:14:48,558 - #20 int
INFO  16:14:48,558 - #20 pom
INFO  16:14:48,558 - #40 ;
INFO  16:14:48,559 - #47 {
INFO  16:14:48,559 - #8 if
INFO  16:14:48,559 - #43 (
INFO  16:14:48,559 - #20 inc
INFO  16:14:48,559 - #29 ==
INFO  16:14:48,559 - #20 jedan
INFO  16:14:48,560 - #44 )
INFO  16:14:48,560 - #20 pom
INFO  16:14:48,560 - #37 =
INFO  16:14:48,560 - #21 1
INFO  16:14:48,561 - #40 ;
INFO  16:14:48,561 - #6 else
INFO  16:14:48,561 - #8 if
INFO  16:14:48,561 - #43 (
INFO  16:14:48,561 - #20 inc
INFO  16:14:48,562 - #29 ==
INFO  16:14:48,562 - #21 2
INFO  16:14:48,562 - #44 )
INFO  16:14:48,562 - #20 pom
INFO  16:14:48,562 - #37 =
INFO  16:14:48,562 - #20 a
INFO  16:14:48,563 - #40 ;
INFO  16:14:48,563 - #15 return
INFO  16:14:48,563 - #20 sum
INFO  16:14:48,563 - #43 (
INFO  16:14:48,563 - #20 a
INFO  16:14:48,563 - #41 ,
INFO  16:14:48,564 - #20 pom
INFO  16:14:48,564 - #44 )
INFO  16:14:48,564 - #40 ;
INFO  16:14:48,564 - #48 }
INFO  16:14:48,564 - #20 bool
INFO  16:14:48,565 - #20 verify
INFO  16:14:48,565 - #43 (
INFO  16:14:48,565 - #44 )
INFO  16:14:48,565 - #47 {
INFO  16:14:48,565 - #13 print
INFO  16:14:48,565 - #43 (
INFO  16:14:48,565 - #22 v
INFO  16:14:48,566 - #44 )
INFO  16:14:48,566 - #40 ;
INFO  16:14:48,566 - #15 return
INFO  16:14:48,566 - #23 false
INFO  16:14:48,566 - #40 ;
INFO  16:14:48,566 - #48 }
INFO  16:14:48,566 - #16 void
INFO  16:14:48,567 - #20 main
INFO  16:14:48,567 - #43 (
INFO  16:14:48,567 - #44 )
INFO  16:14:48,567 - #47 {
INFO  16:14:48,567 - #8 if
INFO  16:14:48,567 - #43 (
INFO  16:14:48,567 - #21 1
INFO  16:14:48,567 - #30 !=
INFO  16:14:48,567 - #21 1
INFO  16:14:48,568 - #44 )
INFO  16:14:48,568 - #13 print
INFO  16:14:48,568 - #43 (
INFO  16:14:48,568 - #25 -
INFO  16:14:48,568 - #21 6
INFO  16:14:48,568 - #44 )
INFO  16:14:48,568 - #40 ;
INFO  16:14:48,568 - #6 else
INFO  16:14:48,568 - #13 print
INFO  16:14:48,568 - #43 (
INFO  16:14:48,568 - #21 0
INFO  16:14:48,568 - #44 )
INFO  16:14:48,569 - #40 ;
INFO  16:14:48,569 - #20 ibool
INFO  16:14:48,569 - #37 =
INFO  16:14:48,569 - #23 false
INFO  16:14:48,569 - #40 ;
INFO  16:14:48,569 - #20 i
INFO  16:14:48,569 - #37 =
INFO  16:14:48,569 - #21 0
INFO  16:14:48,569 - #40 ;
INFO  16:14:48,569 - #10 do
INFO  16:14:48,569 - #47 {
INFO  16:14:48,570 - #8 if
INFO  16:14:48,570 - #43 (
INFO  16:14:48,570 - #20 i
INFO  16:14:48,570 - #29 ==
INFO  16:14:48,570 - #21 2
INFO  16:14:48,570 - #44 )
INFO  16:14:48,571 - #20 ibool
INFO  16:14:48,571 - #37 =
INFO  16:14:48,571 - #23 true
INFO  16:14:48,571 - #40 ;
INFO  16:14:48,571 - #20 i
INFO  16:14:48,571 - #38 ++
INFO  16:14:48,571 - #40 ;
INFO  16:14:48,571 - #48 }
INFO  16:14:48,571 - #11 while
INFO  16:14:48,571 - #43 (
INFO  16:14:48,571 - #20 i
INFO  16:14:48,571 - #33 <
INFO  16:14:48,571 - #21 5
INFO  16:14:48,571 - #44 )
INFO  16:14:48,572 - #40 ;
INFO  16:14:48,572 - #8 if
INFO  16:14:48,572 - #43 (
INFO  16:14:48,572 - #20 ibool
INFO  16:14:48,572 - #44 )
INFO  16:14:48,572 - #8 if
INFO  16:14:48,572 - #43 (
INFO  16:14:48,572 - #20 i
INFO  16:14:48,572 - #29 ==
INFO  16:14:48,572 - #21 5
INFO  16:14:48,572 - #44 )
INFO  16:14:48,572 - #13 print
INFO  16:14:48,572 - #43 (
INFO  16:14:48,572 - #21 1
INFO  16:14:48,572 - #44 )
INFO  16:14:48,572 - #40 ;
INFO  16:14:48,572 - #6 else
INFO  16:14:48,572 - #13 print
INFO  16:14:48,572 - #43 (
INFO  16:14:48,572 - #25 -
INFO  16:14:48,572 - #21 1
INFO  16:14:48,572 - #44 )
INFO  16:14:48,572 - #40 ;
INFO  16:14:48,573 - #20 niz
INFO  16:14:48,573 - #37 =
INFO  16:14:48,573 - #12 new
INFO  16:14:48,573 - #20 int
INFO  16:14:48,573 - #45 [
INFO  16:14:48,573 - #21 3
INFO  16:14:48,573 - #46 ]
INFO  16:14:48,573 - #40 ;
INFO  16:14:48,573 - #20 niz
INFO  16:14:48,573 - #45 [
INFO  16:14:48,573 - #21 0
INFO  16:14:48,573 - #46 ]
INFO  16:14:48,573 - #37 =
INFO  16:14:48,573 - #21 1
INFO  16:14:48,574 - #40 ;
INFO  16:14:48,574 - #20 niz
INFO  16:14:48,574 - #45 [
INFO  16:14:48,574 - #21 1
INFO  16:14:48,574 - #46 ]
INFO  16:14:48,574 - #37 =
INFO  16:14:48,574 - #21 2
INFO  16:14:48,574 - #40 ;
INFO  16:14:48,574 - #20 niz
INFO  16:14:48,574 - #45 [
INFO  16:14:48,574 - #21 2
INFO  16:14:48,574 - #46 ]
INFO  16:14:48,574 - #37 =
INFO  16:14:48,574 - #20 sum
INFO  16:14:48,574 - #43 (
INFO  16:14:48,574 - #20 niz
INFO  16:14:48,574 - #45 [
INFO  16:14:48,574 - #21 1
INFO  16:14:48,574 - #46 ]
INFO  16:14:48,574 - #41 ,
INFO  16:14:48,574 - #20 niz
INFO  16:14:48,574 - #45 [
INFO  16:14:48,575 - #21 0
INFO  16:14:48,575 - #46 ]
INFO  16:14:48,575 - #44 )
INFO  16:14:48,575 - #24 +
INFO  16:14:48,575 - #21 1
INFO  16:14:48,575 - #40 ;
INFO  16:14:48,575 - #8 if
INFO  16:14:48,575 - #43 (
INFO  16:14:48,578 - #20 verify
INFO  16:14:48,578 - #43 (
INFO  16:14:48,578 - #44 )
INFO  16:14:48,578 - #36 ||
INFO  16:14:48,578 - #20 niz
INFO  16:14:48,579 - #45 [
INFO  16:14:48,579 - #21 2
INFO  16:14:48,579 - #46 ]
INFO  16:14:48,579 - #29 ==
INFO  16:14:48,579 - #21 4
INFO  16:14:48,579 - #44 )
INFO  16:14:48,579 - #13 print
INFO  16:14:48,579 - #43 (
INFO  16:14:48,579 - #20 ord
INFO  16:14:48,579 - #43 (
INFO  16:14:48,579 - #22 A
INFO  16:14:48,579 - #44 )
INFO  16:14:48,581 - #44 )
INFO  16:14:48,581 - #40 ;
INFO  16:14:48,581 - #6 else
INFO  16:14:48,582 - #13 print
INFO  16:14:48,582 - #43 (
INFO  16:14:48,582 - #20 ord
INFO  16:14:48,582 - #43 (
INFO  16:14:48,582 - #22 a
INFO  16:14:48,582 - #44 )
INFO  16:14:48,582 - #44 )
INFO  16:14:48,582 - #40 ;
INFO  16:14:48,582 - #13 print
INFO  16:14:48,582 - #43 (
INFO  16:14:48,582 - #20 eol
INFO  16:14:48,582 - #44 )
INFO  16:14:48,582 - #40 ;
INFO  16:14:48,582 - #20 i
INFO  16:14:48,582 - #37 =
INFO  16:14:48,582 - #21 0
INFO  16:14:48,582 - #40 ;
INFO  16:14:48,582 - #10 do
INFO  16:14:48,582 - #47 {
INFO  16:14:48,582 - #8 if
INFO  16:14:48,582 - #43 (
INFO  16:14:48,582 - #20 i
INFO  16:14:48,583 - #29 ==
INFO  16:14:48,583 - #21 3
INFO  16:14:48,583 - #44 )
INFO  16:14:48,583 - #47 {
INFO  16:14:48,583 - #20 i
INFO  16:14:48,583 - #38 ++
INFO  16:14:48,583 - #40 ;
INFO  16:14:48,583 - #18 continue
INFO  16:14:48,583 - #40 ;
INFO  16:14:48,583 - #48 }
INFO  16:14:48,584 - #8 if
INFO  16:14:48,584 - #43 (
INFO  16:14:48,584 - #20 i
INFO  16:14:48,584 - #29 ==
INFO  16:14:48,584 - #21 4
INFO  16:14:48,584 - #44 )
INFO  16:14:48,584 - #3 break
INFO  16:14:48,584 - #40 ;
INFO  16:14:48,584 - #20 i
INFO  16:14:48,585 - #37 =
INFO  16:14:48,585 - #20 inkrement
INFO  16:14:48,585 - #43 (
INFO  16:14:48,585 - #20 i
INFO  16:14:48,585 - #41 ,
INFO  16:14:48,585 - #21 1
INFO  16:14:48,585 - #44 )
INFO  16:14:48,585 - #40 ;
INFO  16:14:48,585 - #48 }
INFO  16:14:48,585 - #11 while
INFO  16:14:48,585 - #43 (
INFO  16:14:48,585 - #20 i
INFO  16:14:48,585 - #33 <
INFO  16:14:48,585 - #21 10
INFO  16:14:48,586 - #44 )
INFO  16:14:48,586 - #40 ;
INFO  16:14:48,586 - #8 if
INFO  16:14:48,586 - #43 (
INFO  16:14:48,586 - #20 i
INFO  16:14:48,586 - #29 ==
INFO  16:14:48,586 - #21 3
INFO  16:14:48,586 - #35 &&
INFO  16:14:48,586 - #20 verify
INFO  16:14:48,586 - #43 (
INFO  16:14:48,586 - #44 )
INFO  16:14:48,586 - #44 )
INFO  16:14:48,587 - #13 print
INFO  16:14:48,587 - #43 (
INFO  16:14:48,587 - #25 -
INFO  16:14:48,587 - #21 4
INFO  16:14:48,587 - #44 )
INFO  16:14:48,587 - #40 ;
INFO  16:14:48,587 - #6 else
INFO  16:14:48,587 - #13 print
INFO  16:14:48,587 - #43 (
INFO  16:14:48,587 - #21 4
INFO  16:14:48,587 - #44 )
INFO  16:14:48,587 - #40 ;
INFO  16:14:48,587 - #14 read
INFO  16:14:48,587 - #43 (
INFO  16:14:48,587 - #20 niz
INFO  16:14:48,587 - #45 [
INFO  16:14:48,587 - #21 0
INFO  16:14:48,587 - #46 ]
INFO  16:14:48,587 - #44 )
INFO  16:14:48,587 - #40 ;
INFO  16:14:48,588 - #14 read
INFO  16:14:48,588 - #43 (
INFO  16:14:48,588 - #20 niz
INFO  16:14:48,588 - #45 [
INFO  16:14:48,588 - #21 1
INFO  16:14:48,588 - #46 ]
INFO  16:14:48,588 - #44 )
INFO  16:14:48,588 - #40 ;
INFO  16:14:48,588 - #14 read
INFO  16:14:48,588 - #43 (
INFO  16:14:48,588 - #20 niz
INFO  16:14:48,588 - #45 [
INFO  16:14:48,588 - #21 2
INFO  16:14:48,588 - #46 ]
INFO  16:14:48,588 - #44 )
INFO  16:14:48,588 - #40 ;
INFO  16:14:48,588 - #13 print
INFO  16:14:48,588 - #43 (
INFO  16:14:48,589 - #20 eol
INFO  16:14:48,589 - #44 )
INFO  16:14:48,589 - #40 ;
INFO  16:14:48,589 - #13 print
INFO  16:14:48,589 - #43 (
INFO  16:14:48,589 - #20 sum
INFO  16:14:48,589 - #43 (
INFO  16:14:48,589 - #20 sum
INFO  16:14:48,589 - #43 (
INFO  16:14:48,589 - #20 niz
INFO  16:14:48,589 - #45 [
INFO  16:14:48,589 - #21 0
INFO  16:14:48,589 - #46 ]
INFO  16:14:48,589 - #41 ,
INFO  16:14:48,589 - #20 niz
INFO  16:14:48,589 - #45 [
INFO  16:14:48,589 - #21 1
INFO  16:14:48,589 - #46 ]
INFO  16:14:48,589 - #44 )
INFO  16:14:48,590 - #41 ,
INFO  16:14:48,590 - #20 niz
INFO  16:14:48,590 - #45 [
INFO  16:14:48,590 - #21 2
INFO  16:14:48,590 - #46 ]
INFO  16:14:48,590 - #44 )
INFO  16:14:48,590 - #44 )
INFO  16:14:48,590 - #40 ;
INFO  16:14:48,590 - #13 print
INFO  16:14:48,590 - #43 (
INFO  16:14:48,590 - #20 eol
INFO  16:14:48,590 - #44 )
INFO  16:14:48,590 - #40 ;
INFO  16:14:48,590 - #13 print
INFO  16:14:48,590 - #43 (
INFO  16:14:48,590 - #20 inkrement
INFO  16:14:48,590 - #43 (
INFO  16:14:48,590 - #20 niz
INFO  16:14:48,590 - #45 [
INFO  16:14:48,591 - #21 2
INFO  16:14:48,591 - #46 ]
INFO  16:14:48,591 - #41 ,
INFO  16:14:48,591 - #21 2
INFO  16:14:48,591 - #44 )
INFO  16:14:48,591 - #44 )
INFO  16:14:48,591 - #40 ;
INFO  16:14:48,591 - #13 print
INFO  16:14:48,591 - #43 (
INFO  16:14:48,591 - #20 verify
INFO  16:14:48,591 - #43 (
INFO  16:14:48,591 - #44 )
INFO  16:14:48,591 - #49 ?
INFO  16:14:48,591 - #22 t
INFO  16:14:48,591 - #50 :
INFO  16:14:48,591 - #22 f
INFO  16:14:48,591 - #44 )
INFO  16:14:48,591 - #40 ;
INFO  16:14:48,592 - #48 }
INFO  16:14:48,592 - #48 }
INFO  16:14:48,592 - 

================SINTAKSNO STABLO====================


INFO  16:14:48,601 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclMulti(
          ProgramDeclEps(
          ) [ProgramDeclEps]
          PartConstDeclaration(
            ConstDeclaration(
              Type(
               int
              ) [Type]
              ConstSingle(
                ConstPart(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [ConstPart]
              ) [ConstSingle]
            ) [ConstDeclaration]
          ) [PartConstDeclaration]
        ) [ProgramDeclMulti]
        PartVarDeclaration(
          GlobalVarDeclaration(
            Type(
             int
            ) [Type]
            GlobalVarSingle(
              GlobalVarNormal(
               i
              ) [GlobalVarNormal]
            ) [GlobalVarSingle]
          ) [GlobalVarDeclaration]
        ) [PartVarDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           bool
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             ibool
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDecMulti(
        MethodDeclSingle(
          MethodTypeDeclaration(
            MethodType2(
              MethodTypeName(
                Type(
                 int
                ) [Type]
               sum
              ) [MethodTypeName]
              ParamMulti(
                ParamSingle(
                  ParamNormal(
                    Type(
                     int
                    ) [Type]
                   z
                  ) [ParamNormal]
                ) [ParamSingle]
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 d
                ) [ParamNormal]
              ) [ParamMulti]
              StatementSingle(
                StmtReturnExpr(
                  ExprOne(
                    ExprAddop(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             z
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                      AddopPlus(
                      ) [AddopPlus]
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           d
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprAddop]
                  ) [ExprOne]
                ) [StmtReturnExpr]
              ) [StatementSingle]
            ) [MethodType2]
          ) [MethodTypeDeclaration]
        ) [MethodDeclSingle]
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             inkrement
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 a
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               inc
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   pom
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementMulti(
              StatementSingle(
                StmtIfElse(
                  StmtIfBody(
                    IfCond(
                      CondOne(
                        CondTermOne(
                          CondFactTwo(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     inc
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                            RelopEQ(
                            ) [RelopEQ]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     jedan
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactTwo]
                        ) [CondTermOne]
                      ) [CondOne]
                    ) [IfCond]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         pom
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StmtIfBody]
                  StmtIf(
                    StmtIfBody(
                      IfCond(
                        CondOne(
                          CondTermOne(
                            CondFactTwo(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       inc
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                              RelopEQ(
                              ) [RelopEQ]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [CondFactTwo]
                          ) [CondTermOne]
                        ) [CondOne]
                      ) [IfCond]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           pom
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     a
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StmtIfBody]
                  ) [StmtIf]
                ) [StmtIfElse]
              ) [StatementSingle]
              StmtReturnExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FuncCallParams(
                        DesignatorSimple(
                         sum
                        ) [DesignatorSimple]
                        ActParsMulti(
                          ActParsSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     a
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsSingle]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   pom
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [ActParsMulti]
                      ) [FuncCallParams]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementMulti]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDecMulti]
      MethodTypeDeclaration(
        MethodType6(
          MethodTypeName(
            Type(
             bool
            ) [Type]
           verify
          ) [MethodTypeName]
          StatementMulti(
            StatementSingle(
              StmtPrint(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorCharConst(
                       v
                      ) [FactorCharConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtPrint]
            ) [StatementSingle]
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorBoolConst(
                     false
                    ) [FactorBoolConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementMulti]
        ) [MethodType6]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementMulti(
                                                  StatementSingle(
                                                    StmtIfElse(
                                                      StmtIfBody(
                                                        IfCond(
                                                          CondOne(
                                                            CondTermOne(
                                                              CondFactTwo(
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       1
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                                RelopNE(
                                                                ) [RelopNE]
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       1
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                              ) [CondFactTwo]
                                                            ) [CondTermOne]
                                                          ) [CondOne]
                                                        ) [IfCond]
                                                        StmtPrint(
                                                          ExprOne(
                                                            ExprNeg(
                                                              TermSingle(
                                                                FactorNumConst(
                                                                 6
                                                                ) [FactorNumConst]
                                                              ) [TermSingle]
                                                            ) [ExprNeg]
                                                          ) [ExprOne]
                                                        ) [StmtPrint]
                                                      ) [StmtIfBody]
                                                      StmtPrint(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               0
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [StmtPrint]
                                                    ) [StmtIfElse]
                                                  ) [StatementSingle]
                                                  StmtDesign(
                                                    DesignatorAssignment(
                                                      DesignatorSimple(
                                                       ibool
                                                      ) [DesignatorSimple]
                                                      AssignmentExpr(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorBoolConst(
                                                               false
                                                              ) [FactorBoolConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [AssignmentExpr]
                                                    ) [DesignatorAssignment]
                                                  ) [StmtDesign]
                                                ) [StatementMulti]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     i
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             0
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDoWhile(
                                                DoHead(
                                                ) [DoHead]
                                                Stmt(
                                                  StatementMulti(
                                                    StatementSingle(
                                                      StmtIf(
                                                        StmtIfBody(
                                                          IfCond(
                                                            CondOne(
                                                              CondTermOne(
                                                                CondFactTwo(
                                                                  ExprOne(
                                                                    ExprSingle(
                                                                      TermSingle(
                                                                        FactorDesignator(
                                                                          DesignatorSimple(
                                                                           i
                                                                          ) [DesignatorSimple]
                                                                        ) [FactorDesignator]
                                                                      ) [TermSingle]
                                                                    ) [ExprSingle]
                                                                  ) [ExprOne]
                                                                  RelopEQ(
                                                                  ) [RelopEQ]
                                                                  ExprOne(
                                                                    ExprSingle(
                                                                      TermSingle(
                                                                        FactorNumConst(
                                                                         2
                                                                        ) [FactorNumConst]
                                                                      ) [TermSingle]
                                                                    ) [ExprSingle]
                                                                  ) [ExprOne]
                                                                ) [CondFactTwo]
                                                              ) [CondTermOne]
                                                            ) [CondOne]
                                                          ) [IfCond]
                                                          StmtDesign(
                                                            DesignatorAssignment(
                                                              DesignatorSimple(
                                                               ibool
                                                              ) [DesignatorSimple]
                                                              AssignmentExpr(
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorBoolConst(
                                                                       true
                                                                      ) [FactorBoolConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                              ) [AssignmentExpr]
                                                            ) [DesignatorAssignment]
                                                          ) [StmtDesign]
                                                        ) [StmtIfBody]
                                                      ) [StmtIf]
                                                    ) [StatementSingle]
                                                    StmtDesign(
                                                      DesignatorIncrement(
                                                        DesignatorSimple(
                                                         i
                                                        ) [DesignatorSimple]
                                                      ) [DesignatorIncrement]
                                                    ) [StmtDesign]
                                                  ) [StatementMulti]
                                                ) [Stmt]
                                                CondOne(
                                                  CondTermOne(
                                                    CondFactTwo(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorDesignator(
                                                              DesignatorSimple(
                                                               i
                                                              ) [DesignatorSimple]
                                                            ) [FactorDesignator]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                      RelopLT(
                                                      ) [RelopLT]
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             5
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [CondFactTwo]
                                                  ) [CondTermOne]
                                                ) [CondOne]
                                              ) [StmtDoWhile]
                                            ) [StatementMulti]
                                            StmtIf(
                                              StmtIfBody(
                                                IfCond(
                                                  CondOne(
                                                    CondTermOne(
                                                      CondFactOne(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorDesignator(
                                                                DesignatorSimple(
                                                                 ibool
                                                                ) [DesignatorSimple]
                                                              ) [FactorDesignator]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [CondFactOne]
                                                    ) [CondTermOne]
                                                  ) [CondOne]
                                                ) [IfCond]
                                                StmtIfElse(
                                                  StmtIfBody(
                                                    IfCond(
                                                      CondOne(
                                                        CondTermOne(
                                                          CondFactTwo(
                                                            ExprOne(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorDesignator(
                                                                    DesignatorSimple(
                                                                     i
                                                                    ) [DesignatorSimple]
                                                                  ) [FactorDesignator]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [ExprOne]
                                                            RelopEQ(
                                                            ) [RelopEQ]
                                                            ExprOne(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorNumConst(
                                                                   5
                                                                  ) [FactorNumConst]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [ExprOne]
                                                          ) [CondFactTwo]
                                                        ) [CondTermOne]
                                                      ) [CondOne]
                                                    ) [IfCond]
                                                    StmtPrint(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             1
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [StmtPrint]
                                                  ) [StmtIfBody]
                                                  StmtPrint(
                                                    ExprOne(
                                                      ExprNeg(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           1
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprNeg]
                                                    ) [ExprOne]
                                                  ) [StmtPrint]
                                                ) [StmtIfElse]
                                              ) [StmtIfBody]
                                            ) [StmtIf]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               niz
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNewArray(
                                                        Type(
                                                         int
                                                        ) [Type]
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               3
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [FactorNewArray]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorArray(
                                             niz
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     0
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [DesignatorArray]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     1
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorArray(
                                           niz
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   1
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [DesignatorArray]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   2
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorArray(
                                         niz
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 2
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [DesignatorArray]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprAddop(
                                              ExprSingle(
                                                TermSingle(
                                                  FuncCallParams(
                                                    DesignatorSimple(
                                                     sum
                                                    ) [DesignatorSimple]
                                                    ActParsMulti(
                                                      ActParsSingle(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorDesignator(
                                                                DesignatorArray(
                                                                 niz
                                                                  ExprOne(
                                                                    ExprSingle(
                                                                      TermSingle(
                                                                        FactorNumConst(
                                                                         1
                                                                        ) [FactorNumConst]
                                                                      ) [TermSingle]
                                                                    ) [ExprSingle]
                                                                  ) [ExprOne]
                                                                ) [DesignatorArray]
                                                              ) [FactorDesignator]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [ActParsSingle]
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorDesignator(
                                                              DesignatorArray(
                                                               niz
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       0
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                              ) [DesignatorArray]
                                                            ) [FactorDesignator]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [ActParsMulti]
                                                  ) [FuncCallParams]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                              AddopPlus(
                                              ) [AddopPlus]
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprAddop]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtIfElse(
                                    StmtIfBody(
                                      IfCond(
                                        CondTwo(
                                          CondOne(
                                            CondTermOne(
                                              CondFactOne(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FuncCall(
                                                        DesignatorSimple(
                                                         verify
                                                        ) [DesignatorSimple]
                                                      ) [FuncCall]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [CondFactOne]
                                            ) [CondTermOne]
                                          ) [CondOne]
                                          CondTermOne(
                                            CondFactTwo(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorDesignator(
                                                      DesignatorArray(
                                                       niz
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               2
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [DesignatorArray]
                                                    ) [FactorDesignator]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                              RelopEQ(
                                              ) [RelopEQ]
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     4
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [CondFactTwo]
                                          ) [CondTermOne]
                                        ) [CondTwo]
                                      ) [IfCond]
                                      StmtPrint(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FuncCallParams(
                                                DesignatorSimple(
                                                 ord
                                                ) [DesignatorSimple]
                                                ActParsSingle(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorCharConst(
                                                         A
                                                        ) [FactorCharConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [ActParsSingle]
                                              ) [FuncCallParams]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [StmtPrint]
                                    ) [StmtIfBody]
                                    StmtPrint(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FuncCallParams(
                                              DesignatorSimple(
                                               ord
                                              ) [DesignatorSimple]
                                              ActParsSingle(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorCharConst(
                                                       a
                                                      ) [FactorCharConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [ActParsSingle]
                                            ) [FuncCallParams]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [StmtPrint]
                                  ) [StmtIfElse]
                                ) [StatementMulti]
                                StmtPrint(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorSimple(
                                           eol
                                          ) [DesignatorSimple]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [StmtPrint]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   i
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           0
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDoWhile(
                              DoHead(
                              ) [DoHead]
                              Stmt(
                                StatementMulti(
                                  StatementMulti(
                                    StatementSingle(
                                      StmtIf(
                                        StmtIfBody(
                                          IfCond(
                                            CondOne(
                                              CondTermOne(
                                                CondFactTwo(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorSimple(
                                                           i
                                                          ) [DesignatorSimple]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                  RelopEQ(
                                                  ) [RelopEQ]
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         3
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [CondFactTwo]
                                              ) [CondTermOne]
                                            ) [CondOne]
                                          ) [IfCond]
                                          Stmt(
                                            StatementMulti(
                                              StatementSingle(
                                                StmtDesign(
                                                  DesignatorIncrement(
                                                    DesignatorSimple(
                                                     i
                                                    ) [DesignatorSimple]
                                                  ) [DesignatorIncrement]
                                                ) [StmtDesign]
                                              ) [StatementSingle]
                                              StmtContinue(
                                              ) [StmtContinue]
                                            ) [StatementMulti]
                                          ) [Stmt]
                                        ) [StmtIfBody]
                                      ) [StmtIf]
                                    ) [StatementSingle]
                                    StmtIf(
                                      StmtIfBody(
                                        IfCond(
                                          CondOne(
                                            CondTermOne(
                                              CondFactTwo(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorSimple(
                                                         i
                                                        ) [DesignatorSimple]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                                RelopEQ(
                                                ) [RelopEQ]
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       4
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [CondFactTwo]
                                            ) [CondTermOne]
                                          ) [CondOne]
                                        ) [IfCond]
                                        StmtBreak(
                                        ) [StmtBreak]
                                      ) [StmtIfBody]
                                    ) [StmtIf]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       i
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FuncCallParams(
                                                DesignatorSimple(
                                                 inkrement
                                                ) [DesignatorSimple]
                                                ActParsMulti(
                                                  ActParsSingle(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorDesignator(
                                                            DesignatorSimple(
                                                             i
                                                            ) [DesignatorSimple]
                                                          ) [FactorDesignator]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [ActParsSingle]
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [ActParsMulti]
                                              ) [FuncCallParams]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                              ) [Stmt]
                              CondOne(
                                CondTermOne(
                                  CondFactTwo(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorSimple(
                                             i
                                            ) [DesignatorSimple]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                    RelopLT(
                                    ) [RelopLT]
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           10
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [CondFactTwo]
                                ) [CondTermOne]
                              ) [CondOne]
                            ) [StmtDoWhile]
                          ) [StatementMulti]
                          StmtIfElse(
                            StmtIfBody(
                              IfCond(
                                CondOne(
                                  CondTermTwo(
                                    CondTermOne(
                                      CondFactTwo(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorDesignator(
                                                DesignatorSimple(
                                                 i
                                                ) [DesignatorSimple]
                                              ) [FactorDesignator]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                        RelopEQ(
                                        ) [RelopEQ]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               3
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [CondFactTwo]
                                    ) [CondTermOne]
                                    CondFactOne(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FuncCall(
                                              DesignatorSimple(
                                               verify
                                              ) [DesignatorSimple]
                                            ) [FuncCall]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [CondFactOne]
                                  ) [CondTermTwo]
                                ) [CondOne]
                              ) [IfCond]
                              StmtPrint(
                                ExprOne(
                                  ExprNeg(
                                    TermSingle(
                                      FactorNumConst(
                                       4
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprNeg]
                                ) [ExprOne]
                              ) [StmtPrint]
                            ) [StmtIfBody]
                            StmtPrint(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     4
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [StmtPrint]
                          ) [StmtIfElse]
                        ) [StatementMulti]
                        StmtRead(
                          DesignatorArray(
                           niz
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   0
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [DesignatorArray]
                        ) [StmtRead]
                      ) [StatementMulti]
                      StmtRead(
                        DesignatorArray(
                         niz
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [DesignatorArray]
                      ) [StmtRead]
                    ) [StatementMulti]
                    StmtRead(
                      DesignatorArray(
                       niz
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [DesignatorArray]
                    ) [StmtRead]
                  ) [StatementMulti]
                  StmtPrint(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             eol
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [StmtPrint]
                ) [StatementMulti]
                StmtPrint(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           sum
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FuncCallParams(
                                      DesignatorSimple(
                                       sum
                                      ) [DesignatorSimple]
                                      ActParsMulti(
                                        ActParsSingle(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorDesignator(
                                                  DesignatorArray(
                                                   niz
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           0
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [DesignatorArray]
                                                ) [FactorDesignator]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [ActParsSingle]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorDesignator(
                                                DesignatorArray(
                                                 niz
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [DesignatorArray]
                                              ) [FactorDesignator]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [ActParsMulti]
                                    ) [FuncCallParams]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorArray(
                                     niz
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             2
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [DesignatorArray]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [StmtPrint]
              ) [StatementMulti]
              StmtPrint(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         eol
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtPrint]
            ) [StatementMulti]
            StmtPrint(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FuncCallParams(
                      DesignatorSimple(
                       inkrement
                      ) [DesignatorSimple]
                      ActParsMulti(
                        ActParsSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorArray(
                                   niz
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           2
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [DesignatorArray]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [ActParsSingle]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [ActParsMulti]
                    ) [FuncCallParams]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtPrint]
          ) [StatementMulti]
          StmtPrint(
            ExprTernary(
              ExprSingle(
                TermSingle(
                  FuncCall(
                    DesignatorSimple(
                     verify
                    ) [DesignatorSimple]
                  ) [FuncCall]
                ) [TermSingle]
              ) [ExprSingle]
              ExprSingle(
                TermSingle(
                  FactorCharConst(
                   t
                  ) [FactorCharConst]
                ) [TermSingle]
              ) [ExprSingle]
              ExprSingle(
                TermSingle(
                  FactorCharConst(
                   f
                  ) [FactorCharConst]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprTernary]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:14:48,604 - 

================SEMANTICKA OBRADA====================


INFO  16:14:48,614 - Deklarisana konstanta 'jedan' na liniji 5
INFO  16:14:48,614 - Deklarisana globalna promenljiva 'i' na liniji 7
INFO  16:14:48,614 - Deklarisana globalna promenljiva 'ibool' na liniji 8
INFO  16:14:48,614 - Deklarisan globalni niz 'niz' na liniji 10
INFO  16:14:48,614 - Formalni parametar funkcije sum: 'z' na liniji 14
INFO  16:14:48,615 - Formalni parametar funkcije sum: 'd' na liniji 14
INFO  16:14:48,615 - Formalni parametar funkcije inkrement: 'a' na liniji 19
INFO  16:14:48,615 - Formalni parametar funkcije inkrement: 'inc' na liniji 19
INFO  16:14:48,615 - Deklarisana promenljiva 'pom' na liniji 20
INFO  16:14:48,615 - Pronadjen poziv funkcije 'sum' na liniji 25
INFO  16:14:48,615 - Pristup elementu niza 'niz' na liniji 50
INFO  16:14:48,615 - Pristup elementu niza 'niz' na liniji 51
INFO  16:14:48,615 - Pristup elementu niza 'niz' na liniji 52
INFO  16:14:48,615 - Pristup elementu niza 'niz' na liniji 52
INFO  16:14:48,615 - Pristup elementu niza 'niz' na liniji 52
INFO  16:14:48,615 - Pronadjen poziv funkcije 'sum' na liniji 52
INFO  16:14:48,615 - Pronadjen poziv funkcije 'verify' na liniji 53
INFO  16:14:48,615 - Pristup elementu niza 'niz' na liniji 53
INFO  16:14:48,615 - Pronadjen poziv funkcije 'ord' na liniji 53
INFO  16:14:48,615 - Pronadjen poziv funkcije 'ord' na liniji 54
INFO  16:14:48,616 - Pronadjen poziv funkcije 'inkrement' na liniji 65
INFO  16:14:48,616 - Pronadjen poziv funkcije 'verify' na liniji 68
INFO  16:14:48,616 - Pristup elementu niza 'niz' na liniji 71
INFO  16:14:48,616 - Pristup elementu niza 'niz' na liniji 72
INFO  16:14:48,616 - Pristup elementu niza 'niz' na liniji 73
INFO  16:14:48,616 - Pristup elementu niza 'niz' na liniji 76
INFO  16:14:48,616 - Pristup elementu niza 'niz' na liniji 76
INFO  16:14:48,616 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  16:14:48,616 - Pristup elementu niza 'niz' na liniji 76
INFO  16:14:48,616 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  16:14:48,616 - Pristup elementu niza 'niz' na liniji 79
INFO  16:14:48,616 - Pronadjen poziv funkcije 'inkrement' na liniji 79
INFO  16:14:48,616 - Pronadjen poziv funkcije 'verify' na liniji 81
INFO  16:14:48,616 - ===================================
INFO  16:14:48,616 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  16:14:48,622 - Parsiranje uspesno zavrseno!
INFO  16:15:22,122 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:15:22,181 - #2 program
INFO  16:15:22,181 - #20 test302
INFO  16:15:22,182 - #7 const
INFO  16:15:22,183 - #20 int
INFO  16:15:22,183 - #20 jedan
INFO  16:15:22,184 - #37 =
INFO  16:15:22,184 - #21 1
INFO  16:15:22,184 - #40 ;
INFO  16:15:22,185 - #20 int
INFO  16:15:22,185 - #20 i
INFO  16:15:22,185 - #40 ;
INFO  16:15:22,186 - #20 bool
INFO  16:15:22,186 - #20 ibool
INFO  16:15:22,186 - #40 ;
INFO  16:15:22,186 - #20 int
INFO  16:15:22,186 - #20 niz
INFO  16:15:22,186 - #45 [
INFO  16:15:22,186 - #46 ]
INFO  16:15:22,187 - #40 ;
INFO  16:15:22,187 - #47 {
INFO  16:15:22,187 - #20 int
INFO  16:15:22,187 - #20 sum
INFO  16:15:22,187 - #43 (
INFO  16:15:22,187 - #20 int
INFO  16:15:22,187 - #20 z
INFO  16:15:22,187 - #41 ,
INFO  16:15:22,188 - #20 int
INFO  16:15:22,188 - #20 d
INFO  16:15:22,188 - #44 )
INFO  16:15:22,188 - #47 {
INFO  16:15:22,188 - #15 return
INFO  16:15:22,188 - #20 z
INFO  16:15:22,188 - #24 +
INFO  16:15:22,189 - #20 d
INFO  16:15:22,190 - #40 ;
INFO  16:15:22,190 - #48 }
INFO  16:15:22,190 - #20 int
INFO  16:15:22,191 - #20 inkrement
INFO  16:15:22,191 - #43 (
INFO  16:15:22,191 - #20 int
INFO  16:15:22,191 - #20 a
INFO  16:15:22,191 - #41 ,
INFO  16:15:22,191 - #20 int
INFO  16:15:22,191 - #20 inc
INFO  16:15:22,191 - #44 )
INFO  16:15:22,191 - #20 int
INFO  16:15:22,191 - #20 pom
INFO  16:15:22,191 - #40 ;
INFO  16:15:22,192 - #47 {
INFO  16:15:22,192 - #8 if
INFO  16:15:22,192 - #43 (
INFO  16:15:22,192 - #20 inc
INFO  16:15:22,192 - #29 ==
INFO  16:15:22,192 - #20 jedan
INFO  16:15:22,193 - #44 )
INFO  16:15:22,193 - #20 pom
INFO  16:15:22,193 - #37 =
INFO  16:15:22,193 - #21 1
INFO  16:15:22,193 - #40 ;
INFO  16:15:22,194 - #6 else
INFO  16:15:22,194 - #8 if
INFO  16:15:22,194 - #43 (
INFO  16:15:22,194 - #20 inc
INFO  16:15:22,194 - #29 ==
INFO  16:15:22,194 - #21 2
INFO  16:15:22,194 - #44 )
INFO  16:15:22,195 - #20 pom
INFO  16:15:22,195 - #37 =
INFO  16:15:22,195 - #20 a
INFO  16:15:22,195 - #40 ;
INFO  16:15:22,195 - #15 return
INFO  16:15:22,195 - #20 sum
INFO  16:15:22,195 - #43 (
INFO  16:15:22,195 - #20 a
INFO  16:15:22,195 - #41 ,
INFO  16:15:22,196 - #20 pom
INFO  16:15:22,196 - #44 )
INFO  16:15:22,196 - #40 ;
INFO  16:15:22,196 - #48 }
INFO  16:15:22,196 - #20 bool
INFO  16:15:22,197 - #20 verify
INFO  16:15:22,197 - #43 (
INFO  16:15:22,197 - #44 )
INFO  16:15:22,197 - #47 {
INFO  16:15:22,197 - #13 print
INFO  16:15:22,197 - #43 (
INFO  16:15:22,197 - #22 v
INFO  16:15:22,197 - #44 )
INFO  16:15:22,198 - #40 ;
INFO  16:15:22,198 - #15 return
INFO  16:15:22,198 - #23 false
INFO  16:15:22,198 - #40 ;
INFO  16:15:22,199 - #48 }
INFO  16:15:22,199 - #16 void
INFO  16:15:22,199 - #20 main
INFO  16:15:22,199 - #43 (
INFO  16:15:22,200 - #44 )
INFO  16:15:22,200 - #47 {
INFO  16:15:22,200 - #8 if
INFO  16:15:22,200 - #43 (
INFO  16:15:22,200 - #21 1
INFO  16:15:22,200 - #30 !=
INFO  16:15:22,200 - #21 1
INFO  16:15:22,201 - #44 )
INFO  16:15:22,201 - #13 print
INFO  16:15:22,201 - #43 (
INFO  16:15:22,201 - #25 -
INFO  16:15:22,201 - #21 6
INFO  16:15:22,201 - #44 )
INFO  16:15:22,201 - #40 ;
INFO  16:15:22,201 - #6 else
INFO  16:15:22,201 - #13 print
INFO  16:15:22,201 - #43 (
INFO  16:15:22,201 - #21 0
INFO  16:15:22,202 - #44 )
INFO  16:15:22,202 - #40 ;
INFO  16:15:22,202 - #20 ibool
INFO  16:15:22,202 - #37 =
INFO  16:15:22,202 - #23 false
INFO  16:15:22,202 - #40 ;
INFO  16:15:22,202 - #20 i
INFO  16:15:22,202 - #37 =
INFO  16:15:22,202 - #21 0
INFO  16:15:22,202 - #40 ;
INFO  16:15:22,202 - #10 do
INFO  16:15:22,202 - #47 {
INFO  16:15:22,203 - #8 if
INFO  16:15:22,203 - #43 (
INFO  16:15:22,203 - #20 i
INFO  16:15:22,203 - #29 ==
INFO  16:15:22,203 - #21 2
INFO  16:15:22,204 - #44 )
INFO  16:15:22,204 - #20 ibool
INFO  16:15:22,204 - #37 =
INFO  16:15:22,204 - #23 true
INFO  16:15:22,204 - #40 ;
INFO  16:15:22,204 - #20 i
INFO  16:15:22,204 - #38 ++
INFO  16:15:22,204 - #40 ;
INFO  16:15:22,204 - #48 }
INFO  16:15:22,204 - #11 while
INFO  16:15:22,204 - #43 (
INFO  16:15:22,204 - #20 i
INFO  16:15:22,204 - #33 <
INFO  16:15:22,204 - #21 5
INFO  16:15:22,205 - #44 )
INFO  16:15:22,205 - #40 ;
INFO  16:15:22,205 - #8 if
INFO  16:15:22,205 - #43 (
INFO  16:15:22,208 - #20 ibool
INFO  16:15:22,208 - #44 )
INFO  16:15:22,208 - #8 if
INFO  16:15:22,208 - #43 (
INFO  16:15:22,208 - #20 i
INFO  16:15:22,208 - #29 ==
INFO  16:15:22,209 - #21 5
INFO  16:15:22,209 - #44 )
INFO  16:15:22,209 - #13 print
INFO  16:15:22,209 - #43 (
INFO  16:15:22,209 - #21 1
INFO  16:15:22,209 - #44 )
INFO  16:15:22,209 - #40 ;
INFO  16:15:22,209 - #6 else
INFO  16:15:22,209 - #13 print
INFO  16:15:22,209 - #43 (
INFO  16:15:22,209 - #25 -
INFO  16:15:22,209 - #21 1
INFO  16:15:22,209 - #44 )
INFO  16:15:22,209 - #40 ;
INFO  16:15:22,209 - #20 niz
INFO  16:15:22,209 - #37 =
INFO  16:15:22,209 - #12 new
INFO  16:15:22,210 - #20 int
INFO  16:15:22,210 - #45 [
INFO  16:15:22,210 - #21 3
INFO  16:15:22,210 - #46 ]
INFO  16:15:22,210 - #40 ;
INFO  16:15:22,210 - #20 niz
INFO  16:15:22,210 - #45 [
INFO  16:15:22,210 - #21 0
INFO  16:15:22,210 - #46 ]
INFO  16:15:22,210 - #37 =
INFO  16:15:22,211 - #21 1
INFO  16:15:22,211 - #40 ;
INFO  16:15:22,211 - #20 niz
INFO  16:15:22,211 - #45 [
INFO  16:15:22,211 - #21 1
INFO  16:15:22,211 - #46 ]
INFO  16:15:22,211 - #37 =
INFO  16:15:22,211 - #21 2
INFO  16:15:22,211 - #40 ;
INFO  16:15:22,211 - #20 niz
INFO  16:15:22,211 - #45 [
INFO  16:15:22,211 - #21 2
INFO  16:15:22,211 - #46 ]
INFO  16:15:22,212 - #37 =
INFO  16:15:22,212 - #20 sum
INFO  16:15:22,212 - #43 (
INFO  16:15:22,212 - #20 niz
INFO  16:15:22,212 - #45 [
INFO  16:15:22,212 - #21 1
INFO  16:15:22,212 - #46 ]
INFO  16:15:22,212 - #41 ,
INFO  16:15:22,212 - #20 niz
INFO  16:15:22,212 - #45 [
INFO  16:15:22,212 - #21 0
INFO  16:15:22,212 - #46 ]
INFO  16:15:22,212 - #44 )
INFO  16:15:22,212 - #24 +
INFO  16:15:22,212 - #21 1
INFO  16:15:22,213 - #40 ;
INFO  16:15:22,213 - #8 if
INFO  16:15:22,213 - #43 (
INFO  16:15:22,213 - #20 verify
INFO  16:15:22,213 - #43 (
INFO  16:15:22,213 - #44 )
INFO  16:15:22,213 - #36 ||
INFO  16:15:22,213 - #20 niz
INFO  16:15:22,213 - #45 [
INFO  16:15:22,213 - #21 2
INFO  16:15:22,213 - #46 ]
INFO  16:15:22,213 - #29 ==
INFO  16:15:22,213 - #21 4
INFO  16:15:22,213 - #44 )
INFO  16:15:22,214 - #13 print
INFO  16:15:22,214 - #43 (
INFO  16:15:22,214 - #20 ord
INFO  16:15:22,214 - #43 (
INFO  16:15:22,214 - #22 A
INFO  16:15:22,214 - #44 )
INFO  16:15:22,214 - #44 )
INFO  16:15:22,214 - #40 ;
INFO  16:15:22,214 - #6 else
INFO  16:15:22,214 - #13 print
INFO  16:15:22,214 - #43 (
INFO  16:15:22,214 - #20 ord
INFO  16:15:22,214 - #43 (
INFO  16:15:22,214 - #21 1
INFO  16:15:22,215 - #44 )
INFO  16:15:22,215 - #44 )
INFO  16:15:22,215 - #40 ;
INFO  16:15:22,215 - #13 print
INFO  16:15:22,215 - #43 (
INFO  16:15:22,215 - #20 eol
INFO  16:15:22,215 - #44 )
INFO  16:15:22,215 - #40 ;
INFO  16:15:22,215 - #20 i
INFO  16:15:22,215 - #37 =
INFO  16:15:22,216 - #21 0
INFO  16:15:22,216 - #40 ;
INFO  16:15:22,216 - #10 do
INFO  16:15:22,216 - #47 {
INFO  16:15:22,216 - #8 if
INFO  16:15:22,216 - #43 (
INFO  16:15:22,216 - #20 i
INFO  16:15:22,216 - #29 ==
INFO  16:15:22,216 - #21 3
INFO  16:15:22,217 - #44 )
INFO  16:15:22,217 - #47 {
INFO  16:15:22,217 - #20 i
INFO  16:15:22,217 - #38 ++
INFO  16:15:22,217 - #40 ;
INFO  16:15:22,217 - #18 continue
INFO  16:15:22,217 - #40 ;
INFO  16:15:22,217 - #48 }
INFO  16:15:22,218 - #8 if
INFO  16:15:22,218 - #43 (
INFO  16:15:22,218 - #20 i
INFO  16:15:22,218 - #29 ==
INFO  16:15:22,218 - #21 4
INFO  16:15:22,218 - #44 )
INFO  16:15:22,218 - #3 break
INFO  16:15:22,218 - #40 ;
INFO  16:15:22,218 - #20 i
INFO  16:15:22,219 - #37 =
INFO  16:15:22,219 - #20 inkrement
INFO  16:15:22,219 - #43 (
INFO  16:15:22,219 - #20 i
INFO  16:15:22,219 - #41 ,
INFO  16:15:22,219 - #21 1
INFO  16:15:22,219 - #44 )
INFO  16:15:22,219 - #40 ;
INFO  16:15:22,219 - #48 }
INFO  16:15:22,219 - #11 while
INFO  16:15:22,219 - #43 (
INFO  16:15:22,219 - #20 i
INFO  16:15:22,220 - #33 <
INFO  16:15:22,220 - #21 10
INFO  16:15:22,220 - #44 )
INFO  16:15:22,220 - #40 ;
INFO  16:15:22,220 - #8 if
INFO  16:15:22,220 - #43 (
INFO  16:15:22,220 - #20 i
INFO  16:15:22,220 - #29 ==
INFO  16:15:22,220 - #21 3
INFO  16:15:22,220 - #35 &&
INFO  16:15:22,221 - #20 verify
INFO  16:15:22,221 - #43 (
INFO  16:15:22,221 - #44 )
INFO  16:15:22,221 - #44 )
INFO  16:15:22,221 - #13 print
INFO  16:15:22,221 - #43 (
INFO  16:15:22,221 - #25 -
INFO  16:15:22,221 - #21 4
INFO  16:15:22,221 - #44 )
INFO  16:15:22,221 - #40 ;
INFO  16:15:22,221 - #6 else
INFO  16:15:22,221 - #13 print
INFO  16:15:22,221 - #43 (
INFO  16:15:22,222 - #21 4
INFO  16:15:22,222 - #44 )
INFO  16:15:22,222 - #40 ;
INFO  16:15:22,222 - #14 read
INFO  16:15:22,222 - #43 (
INFO  16:15:22,222 - #20 niz
INFO  16:15:22,222 - #45 [
INFO  16:15:22,222 - #21 0
INFO  16:15:22,222 - #46 ]
INFO  16:15:22,222 - #44 )
INFO  16:15:22,222 - #40 ;
INFO  16:15:22,222 - #14 read
INFO  16:15:22,222 - #43 (
INFO  16:15:22,222 - #20 niz
INFO  16:15:22,222 - #45 [
INFO  16:15:22,223 - #21 1
INFO  16:15:22,223 - #46 ]
INFO  16:15:22,223 - #44 )
INFO  16:15:22,223 - #40 ;
INFO  16:15:22,223 - #14 read
INFO  16:15:22,223 - #43 (
INFO  16:15:22,223 - #20 niz
INFO  16:15:22,223 - #45 [
INFO  16:15:22,223 - #21 2
INFO  16:15:22,223 - #46 ]
INFO  16:15:22,223 - #44 )
INFO  16:15:22,223 - #40 ;
INFO  16:15:22,223 - #13 print
INFO  16:15:22,223 - #43 (
INFO  16:15:22,223 - #20 eol
INFO  16:15:22,223 - #44 )
INFO  16:15:22,223 - #40 ;
INFO  16:15:22,223 - #13 print
INFO  16:15:22,223 - #43 (
INFO  16:15:22,223 - #20 sum
INFO  16:15:22,223 - #43 (
INFO  16:15:22,224 - #20 sum
INFO  16:15:22,224 - #43 (
INFO  16:15:22,224 - #20 niz
INFO  16:15:22,224 - #45 [
INFO  16:15:22,224 - #21 0
INFO  16:15:22,224 - #46 ]
INFO  16:15:22,224 - #41 ,
INFO  16:15:22,224 - #20 niz
INFO  16:15:22,224 - #45 [
INFO  16:15:22,224 - #21 1
INFO  16:15:22,224 - #46 ]
INFO  16:15:22,224 - #44 )
INFO  16:15:22,224 - #41 ,
INFO  16:15:22,224 - #20 niz
INFO  16:15:22,224 - #45 [
INFO  16:15:22,224 - #21 2
INFO  16:15:22,224 - #46 ]
INFO  16:15:22,224 - #44 )
INFO  16:15:22,224 - #44 )
INFO  16:15:22,224 - #40 ;
INFO  16:15:22,224 - #13 print
INFO  16:15:22,224 - #43 (
INFO  16:15:22,224 - #20 eol
INFO  16:15:22,224 - #44 )
INFO  16:15:22,224 - #40 ;
INFO  16:15:22,224 - #13 print
INFO  16:15:22,224 - #43 (
INFO  16:15:22,224 - #20 inkrement
INFO  16:15:22,224 - #43 (
INFO  16:15:22,225 - #20 niz
INFO  16:15:22,225 - #45 [
INFO  16:15:22,225 - #21 2
INFO  16:15:22,225 - #46 ]
INFO  16:15:22,225 - #41 ,
INFO  16:15:22,225 - #21 2
INFO  16:15:22,225 - #44 )
INFO  16:15:22,225 - #44 )
INFO  16:15:22,225 - #40 ;
INFO  16:15:22,225 - #13 print
INFO  16:15:22,225 - #43 (
INFO  16:15:22,225 - #20 verify
INFO  16:15:22,225 - #43 (
INFO  16:15:22,225 - #44 )
INFO  16:15:22,225 - #49 ?
INFO  16:15:22,225 - #22 t
INFO  16:15:22,225 - #50 :
INFO  16:15:22,225 - #22 f
INFO  16:15:22,225 - #44 )
INFO  16:15:22,225 - #40 ;
INFO  16:15:22,226 - #48 }
INFO  16:15:22,226 - #48 }
INFO  16:15:22,227 - 

================SINTAKSNO STABLO====================


INFO  16:15:22,238 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclMulti(
          ProgramDeclEps(
          ) [ProgramDeclEps]
          PartConstDeclaration(
            ConstDeclaration(
              Type(
               int
              ) [Type]
              ConstSingle(
                ConstPart(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [ConstPart]
              ) [ConstSingle]
            ) [ConstDeclaration]
          ) [PartConstDeclaration]
        ) [ProgramDeclMulti]
        PartVarDeclaration(
          GlobalVarDeclaration(
            Type(
             int
            ) [Type]
            GlobalVarSingle(
              GlobalVarNormal(
               i
              ) [GlobalVarNormal]
            ) [GlobalVarSingle]
          ) [GlobalVarDeclaration]
        ) [PartVarDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           bool
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             ibool
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDecMulti(
        MethodDeclSingle(
          MethodTypeDeclaration(
            MethodType2(
              MethodTypeName(
                Type(
                 int
                ) [Type]
               sum
              ) [MethodTypeName]
              ParamMulti(
                ParamSingle(
                  ParamNormal(
                    Type(
                     int
                    ) [Type]
                   z
                  ) [ParamNormal]
                ) [ParamSingle]
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 d
                ) [ParamNormal]
              ) [ParamMulti]
              StatementSingle(
                StmtReturnExpr(
                  ExprOne(
                    ExprAddop(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             z
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                      AddopPlus(
                      ) [AddopPlus]
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           d
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprAddop]
                  ) [ExprOne]
                ) [StmtReturnExpr]
              ) [StatementSingle]
            ) [MethodType2]
          ) [MethodTypeDeclaration]
        ) [MethodDeclSingle]
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             inkrement
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 a
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               inc
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   pom
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementMulti(
              StatementSingle(
                StmtIfElse(
                  StmtIfBody(
                    IfCond(
                      CondOne(
                        CondTermOne(
                          CondFactTwo(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     inc
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                            RelopEQ(
                            ) [RelopEQ]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     jedan
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactTwo]
                        ) [CondTermOne]
                      ) [CondOne]
                    ) [IfCond]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         pom
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StmtIfBody]
                  StmtIf(
                    StmtIfBody(
                      IfCond(
                        CondOne(
                          CondTermOne(
                            CondFactTwo(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       inc
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                              RelopEQ(
                              ) [RelopEQ]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [CondFactTwo]
                          ) [CondTermOne]
                        ) [CondOne]
                      ) [IfCond]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           pom
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     a
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StmtIfBody]
                  ) [StmtIf]
                ) [StmtIfElse]
              ) [StatementSingle]
              StmtReturnExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FuncCallParams(
                        DesignatorSimple(
                         sum
                        ) [DesignatorSimple]
                        ActParsMulti(
                          ActParsSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     a
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsSingle]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   pom
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [ActParsMulti]
                      ) [FuncCallParams]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementMulti]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDecMulti]
      MethodTypeDeclaration(
        MethodType6(
          MethodTypeName(
            Type(
             bool
            ) [Type]
           verify
          ) [MethodTypeName]
          StatementMulti(
            StatementSingle(
              StmtPrint(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorCharConst(
                       v
                      ) [FactorCharConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtPrint]
            ) [StatementSingle]
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorBoolConst(
                     false
                    ) [FactorBoolConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementMulti]
        ) [MethodType6]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementMulti(
                                                  StatementSingle(
                                                    StmtIfElse(
                                                      StmtIfBody(
                                                        IfCond(
                                                          CondOne(
                                                            CondTermOne(
                                                              CondFactTwo(
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       1
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                                RelopNE(
                                                                ) [RelopNE]
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       1
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                              ) [CondFactTwo]
                                                            ) [CondTermOne]
                                                          ) [CondOne]
                                                        ) [IfCond]
                                                        StmtPrint(
                                                          ExprOne(
                                                            ExprNeg(
                                                              TermSingle(
                                                                FactorNumConst(
                                                                 6
                                                                ) [FactorNumConst]
                                                              ) [TermSingle]
                                                            ) [ExprNeg]
                                                          ) [ExprOne]
                                                        ) [StmtPrint]
                                                      ) [StmtIfBody]
                                                      StmtPrint(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               0
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [StmtPrint]
                                                    ) [StmtIfElse]
                                                  ) [StatementSingle]
                                                  StmtDesign(
                                                    DesignatorAssignment(
                                                      DesignatorSimple(
                                                       ibool
                                                      ) [DesignatorSimple]
                                                      AssignmentExpr(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorBoolConst(
                                                               false
                                                              ) [FactorBoolConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [AssignmentExpr]
                                                    ) [DesignatorAssignment]
                                                  ) [StmtDesign]
                                                ) [StatementMulti]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     i
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             0
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDoWhile(
                                                DoHead(
                                                ) [DoHead]
                                                Stmt(
                                                  StatementMulti(
                                                    StatementSingle(
                                                      StmtIf(
                                                        StmtIfBody(
                                                          IfCond(
                                                            CondOne(
                                                              CondTermOne(
                                                                CondFactTwo(
                                                                  ExprOne(
                                                                    ExprSingle(
                                                                      TermSingle(
                                                                        FactorDesignator(
                                                                          DesignatorSimple(
                                                                           i
                                                                          ) [DesignatorSimple]
                                                                        ) [FactorDesignator]
                                                                      ) [TermSingle]
                                                                    ) [ExprSingle]
                                                                  ) [ExprOne]
                                                                  RelopEQ(
                                                                  ) [RelopEQ]
                                                                  ExprOne(
                                                                    ExprSingle(
                                                                      TermSingle(
                                                                        FactorNumConst(
                                                                         2
                                                                        ) [FactorNumConst]
                                                                      ) [TermSingle]
                                                                    ) [ExprSingle]
                                                                  ) [ExprOne]
                                                                ) [CondFactTwo]
                                                              ) [CondTermOne]
                                                            ) [CondOne]
                                                          ) [IfCond]
                                                          StmtDesign(
                                                            DesignatorAssignment(
                                                              DesignatorSimple(
                                                               ibool
                                                              ) [DesignatorSimple]
                                                              AssignmentExpr(
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorBoolConst(
                                                                       true
                                                                      ) [FactorBoolConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                              ) [AssignmentExpr]
                                                            ) [DesignatorAssignment]
                                                          ) [StmtDesign]
                                                        ) [StmtIfBody]
                                                      ) [StmtIf]
                                                    ) [StatementSingle]
                                                    StmtDesign(
                                                      DesignatorIncrement(
                                                        DesignatorSimple(
                                                         i
                                                        ) [DesignatorSimple]
                                                      ) [DesignatorIncrement]
                                                    ) [StmtDesign]
                                                  ) [StatementMulti]
                                                ) [Stmt]
                                                CondOne(
                                                  CondTermOne(
                                                    CondFactTwo(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorDesignator(
                                                              DesignatorSimple(
                                                               i
                                                              ) [DesignatorSimple]
                                                            ) [FactorDesignator]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                      RelopLT(
                                                      ) [RelopLT]
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             5
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [CondFactTwo]
                                                  ) [CondTermOne]
                                                ) [CondOne]
                                              ) [StmtDoWhile]
                                            ) [StatementMulti]
                                            StmtIf(
                                              StmtIfBody(
                                                IfCond(
                                                  CondOne(
                                                    CondTermOne(
                                                      CondFactOne(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorDesignator(
                                                                DesignatorSimple(
                                                                 ibool
                                                                ) [DesignatorSimple]
                                                              ) [FactorDesignator]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [CondFactOne]
                                                    ) [CondTermOne]
                                                  ) [CondOne]
                                                ) [IfCond]
                                                StmtIfElse(
                                                  StmtIfBody(
                                                    IfCond(
                                                      CondOne(
                                                        CondTermOne(
                                                          CondFactTwo(
                                                            ExprOne(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorDesignator(
                                                                    DesignatorSimple(
                                                                     i
                                                                    ) [DesignatorSimple]
                                                                  ) [FactorDesignator]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [ExprOne]
                                                            RelopEQ(
                                                            ) [RelopEQ]
                                                            ExprOne(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorNumConst(
                                                                   5
                                                                  ) [FactorNumConst]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [ExprOne]
                                                          ) [CondFactTwo]
                                                        ) [CondTermOne]
                                                      ) [CondOne]
                                                    ) [IfCond]
                                                    StmtPrint(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             1
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [StmtPrint]
                                                  ) [StmtIfBody]
                                                  StmtPrint(
                                                    ExprOne(
                                                      ExprNeg(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           1
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprNeg]
                                                    ) [ExprOne]
                                                  ) [StmtPrint]
                                                ) [StmtIfElse]
                                              ) [StmtIfBody]
                                            ) [StmtIf]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               niz
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNewArray(
                                                        Type(
                                                         int
                                                        ) [Type]
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               3
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [FactorNewArray]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorArray(
                                             niz
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     0
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [DesignatorArray]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     1
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorArray(
                                           niz
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   1
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [DesignatorArray]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   2
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorArray(
                                         niz
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 2
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [DesignatorArray]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprAddop(
                                              ExprSingle(
                                                TermSingle(
                                                  FuncCallParams(
                                                    DesignatorSimple(
                                                     sum
                                                    ) [DesignatorSimple]
                                                    ActParsMulti(
                                                      ActParsSingle(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorDesignator(
                                                                DesignatorArray(
                                                                 niz
                                                                  ExprOne(
                                                                    ExprSingle(
                                                                      TermSingle(
                                                                        FactorNumConst(
                                                                         1
                                                                        ) [FactorNumConst]
                                                                      ) [TermSingle]
                                                                    ) [ExprSingle]
                                                                  ) [ExprOne]
                                                                ) [DesignatorArray]
                                                              ) [FactorDesignator]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [ActParsSingle]
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorDesignator(
                                                              DesignatorArray(
                                                               niz
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       0
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                              ) [DesignatorArray]
                                                            ) [FactorDesignator]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [ActParsMulti]
                                                  ) [FuncCallParams]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                              AddopPlus(
                                              ) [AddopPlus]
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprAddop]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtIfElse(
                                    StmtIfBody(
                                      IfCond(
                                        CondTwo(
                                          CondOne(
                                            CondTermOne(
                                              CondFactOne(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FuncCall(
                                                        DesignatorSimple(
                                                         verify
                                                        ) [DesignatorSimple]
                                                      ) [FuncCall]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [CondFactOne]
                                            ) [CondTermOne]
                                          ) [CondOne]
                                          CondTermOne(
                                            CondFactTwo(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorDesignator(
                                                      DesignatorArray(
                                                       niz
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               2
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [DesignatorArray]
                                                    ) [FactorDesignator]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                              RelopEQ(
                                              ) [RelopEQ]
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     4
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [CondFactTwo]
                                          ) [CondTermOne]
                                        ) [CondTwo]
                                      ) [IfCond]
                                      StmtPrint(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FuncCallParams(
                                                DesignatorSimple(
                                                 ord
                                                ) [DesignatorSimple]
                                                ActParsSingle(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorCharConst(
                                                         A
                                                        ) [FactorCharConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [ActParsSingle]
                                              ) [FuncCallParams]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [StmtPrint]
                                    ) [StmtIfBody]
                                    StmtPrint(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FuncCallParams(
                                              DesignatorSimple(
                                               ord
                                              ) [DesignatorSimple]
                                              ActParsSingle(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       1
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [ActParsSingle]
                                            ) [FuncCallParams]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [StmtPrint]
                                  ) [StmtIfElse]
                                ) [StatementMulti]
                                StmtPrint(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorSimple(
                                           eol
                                          ) [DesignatorSimple]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [StmtPrint]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   i
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           0
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDoWhile(
                              DoHead(
                              ) [DoHead]
                              Stmt(
                                StatementMulti(
                                  StatementMulti(
                                    StatementSingle(
                                      StmtIf(
                                        StmtIfBody(
                                          IfCond(
                                            CondOne(
                                              CondTermOne(
                                                CondFactTwo(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorSimple(
                                                           i
                                                          ) [DesignatorSimple]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                  RelopEQ(
                                                  ) [RelopEQ]
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         3
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [CondFactTwo]
                                              ) [CondTermOne]
                                            ) [CondOne]
                                          ) [IfCond]
                                          Stmt(
                                            StatementMulti(
                                              StatementSingle(
                                                StmtDesign(
                                                  DesignatorIncrement(
                                                    DesignatorSimple(
                                                     i
                                                    ) [DesignatorSimple]
                                                  ) [DesignatorIncrement]
                                                ) [StmtDesign]
                                              ) [StatementSingle]
                                              StmtContinue(
                                              ) [StmtContinue]
                                            ) [StatementMulti]
                                          ) [Stmt]
                                        ) [StmtIfBody]
                                      ) [StmtIf]
                                    ) [StatementSingle]
                                    StmtIf(
                                      StmtIfBody(
                                        IfCond(
                                          CondOne(
                                            CondTermOne(
                                              CondFactTwo(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorSimple(
                                                         i
                                                        ) [DesignatorSimple]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                                RelopEQ(
                                                ) [RelopEQ]
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       4
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [CondFactTwo]
                                            ) [CondTermOne]
                                          ) [CondOne]
                                        ) [IfCond]
                                        StmtBreak(
                                        ) [StmtBreak]
                                      ) [StmtIfBody]
                                    ) [StmtIf]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       i
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FuncCallParams(
                                                DesignatorSimple(
                                                 inkrement
                                                ) [DesignatorSimple]
                                                ActParsMulti(
                                                  ActParsSingle(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorDesignator(
                                                            DesignatorSimple(
                                                             i
                                                            ) [DesignatorSimple]
                                                          ) [FactorDesignator]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [ActParsSingle]
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [ActParsMulti]
                                              ) [FuncCallParams]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                              ) [Stmt]
                              CondOne(
                                CondTermOne(
                                  CondFactTwo(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorSimple(
                                             i
                                            ) [DesignatorSimple]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                    RelopLT(
                                    ) [RelopLT]
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           10
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [CondFactTwo]
                                ) [CondTermOne]
                              ) [CondOne]
                            ) [StmtDoWhile]
                          ) [StatementMulti]
                          StmtIfElse(
                            StmtIfBody(
                              IfCond(
                                CondOne(
                                  CondTermTwo(
                                    CondTermOne(
                                      CondFactTwo(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorDesignator(
                                                DesignatorSimple(
                                                 i
                                                ) [DesignatorSimple]
                                              ) [FactorDesignator]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                        RelopEQ(
                                        ) [RelopEQ]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               3
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [CondFactTwo]
                                    ) [CondTermOne]
                                    CondFactOne(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FuncCall(
                                              DesignatorSimple(
                                               verify
                                              ) [DesignatorSimple]
                                            ) [FuncCall]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [CondFactOne]
                                  ) [CondTermTwo]
                                ) [CondOne]
                              ) [IfCond]
                              StmtPrint(
                                ExprOne(
                                  ExprNeg(
                                    TermSingle(
                                      FactorNumConst(
                                       4
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprNeg]
                                ) [ExprOne]
                              ) [StmtPrint]
                            ) [StmtIfBody]
                            StmtPrint(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     4
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [StmtPrint]
                          ) [StmtIfElse]
                        ) [StatementMulti]
                        StmtRead(
                          DesignatorArray(
                           niz
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   0
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [DesignatorArray]
                        ) [StmtRead]
                      ) [StatementMulti]
                      StmtRead(
                        DesignatorArray(
                         niz
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [DesignatorArray]
                      ) [StmtRead]
                    ) [StatementMulti]
                    StmtRead(
                      DesignatorArray(
                       niz
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [DesignatorArray]
                    ) [StmtRead]
                  ) [StatementMulti]
                  StmtPrint(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             eol
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [StmtPrint]
                ) [StatementMulti]
                StmtPrint(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           sum
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FuncCallParams(
                                      DesignatorSimple(
                                       sum
                                      ) [DesignatorSimple]
                                      ActParsMulti(
                                        ActParsSingle(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorDesignator(
                                                  DesignatorArray(
                                                   niz
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           0
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [DesignatorArray]
                                                ) [FactorDesignator]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [ActParsSingle]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorDesignator(
                                                DesignatorArray(
                                                 niz
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [DesignatorArray]
                                              ) [FactorDesignator]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [ActParsMulti]
                                    ) [FuncCallParams]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorArray(
                                     niz
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             2
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [DesignatorArray]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [StmtPrint]
              ) [StatementMulti]
              StmtPrint(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         eol
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtPrint]
            ) [StatementMulti]
            StmtPrint(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FuncCallParams(
                      DesignatorSimple(
                       inkrement
                      ) [DesignatorSimple]
                      ActParsMulti(
                        ActParsSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorArray(
                                   niz
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           2
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [DesignatorArray]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [ActParsSingle]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [ActParsMulti]
                    ) [FuncCallParams]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtPrint]
          ) [StatementMulti]
          StmtPrint(
            ExprTernary(
              ExprSingle(
                TermSingle(
                  FuncCall(
                    DesignatorSimple(
                     verify
                    ) [DesignatorSimple]
                  ) [FuncCall]
                ) [TermSingle]
              ) [ExprSingle]
              ExprSingle(
                TermSingle(
                  FactorCharConst(
                   t
                  ) [FactorCharConst]
                ) [TermSingle]
              ) [ExprSingle]
              ExprSingle(
                TermSingle(
                  FactorCharConst(
                   f
                  ) [FactorCharConst]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprTernary]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:15:22,242 - 

================SEMANTICKA OBRADA====================


INFO  16:15:22,257 - Deklarisana konstanta 'jedan' na liniji 5
INFO  16:15:22,257 - Deklarisana globalna promenljiva 'i' na liniji 7
INFO  16:15:22,257 - Deklarisana globalna promenljiva 'ibool' na liniji 8
INFO  16:15:22,257 - Deklarisan globalni niz 'niz' na liniji 10
INFO  16:15:22,257 - Formalni parametar funkcije sum: 'z' na liniji 14
INFO  16:15:22,257 - Formalni parametar funkcije sum: 'd' na liniji 14
INFO  16:15:22,258 - Formalni parametar funkcije inkrement: 'a' na liniji 19
INFO  16:15:22,258 - Formalni parametar funkcije inkrement: 'inc' na liniji 19
INFO  16:15:22,258 - Deklarisana promenljiva 'pom' na liniji 20
INFO  16:15:22,258 - Pronadjen poziv funkcije 'sum' na liniji 25
INFO  16:15:22,258 - Pristup elementu niza 'niz' na liniji 50
INFO  16:15:22,258 - Pristup elementu niza 'niz' na liniji 51
INFO  16:15:22,258 - Pristup elementu niza 'niz' na liniji 52
INFO  16:15:22,258 - Pristup elementu niza 'niz' na liniji 52
INFO  16:15:22,258 - Pristup elementu niza 'niz' na liniji 52
INFO  16:15:22,258 - Pronadjen poziv funkcije 'sum' na liniji 52
INFO  16:15:22,259 - Pronadjen poziv funkcije 'verify' na liniji 53
INFO  16:15:22,259 - Pristup elementu niza 'niz' na liniji 53
INFO  16:15:22,259 - Pronadjen poziv funkcije 'ord' na liniji 53
INFO  16:15:22,259 - Pronadjen poziv funkcije 'ord' na liniji 54
INFO  16:15:22,259 - Pronadjen poziv funkcije 'inkrement' na liniji 65
INFO  16:15:22,259 - Pronadjen poziv funkcije 'verify' na liniji 68
INFO  16:15:22,259 - Pristup elementu niza 'niz' na liniji 71
INFO  16:15:22,259 - Pristup elementu niza 'niz' na liniji 72
INFO  16:15:22,259 - Pristup elementu niza 'niz' na liniji 73
INFO  16:15:22,259 - Pristup elementu niza 'niz' na liniji 76
INFO  16:15:22,259 - Pristup elementu niza 'niz' na liniji 76
INFO  16:15:22,259 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  16:15:22,259 - Pristup elementu niza 'niz' na liniji 76
INFO  16:15:22,259 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  16:15:22,259 - Pristup elementu niza 'niz' na liniji 79
INFO  16:15:22,259 - Pronadjen poziv funkcije 'inkrement' na liniji 79
INFO  16:15:22,259 - Pronadjen poziv funkcije 'verify' na liniji 81
INFO  16:15:22,260 - ===================================
INFO  16:15:22,260 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  16:15:22,267 - Parsiranje uspesno zavrseno!
INFO  16:35:57,727 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:35:57,774 - #2 program
INFO  16:35:57,774 - #20 test302
INFO  16:35:57,774 - #47 {
INFO  16:35:57,775 - #16 void
INFO  16:35:57,775 - #20 main
INFO  16:35:57,775 - #43 (
INFO  16:35:57,775 - #44 )
INFO  16:35:57,776 - #47 {
INFO  16:35:57,776 - #13 print
INFO  16:35:57,776 - #43 (
INFO  16:35:57,776 - #21 1
INFO  16:35:57,776 - #44 )
INFO  16:35:57,776 - #40 ;
INFO  16:35:57,776 - #13 print
INFO  16:35:57,776 - #43 (
INFO  16:35:57,776 - #21 2
INFO  16:35:57,776 - #44 )
INFO  16:35:57,777 - #40 ;
INFO  16:35:57,777 - #48 }
INFO  16:35:57,777 - #48 }
INFO  16:35:57,778 - 

================SINTAKSNO STABLO====================


INFO  16:35:57,778 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtPrint(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtPrint]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorNumConst(
                   2
                  ) [FactorNumConst]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  16:35:57,778 - 

================SEMANTICKA OBRADA====================


INFO  16:35:57,791 - ===================================
INFO  16:35:57,791 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  16:35:57,797 - Parsiranje uspesno zavrseno!
INFO  18:28:49,174 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  18:28:49,218 - #2 program
INFO  18:28:49,218 - #20 test302
INFO  18:28:49,218 - #47 {
INFO  18:28:49,219 - #16 void
INFO  18:28:49,219 - #20 main
INFO  18:28:49,219 - #43 (
INFO  18:28:49,220 - #44 )
INFO  18:28:49,220 - #47 {
INFO  18:28:49,220 - #13 print
INFO  18:28:49,220 - #43 (
INFO  18:28:49,220 - #21 1
INFO  18:28:49,220 - #44 )
INFO  18:28:49,220 - #40 ;
INFO  18:28:49,220 - #13 print
INFO  18:28:49,221 - #43 (
INFO  18:28:49,221 - #21 2
INFO  18:28:49,221 - #44 )
INFO  18:28:49,221 - #40 ;
INFO  18:28:49,221 - #14 read
INFO  18:28:49,221 - #43 (
INFO  18:28:49,221 - #21 1
ERROR 18:28:49,221 - 
Sintaksna greska na liniji 11, koloni 7 za simbol "1"!
INFO  18:28:49,221 - #44 )
INFO  18:28:49,222 - #40 ;
INFO  18:28:49,222 - #48 }
INFO  18:28:49,222 - #48 }
ERROR 18:28:49,222 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 13, koloni 1!
INFO  18:29:16,706 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  18:29:16,749 - #2 program
INFO  18:29:16,749 - #20 test302
INFO  18:29:16,749 - #47 {
INFO  18:29:16,750 - #16 void
INFO  18:29:16,750 - #20 main
INFO  18:29:16,750 - #43 (
INFO  18:29:16,750 - #44 )
INFO  18:29:16,750 - #20 int
INFO  18:29:16,750 - #20 a
INFO  18:29:16,750 - #40 ;
INFO  18:29:16,751 - #47 {
INFO  18:29:16,751 - #13 print
INFO  18:29:16,751 - #43 (
INFO  18:29:16,751 - #21 1
INFO  18:29:16,751 - #44 )
INFO  18:29:16,751 - #40 ;
INFO  18:29:16,751 - #13 print
INFO  18:29:16,752 - #43 (
INFO  18:29:16,752 - #21 2
INFO  18:29:16,752 - #44 )
INFO  18:29:16,752 - #40 ;
INFO  18:29:16,752 - #14 read
INFO  18:29:16,752 - #43 (
INFO  18:29:16,752 - #20 a
INFO  18:29:16,752 - #44 )
INFO  18:29:16,752 - #40 ;
INFO  18:29:16,752 - #48 }
INFO  18:29:16,752 - #48 }
INFO  18:29:16,754 - 

================SINTAKSNO STABLO====================


INFO  18:29:16,754 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               a
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtPrint(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       1
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtPrint]
            ) [StatementSingle]
            StmtPrint(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     2
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtPrint]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             a
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  18:29:16,754 - 

================SEMANTICKA OBRADA====================


INFO  18:29:16,809 - Deklarisana promenljiva 'a' na liniji 6
INFO  18:29:16,810 - ===================================
INFO  18:29:16,810 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  18:29:16,816 - Parsiranje uspesno zavrseno!
INFO  18:29:53,940 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  18:29:53,985 - #2 program
INFO  18:29:53,985 - #20 test302
INFO  18:29:53,985 - #47 {
INFO  18:29:53,986 - #16 void
INFO  18:29:53,987 - #20 main
INFO  18:29:53,987 - #43 (
INFO  18:29:53,987 - #44 )
INFO  18:29:53,987 - #20 int
INFO  18:29:53,987 - #20 a
INFO  18:29:53,987 - #40 ;
INFO  18:29:53,987 - #47 {
INFO  18:29:53,987 - #13 print
INFO  18:29:53,987 - #43 (
INFO  18:29:53,987 - #21 1
INFO  18:29:53,987 - #44 )
INFO  18:29:53,987 - #40 ;
INFO  18:29:53,987 - #13 print
INFO  18:29:53,988 - #43 (
INFO  18:29:53,988 - #21 2
INFO  18:29:53,988 - #44 )
INFO  18:29:53,988 - #40 ;
INFO  18:29:53,988 - #14 read
INFO  18:29:53,988 - #43 (
INFO  18:29:53,988 - #20 a
INFO  18:29:53,988 - #44 )
INFO  18:29:53,988 - #40 ;
INFO  18:29:53,988 - #48 }
INFO  18:29:53,988 - #48 }
INFO  18:29:53,989 - 

================SINTAKSNO STABLO====================


INFO  18:29:53,990 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               a
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtPrint(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       1
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtPrint]
            ) [StatementSingle]
            StmtPrint(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     2
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtPrint]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             a
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  18:29:53,990 - 

================SEMANTICKA OBRADA====================


INFO  18:29:54,000 - Deklarisana promenljiva 'a' na liniji 6
INFO  18:29:54,002 - ===================================
INFO  18:29:54,002 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  18:29:54,010 - Parsiranje uspesno zavrseno!
INFO  18:58:13,066 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  18:58:13,135 - #2 program
INFO  18:58:13,135 - #20 test302
INFO  18:58:13,135 - #47 {
INFO  18:58:13,137 - #16 void
INFO  18:58:13,137 - #20 main
INFO  18:58:13,137 - #43 (
INFO  18:58:13,137 - #44 )
INFO  18:58:13,137 - #20 int
INFO  18:58:13,137 - #20 a
INFO  18:58:13,138 - #40 ;
INFO  18:58:13,138 - #47 {
INFO  18:58:13,139 - #20 a
INFO  18:58:13,139 - #37 =
INFO  18:58:13,139 - #21 3
INFO  18:58:13,139 - #40 ;
INFO  18:58:13,140 - #48 }
INFO  18:58:13,140 - #48 }
INFO  18:58:13,142 - 

================SINTAKSNO STABLO====================


INFO  18:58:13,143 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               a
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               a
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       3
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  18:58:13,143 - 

================SEMANTICKA OBRADA====================


INFO  18:58:13,155 - Deklarisana promenljiva 'a' na liniji 6
INFO  18:58:13,156 - ===================================
INFO  18:58:13,156 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  18:58:13,162 - Parsiranje uspesno zavrseno!
INFO  18:59:19,672 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  18:59:19,717 - #2 program
INFO  18:59:19,718 - #20 test302
INFO  18:59:19,718 - #47 {
INFO  18:59:19,718 - #16 void
INFO  18:59:19,718 - #20 main
INFO  18:59:19,718 - #43 (
INFO  18:59:19,719 - #44 )
INFO  18:59:19,719 - #20 int
INFO  18:59:19,719 - #20 a
INFO  18:59:19,719 - #40 ;
INFO  18:59:19,719 - #47 {
INFO  18:59:19,719 - #20 a
INFO  18:59:19,719 - #37 =
INFO  18:59:19,720 - #21 3
INFO  18:59:19,720 - #40 ;
INFO  18:59:19,720 - #48 }
INFO  18:59:19,720 - #48 }
INFO  18:59:19,721 - 

================SINTAKSNO STABLO====================


INFO  18:59:19,721 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               a
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               a
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       3
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  18:59:19,722 - 

================SEMANTICKA OBRADA====================


INFO  18:59:19,732 - Deklarisana promenljiva 'a' na liniji 6
INFO  18:59:19,733 - ===================================
INFO  18:59:19,733 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  18:59:19,738 - Parsiranje uspesno zavrseno!
INFO  19:00:52,026 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  19:00:52,071 - #2 program
INFO  19:00:52,071 - #20 test302
INFO  19:00:52,071 - #47 {
INFO  19:00:52,072 - #16 void
INFO  19:00:52,072 - #20 main
INFO  19:00:52,072 - #43 (
INFO  19:00:52,072 - #44 )
INFO  19:00:52,072 - #20 int
INFO  19:00:52,072 - #20 a
INFO  19:00:52,072 - #40 ;
INFO  19:00:52,072 - #47 {
INFO  19:00:52,073 - #20 a
INFO  19:00:52,073 - #37 =
INFO  19:00:52,073 - #21 3
INFO  19:00:52,073 - #40 ;
INFO  19:00:52,073 - #48 }
INFO  19:00:52,074 - #48 }
INFO  19:00:52,074 - 

================SINTAKSNO STABLO====================


INFO  19:00:52,075 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               a
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               a
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       3
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  19:00:52,075 - 

================SEMANTICKA OBRADA====================


INFO  19:00:52,086 - Deklarisana promenljiva 'a' na liniji 6
INFO  19:00:52,087 - ===================================
INFO  19:00:52,087 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  19:00:52,092 - Parsiranje uspesno zavrseno!
INFO  19:01:51,025 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  19:01:51,071 - #2 program
INFO  19:01:51,071 - #20 test302
INFO  19:01:51,071 - #47 {
INFO  19:01:51,072 - #16 void
INFO  19:01:51,072 - #20 main
INFO  19:01:51,072 - #43 (
INFO  19:01:51,072 - #44 )
INFO  19:01:51,072 - #20 int
INFO  19:01:51,072 - #20 a
INFO  19:01:51,073 - #40 ;
INFO  19:01:51,073 - #47 {
INFO  19:01:51,073 - #20 a
INFO  19:01:51,073 - #37 =
INFO  19:01:51,073 - #21 3
INFO  19:01:51,073 - #40 ;
INFO  19:01:51,074 - #48 }
INFO  19:01:51,074 - #48 }
INFO  19:01:51,075 - 

================SINTAKSNO STABLO====================


INFO  19:01:51,075 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               a
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               a
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       3
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  19:01:51,076 - 

================SEMANTICKA OBRADA====================


INFO  19:01:51,086 - Deklarisana promenljiva 'a' na liniji 6
INFO  19:01:51,086 - ===================================
INFO  19:01:51,086 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  19:01:51,092 - Parsiranje uspesno zavrseno!
INFO  19:08:09,507 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  19:08:09,566 - #2 program
INFO  19:08:09,566 - #20 test302
INFO  19:08:09,566 - #47 {
INFO  19:08:09,568 - #16 void
INFO  19:08:09,568 - #20 main
INFO  19:08:09,568 - #43 (
INFO  19:08:09,568 - #44 )
INFO  19:08:09,568 - #20 int
INFO  19:08:09,568 - #20 a
INFO  19:08:09,569 - #40 ;
INFO  19:08:09,569 - #47 {
INFO  19:08:09,570 - #20 a
INFO  19:08:09,570 - #37 =
INFO  19:08:09,570 - #21 3
INFO  19:08:09,570 - #40 ;
INFO  19:08:09,571 - #48 }
INFO  19:08:09,571 - #48 }
INFO  19:08:09,573 - 

================SINTAKSNO STABLO====================


INFO  19:08:09,573 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               a
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               a
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       3
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  19:08:09,574 - 

================SEMANTICKA OBRADA====================


INFO  19:08:09,588 - Deklarisana promenljiva 'a' na liniji 6
INFO  19:08:09,590 - ===================================
INFO  19:08:09,590 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  19:08:09,597 - Parsiranje uspesno zavrseno!
INFO  19:10:13,080 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  19:10:13,152 - #2 program
INFO  19:10:13,152 - #20 test
INFO  19:10:13,152 - #47 {
INFO  19:10:13,153 - #16 void
INFO  19:10:13,153 - #20 main
INFO  19:10:13,154 - #43 (
INFO  19:10:13,154 - #44 )
INFO  19:10:13,154 - #47 {
INFO  19:10:13,154 - #13 print
INFO  19:10:13,154 - #43 (
INFO  19:10:13,154 - #21 3
INFO  19:10:13,154 - #44 )
INFO  19:10:13,155 - #40 ;
INFO  19:10:13,156 - #48 }
INFO  19:10:13,156 - #48 }
INFO  19:10:13,157 - 

================SINTAKSNO STABLO====================


INFO  19:10:13,158 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorNumConst(
                   3
                  ) [FactorNumConst]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  19:10:13,158 - 

================SEMANTICKA OBRADA====================


INFO  19:10:13,176 - ===================================
INFO  19:10:13,176 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  19:10:13,184 - Parsiranje uspesno zavrseno!
INFO  19:11:41,081 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  19:11:41,125 - #2 program
INFO  19:11:41,125 - #20 test
INFO  19:11:41,125 - #47 {
INFO  19:11:41,126 - #16 void
INFO  19:11:41,126 - #20 main
INFO  19:11:41,126 - #43 (
INFO  19:11:41,126 - #44 )
INFO  19:11:41,126 - #47 {
INFO  19:11:41,126 - #13 print
INFO  19:11:41,126 - #43 (
INFO  19:11:41,126 - #21 3
INFO  19:11:41,126 - #44 )
INFO  19:11:41,127 - #40 ;
INFO  19:11:41,127 - #48 }
INFO  19:11:41,127 - #48 }
INFO  19:11:41,128 - 

================SINTAKSNO STABLO====================


INFO  19:11:41,128 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorNumConst(
                   3
                  ) [FactorNumConst]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  19:11:41,128 - 

================SEMANTICKA OBRADA====================


INFO  19:11:41,139 - ===================================
INFO  19:11:41,139 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  19:11:41,145 - Parsiranje uspesno zavrseno!
INFO  19:15:23,238 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  19:15:23,283 - #2 program
INFO  19:15:23,283 - #20 test
INFO  19:15:23,283 - #47 {
INFO  19:15:23,284 - #16 void
INFO  19:15:23,285 - #20 main
INFO  19:15:23,285 - #43 (
INFO  19:15:23,285 - #44 )
INFO  19:15:23,285 - #47 {
INFO  19:15:23,285 - #13 print
INFO  19:15:23,285 - #43 (
INFO  19:15:23,285 - #21 3
INFO  19:15:23,285 - #44 )
INFO  19:15:23,286 - #40 ;
INFO  19:15:23,286 - #48 }
INFO  19:15:23,286 - #48 }
INFO  19:15:23,287 - 

================SINTAKSNO STABLO====================


INFO  19:15:23,287 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorNumConst(
                   3
                  ) [FactorNumConst]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  19:15:23,287 - 

================SEMANTICKA OBRADA====================


INFO  19:15:23,298 - ===================================
INFO  19:15:23,298 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  19:15:23,304 - Parsiranje uspesno zavrseno!
INFO  19:15:54,400 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  19:15:54,447 - #2 program
INFO  19:15:54,447 - #20 test
INFO  19:15:54,448 - #47 {
INFO  19:15:54,448 - #16 void
INFO  19:15:54,448 - #20 main
INFO  19:15:54,449 - #43 (
INFO  19:15:54,449 - #44 )
INFO  19:15:54,449 - #47 {
INFO  19:15:54,449 - #13 print
INFO  19:15:54,449 - #43 (
INFO  19:15:54,449 - #21 3
INFO  19:15:54,449 - #44 )
INFO  19:15:54,449 - #40 ;
INFO  19:15:54,449 - #48 }
INFO  19:15:54,450 - #48 }
INFO  19:15:54,450 - 

================SINTAKSNO STABLO====================


INFO  19:15:54,451 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorNumConst(
                   3
                  ) [FactorNumConst]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  19:15:54,451 - 

================SEMANTICKA OBRADA====================


INFO  19:15:54,461 - ===================================
INFO  19:15:54,461 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  19:15:54,467 - Parsiranje uspesno zavrseno!
INFO  20:38:29,451 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:38:29,510 - #2 program
INFO  20:38:29,510 - #20 test
INFO  20:38:29,510 - #7 const
INFO  20:38:29,511 - #20 int
INFO  20:38:29,511 - #20 N
INFO  20:38:29,512 - #37 =
INFO  20:38:29,512 - #21 2
INFO  20:38:29,512 - #40 ;
INFO  20:38:29,512 - #20 int
INFO  20:38:29,513 - #20 g
INFO  20:38:29,513 - #40 ;
INFO  20:38:29,513 - #47 {
INFO  20:38:29,513 - #16 void
INFO  20:38:29,513 - #20 main
INFO  20:38:29,513 - #43 (
INFO  20:38:29,513 - #44 )
INFO  20:38:29,513 - #47 {
INFO  20:38:29,513 - #20 g
INFO  20:38:29,514 - #37 =
INFO  20:38:29,514 - #20 N
INFO  20:38:29,514 - #40 ;
INFO  20:38:29,514 - #48 }
INFO  20:38:29,514 - #48 }
INFO  20:38:29,515 - 

================SINTAKSNO STABLO====================


INFO  20:38:29,516 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         N
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:38:29,516 - 

================SEMANTICKA OBRADA====================


INFO  20:38:29,531 - Deklarisana konstanta 'N' na liniji 2
INFO  20:38:29,531 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:38:29,533 - ===================================
INFO  20:38:29,533 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  20:38:29,540 - Parsiranje uspesno zavrseno!
INFO  20:47:36,455 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:47:36,497 - #2 program
INFO  20:47:36,497 - #20 test
INFO  20:47:36,497 - #7 const
INFO  20:47:36,498 - #20 int
INFO  20:47:36,498 - #20 N
INFO  20:47:36,498 - #37 =
INFO  20:47:36,499 - #21 2
INFO  20:47:36,499 - #40 ;
INFO  20:47:36,499 - #20 int
INFO  20:47:36,500 - #20 g
INFO  20:47:36,500 - #40 ;
INFO  20:47:36,500 - #47 {
INFO  20:47:36,500 - #16 void
INFO  20:47:36,500 - #20 main
INFO  20:47:36,500 - #43 (
INFO  20:47:36,500 - #44 )
INFO  20:47:36,500 - #47 {
INFO  20:47:36,500 - #20 g
INFO  20:47:36,500 - #37 =
INFO  20:47:36,501 - #20 N
INFO  20:47:36,501 - #40 ;
INFO  20:47:36,501 - #48 }
INFO  20:47:36,501 - #48 }
INFO  20:47:36,502 - 

================SINTAKSNO STABLO====================


INFO  20:47:36,503 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         N
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:47:36,503 - 

================SEMANTICKA OBRADA====================


INFO  20:47:36,509 - Deklarisana konstanta 'N' na liniji 2
INFO  20:47:36,510 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:47:36,511 - ===================================
INFO  20:47:36,511 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  20:47:36,517 - Parsiranje uspesno zavrseno!
INFO  20:48:50,463 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:48:50,509 - #2 program
INFO  20:48:50,509 - #20 test
INFO  20:48:50,509 - #7 const
INFO  20:48:50,510 - #20 int
INFO  20:48:50,510 - #20 N
INFO  20:48:50,510 - #37 =
INFO  20:48:50,510 - #21 2
INFO  20:48:50,510 - #40 ;
INFO  20:48:50,511 - #20 int
INFO  20:48:50,511 - #20 g
INFO  20:48:50,511 - #40 ;
INFO  20:48:50,511 - #47 {
INFO  20:48:50,512 - #16 void
INFO  20:48:50,512 - #20 main
INFO  20:48:50,512 - #43 (
INFO  20:48:50,512 - #44 )
INFO  20:48:50,512 - #47 {
INFO  20:48:50,512 - #20 g
INFO  20:48:50,512 - #37 =
INFO  20:48:50,512 - #20 N
INFO  20:48:50,512 - #40 ;
INFO  20:48:50,513 - #48 }
INFO  20:48:50,513 - #48 }
INFO  20:48:50,514 - 

================SINTAKSNO STABLO====================


INFO  20:48:50,517 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         N
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:48:50,517 - 

================SEMANTICKA OBRADA====================


INFO  20:48:50,529 - Deklarisana konstanta 'N' na liniji 2
INFO  20:48:50,530 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:48:50,532 - ===================================
INFO  20:48:50,532 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  20:48:50,538 - Parsiranje uspesno zavrseno!
INFO  20:49:56,631 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:49:56,674 - #2 program
INFO  20:49:56,674 - #20 test
INFO  20:49:56,674 - #7 const
INFO  20:49:56,675 - #20 int
INFO  20:49:56,675 - #20 N
INFO  20:49:56,675 - #37 =
INFO  20:49:56,675 - #21 2
INFO  20:49:56,675 - #40 ;
INFO  20:49:56,676 - #20 int
INFO  20:49:56,676 - #20 g
INFO  20:49:56,676 - #40 ;
INFO  20:49:56,676 - #47 {
INFO  20:49:56,677 - #16 void
INFO  20:49:56,677 - #20 main
INFO  20:49:56,677 - #43 (
INFO  20:49:56,677 - #44 )
INFO  20:49:56,677 - #47 {
INFO  20:49:56,677 - #20 g
INFO  20:49:56,677 - #37 =
INFO  20:49:56,677 - #20 N
INFO  20:49:56,677 - #40 ;
INFO  20:49:56,678 - #48 }
INFO  20:49:56,678 - #48 }
INFO  20:49:56,679 - 

================SINTAKSNO STABLO====================


INFO  20:49:56,679 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         N
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:49:56,680 - 

================SEMANTICKA OBRADA====================


INFO  20:49:56,690 - Deklarisana konstanta 'N' na liniji 2
INFO  20:49:56,690 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:49:56,692 - ===================================
INFO  20:49:56,692 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:49:56,693 - ConstDecl na liniji 2!
INFO  20:49:56,698 - Parsiranje uspesno zavrseno!
INFO  20:50:10,696 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:50:10,763 - #2 program
INFO  20:50:10,764 - #20 test
INFO  20:50:10,764 - #7 const
INFO  20:50:10,765 - #20 int
INFO  20:50:10,765 - #20 N
INFO  20:50:10,766 - #37 =
INFO  20:50:10,766 - #21 2
INFO  20:50:10,766 - #40 ;
INFO  20:50:10,767 - #20 int
INFO  20:50:10,767 - #20 g
INFO  20:50:10,767 - #40 ;
INFO  20:50:10,768 - #47 {
INFO  20:50:10,768 - #16 void
INFO  20:50:10,768 - #20 main
INFO  20:50:10,768 - #43 (
INFO  20:50:10,768 - #44 )
INFO  20:50:10,768 - #47 {
INFO  20:50:10,768 - #20 g
INFO  20:50:10,768 - #37 =
INFO  20:50:10,769 - #20 N
INFO  20:50:10,769 - #40 ;
INFO  20:50:10,770 - #48 }
INFO  20:50:10,770 - #48 }
INFO  20:50:10,771 - 

================SINTAKSNO STABLO====================


INFO  20:50:10,772 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         N
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:50:10,772 - 

================SEMANTICKA OBRADA====================


INFO  20:50:10,785 - Deklarisana konstanta 'N' na liniji 2
INFO  20:50:10,785 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:50:10,787 - ===================================
INFO  20:50:10,787 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  20:50:10,797 - Parsiranje uspesno zavrseno!
INFO  20:50:46,752 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:50:46,797 - #2 program
INFO  20:50:46,797 - #20 test
INFO  20:50:46,798 - #7 const
INFO  20:50:46,798 - #20 int
INFO  20:50:46,798 - #20 N
INFO  20:50:46,799 - #37 =
INFO  20:50:46,799 - #21 2
INFO  20:50:46,799 - #40 ;
INFO  20:50:46,799 - #20 int
INFO  20:50:46,800 - #20 g
INFO  20:50:46,800 - #40 ;
INFO  20:50:46,800 - #47 {
INFO  20:50:46,800 - #16 void
INFO  20:50:46,800 - #20 main
INFO  20:50:46,800 - #43 (
INFO  20:50:46,800 - #44 )
INFO  20:50:46,800 - #47 {
INFO  20:50:46,800 - #20 g
INFO  20:50:46,800 - #37 =
INFO  20:50:46,801 - #20 N
INFO  20:50:46,801 - #40 ;
INFO  20:50:46,801 - #48 }
INFO  20:50:46,801 - #48 }
INFO  20:50:46,802 - 

================SINTAKSNO STABLO====================


INFO  20:50:46,803 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         N
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:50:46,803 - 

================SEMANTICKA OBRADA====================


INFO  20:50:46,810 - Deklarisana konstanta 'N' na liniji 2
INFO  20:50:46,810 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:50:46,812 - ===================================
INFO  20:50:46,812 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:50:46,813 - ConstPart N na liniji 2!
ERROR 20:50:46,813 - ConstDecl na liniji 2!
INFO  20:50:46,818 - Parsiranje uspesno zavrseno!
INFO  20:51:07,851 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:51:07,896 - #2 program
INFO  20:51:07,896 - #20 test
INFO  20:51:07,896 - #7 const
INFO  20:51:07,897 - #20 int
INFO  20:51:07,897 - #20 N
INFO  20:51:07,897 - #37 =
INFO  20:51:07,897 - #21 2
INFO  20:51:07,898 - #40 ;
INFO  20:51:07,898 - #20 int
INFO  20:51:07,898 - #20 g
INFO  20:51:07,898 - #40 ;
INFO  20:51:07,898 - #47 {
INFO  20:51:07,899 - #16 void
INFO  20:51:07,899 - #20 main
INFO  20:51:07,899 - #43 (
INFO  20:51:07,899 - #44 )
INFO  20:51:07,899 - #47 {
INFO  20:51:07,899 - #20 g
INFO  20:51:07,899 - #37 =
INFO  20:51:07,899 - #20 N
INFO  20:51:07,899 - #40 ;
INFO  20:51:07,900 - #48 }
INFO  20:51:07,900 - #48 }
INFO  20:51:07,901 - 

================SINTAKSNO STABLO====================


INFO  20:51:07,902 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         N
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:51:07,902 - 

================SEMANTICKA OBRADA====================


INFO  20:51:07,910 - Deklarisana konstanta 'N' na liniji 2
INFO  20:51:07,910 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:51:07,911 - ===================================
INFO  20:51:07,911 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:51:07,913 - ConstPart N na liniji 2!
ERROR 20:51:07,913 - ConstDecl na liniji 2!
INFO  20:51:07,918 - Parsiranje uspesno zavrseno!
INFO  20:51:23,724 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:51:23,770 - #2 program
INFO  20:51:23,770 - #20 test
INFO  20:51:23,770 - #7 const
INFO  20:51:23,771 - #20 int
INFO  20:51:23,771 - #20 N
INFO  20:51:23,772 - #37 =
INFO  20:51:23,772 - #21 2
INFO  20:51:23,772 - #40 ;
INFO  20:51:23,772 - #20 int
INFO  20:51:23,772 - #20 g
INFO  20:51:23,772 - #40 ;
INFO  20:51:23,773 - #47 {
INFO  20:51:23,773 - #16 void
INFO  20:51:23,773 - #20 main
INFO  20:51:23,773 - #43 (
INFO  20:51:23,773 - #44 )
INFO  20:51:23,773 - #47 {
INFO  20:51:23,773 - #20 g
INFO  20:51:23,773 - #37 =
INFO  20:51:23,773 - #20 N
INFO  20:51:23,773 - #40 ;
INFO  20:51:23,774 - #48 }
INFO  20:51:23,774 - #48 }
INFO  20:51:23,775 - 

================SINTAKSNO STABLO====================


INFO  20:51:23,775 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         N
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:51:23,775 - 

================SEMANTICKA OBRADA====================


INFO  20:51:23,782 - Deklarisana konstanta 'N' na liniji 2
INFO  20:51:23,782 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:51:23,783 - ===================================
INFO  20:51:23,783 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:51:23,784 - ConstPart N na liniji 2!
ERROR 20:51:23,784 - ConstDecl N na liniji 2!
INFO  20:51:23,789 - Parsiranje uspesno zavrseno!
INFO  20:52:01,587 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:52:01,637 - #2 program
INFO  20:52:01,637 - #20 test
INFO  20:52:01,637 - #7 const
INFO  20:52:01,638 - #20 int
INFO  20:52:01,638 - #20 N
INFO  20:52:01,638 - #37 =
INFO  20:52:01,638 - #21 2
INFO  20:52:01,638 - #40 ;
INFO  20:52:01,639 - #20 int
INFO  20:52:01,639 - #20 g
INFO  20:52:01,640 - #40 ;
INFO  20:52:01,640 - #47 {
INFO  20:52:01,640 - #16 void
INFO  20:52:01,640 - #20 main
INFO  20:52:01,640 - #43 (
INFO  20:52:01,641 - #44 )
INFO  20:52:01,641 - #47 {
INFO  20:52:01,641 - #20 g
INFO  20:52:01,641 - #37 =
INFO  20:52:01,641 - #20 N
INFO  20:52:01,641 - #40 ;
INFO  20:52:01,642 - #48 }
INFO  20:52:01,642 - #48 }
INFO  20:52:01,644 - 

================SINTAKSNO STABLO====================


INFO  20:52:01,645 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         N
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:52:01,645 - 

================SEMANTICKA OBRADA====================


INFO  20:52:01,654 - Deklarisana konstanta 'N' na liniji 2
INFO  20:52:01,654 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:52:01,656 - ===================================
INFO  20:52:01,656 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:52:01,658 - NumConst 2 na liniji 2!
ERROR 20:52:01,658 - ConstDecl N na liniji 2!
INFO  20:52:01,663 - Parsiranje uspesno zavrseno!
INFO  20:52:48,614 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:52:48,659 - #2 program
INFO  20:52:48,659 - #20 test
INFO  20:52:48,659 - #7 const
INFO  20:52:48,660 - #20 int
INFO  20:52:48,660 - #20 N
INFO  20:52:48,660 - #37 =
INFO  20:52:48,661 - #21 2
INFO  20:52:48,661 - #40 ;
INFO  20:52:48,661 - #20 int
INFO  20:52:48,662 - #20 g
INFO  20:52:48,662 - #40 ;
INFO  20:52:48,662 - #47 {
INFO  20:52:48,662 - #16 void
INFO  20:52:48,662 - #20 main
INFO  20:52:48,662 - #43 (
INFO  20:52:48,662 - #44 )
INFO  20:52:48,662 - #47 {
INFO  20:52:48,662 - #20 g
INFO  20:52:48,662 - #37 =
INFO  20:52:48,662 - #20 N
INFO  20:52:48,662 - #40 ;
INFO  20:52:48,663 - #48 }
INFO  20:52:48,663 - #48 }
INFO  20:52:48,664 - 

================SINTAKSNO STABLO====================


INFO  20:52:48,664 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         N
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:52:48,665 - 

================SEMANTICKA OBRADA====================


INFO  20:52:48,672 - Deklarisana konstanta 'N' na liniji 2
INFO  20:52:48,672 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:52:48,673 - ===================================
INFO  20:52:48,673 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:52:48,674 - ConstDecl N na liniji 2!
INFO  20:52:48,680 - Parsiranje uspesno zavrseno!
INFO  20:54:40,206 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:54:40,260 - #2 program
INFO  20:54:40,261 - #20 test
INFO  20:54:40,261 - #7 const
INFO  20:54:40,262 - #20 int
INFO  20:54:40,262 - #20 N
INFO  20:54:40,263 - #37 =
INFO  20:54:40,263 - #21 2
INFO  20:54:40,263 - #40 ;
INFO  20:54:40,263 - #20 int
INFO  20:54:40,264 - #20 g
INFO  20:54:40,264 - #40 ;
INFO  20:54:40,264 - #47 {
INFO  20:54:40,264 - #16 void
INFO  20:54:40,264 - #20 main
INFO  20:54:40,264 - #43 (
INFO  20:54:40,264 - #44 )
INFO  20:54:40,264 - #47 {
INFO  20:54:40,265 - #20 g
INFO  20:54:40,265 - #37 =
INFO  20:54:40,265 - #20 N
INFO  20:54:40,265 - #40 ;
INFO  20:54:40,265 - #48 }
INFO  20:54:40,266 - #48 }
INFO  20:54:40,267 - 

================SINTAKSNO STABLO====================


INFO  20:54:40,268 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         N
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:54:40,269 - 

================SEMANTICKA OBRADA====================


INFO  20:54:40,277 - Deklarisana konstanta 'N' na liniji 2
INFO  20:54:40,277 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:54:40,279 - ===================================
INFO  20:54:40,279 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:54:40,281 - ConstDecl N na liniji 2!
ERROR 20:54:40,281 - getVarConst() noObj
INFO  20:54:40,285 - Parsiranje uspesno zavrseno!
INFO  20:54:55,089 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:54:55,146 - #2 program
INFO  20:54:55,147 - #20 test
INFO  20:54:55,147 - #7 const
INFO  20:54:55,148 - #20 int
INFO  20:54:55,148 - #20 N
INFO  20:54:55,148 - #37 =
INFO  20:54:55,148 - #21 2
INFO  20:54:55,148 - #40 ;
INFO  20:54:55,149 - #20 int
INFO  20:54:55,150 - #20 g
INFO  20:54:55,150 - #40 ;
INFO  20:54:55,150 - #47 {
INFO  20:54:55,150 - #16 void
INFO  20:54:55,150 - #20 main
INFO  20:54:55,150 - #43 (
INFO  20:54:55,150 - #44 )
INFO  20:54:55,151 - #47 {
INFO  20:54:55,151 - #20 g
INFO  20:54:55,151 - #37 =
INFO  20:54:55,151 - #20 N
INFO  20:54:55,151 - #40 ;
INFO  20:54:55,152 - #48 }
INFO  20:54:55,152 - #48 }
INFO  20:54:55,153 - 

================SINTAKSNO STABLO====================


INFO  20:54:55,154 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         N
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:54:55,154 - 

================SEMANTICKA OBRADA====================


INFO  20:54:55,165 - Deklarisana konstanta 'N' na liniji 2
INFO  20:54:55,166 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:54:55,167 - ===================================
INFO  20:54:55,167 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:54:55,168 - ConstDecl N na liniji 2!
ERROR 20:54:55,169 - getVarConst() N
INFO  20:54:55,174 - Parsiranje uspesno zavrseno!
INFO  20:56:23,741 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:56:23,812 - #2 program
INFO  20:56:23,812 - #20 test
INFO  20:56:23,812 - #7 const
INFO  20:56:23,814 - #20 int
INFO  20:56:23,814 - #20 N
INFO  20:56:23,815 - #37 =
INFO  20:56:23,815 - #21 2
INFO  20:56:23,815 - #40 ;
INFO  20:56:23,815 - #20 int
INFO  20:56:23,816 - #20 g
INFO  20:56:23,816 - #40 ;
INFO  20:56:23,816 - #47 {
INFO  20:56:23,816 - #16 void
INFO  20:56:23,816 - #20 main
INFO  20:56:23,816 - #43 (
INFO  20:56:23,817 - #44 )
INFO  20:56:23,817 - #47 {
INFO  20:56:23,817 - #20 g
INFO  20:56:23,817 - #37 =
INFO  20:56:23,817 - #20 N
INFO  20:56:23,817 - #40 ;
INFO  20:56:23,818 - #48 }
INFO  20:56:23,819 - #48 }
INFO  20:56:23,820 - 

================SINTAKSNO STABLO====================


INFO  20:56:23,821 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         N
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:56:23,821 - 

================SEMANTICKA OBRADA====================


INFO  20:56:23,833 - Deklarisana konstanta 'N' na liniji 2
INFO  20:56:23,833 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:56:23,835 - ===================================
INFO  20:56:23,835 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:56:23,837 - ConstDecl N na liniji 2!
ERROR 20:56:23,837 - getVarConst() [rs.etf.pp1.symboltable.concepts.Obj@6e2c634b, rs.etf.pp1.symboltable.concepts.Obj@37a71e93, rs.etf.pp1.symboltable.concepts.Obj@7e6cbb7a]
INFO  20:56:23,843 - Parsiranje uspesno zavrseno!
INFO  20:57:40,262 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:57:40,309 - #2 program
INFO  20:57:40,309 - #20 test
INFO  20:57:40,310 - #7 const
INFO  20:57:40,311 - #20 int
INFO  20:57:40,311 - #20 N
INFO  20:57:40,311 - #37 =
INFO  20:57:40,311 - #21 2
INFO  20:57:40,311 - #40 ;
INFO  20:57:40,312 - #20 int
INFO  20:57:40,312 - #20 g
INFO  20:57:40,313 - #40 ;
INFO  20:57:40,313 - #47 {
INFO  20:57:40,313 - #16 void
INFO  20:57:40,313 - #20 main
INFO  20:57:40,313 - #43 (
INFO  20:57:40,313 - #44 )
INFO  20:57:40,313 - #47 {
INFO  20:57:40,313 - #20 g
INFO  20:57:40,314 - #37 =
INFO  20:57:40,314 - #20 N
INFO  20:57:40,314 - #40 ;
INFO  20:57:40,314 - #48 }
INFO  20:57:40,314 - #48 }
INFO  20:57:40,315 - 

================SINTAKSNO STABLO====================


INFO  20:57:40,316 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         N
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:57:40,317 - 

================SEMANTICKA OBRADA====================


INFO  20:57:40,328 - Deklarisana konstanta 'N' na liniji 2
INFO  20:57:40,328 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:57:40,329 - ===================================
INFO  20:57:40,330 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:57:40,331 - ConstDecl N na liniji 2!
ERROR 20:57:40,331 - getVarConst() [rs.etf.pp1.symboltable.concepts.Obj@6e2c634b, rs.etf.pp1.symboltable.concepts.Obj@37a71e93, rs.etf.pp1.symboltable.concepts.Obj@7e6cbb7a]
INFO  20:57:40,335 - Parsiranje uspesno zavrseno!
INFO  21:01:33,421 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  21:01:33,467 - #2 program
INFO  21:01:33,467 - #20 test
INFO  21:01:33,467 - #7 const
INFO  21:01:33,468 - #20 int
INFO  21:01:33,468 - #20 N
INFO  21:01:33,468 - #37 =
INFO  21:01:33,468 - #21 2
INFO  21:01:33,468 - #40 ;
INFO  21:01:33,469 - #20 int
INFO  21:01:33,469 - #20 g
INFO  21:01:33,469 - #40 ;
INFO  21:01:33,469 - #47 {
INFO  21:01:33,470 - #16 void
INFO  21:01:33,470 - #20 main
INFO  21:01:33,470 - #43 (
INFO  21:01:33,470 - #44 )
INFO  21:01:33,470 - #47 {
INFO  21:01:33,470 - #20 g
INFO  21:01:33,470 - #37 =
INFO  21:01:33,470 - #20 N
INFO  21:01:33,470 - #40 ;
INFO  21:01:33,471 - #48 }
INFO  21:01:33,471 - #48 }
INFO  21:01:33,472 - 

================SINTAKSNO STABLO====================


INFO  21:01:33,473 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         N
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  21:01:33,473 - 

================SEMANTICKA OBRADA====================


INFO  21:01:33,484 - Deklarisana konstanta 'N' na liniji 2
INFO  21:01:33,484 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  21:01:33,485 - Program 1 na liniji 1
INFO  21:01:33,486 - ===================================
INFO  21:01:33,486 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 21:01:33,487 - ConstDecl N na liniji 2!
INFO  21:01:33,492 - Parsiranje uspesno zavrseno!
INFO  21:01:59,927 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  21:01:59,973 - #2 program
INFO  21:01:59,973 - #20 test
INFO  21:01:59,973 - #7 const
INFO  21:01:59,974 - #20 int
INFO  21:01:59,974 - #20 N
INFO  21:01:59,974 - #37 =
INFO  21:01:59,974 - #21 2
INFO  21:01:59,974 - #40 ;
INFO  21:01:59,975 - #20 int
INFO  21:01:59,975 - #20 g
INFO  21:01:59,975 - #40 ;
INFO  21:01:59,975 - #47 {
INFO  21:01:59,975 - #16 void
INFO  21:01:59,975 - #20 main
INFO  21:01:59,976 - #43 (
INFO  21:01:59,976 - #44 )
INFO  21:01:59,976 - #47 {
INFO  21:01:59,976 - #20 g
INFO  21:01:59,976 - #37 =
INFO  21:01:59,976 - #20 N
INFO  21:01:59,976 - #40 ;
INFO  21:01:59,976 - #48 }
INFO  21:01:59,977 - #48 }
INFO  21:01:59,978 - 

================SINTAKSNO STABLO====================


INFO  21:01:59,978 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         N
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  21:01:59,979 - 

================SEMANTICKA OBRADA====================


INFO  21:01:59,985 - Deklarisana konstanta 'N' na liniji 2
INFO  21:01:59,986 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  21:01:59,987 - ===================================
INFO  21:01:59,987 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 21:01:59,989 - ConstDecl N na liniji 2!
INFO  21:01:59,994 - Parsiranje uspesno zavrseno!
INFO  21:38:32,939 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  21:38:33,018 - #2 program
INFO  21:38:33,018 - #20 test
INFO  21:38:33,018 - #7 const
INFO  21:38:33,020 - #20 int
INFO  21:38:33,020 - #20 N
INFO  21:38:33,020 - #37 =
INFO  21:38:33,021 - #21 2
INFO  21:38:33,021 - #40 ;
INFO  21:38:33,022 - #20 int
INFO  21:38:33,023 - #20 g
INFO  21:38:33,023 - #40 ;
INFO  21:38:33,023 - #47 {
INFO  21:38:33,023 - #16 void
INFO  21:38:33,023 - #20 main
INFO  21:38:33,023 - #43 (
INFO  21:38:33,023 - #44 )
INFO  21:38:33,024 - #47 {
INFO  21:38:33,024 - #20 g
INFO  21:38:33,024 - #37 =
INFO  21:38:33,024 - #20 N
INFO  21:38:33,024 - #40 ;
INFO  21:38:33,025 - #48 }
INFO  21:38:33,025 - #48 }
INFO  21:38:33,026 - 

================SINTAKSNO STABLO====================


INFO  21:38:33,027 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         N
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  21:38:33,028 - 

================SEMANTICKA OBRADA====================


INFO  21:38:33,038 - Deklarisana konstanta 'N' na liniji 2
INFO  21:38:33,039 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  21:38:33,040 - ===================================
INFO  21:38:33,041 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 21:38:33,043 - ConstDecl N na liniji 2!
INFO  21:38:33,050 - Parsiranje uspesno zavrseno!
INFO  22:02:46,740 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:02:46,787 - #2 program
INFO  22:02:46,787 - #20 test
INFO  22:02:46,787 - #7 const
INFO  22:02:46,788 - #20 int
INFO  22:02:46,789 - #20 N
INFO  22:02:46,789 - #37 =
INFO  22:02:46,789 - #21 2
INFO  22:02:46,789 - #40 ;
INFO  22:02:46,790 - #20 int
INFO  22:02:46,790 - #20 g
INFO  22:02:46,790 - #40 ;
INFO  22:02:46,790 - #47 {
INFO  22:02:46,790 - #16 void
INFO  22:02:46,790 - #20 main
INFO  22:02:46,790 - #43 (
INFO  22:02:46,790 - #44 )
INFO  22:02:46,791 - #47 {
INFO  22:02:46,791 - #20 g
INFO  22:02:46,791 - #37 =
INFO  22:02:46,791 - #20 N
INFO  22:02:46,791 - #40 ;
INFO  22:02:46,791 - #48 }
INFO  22:02:46,792 - #48 }
INFO  22:02:46,792 - 

================SINTAKSNO STABLO====================


INFO  22:02:46,793 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         N
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:02:46,793 - 

================SEMANTICKA OBRADA====================


INFO  22:02:46,832 - Deklarisana konstanta 'N' na liniji 2
INFO  22:02:46,832 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  22:02:46,834 - ===================================
INFO  22:02:46,834 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 22:02:46,842 - ConstDecl N na liniji 2!
INFO  22:02:46,847 - Parsiranje uspesno zavrseno!
INFO  22:02:59,774 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:02:59,819 - #2 program
INFO  22:02:59,819 - #20 test
INFO  22:02:59,819 - #7 const
INFO  22:02:59,820 - #20 int
INFO  22:02:59,820 - #20 N
INFO  22:02:59,820 - #37 =
INFO  22:02:59,820 - #21 2
INFO  22:02:59,821 - #40 ;
INFO  22:02:59,821 - #20 int
INFO  22:02:59,821 - #20 g
INFO  22:02:59,821 - #40 ;
INFO  22:02:59,821 - #47 {
INFO  22:02:59,822 - #16 void
INFO  22:02:59,822 - #20 main
INFO  22:02:59,822 - #43 (
INFO  22:02:59,822 - #44 )
INFO  22:02:59,822 - #47 {
INFO  22:02:59,822 - #20 g
INFO  22:02:59,822 - #37 =
INFO  22:02:59,822 - #20 N
INFO  22:02:59,822 - #40 ;
INFO  22:02:59,823 - #48 }
INFO  22:02:59,823 - #48 }
INFO  22:02:59,824 - 

================SINTAKSNO STABLO====================


INFO  22:02:59,825 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         N
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:02:59,825 - 

================SEMANTICKA OBRADA====================


INFO  22:02:59,832 - Deklarisana konstanta 'N' na liniji 2
INFO  22:02:59,832 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  22:02:59,833 - ===================================
INFO  22:02:59,833 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  22:02:59,840 - Parsiranje uspesno zavrseno!
INFO  22:09:47,181 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:09:47,226 - #2 program
INFO  22:09:47,226 - #20 test
INFO  22:09:47,226 - #7 const
INFO  22:09:47,227 - #20 int
INFO  22:09:47,227 - #20 N
INFO  22:09:47,228 - #37 =
INFO  22:09:47,228 - #21 2
INFO  22:09:47,228 - #40 ;
INFO  22:09:47,228 - #20 int
INFO  22:09:47,228 - #20 g
INFO  22:09:47,228 - #40 ;
INFO  22:09:47,229 - #47 {
INFO  22:09:47,229 - #16 void
INFO  22:09:47,229 - #20 main
INFO  22:09:47,229 - #43 (
INFO  22:09:47,229 - #44 )
INFO  22:09:47,229 - #47 {
INFO  22:09:47,229 - #20 g
INFO  22:09:47,229 - #37 =
INFO  22:09:47,229 - #20 N
INFO  22:09:47,229 - #40 ;
INFO  22:09:47,230 - #15 return
INFO  22:09:47,230 - #40 ;
INFO  22:09:47,230 - #48 }
INFO  22:09:47,231 - #48 }
INFO  22:09:47,232 - 

================SINTAKSNO STABLO====================


INFO  22:09:47,232 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 g
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           N
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtReturn(
          ) [StmtReturn]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:09:47,232 - 

================SEMANTICKA OBRADA====================


INFO  22:09:47,245 - Deklarisana konstanta 'N' na liniji 2
INFO  22:09:47,245 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  22:09:47,246 - ===================================
INFO  22:09:47,246 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  22:09:47,252 - Parsiranje uspesno zavrseno!
INFO  22:10:26,200 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:10:26,274 - #2 program
INFO  22:10:26,275 - #20 test
INFO  22:10:26,275 - #7 const
INFO  22:10:26,276 - #20 int
INFO  22:10:26,276 - #20 N
INFO  22:10:26,277 - #37 =
INFO  22:10:26,277 - #21 2
INFO  22:10:26,277 - #40 ;
INFO  22:10:26,278 - #20 int
INFO  22:10:26,278 - #20 g
INFO  22:10:26,278 - #40 ;
INFO  22:10:26,278 - #47 {
INFO  22:10:26,279 - #16 void
INFO  22:10:26,280 - #20 main
INFO  22:10:26,280 - #43 (
INFO  22:10:26,281 - #44 )
INFO  22:10:26,281 - #47 {
INFO  22:10:26,282 - #20 g
INFO  22:10:26,282 - #37 =
INFO  22:10:26,282 - #20 N
INFO  22:10:26,282 - #40 ;
INFO  22:10:26,284 - #15 return
INFO  22:10:26,285 - #40 ;
INFO  22:10:26,287 - #48 }
INFO  22:10:26,288 - #48 }
INFO  22:10:26,290 - 

================SINTAKSNO STABLO====================


INFO  22:10:26,291 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 g
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           N
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtReturn(
          ) [StmtReturn]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:10:26,291 - 

================SEMANTICKA OBRADA====================


INFO  22:10:26,306 - Deklarisana konstanta 'N' na liniji 2
INFO  22:10:26,307 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  22:10:26,310 - ===================================
INFO  22:10:26,310 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  22:10:26,320 - Parsiranje uspesno zavrseno!
INFO  22:10:46,320 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:10:46,366 - #2 program
INFO  22:10:46,366 - #20 test
INFO  22:10:46,366 - #7 const
INFO  22:10:46,367 - #20 int
INFO  22:10:46,367 - #20 N
INFO  22:10:46,367 - #37 =
INFO  22:10:46,367 - #21 2
INFO  22:10:46,368 - #40 ;
INFO  22:10:46,368 - #20 int
INFO  22:10:46,368 - #20 g
INFO  22:10:46,368 - #40 ;
INFO  22:10:46,368 - #47 {
INFO  22:10:46,369 - #16 void
INFO  22:10:46,369 - #20 main
INFO  22:10:46,369 - #43 (
INFO  22:10:46,369 - #44 )
INFO  22:10:46,369 - #47 {
INFO  22:10:46,369 - #48 }
INFO  22:10:46,369 - #48 }
INFO  22:10:46,370 - 

================SINTAKSNO STABLO====================


INFO  22:10:46,371 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid7(
        MethodVoidName(
         main
        ) [MethodVoidName]
      ) [MethodVoid7]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:10:46,371 - 

================SEMANTICKA OBRADA====================


INFO  22:10:46,383 - Deklarisana konstanta 'N' na liniji 2
INFO  22:10:46,383 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  22:10:46,385 - ===================================
INFO  22:10:46,385 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  22:10:46,391 - Parsiranje uspesno zavrseno!
INFO  22:11:38,205 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:11:38,253 - #2 program
INFO  22:11:38,253 - #20 test
INFO  22:11:38,253 - #47 {
INFO  22:11:38,254 - #16 void
INFO  22:11:38,254 - #20 main
INFO  22:11:38,254 - #43 (
INFO  22:11:38,254 - #44 )
INFO  22:11:38,254 - #47 {
INFO  22:11:38,254 - #48 }
INFO  22:11:38,255 - #48 }
INFO  22:11:38,255 - 

================SINTAKSNO STABLO====================


INFO  22:11:38,255 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid7(
        MethodVoidName(
         main
        ) [MethodVoidName]
      ) [MethodVoid7]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:11:38,256 - 

================SEMANTICKA OBRADA====================


INFO  22:11:38,269 - ===================================
INFO  22:11:38,270 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  22:11:38,275 - Parsiranje uspesno zavrseno!
INFO  22:12:19,986 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:12:20,105 - #2 program
INFO  22:12:20,105 - #20 test
INFO  22:12:20,105 - #47 {
INFO  22:12:20,107 - #16 void
INFO  22:12:20,107 - #20 main
INFO  22:12:20,107 - #43 (
INFO  22:12:20,107 - #44 )
INFO  22:12:20,107 - #47 {
INFO  22:12:20,107 - #13 print
INFO  22:12:20,107 - #43 (
INFO  22:12:20,108 - #21 1
INFO  22:12:20,108 - #44 )
INFO  22:12:20,109 - #40 ;
INFO  22:12:20,109 - #48 }
INFO  22:12:20,109 - #48 }
INFO  22:12:20,110 - 

================SINTAKSNO STABLO====================


INFO  22:12:20,110 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorNumConst(
                   1
                  ) [FactorNumConst]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:12:20,111 - 

================SEMANTICKA OBRADA====================


INFO  22:12:20,126 - ===================================
INFO  22:12:20,126 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  22:12:20,133 - Parsiranje uspesno zavrseno!
INFO  22:17:14,892 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:17:15,074 - #2 program
INFO  22:17:15,074 - #20 test
INFO  22:17:15,074 - #7 const
INFO  22:17:15,080 - #20 int
INFO  22:17:15,080 - #20 N
INFO  22:17:15,081 - #37 =
INFO  22:17:15,081 - #21 2
INFO  22:17:15,081 - #40 ;
INFO  22:17:15,091 - #47 {
INFO  22:17:15,091 - #16 void
INFO  22:17:15,091 - #20 main
INFO  22:17:15,091 - #43 (
INFO  22:17:15,092 - #44 )
INFO  22:17:15,092 - #47 {
INFO  22:17:15,092 - #48 }
INFO  22:17:15,092 - #48 }
INFO  22:17:15,093 - 

================SINTAKSNO STABLO====================


INFO  22:17:15,093 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           N
            NumConst(
             2
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid7(
        MethodVoidName(
         main
        ) [MethodVoidName]
      ) [MethodVoid7]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:17:15,093 - 

================SEMANTICKA OBRADA====================


INFO  22:17:15,114 - Deklarisana konstanta 'N' na liniji 2
INFO  22:17:15,115 - ===================================
INFO  22:17:15,115 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  22:17:15,121 - Parsiranje uspesno zavrseno!
INFO  22:23:59,919 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:23:59,965 - #2 program
INFO  22:23:59,965 - #20 test
INFO  22:23:59,965 - #7 const
INFO  22:23:59,966 - #20 int
INFO  22:23:59,966 - #20 N
INFO  22:23:59,967 - #37 =
INFO  22:23:59,967 - #21 2
INFO  22:23:59,967 - #40 ;
INFO  22:23:59,968 - #47 {
INFO  22:23:59,968 - #16 void
INFO  22:23:59,968 - #20 main
INFO  22:23:59,968 - #43 (
INFO  22:23:59,968 - #44 )
INFO  22:23:59,969 - #47 {
INFO  22:23:59,969 - #48 }
INFO  22:23:59,969 - #48 }
INFO  22:23:59,969 - 

================SINTAKSNO STABLO====================


INFO  22:23:59,970 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           N
            NumConst(
             2
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid7(
        MethodVoidName(
         main
        ) [MethodVoidName]
      ) [MethodVoid7]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:23:59,970 - 

================SEMANTICKA OBRADA====================


INFO  22:23:59,980 - Deklarisana konstanta 'N' na liniji 2
INFO  22:23:59,982 - ===================================
INFO  22:23:59,982 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  22:23:59,988 - Parsiranje uspesno zavrseno!
INFO  22:24:31,641 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:24:31,696 - #2 program
INFO  22:24:31,696 - #20 test
INFO  22:24:31,696 - #7 const
INFO  22:24:31,697 - #20 int
INFO  22:24:31,697 - #20 N
INFO  22:24:31,698 - #37 =
INFO  22:24:31,698 - #21 2
INFO  22:24:31,698 - #40 ;
INFO  22:24:31,698 - #20 int
INFO  22:24:31,699 - #20 g
INFO  22:24:31,699 - #40 ;
INFO  22:24:31,699 - #47 {
INFO  22:24:31,700 - #16 void
INFO  22:24:31,700 - #20 main
INFO  22:24:31,700 - #43 (
INFO  22:24:31,700 - #44 )
INFO  22:24:31,700 - #47 {
INFO  22:24:31,700 - #20 g
INFO  22:24:31,700 - #37 =
INFO  22:24:31,700 - #20 N
INFO  22:24:31,700 - #40 ;
INFO  22:24:31,701 - #48 }
INFO  22:24:31,701 - #48 }
INFO  22:24:31,702 - 

================SINTAKSNO STABLO====================


INFO  22:24:31,703 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         N
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:24:31,703 - 

================SEMANTICKA OBRADA====================


INFO  22:24:31,716 - Deklarisana konstanta 'N' na liniji 2
INFO  22:24:31,717 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  22:24:31,718 - ===================================
INFO  22:24:31,718 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  22:24:31,725 - Parsiranje uspesno zavrseno!
INFO  22:41:39,925 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:41:39,973 - #2 program
INFO  22:41:39,973 - #20 test
INFO  22:41:39,974 - #7 const
INFO  22:41:39,974 - #20 int
INFO  22:41:39,974 - #20 N
INFO  22:41:39,975 - #37 =
INFO  22:41:39,975 - #21 2
INFO  22:41:39,975 - #40 ;
INFO  22:41:39,975 - #20 int
INFO  22:41:39,976 - #20 g
INFO  22:41:39,976 - #40 ;
INFO  22:41:39,976 - #47 {
INFO  22:41:39,976 - #16 void
INFO  22:41:39,976 - #20 main
INFO  22:41:39,976 - #43 (
INFO  22:41:39,976 - #44 )
INFO  22:41:39,977 - #47 {
INFO  22:41:39,977 - #20 g
INFO  22:41:39,977 - #37 =
INFO  22:41:39,977 - #20 N
INFO  22:41:39,977 - #40 ;
INFO  22:41:39,978 - #48 }
INFO  22:41:39,978 - #48 }
INFO  22:41:39,979 - 

================SINTAKSNO STABLO====================


INFO  22:41:39,980 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         N
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:41:39,980 - 

================SEMANTICKA OBRADA====================


INFO  22:41:39,987 - Deklarisana konstanta 'N' na liniji 2
INFO  22:41:39,987 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  22:41:39,989 - ===================================
INFO  22:41:39,989 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  22:41:39,996 - Parsiranje uspesno zavrseno!
INFO  22:42:14,018 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:42:14,068 - #2 program
INFO  22:42:14,068 - #20 test
INFO  22:42:14,068 - #7 const
INFO  22:42:14,069 - #20 int
INFO  22:42:14,069 - #20 N
INFO  22:42:14,070 - #37 =
INFO  22:42:14,070 - #21 2
INFO  22:42:14,070 - #40 ;
INFO  22:42:14,071 - #20 int
INFO  22:42:14,071 - #20 g
INFO  22:42:14,071 - #40 ;
INFO  22:42:14,071 - #47 {
INFO  22:42:14,071 - #16 void
INFO  22:42:14,071 - #20 main
INFO  22:42:14,072 - #43 (
INFO  22:42:14,072 - #44 )
INFO  22:42:14,072 - #47 {
INFO  22:42:14,072 - #20 g
INFO  22:42:14,072 - #37 =
INFO  22:42:14,072 - #20 N
INFO  22:42:14,072 - #40 ;
INFO  22:42:14,073 - #13 print
INFO  22:42:14,073 - #43 (
INFO  22:42:14,073 - #20 g
INFO  22:42:14,073 - #44 )
INFO  22:42:14,073 - #40 ;
INFO  22:42:14,073 - #48 }
INFO  22:42:14,073 - #48 }
INFO  22:42:14,075 - 

================SINTAKSNO STABLO====================


INFO  22:42:14,075 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 g
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           N
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:42:14,076 - 

================SEMANTICKA OBRADA====================


INFO  22:42:14,087 - Deklarisana konstanta 'N' na liniji 2
INFO  22:42:14,087 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  22:42:14,089 - ===================================
INFO  22:42:14,089 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  22:42:14,096 - Parsiranje uspesno zavrseno!
INFO  22:43:41,133 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:43:41,188 - #2 program
INFO  22:43:41,188 - #20 test
INFO  22:43:41,188 - #7 const
INFO  22:43:41,189 - #20 int
INFO  22:43:41,189 - #20 N
INFO  22:43:41,189 - #37 =
INFO  22:43:41,189 - #21 2
INFO  22:43:41,190 - #40 ;
INFO  22:43:41,191 - #20 int
INFO  22:43:41,191 - #20 g
INFO  22:43:41,191 - #40 ;
INFO  22:43:41,192 - #47 {
INFO  22:43:41,192 - #16 void
INFO  22:43:41,192 - #20 main
INFO  22:43:41,192 - #43 (
INFO  22:43:41,192 - #44 )
INFO  22:43:41,192 - #47 {
INFO  22:43:41,193 - #20 g
INFO  22:43:41,193 - #37 =
INFO  22:43:41,193 - #20 N
INFO  22:43:41,193 - #40 ;
INFO  22:43:41,194 - #13 print
INFO  22:43:41,194 - #43 (
INFO  22:43:41,194 - #20 g
INFO  22:43:41,194 - #44 )
INFO  22:43:41,195 - #40 ;
INFO  22:43:41,195 - #48 }
INFO  22:43:41,195 - #48 }
INFO  22:43:41,197 - 

================SINTAKSNO STABLO====================


INFO  22:43:41,197 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 g
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           N
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:43:41,198 - 

================SEMANTICKA OBRADA====================


INFO  22:43:41,209 - Deklarisana konstanta 'N' na liniji 2
INFO  22:43:41,209 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  22:43:41,210 - ===================================
INFO  22:43:41,210 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  22:43:41,218 - Parsiranje uspesno zavrseno!
INFO  22:44:01,252 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:44:01,346 - #2 program
INFO  22:44:01,346 - #20 test
INFO  22:44:01,346 - #7 const
INFO  22:44:01,348 - #20 int
INFO  22:44:01,348 - #20 N
INFO  22:44:01,349 - #37 =
INFO  22:44:01,349 - #21 2
INFO  22:44:01,349 - #40 ;
INFO  22:44:01,350 - #20 int
INFO  22:44:01,350 - #20 g
INFO  22:44:01,350 - #40 ;
INFO  22:44:01,350 - #47 {
INFO  22:44:01,351 - #16 void
INFO  22:44:01,351 - #20 main
INFO  22:44:01,351 - #43 (
INFO  22:44:01,351 - #44 )
INFO  22:44:01,351 - #47 {
INFO  22:44:01,351 - #20 g
INFO  22:44:01,351 - #37 =
INFO  22:44:01,351 - #20 N
INFO  22:44:01,351 - #40 ;
INFO  22:44:01,352 - #13 print
INFO  22:44:01,352 - #43 (
INFO  22:44:01,352 - #20 g
INFO  22:44:01,352 - #44 )
INFO  22:44:01,353 - #40 ;
INFO  22:44:01,353 - #48 }
INFO  22:44:01,353 - #48 }
INFO  22:44:01,355 - 

================SINTAKSNO STABLO====================


INFO  22:44:01,356 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 g
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           N
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:44:01,356 - 

================SEMANTICKA OBRADA====================


INFO  22:44:01,370 - Deklarisana konstanta 'N' na liniji 2
INFO  22:44:01,370 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  22:44:01,371 - ===================================
INFO  22:44:01,371 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  22:44:01,379 - Parsiranje uspesno zavrseno!
INFO  22:44:26,362 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:44:26,408 - #2 program
INFO  22:44:26,408 - #20 test
INFO  22:44:26,408 - #7 const
INFO  22:44:26,409 - #20 int
INFO  22:44:26,409 - #20 N
INFO  22:44:26,409 - #37 =
INFO  22:44:26,409 - #21 2
INFO  22:44:26,409 - #40 ;
INFO  22:44:26,410 - #20 int
INFO  22:44:26,410 - #20 g
INFO  22:44:26,410 - #40 ;
INFO  22:44:26,410 - #47 {
INFO  22:44:26,411 - #16 void
INFO  22:44:26,411 - #20 main
INFO  22:44:26,411 - #43 (
INFO  22:44:26,411 - #44 )
INFO  22:44:26,411 - #47 {
INFO  22:44:26,411 - #20 g
INFO  22:44:26,411 - #37 =
INFO  22:44:26,411 - #20 N
INFO  22:44:26,411 - #40 ;
INFO  22:44:26,412 - #48 }
INFO  22:44:26,412 - #48 }
INFO  22:44:26,413 - 

================SINTAKSNO STABLO====================


INFO  22:44:26,414 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         N
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:44:26,414 - 

================SEMANTICKA OBRADA====================


INFO  22:44:26,425 - Deklarisana konstanta 'N' na liniji 2
INFO  22:44:26,425 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  22:44:26,426 - ===================================
INFO  22:44:26,427 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  22:44:26,433 - Parsiranje uspesno zavrseno!
INFO  22:54:06,013 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:54:06,058 - #2 program
INFO  22:54:06,059 - #20 test
INFO  22:54:06,059 - #7 const
INFO  22:54:06,059 - #20 int
INFO  22:54:06,059 - #20 N
INFO  22:54:06,060 - #37 =
INFO  22:54:06,060 - #21 2
INFO  22:54:06,060 - #40 ;
INFO  22:54:06,061 - #20 int
INFO  22:54:06,061 - #20 g
INFO  22:54:06,061 - #40 ;
INFO  22:54:06,061 - #47 {
INFO  22:54:06,061 - #16 void
INFO  22:54:06,061 - #20 main
INFO  22:54:06,061 - #43 (
INFO  22:54:06,061 - #44 )
INFO  22:54:06,062 - #47 {
INFO  22:54:06,062 - #20 g
INFO  22:54:06,062 - #37 =
INFO  22:54:06,062 - #20 N
INFO  22:54:06,062 - #40 ;
INFO  22:54:06,062 - #20 g
INFO  22:54:06,063 - #38 ++
INFO  22:54:06,063 - #40 ;
INFO  22:54:06,063 - #48 }
INFO  22:54:06,063 - #48 }
INFO  22:54:06,064 - 

================SINTAKSNO STABLO====================


INFO  22:54:06,064 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 g
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           N
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtDesign(
            DesignatorIncrement(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
            ) [DesignatorIncrement]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:54:06,065 - 

================SEMANTICKA OBRADA====================


INFO  22:54:06,072 - Deklarisana konstanta 'N' na liniji 2
INFO  22:54:06,072 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  22:54:06,073 - ===================================
INFO  22:54:06,074 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  22:54:06,080 - Parsiranje uspesno zavrseno!
INFO  22:56:55,770 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:56:55,818 - #2 program
INFO  22:56:55,818 - #20 test
INFO  22:56:55,818 - #7 const
INFO  22:56:55,819 - #20 int
INFO  22:56:55,819 - #20 N
INFO  22:56:55,820 - #37 =
INFO  22:56:55,820 - #21 2
INFO  22:56:55,820 - #40 ;
INFO  22:56:55,821 - #20 int
INFO  22:56:55,821 - #20 g
INFO  22:56:55,821 - #40 ;
INFO  22:56:55,821 - #47 {
INFO  22:56:55,821 - #16 void
INFO  22:56:55,821 - #20 main
INFO  22:56:55,821 - #43 (
INFO  22:56:55,822 - #44 )
INFO  22:56:55,822 - #47 {
INFO  22:56:55,822 - #20 g
INFO  22:56:55,822 - #37 =
INFO  22:56:55,822 - #20 N
INFO  22:56:55,822 - #40 ;
INFO  22:56:55,823 - #20 g
INFO  22:56:55,823 - #38 ++
INFO  22:56:55,823 - #40 ;
INFO  22:56:55,823 - #48 }
INFO  22:56:55,823 - #48 }
INFO  22:56:55,825 - 

================SINTAKSNO STABLO====================


INFO  22:56:55,825 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 g
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           N
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtDesign(
            DesignatorIncrement(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
            ) [DesignatorIncrement]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:56:55,826 - 

================SEMANTICKA OBRADA====================


INFO  22:56:55,834 - Deklarisana konstanta 'N' na liniji 2
INFO  22:56:55,834 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  22:56:55,835 - ===================================
INFO  22:56:55,835 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  22:56:55,841 - Parsiranje uspesno zavrseno!
INFO  23:00:34,437 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:00:34,481 - #2 program
INFO  23:00:34,482 - #20 test
INFO  23:00:34,482 - #7 const
INFO  23:00:34,483 - #20 int
INFO  23:00:34,483 - #20 N
INFO  23:00:34,483 - #37 =
INFO  23:00:34,483 - #21 2
INFO  23:00:34,483 - #40 ;
INFO  23:00:34,484 - #20 int
INFO  23:00:34,484 - #20 g
INFO  23:00:34,484 - #40 ;
INFO  23:00:34,484 - #47 {
INFO  23:00:34,485 - #16 void
INFO  23:00:34,485 - #20 main
INFO  23:00:34,485 - #43 (
INFO  23:00:34,485 - #44 )
INFO  23:00:34,485 - #47 {
INFO  23:00:34,485 - #20 g
INFO  23:00:34,485 - #37 =
INFO  23:00:34,485 - #20 N
INFO  23:00:34,485 - #40 ;
INFO  23:00:34,486 - #13 print
INFO  23:00:34,486 - #43 (
INFO  23:00:34,486 - #20 g
INFO  23:00:34,486 - #41 ,
INFO  23:00:34,486 - #21 1
INFO  23:00:34,486 - #44 )
INFO  23:00:34,486 - #40 ;
INFO  23:00:34,487 - #20 g
INFO  23:00:34,487 - #38 ++
INFO  23:00:34,487 - #40 ;
INFO  23:00:34,487 - #48 }
INFO  23:00:34,487 - #48 }
INFO  23:00:34,489 - 

================SINTAKSNO STABLO====================


INFO  23:00:34,490 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   g
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             N
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtPrintNumConst(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
             1
            ) [StmtPrintNumConst]
          ) [StatementMulti]
          StmtDesign(
            DesignatorIncrement(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
            ) [DesignatorIncrement]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  23:00:34,490 - 

================SEMANTICKA OBRADA====================


INFO  23:00:34,498 - Deklarisana konstanta 'N' na liniji 2
INFO  23:00:34,499 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  23:00:34,500 - ===================================
INFO  23:00:34,501 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  23:00:34,506 - Parsiranje uspesno zavrseno!
INFO  23:01:20,141 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:01:20,210 - #2 program
INFO  23:01:20,211 - #20 test
INFO  23:01:20,211 - #7 const
INFO  23:01:20,212 - #20 int
INFO  23:01:20,213 - #20 N
INFO  23:01:20,213 - #37 =
INFO  23:01:20,213 - #21 2
INFO  23:01:20,213 - #40 ;
INFO  23:01:20,214 - #20 int
INFO  23:01:20,214 - #20 g
INFO  23:01:20,214 - #40 ;
INFO  23:01:20,215 - #47 {
INFO  23:01:20,215 - #16 void
INFO  23:01:20,215 - #20 main
INFO  23:01:20,215 - #43 (
INFO  23:01:20,215 - #44 )
INFO  23:01:20,216 - #47 {
INFO  23:01:20,216 - #20 g
INFO  23:01:20,216 - #37 =
INFO  23:01:20,216 - #20 N
INFO  23:01:20,216 - #40 ;
INFO  23:01:20,217 - #13 print
INFO  23:01:20,218 - #43 (
INFO  23:01:20,218 - #20 g
INFO  23:01:20,218 - #44 )
INFO  23:01:20,218 - #40 ;
INFO  23:01:20,218 - #20 g
INFO  23:01:20,219 - #38 ++
INFO  23:01:20,219 - #40 ;
INFO  23:01:20,219 - #48 }
INFO  23:01:20,219 - #48 }
INFO  23:01:20,220 - 

================SINTAKSNO STABLO====================


INFO  23:01:20,221 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   g
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             N
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtPrint(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtPrint]
          ) [StatementMulti]
          StmtDesign(
            DesignatorIncrement(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
            ) [DesignatorIncrement]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  23:01:20,222 - 

================SEMANTICKA OBRADA====================


INFO  23:01:20,237 - Deklarisana konstanta 'N' na liniji 2
INFO  23:01:20,237 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  23:01:20,239 - ===================================
INFO  23:01:20,239 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  23:01:20,247 - Parsiranje uspesno zavrseno!
INFO  23:04:49,111 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:04:49,158 - #2 program
INFO  23:04:49,158 - #20 test
INFO  23:04:49,159 - #7 const
INFO  23:04:49,159 - #20 int
INFO  23:04:49,159 - #20 N
INFO  23:04:49,160 - #37 =
INFO  23:04:49,160 - #21 2
INFO  23:04:49,160 - #40 ;
INFO  23:04:49,160 - #20 int
INFO  23:04:49,161 - #20 g
INFO  23:04:49,161 - #40 ;
INFO  23:04:49,161 - #47 {
INFO  23:04:49,161 - #16 void
INFO  23:04:49,161 - #20 main
INFO  23:04:49,161 - #43 (
INFO  23:04:49,161 - #44 )
INFO  23:04:49,161 - #47 {
INFO  23:04:49,162 - #20 g
INFO  23:04:49,162 - #37 =
INFO  23:04:49,162 - #20 N
INFO  23:04:49,162 - #40 ;
INFO  23:04:49,162 - #13 print
INFO  23:04:49,162 - #43 (
INFO  23:04:49,162 - #20 g
INFO  23:04:49,162 - #44 )
INFO  23:04:49,163 - #40 ;
INFO  23:04:49,163 - #20 g
INFO  23:04:49,163 - #38 ++
INFO  23:04:49,163 - #40 ;
INFO  23:04:49,163 - #14 read
INFO  23:04:49,163 - #43 (
INFO  23:04:49,163 - #20 g
INFO  23:04:49,163 - #44 )
INFO  23:04:49,163 - #40 ;
INFO  23:04:49,163 - #48 }
INFO  23:04:49,164 - #48 }
INFO  23:04:49,165 - 

================SINTAKSNO STABLO====================


INFO  23:04:49,166 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               N
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtPrint(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         g
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtPrint]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 g
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             g
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  23:04:49,166 - 

================SEMANTICKA OBRADA====================


INFO  23:04:49,178 - Deklarisana konstanta 'N' na liniji 2
INFO  23:04:49,178 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  23:04:49,180 - ===================================
INFO  23:04:49,180 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  23:04:49,186 - Parsiranje uspesno zavrseno!
