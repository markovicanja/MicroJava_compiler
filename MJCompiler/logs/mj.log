INFO  09:17:18,010 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:17:18,091 - #2 program
INFO  09:17:18,091 - #20 test301
INFO  09:17:18,091 - #47 {
INFO  09:17:18,092 - #16 void
INFO  09:17:18,092 - #20 main
INFO  09:17:18,092 - #43 (
INFO  09:17:18,093 - #44 )
INFO  09:17:18,093 - #20 int
INFO  09:17:18,093 - #20 x
INFO  09:17:18,094 - #41 ,
INFO  09:17:18,094 - #20 y
INFO  09:17:18,095 - #40 ;
INFO  09:17:18,095 - #20 bool
INFO  09:17:18,095 - #20 bt
INFO  09:17:18,095 - #40 ;
INFO  09:17:18,095 - #20 int
INFO  09:17:18,096 - #20 niz
INFO  09:17:18,096 - #45 [
INFO  09:17:18,096 - #46 ]
INFO  09:17:18,096 - #40 ;
INFO  09:17:18,096 - #47 {
INFO  09:17:18,097 - #20 x
INFO  09:17:18,097 - #37 =
INFO  09:17:18,098 - #21 1
INFO  09:17:18,098 - #40 ;
INFO  09:17:18,099 - #20 y
INFO  09:17:18,099 - #37 =
INFO  09:17:18,099 - #21 1
INFO  09:17:18,099 - #40 ;
INFO  09:17:18,100 - #20 bt
INFO  09:17:18,100 - #37 =
INFO  09:17:18,100 - #23 true
INFO  09:17:18,100 - #40 ;
INFO  09:17:18,100 - #13 print
INFO  09:17:18,100 - #43 (
INFO  09:17:18,101 - #20 bt
INFO  09:17:18,101 - #49 ?
INFO  09:17:18,101 - #21 1
INFO  09:17:18,101 - #50 :
INFO  09:17:18,101 - #21 2
INFO  09:17:18,101 - #44 )
INFO  09:17:18,102 - #40 ;
INFO  09:17:18,102 - #48 }
INFO  09:17:18,103 - #48 }
INFO  09:17:18,105 - 

================SINTAKSNO STABLO====================


INFO  09:17:18,107 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   y
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 bt
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorBoolConst(
                         true
                        ) [FactorBoolConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprTernary(
              TernaryCond(
                ExprSingle(
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       bt
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TernaryCond]
              TerExpr1(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TerExpr1]
              TerExpr2(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     2
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TerExpr2]
            ) [ExprTernary]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:17:18,108 - 

================SEMANTICKA OBRADA====================


INFO  09:17:18,127 - Deklarisana promenljiva 'x' na liniji 8
INFO  09:17:18,128 - Deklarisana promenljiva 'y' na liniji 8
INFO  09:17:18,128 - Deklarisana promenljiva 'bt' na liniji 9
INFO  09:17:18,128 - Deklarisan niz 'niz' na liniji 10
INFO  09:17:18,129 - ===================================
INFO  09:17:18,129 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  09:17:18,138 - Parsiranje uspesno zavrseno!
INFO  09:26:59,708 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:26:59,758 - #2 program
INFO  09:26:59,758 - #20 test301
INFO  09:26:59,758 - #47 {
INFO  09:26:59,759 - #16 void
INFO  09:26:59,759 - #20 main
INFO  09:26:59,759 - #43 (
INFO  09:26:59,759 - #44 )
INFO  09:26:59,759 - #20 int
INFO  09:26:59,759 - #20 x
INFO  09:26:59,760 - #41 ,
INFO  09:26:59,760 - #20 y
INFO  09:26:59,760 - #40 ;
INFO  09:26:59,760 - #20 bool
INFO  09:26:59,761 - #20 bt
INFO  09:26:59,761 - #40 ;
INFO  09:26:59,761 - #20 int
INFO  09:26:59,761 - #20 niz
INFO  09:26:59,761 - #45 [
INFO  09:26:59,761 - #46 ]
INFO  09:26:59,761 - #40 ;
INFO  09:26:59,761 - #47 {
INFO  09:26:59,762 - #20 x
INFO  09:26:59,762 - #37 =
INFO  09:26:59,763 - #21 1
INFO  09:26:59,764 - #40 ;
INFO  09:26:59,765 - #20 y
INFO  09:26:59,766 - #37 =
INFO  09:26:59,766 - #21 1
INFO  09:26:59,766 - #40 ;
INFO  09:26:59,766 - #8 if
INFO  09:26:59,766 - #43 (
INFO  09:26:59,767 - #20 x
INFO  09:26:59,767 - #32 >=
INFO  09:26:59,768 - #21 0
INFO  09:26:59,769 - #36 ||
INFO  09:26:59,769 - #20 y
INFO  09:26:59,769 - #34 <=
INFO  09:26:59,769 - #21 2
INFO  09:26:59,770 - #44 )
INFO  09:26:59,770 - #20 x
INFO  09:26:59,770 - #37 =
INFO  09:26:59,770 - #21 3
INFO  09:26:59,770 - #40 ;
INFO  09:26:59,770 - #48 }
INFO  09:26:59,771 - #48 }
INFO  09:26:59,772 - 

================SINTAKSNO STABLO====================


INFO  09:26:59,773 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   x
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 y
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         1
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtIf(
            IfKeyword(
            ) [IfKeyword]
            StmtIfBody(
              IfCond(
                CondOr(
                  CondSingle(
                    CondTermSingle(
                      CondFactRelop(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 x
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                        RelopGE(
                        ) [RelopGE]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               0
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactRelop]
                    ) [CondTermSingle]
                  ) [CondSingle]
                  CondTermSingle(
                    CondFactRelop(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               y
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                      RelopLE(
                      ) [RelopLE]
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             2
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactRelop]
                  ) [CondTermSingle]
                ) [CondOr]
              ) [IfCond]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   x
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           3
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StmtIfBody]
          ) [StmtIf]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:26:59,774 - 

================SEMANTICKA OBRADA====================


INFO  09:26:59,786 - Deklarisana promenljiva 'x' na liniji 8
INFO  09:26:59,786 - Deklarisana promenljiva 'y' na liniji 8
INFO  09:26:59,786 - Deklarisana promenljiva 'bt' na liniji 9
INFO  09:26:59,786 - Deklarisan niz 'niz' na liniji 10
INFO  09:26:59,787 - ===================================
INFO  09:26:59,787 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  09:26:59,794 - Parsiranje uspesno zavrseno!
INFO  10:03:50,138 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:03:50,201 - #2 program
INFO  10:03:50,201 - #20 test301
INFO  10:03:50,201 - #47 {
INFO  10:03:50,201 - #16 void
INFO  10:03:50,201 - #20 main
INFO  10:03:50,201 - #43 (
INFO  10:03:50,201 - #44 )
INFO  10:03:50,201 - #20 int
INFO  10:03:50,201 - #20 x
INFO  10:03:50,201 - #41 ,
INFO  10:03:50,201 - #20 y
INFO  10:03:50,201 - #40 ;
INFO  10:03:50,201 - #20 bool
INFO  10:03:50,201 - #20 bt
INFO  10:03:50,201 - #40 ;
INFO  10:03:50,201 - #20 int
INFO  10:03:50,201 - #20 niz
INFO  10:03:50,201 - #45 [
INFO  10:03:50,201 - #46 ]
INFO  10:03:50,201 - #40 ;
INFO  10:03:50,201 - #47 {
INFO  10:03:50,201 - #20 x
INFO  10:03:50,201 - #37 =
INFO  10:03:50,201 - #21 1
INFO  10:03:50,201 - #40 ;
INFO  10:03:50,201 - #20 y
INFO  10:03:50,201 - #37 =
INFO  10:03:50,201 - #21 1
INFO  10:03:50,201 - #40 ;
INFO  10:03:50,201 - #20 bt
INFO  10:03:50,207 - #37 =
INFO  10:03:50,207 - #23 true
INFO  10:03:50,207 - #40 ;
INFO  10:03:50,207 - #8 if
INFO  10:03:50,207 - #43 (
INFO  10:03:50,207 - #20 x
INFO  10:03:50,207 - #32 >=
INFO  10:03:50,207 - #21 0
INFO  10:03:50,207 - #35 &&
INFO  10:03:50,207 - #20 y
INFO  10:03:50,207 - #34 <=
INFO  10:03:50,207 - #21 2
INFO  10:03:50,207 - #35 &&
INFO  10:03:50,207 - #20 bt
INFO  10:03:50,207 - #44 )
INFO  10:03:50,207 - #20 x
INFO  10:03:50,207 - #37 =
INFO  10:03:50,207 - #21 3
INFO  10:03:50,207 - #40 ;
INFO  10:03:50,207 - #13 print
INFO  10:03:50,207 - #43 (
INFO  10:03:50,207 - #20 x
INFO  10:03:50,207 - #44 )
INFO  10:03:50,207 - #40 ;
INFO  10:03:50,207 - #48 }
INFO  10:03:50,207 - #48 }
INFO  10:03:50,207 - 

================SINTAKSNO STABLO====================


INFO  10:03:50,207 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     y
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondSingle(
                    CondTermAnd(
                      CondTermAnd(
                        CondTermSingle(
                          CondFactRelop(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     x
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                            RelopGE(
                            ) [RelopGE]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   0
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactRelop]
                        ) [CondTermSingle]
                        CondFactRelop(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   y
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                          RelopLE(
                          ) [RelopLE]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 2
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactRelop]
                      ) [CondTermAnd]
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 bt
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermAnd]
                  ) [CondSingle]
                ) [IfCond]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             3
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:03:50,207 - 

================SEMANTICKA OBRADA====================


INFO  10:03:50,223 - Deklarisana promenljiva 'x' na liniji 8
INFO  10:03:50,223 - Deklarisana promenljiva 'y' na liniji 8
INFO  10:03:50,223 - Deklarisana promenljiva 'bt' na liniji 9
INFO  10:03:50,223 - Deklarisan niz 'niz' na liniji 10
INFO  10:03:50,223 - ===================================
INFO  10:03:50,223 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:03:50,285 - Parsiranje uspesno zavrseno!
INFO  10:12:02,521 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:12:02,568 - #2 program
INFO  10:12:02,568 - #20 test301
INFO  10:12:02,568 - #47 {
INFO  10:12:02,568 - #16 void
INFO  10:12:02,568 - #20 main
INFO  10:12:02,568 - #43 (
INFO  10:12:02,568 - #44 )
INFO  10:12:02,568 - #20 int
INFO  10:12:02,568 - #20 x
INFO  10:12:02,568 - #41 ,
INFO  10:12:02,568 - #20 y
INFO  10:12:02,568 - #40 ;
INFO  10:12:02,568 - #20 bool
INFO  10:12:02,568 - #20 bt
INFO  10:12:02,568 - #40 ;
INFO  10:12:02,568 - #20 int
INFO  10:12:02,568 - #20 niz
INFO  10:12:02,568 - #45 [
INFO  10:12:02,568 - #46 ]
INFO  10:12:02,568 - #40 ;
INFO  10:12:02,568 - #47 {
INFO  10:12:02,568 - #20 x
INFO  10:12:02,568 - #37 =
INFO  10:12:02,568 - #21 1
INFO  10:12:02,568 - #40 ;
INFO  10:12:02,568 - #20 y
INFO  10:12:02,568 - #37 =
INFO  10:12:02,568 - #21 1
INFO  10:12:02,568 - #40 ;
INFO  10:12:02,568 - #20 bt
INFO  10:12:02,568 - #37 =
INFO  10:12:02,568 - #23 true
INFO  10:12:02,568 - #40 ;
INFO  10:12:02,568 - #8 if
INFO  10:12:02,568 - #43 (
INFO  10:12:02,568 - #20 x
INFO  10:12:02,568 - #29 ==
INFO  10:12:02,568 - #21 0
INFO  10:12:02,584 - #36 ||
INFO  10:12:02,584 - #20 y
INFO  10:12:02,584 - #34 <=
INFO  10:12:02,584 - #21 2
INFO  10:12:02,584 - #44 )
INFO  10:12:02,584 - #20 x
INFO  10:12:02,584 - #37 =
INFO  10:12:02,584 - #21 3
INFO  10:12:02,584 - #40 ;
INFO  10:12:02,584 - #13 print
INFO  10:12:02,584 - #43 (
INFO  10:12:02,584 - #20 x
INFO  10:12:02,584 - #44 )
INFO  10:12:02,584 - #40 ;
INFO  10:12:02,584 - #48 }
INFO  10:12:02,584 - #48 }
INFO  10:12:02,584 - 

================SINTAKSNO STABLO====================


INFO  10:12:02,584 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     y
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondOr(
                    CondSingle(
                      CondTermSingle(
                        CondFactRelop(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   x
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                          RelopEQ(
                          ) [RelopEQ]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 0
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactRelop]
                      ) [CondTermSingle]
                    ) [CondSingle]
                    CondTermSingle(
                      CondFactRelop(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 y
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                        RelopLE(
                        ) [RelopLE]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactRelop]
                    ) [CondTermSingle]
                  ) [CondOr]
                ) [IfCond]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             3
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:12:02,584 - 

================SEMANTICKA OBRADA====================


INFO  10:12:02,599 - Deklarisana promenljiva 'x' na liniji 8
INFO  10:12:02,599 - Deklarisana promenljiva 'y' na liniji 8
INFO  10:12:02,599 - Deklarisana promenljiva 'bt' na liniji 9
INFO  10:12:02,599 - Deklarisan niz 'niz' na liniji 10
INFO  10:12:02,599 - ===================================
INFO  10:12:02,599 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 10:12:02,615 - ORD 0
ERROR 10:12:02,615 - ORD 0
INFO  10:12:02,615 - Parsiranje uspesno zavrseno!
INFO  10:21:55,335 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:21:55,382 - #2 program
INFO  10:21:55,382 - #20 test301
INFO  10:21:55,382 - #47 {
INFO  10:21:55,382 - #16 void
INFO  10:21:55,382 - #20 main
INFO  10:21:55,382 - #43 (
INFO  10:21:55,382 - #44 )
INFO  10:21:55,382 - #20 int
INFO  10:21:55,382 - #20 x
INFO  10:21:55,382 - #41 ,
INFO  10:21:55,382 - #20 y
INFO  10:21:55,382 - #40 ;
INFO  10:21:55,382 - #20 bool
INFO  10:21:55,382 - #20 bt
INFO  10:21:55,382 - #40 ;
INFO  10:21:55,382 - #20 int
INFO  10:21:55,382 - #20 niz
INFO  10:21:55,382 - #45 [
INFO  10:21:55,382 - #46 ]
INFO  10:21:55,382 - #40 ;
INFO  10:21:55,382 - #47 {
INFO  10:21:55,382 - #20 x
INFO  10:21:55,382 - #37 =
INFO  10:21:55,382 - #21 1
INFO  10:21:55,382 - #40 ;
INFO  10:21:55,382 - #20 y
INFO  10:21:55,382 - #37 =
INFO  10:21:55,382 - #21 1
INFO  10:21:55,382 - #40 ;
INFO  10:21:55,382 - #20 bt
INFO  10:21:55,382 - #37 =
INFO  10:21:55,382 - #23 true
INFO  10:21:55,382 - #40 ;
INFO  10:21:55,382 - #8 if
INFO  10:21:55,382 - #43 (
INFO  10:21:55,382 - #20 x
INFO  10:21:55,382 - #29 ==
INFO  10:21:55,382 - #21 0
INFO  10:21:55,382 - #36 ||
INFO  10:21:55,382 - #20 y
INFO  10:21:55,382 - #34 <=
INFO  10:21:55,382 - #21 2
INFO  10:21:55,382 - #44 )
INFO  10:21:55,382 - #20 x
INFO  10:21:55,382 - #37 =
INFO  10:21:55,382 - #21 3
INFO  10:21:55,382 - #40 ;
INFO  10:21:55,382 - #13 print
INFO  10:21:55,382 - #43 (
INFO  10:21:55,382 - #20 x
INFO  10:21:55,382 - #44 )
INFO  10:21:55,382 - #40 ;
INFO  10:21:55,382 - #48 }
INFO  10:21:55,382 - #48 }
INFO  10:21:55,398 - 

================SINTAKSNO STABLO====================


INFO  10:21:55,398 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     y
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondOr(
                    CondSingle(
                      CondTermSingle(
                        CondFactRelop(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   x
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                          RelopEQ(
                          ) [RelopEQ]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 0
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactRelop]
                      ) [CondTermSingle]
                    ) [CondSingle]
                    CondTermSingle(
                      CondFactRelop(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 y
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                        RelopLE(
                        ) [RelopLE]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactRelop]
                    ) [CondTermSingle]
                  ) [CondOr]
                ) [IfCond]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             3
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:21:55,398 - 

================SEMANTICKA OBRADA====================


INFO  10:21:55,414 - Deklarisana promenljiva 'x' na liniji 8
INFO  10:21:55,414 - Deklarisana promenljiva 'y' na liniji 8
INFO  10:21:55,414 - Deklarisana promenljiva 'bt' na liniji 9
INFO  10:21:55,414 - Deklarisan niz 'niz' na liniji 10
INFO  10:21:55,414 - ===================================
INFO  10:21:55,414 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 10:21:55,420 - ORD 0
ERROR 10:21:55,420 - ORD 0
INFO  10:21:55,420 - Parsiranje uspesno zavrseno!
INFO  10:22:30,000 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:22:30,037 - #2 program
INFO  10:22:30,037 - #20 test301
INFO  10:22:30,037 - #47 {
INFO  10:22:30,037 - #16 void
INFO  10:22:30,037 - #20 main
INFO  10:22:30,037 - #43 (
INFO  10:22:30,037 - #44 )
INFO  10:22:30,037 - #20 int
INFO  10:22:30,037 - #20 x
INFO  10:22:30,037 - #41 ,
INFO  10:22:30,037 - #20 y
INFO  10:22:30,037 - #40 ;
INFO  10:22:30,037 - #20 bool
INFO  10:22:30,037 - #20 bt
INFO  10:22:30,037 - #40 ;
INFO  10:22:30,037 - #20 int
INFO  10:22:30,037 - #20 niz
INFO  10:22:30,037 - #45 [
INFO  10:22:30,037 - #46 ]
INFO  10:22:30,037 - #40 ;
INFO  10:22:30,037 - #47 {
INFO  10:22:30,037 - #20 x
INFO  10:22:30,037 - #37 =
INFO  10:22:30,037 - #21 1
INFO  10:22:30,037 - #40 ;
INFO  10:22:30,053 - #20 y
INFO  10:22:30,053 - #37 =
INFO  10:22:30,055 - #21 1
INFO  10:22:30,055 - #40 ;
INFO  10:22:30,055 - #20 bt
INFO  10:22:30,055 - #37 =
INFO  10:22:30,055 - #23 true
INFO  10:22:30,055 - #40 ;
INFO  10:22:30,055 - #8 if
INFO  10:22:30,055 - #43 (
INFO  10:22:30,057 - #20 bt
INFO  10:22:30,057 - #36 ||
INFO  10:22:30,057 - #20 bt
INFO  10:22:30,057 - #44 )
INFO  10:22:30,057 - #20 x
INFO  10:22:30,057 - #37 =
INFO  10:22:30,057 - #21 3
INFO  10:22:30,057 - #40 ;
INFO  10:22:30,057 - #13 print
INFO  10:22:30,057 - #43 (
INFO  10:22:30,057 - #20 x
INFO  10:22:30,057 - #44 )
INFO  10:22:30,057 - #40 ;
INFO  10:22:30,057 - #48 }
INFO  10:22:30,057 - #48 }
INFO  10:22:30,057 - 

================SINTAKSNO STABLO====================


INFO  10:22:30,057 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     y
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondOr(
                    CondSingle(
                      CondTermSingle(
                        CondFactSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   bt
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactSingle]
                      ) [CondTermSingle]
                    ) [CondSingle]
                    CondTermSingle(
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 bt
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermSingle]
                  ) [CondOr]
                ) [IfCond]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             3
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:22:30,057 - 

================SEMANTICKA OBRADA====================


INFO  10:22:30,073 - Deklarisana promenljiva 'x' na liniji 8
INFO  10:22:30,073 - Deklarisana promenljiva 'y' na liniji 8
INFO  10:22:30,073 - Deklarisana promenljiva 'bt' na liniji 9
INFO  10:22:30,073 - Deklarisan niz 'niz' na liniji 10
INFO  10:22:30,073 - ===================================
INFO  10:22:30,073 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 10:22:30,073 - ORD 0
ERROR 10:22:30,073 - ORD 0
INFO  10:22:30,073 - Parsiranje uspesno zavrseno!
INFO  10:29:17,987 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:29:18,049 - #2 program
INFO  10:29:18,049 - #20 test301
INFO  10:29:18,049 - #47 {
INFO  10:29:18,049 - #16 void
INFO  10:29:18,049 - #20 main
INFO  10:29:18,049 - #43 (
INFO  10:29:18,049 - #44 )
INFO  10:29:18,065 - #20 int
INFO  10:29:18,065 - #20 x
INFO  10:29:18,065 - #41 ,
INFO  10:29:18,065 - #20 y
INFO  10:29:18,065 - #40 ;
INFO  10:29:18,065 - #20 bool
INFO  10:29:18,065 - #20 bt
INFO  10:29:18,065 - #40 ;
INFO  10:29:18,065 - #20 int
INFO  10:29:18,065 - #20 niz
INFO  10:29:18,065 - #45 [
INFO  10:29:18,065 - #46 ]
INFO  10:29:18,065 - #40 ;
INFO  10:29:18,065 - #47 {
INFO  10:29:18,065 - #20 x
INFO  10:29:18,065 - #37 =
INFO  10:29:18,065 - #21 1
INFO  10:29:18,065 - #40 ;
INFO  10:29:18,065 - #20 y
INFO  10:29:18,065 - #37 =
INFO  10:29:18,065 - #21 1
INFO  10:29:18,065 - #40 ;
INFO  10:29:18,065 - #20 bt
INFO  10:29:18,065 - #37 =
INFO  10:29:18,065 - #23 true
INFO  10:29:18,065 - #40 ;
INFO  10:29:18,065 - #8 if
INFO  10:29:18,065 - #43 (
INFO  10:29:18,065 - #20 bt
INFO  10:29:18,065 - #36 ||
INFO  10:29:18,065 - #20 bt
INFO  10:29:18,065 - #44 )
INFO  10:29:18,065 - #20 x
INFO  10:29:18,065 - #37 =
INFO  10:29:18,065 - #21 3
INFO  10:29:18,065 - #40 ;
INFO  10:29:18,065 - #13 print
INFO  10:29:18,065 - #43 (
INFO  10:29:18,065 - #20 x
INFO  10:29:18,065 - #44 )
INFO  10:29:18,065 - #40 ;
INFO  10:29:18,065 - #48 }
INFO  10:29:18,065 - #48 }
INFO  10:29:18,065 - 

================SINTAKSNO STABLO====================


INFO  10:29:18,081 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     y
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondOr(
                    CondSingle(
                      CondTermSingle(
                        CondFactSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   bt
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactSingle]
                      ) [CondTermSingle]
                    ) [CondSingle]
                    CondTermSingle(
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 bt
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermSingle]
                  ) [CondOr]
                ) [IfCond]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             3
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:29:18,081 - 

================SEMANTICKA OBRADA====================


INFO  10:29:18,087 - Deklarisana promenljiva 'x' na liniji 8
INFO  10:29:18,087 - Deklarisana promenljiva 'y' na liniji 8
INFO  10:29:18,087 - Deklarisana promenljiva 'bt' na liniji 9
INFO  10:29:18,087 - Deklarisan niz 'niz' na liniji 10
INFO  10:29:18,087 - ===================================
INFO  10:29:18,087 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 10:29:18,103 - ORD 0
ERROR 10:29:18,103 - ORD 0
INFO  10:29:18,103 - Parsiranje uspesno zavrseno!
INFO  10:31:19,684 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:31:19,759 - #2 program
INFO  10:31:19,759 - #20 test301
INFO  10:31:19,759 - #47 {
INFO  10:31:19,759 - #16 void
INFO  10:31:19,759 - #20 main
INFO  10:31:19,759 - #43 (
INFO  10:31:19,759 - #44 )
INFO  10:31:19,759 - #20 int
INFO  10:31:19,759 - #20 x
INFO  10:31:19,759 - #41 ,
INFO  10:31:19,759 - #20 y
INFO  10:31:19,759 - #40 ;
INFO  10:31:19,759 - #20 bool
INFO  10:31:19,759 - #20 bt
INFO  10:31:19,759 - #40 ;
INFO  10:31:19,759 - #20 int
INFO  10:31:19,759 - #20 niz
INFO  10:31:19,759 - #45 [
INFO  10:31:19,759 - #46 ]
INFO  10:31:19,759 - #40 ;
INFO  10:31:19,759 - #47 {
INFO  10:31:19,759 - #20 x
INFO  10:31:19,759 - #37 =
INFO  10:31:19,759 - #21 1
INFO  10:31:19,759 - #40 ;
INFO  10:31:19,759 - #20 y
INFO  10:31:19,759 - #37 =
INFO  10:31:19,759 - #21 1
INFO  10:31:19,759 - #40 ;
INFO  10:31:19,759 - #20 bt
INFO  10:31:19,759 - #37 =
INFO  10:31:19,759 - #23 true
INFO  10:31:19,759 - #40 ;
INFO  10:31:19,759 - #8 if
INFO  10:31:19,759 - #43 (
INFO  10:31:19,775 - #23 false
INFO  10:31:19,775 - #36 ||
INFO  10:31:19,775 - #20 bt
INFO  10:31:19,775 - #44 )
INFO  10:31:19,775 - #20 x
INFO  10:31:19,775 - #37 =
INFO  10:31:19,775 - #21 3
INFO  10:31:19,775 - #40 ;
INFO  10:31:19,775 - #13 print
INFO  10:31:19,775 - #43 (
INFO  10:31:19,775 - #20 x
INFO  10:31:19,775 - #44 )
INFO  10:31:19,775 - #40 ;
INFO  10:31:19,775 - #48 }
INFO  10:31:19,775 - #48 }
INFO  10:31:19,775 - 

================SINTAKSNO STABLO====================


INFO  10:31:19,775 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     y
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondOr(
                    CondSingle(
                      CondTermSingle(
                        CondFactSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 false
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactSingle]
                      ) [CondTermSingle]
                    ) [CondSingle]
                    CondTermSingle(
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 bt
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermSingle]
                  ) [CondOr]
                ) [IfCond]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             3
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:31:19,775 - 

================SEMANTICKA OBRADA====================


INFO  10:31:19,791 - Deklarisana promenljiva 'x' na liniji 8
INFO  10:31:19,791 - Deklarisana promenljiva 'y' na liniji 8
INFO  10:31:19,791 - Deklarisana promenljiva 'bt' na liniji 9
INFO  10:31:19,791 - Deklarisan niz 'niz' na liniji 10
INFO  10:31:19,791 - ===================================
INFO  10:31:19,791 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 10:31:19,806 - ORD 0
ERROR 10:31:19,806 - ORD 0
INFO  10:31:19,806 - Parsiranje uspesno zavrseno!
INFO  10:31:26,151 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:31:26,233 - #2 program
INFO  10:31:26,233 - #20 test301
INFO  10:31:26,233 - #47 {
INFO  10:31:26,233 - #16 void
INFO  10:31:26,233 - #20 main
INFO  10:31:26,233 - #43 (
INFO  10:31:26,233 - #44 )
INFO  10:31:26,233 - #20 int
INFO  10:31:26,241 - #20 x
INFO  10:31:26,241 - #41 ,
INFO  10:31:26,241 - #20 y
INFO  10:31:26,241 - #40 ;
INFO  10:31:26,241 - #20 bool
INFO  10:31:26,241 - #20 bt
INFO  10:31:26,243 - #40 ;
INFO  10:31:26,243 - #20 int
INFO  10:31:26,243 - #20 niz
INFO  10:31:26,243 - #45 [
INFO  10:31:26,243 - #46 ]
INFO  10:31:26,243 - #40 ;
INFO  10:31:26,243 - #47 {
INFO  10:31:26,243 - #20 x
INFO  10:31:26,243 - #37 =
INFO  10:31:26,243 - #21 1
INFO  10:31:26,243 - #40 ;
INFO  10:31:26,243 - #20 y
INFO  10:31:26,243 - #37 =
INFO  10:31:26,243 - #21 1
INFO  10:31:26,243 - #40 ;
INFO  10:31:26,243 - #20 bt
INFO  10:31:26,243 - #37 =
INFO  10:31:26,243 - #23 true
INFO  10:31:26,243 - #40 ;
INFO  10:31:26,243 - #8 if
INFO  10:31:26,243 - #43 (
INFO  10:31:26,243 - #20 bt
INFO  10:31:26,243 - #36 ||
INFO  10:31:26,251 - #20 bt
INFO  10:31:26,251 - #44 )
INFO  10:31:26,251 - #20 x
INFO  10:31:26,251 - #37 =
INFO  10:31:26,251 - #21 3
INFO  10:31:26,253 - #40 ;
INFO  10:31:26,253 - #13 print
INFO  10:31:26,253 - #43 (
INFO  10:31:26,253 - #20 x
INFO  10:31:26,253 - #44 )
INFO  10:31:26,253 - #40 ;
INFO  10:31:26,253 - #48 }
INFO  10:31:26,253 - #48 }
INFO  10:31:26,253 - 

================SINTAKSNO STABLO====================


INFO  10:31:26,253 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     y
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondOr(
                    CondSingle(
                      CondTermSingle(
                        CondFactSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   bt
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactSingle]
                      ) [CondTermSingle]
                    ) [CondSingle]
                    CondTermSingle(
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 bt
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermSingle]
                  ) [CondOr]
                ) [IfCond]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             3
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:31:26,261 - 

================SEMANTICKA OBRADA====================


INFO  10:31:26,282 - Deklarisana promenljiva 'x' na liniji 8
INFO  10:31:26,282 - Deklarisana promenljiva 'y' na liniji 8
INFO  10:31:26,282 - Deklarisana promenljiva 'bt' na liniji 9
INFO  10:31:26,282 - Deklarisan niz 'niz' na liniji 10
INFO  10:31:26,284 - ===================================
INFO  10:31:26,284 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 10:31:26,292 - ORD 0
ERROR 10:31:26,294 - ORD 0
INFO  10:31:26,294 - Parsiranje uspesno zavrseno!
INFO  10:32:00,882 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:32:00,951 - #2 program
INFO  10:32:00,951 - #20 test301
INFO  10:32:00,951 - #47 {
INFO  10:32:00,951 - #16 void
INFO  10:32:00,951 - #20 main
INFO  10:32:00,951 - #43 (
INFO  10:32:00,951 - #44 )
INFO  10:32:00,951 - #20 int
INFO  10:32:00,951 - #20 x
INFO  10:32:00,951 - #41 ,
INFO  10:32:00,951 - #20 y
INFO  10:32:00,951 - #40 ;
INFO  10:32:00,951 - #20 bool
INFO  10:32:00,951 - #20 bt
INFO  10:32:00,951 - #40 ;
INFO  10:32:00,951 - #20 int
INFO  10:32:00,951 - #20 niz
INFO  10:32:00,951 - #45 [
INFO  10:32:00,951 - #46 ]
INFO  10:32:00,951 - #40 ;
INFO  10:32:00,951 - #47 {
INFO  10:32:00,951 - #20 x
INFO  10:32:00,951 - #37 =
INFO  10:32:00,951 - #21 1
INFO  10:32:00,951 - #40 ;
INFO  10:32:00,951 - #20 y
INFO  10:32:00,951 - #37 =
INFO  10:32:00,951 - #21 1
INFO  10:32:00,951 - #40 ;
INFO  10:32:00,951 - #20 bt
INFO  10:32:00,951 - #37 =
INFO  10:32:00,951 - #23 true
INFO  10:32:00,951 - #40 ;
INFO  10:32:00,951 - #8 if
INFO  10:32:00,951 - #43 (
INFO  10:32:00,951 - #23 false
INFO  10:32:00,951 - #36 ||
INFO  10:32:00,951 - #20 bt
INFO  10:32:00,951 - #44 )
INFO  10:32:00,951 - #20 x
INFO  10:32:00,951 - #37 =
INFO  10:32:00,951 - #21 3
INFO  10:32:00,951 - #40 ;
INFO  10:32:00,951 - #13 print
INFO  10:32:00,951 - #43 (
INFO  10:32:00,951 - #20 x
INFO  10:32:00,951 - #44 )
INFO  10:32:00,951 - #40 ;
INFO  10:32:00,951 - #48 }
INFO  10:32:00,951 - #48 }
INFO  10:32:00,951 - 

================SINTAKSNO STABLO====================


INFO  10:32:00,967 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     y
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondOr(
                    CondSingle(
                      CondTermSingle(
                        CondFactSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 false
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactSingle]
                      ) [CondTermSingle]
                    ) [CondSingle]
                    CondTermSingle(
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 bt
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermSingle]
                  ) [CondOr]
                ) [IfCond]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             3
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:32:00,967 - 

================SEMANTICKA OBRADA====================


INFO  10:32:00,982 - Deklarisana promenljiva 'x' na liniji 8
INFO  10:32:00,982 - Deklarisana promenljiva 'y' na liniji 8
INFO  10:32:00,982 - Deklarisana promenljiva 'bt' na liniji 9
INFO  10:32:00,982 - Deklarisan niz 'niz' na liniji 10
INFO  10:32:00,982 - ===================================
INFO  10:32:00,982 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 10:32:00,982 - ORD 0
ERROR 10:32:00,982 - ORD 0
INFO  10:32:00,982 - Parsiranje uspesno zavrseno!
INFO  12:10:01,114 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:10:01,161 - #2 program
INFO  12:10:01,161 - #20 test301
INFO  12:10:01,161 - #47 {
INFO  12:10:01,161 - #16 void
INFO  12:10:01,177 - #20 main
INFO  12:10:01,177 - #43 (
INFO  12:10:01,177 - #44 )
INFO  12:10:01,177 - #20 int
INFO  12:10:01,177 - #20 x
INFO  12:10:01,177 - #41 ,
INFO  12:10:01,177 - #20 y
INFO  12:10:01,177 - #40 ;
INFO  12:10:01,177 - #20 bool
INFO  12:10:01,177 - #20 bt
INFO  12:10:01,177 - #40 ;
INFO  12:10:01,177 - #20 int
INFO  12:10:01,177 - #20 niz
INFO  12:10:01,177 - #45 [
INFO  12:10:01,177 - #46 ]
INFO  12:10:01,177 - #40 ;
INFO  12:10:01,177 - #47 {
INFO  12:10:01,177 - #20 x
INFO  12:10:01,177 - #37 =
INFO  12:10:01,177 - #21 1
INFO  12:10:01,177 - #40 ;
INFO  12:10:01,183 - #20 y
INFO  12:10:01,183 - #37 =
INFO  12:10:01,183 - #21 1
INFO  12:10:01,183 - #40 ;
INFO  12:10:01,183 - #20 bt
INFO  12:10:01,183 - #37 =
INFO  12:10:01,183 - #23 true
INFO  12:10:01,183 - #40 ;
INFO  12:10:01,183 - #8 if
INFO  12:10:01,183 - #43 (
INFO  12:10:01,183 - #23 false
INFO  12:10:01,183 - #36 ||
INFO  12:10:01,183 - #20 bt
INFO  12:10:01,183 - #44 )
INFO  12:10:01,183 - #20 x
INFO  12:10:01,183 - #37 =
INFO  12:10:01,183 - #21 3
INFO  12:10:01,183 - #40 ;
INFO  12:10:01,183 - #13 print
INFO  12:10:01,183 - #43 (
INFO  12:10:01,183 - #20 x
INFO  12:10:01,183 - #44 )
INFO  12:10:01,183 - #40 ;
INFO  12:10:01,183 - #48 }
INFO  12:10:01,183 - #48 }
INFO  12:10:01,183 - 

================SINTAKSNO STABLO====================


INFO  12:10:01,183 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     y
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondOr(
                    CondSingle(
                      CondTermSingle(
                        CondFactSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 false
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactSingle]
                      ) [CondTermSingle]
                    ) [CondSingle]
                    CondTermSingle(
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 bt
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermSingle]
                  ) [CondOr]
                ) [IfCond]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             3
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  12:10:01,183 - 

================SEMANTICKA OBRADA====================


INFO  12:10:01,199 - Deklarisana promenljiva 'x' na liniji 8
INFO  12:10:01,199 - Deklarisana promenljiva 'y' na liniji 8
INFO  12:10:01,199 - Deklarisana promenljiva 'bt' na liniji 9
INFO  12:10:01,199 - Deklarisan niz 'niz' na liniji 10
INFO  12:10:01,199 - ===================================
INFO  12:10:01,199 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 12:10:01,215 - ORD 0
ERROR 12:10:01,215 - ORD 0
INFO  12:10:01,215 - Parsiranje uspesno zavrseno!
INFO  12:11:59,159 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:11:59,206 - #2 program
INFO  12:11:59,206 - #20 test301
INFO  12:11:59,206 - #47 {
INFO  12:11:59,206 - #16 void
INFO  12:11:59,206 - #20 main
INFO  12:11:59,206 - #43 (
INFO  12:11:59,206 - #44 )
INFO  12:11:59,206 - #20 int
INFO  12:11:59,206 - #20 x
INFO  12:11:59,206 - #41 ,
INFO  12:11:59,206 - #20 y
INFO  12:11:59,206 - #40 ;
INFO  12:11:59,206 - #20 bool
INFO  12:11:59,206 - #20 bt
INFO  12:11:59,206 - #40 ;
INFO  12:11:59,206 - #20 int
INFO  12:11:59,206 - #20 niz
INFO  12:11:59,206 - #45 [
INFO  12:11:59,206 - #46 ]
INFO  12:11:59,206 - #40 ;
INFO  12:11:59,206 - #47 {
INFO  12:11:59,206 - #20 x
INFO  12:11:59,206 - #37 =
INFO  12:11:59,206 - #21 1
INFO  12:11:59,206 - #40 ;
INFO  12:11:59,206 - #20 y
INFO  12:11:59,206 - #37 =
INFO  12:11:59,206 - #21 1
INFO  12:11:59,206 - #40 ;
INFO  12:11:59,206 - #20 bt
INFO  12:11:59,206 - #37 =
INFO  12:11:59,206 - #23 true
INFO  12:11:59,206 - #40 ;
INFO  12:11:59,206 - #8 if
INFO  12:11:59,206 - #43 (
INFO  12:11:59,206 - #23 false
INFO  12:11:59,206 - #35 &&
INFO  12:11:59,206 - #23 true
INFO  12:11:59,206 - #36 ||
INFO  12:11:59,206 - #23 true
INFO  12:11:59,206 - #44 )
INFO  12:11:59,206 - #20 x
INFO  12:11:59,206 - #37 =
INFO  12:11:59,206 - #21 4
INFO  12:11:59,206 - #40 ;
INFO  12:11:59,206 - #13 print
INFO  12:11:59,206 - #43 (
INFO  12:11:59,206 - #20 x
INFO  12:11:59,206 - #44 )
INFO  12:11:59,206 - #40 ;
INFO  12:11:59,206 - #48 }
INFO  12:11:59,206 - #48 }
INFO  12:11:59,206 - 

================SINTAKSNO STABLO====================


INFO  12:11:59,206 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     y
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondOr(
                    CondSingle(
                      CondTermAnd(
                        CondTermSingle(
                          CondFactSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   false
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactSingle]
                        ) [CondTermSingle]
                        CondFactSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 true
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactSingle]
                      ) [CondTermAnd]
                    ) [CondSingle]
                    CondTermSingle(
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorBoolConst(
                               true
                              ) [FactorBoolConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermSingle]
                  ) [CondOr]
                ) [IfCond]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             4
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  12:11:59,206 - 

================SEMANTICKA OBRADA====================


INFO  12:11:59,221 - Deklarisana promenljiva 'x' na liniji 8
INFO  12:11:59,221 - Deklarisana promenljiva 'y' na liniji 8
INFO  12:11:59,221 - Deklarisana promenljiva 'bt' na liniji 9
INFO  12:11:59,221 - Deklarisan niz 'niz' na liniji 10
INFO  12:11:59,221 - ===================================
INFO  12:11:59,221 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 12:11:59,237 - ORD 0
ERROR 12:11:59,237 - ORD 1
ERROR 12:11:59,237 - ORD 0
INFO  12:11:59,237 - Parsiranje uspesno zavrseno!
INFO  12:16:19,111 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:16:19,174 - #2 program
INFO  12:16:19,174 - #20 test301
INFO  12:16:19,174 - #47 {
INFO  12:16:19,174 - #16 void
INFO  12:16:19,174 - #20 main
INFO  12:16:19,174 - #43 (
INFO  12:16:19,174 - #44 )
INFO  12:16:19,174 - #20 int
INFO  12:16:19,174 - #20 x
INFO  12:16:19,174 - #41 ,
INFO  12:16:19,174 - #20 y
INFO  12:16:19,174 - #40 ;
INFO  12:16:19,174 - #20 bool
INFO  12:16:19,174 - #20 bt
INFO  12:16:19,174 - #40 ;
INFO  12:16:19,174 - #20 int
INFO  12:16:19,174 - #20 niz
INFO  12:16:19,174 - #45 [
INFO  12:16:19,174 - #46 ]
INFO  12:16:19,174 - #40 ;
INFO  12:16:19,174 - #47 {
INFO  12:16:19,174 - #20 x
INFO  12:16:19,174 - #37 =
INFO  12:16:19,174 - #21 1
INFO  12:16:19,174 - #40 ;
INFO  12:16:19,174 - #20 y
INFO  12:16:19,174 - #37 =
INFO  12:16:19,174 - #21 1
INFO  12:16:19,174 - #40 ;
INFO  12:16:19,174 - #20 bt
INFO  12:16:19,174 - #37 =
INFO  12:16:19,174 - #23 true
INFO  12:16:19,174 - #40 ;
INFO  12:16:19,174 - #8 if
INFO  12:16:19,174 - #43 (
INFO  12:16:19,174 - #23 false
INFO  12:16:19,174 - #35 &&
INFO  12:16:19,174 - #23 true
INFO  12:16:19,174 - #36 ||
INFO  12:16:19,174 - #23 true
INFO  12:16:19,174 - #44 )
INFO  12:16:19,174 - #20 x
INFO  12:16:19,174 - #37 =
INFO  12:16:19,174 - #21 4
INFO  12:16:19,174 - #40 ;
INFO  12:16:19,174 - #13 print
INFO  12:16:19,174 - #43 (
INFO  12:16:19,174 - #20 x
INFO  12:16:19,174 - #44 )
INFO  12:16:19,174 - #40 ;
INFO  12:16:19,174 - #48 }
INFO  12:16:19,174 - #48 }
INFO  12:16:19,174 - 

================SINTAKSNO STABLO====================


INFO  12:16:19,189 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     y
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondOr(
                    CondSingle(
                      CondTermAnd(
                        CondTermSingle(
                          CondFactSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   false
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactSingle]
                        ) [CondTermSingle]
                        CondFactSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 true
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactSingle]
                      ) [CondTermAnd]
                    ) [CondSingle]
                    CondTermSingle(
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorBoolConst(
                               true
                              ) [FactorBoolConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermSingle]
                  ) [CondOr]
                ) [IfCond]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             4
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  12:16:19,189 - 

================SEMANTICKA OBRADA====================


INFO  12:16:19,196 - Deklarisana promenljiva 'x' na liniji 8
INFO  12:16:19,196 - Deklarisana promenljiva 'y' na liniji 8
INFO  12:16:19,196 - Deklarisana promenljiva 'bt' na liniji 9
INFO  12:16:19,196 - Deklarisan niz 'niz' na liniji 10
INFO  12:16:19,196 - ===================================
INFO  12:16:19,196 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 12:16:19,211 - ORD 0
ERROR 12:16:19,211 - ORD 1
ERROR 12:16:19,211 - ORD 0
ERROR 12:16:19,211 - startOfLastCondTerm - 1 1
INFO  12:16:19,211 - Parsiranje uspesno zavrseno!
INFO  12:16:39,495 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:16:39,548 - #2 program
INFO  12:16:39,548 - #20 test301
INFO  12:16:39,548 - #47 {
INFO  12:16:39,548 - #16 void
INFO  12:16:39,548 - #20 main
INFO  12:16:39,548 - #43 (
INFO  12:16:39,548 - #44 )
INFO  12:16:39,548 - #20 int
INFO  12:16:39,548 - #20 x
INFO  12:16:39,548 - #41 ,
INFO  12:16:39,548 - #20 y
INFO  12:16:39,548 - #40 ;
INFO  12:16:39,548 - #20 bool
INFO  12:16:39,548 - #20 bt
INFO  12:16:39,548 - #40 ;
INFO  12:16:39,548 - #20 int
INFO  12:16:39,548 - #20 niz
INFO  12:16:39,548 - #45 [
INFO  12:16:39,548 - #46 ]
INFO  12:16:39,548 - #40 ;
INFO  12:16:39,548 - #47 {
INFO  12:16:39,548 - #20 x
INFO  12:16:39,548 - #37 =
INFO  12:16:39,548 - #21 1
INFO  12:16:39,548 - #40 ;
INFO  12:16:39,548 - #20 y
INFO  12:16:39,548 - #37 =
INFO  12:16:39,548 - #21 1
INFO  12:16:39,548 - #40 ;
INFO  12:16:39,548 - #20 bt
INFO  12:16:39,548 - #37 =
INFO  12:16:39,548 - #23 true
INFO  12:16:39,548 - #40 ;
INFO  12:16:39,548 - #8 if
INFO  12:16:39,548 - #43 (
INFO  12:16:39,548 - #23 false
INFO  12:16:39,548 - #35 &&
INFO  12:16:39,548 - #23 true
INFO  12:16:39,548 - #36 ||
INFO  12:16:39,548 - #23 true
INFO  12:16:39,548 - #44 )
INFO  12:16:39,548 - #20 x
INFO  12:16:39,548 - #37 =
INFO  12:16:39,548 - #21 4
INFO  12:16:39,548 - #40 ;
INFO  12:16:39,548 - #13 print
INFO  12:16:39,548 - #43 (
INFO  12:16:39,548 - #20 x
INFO  12:16:39,548 - #44 )
INFO  12:16:39,548 - #40 ;
INFO  12:16:39,548 - #48 }
INFO  12:16:39,548 - #48 }
INFO  12:16:39,548 - 

================SINTAKSNO STABLO====================


INFO  12:16:39,548 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     y
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondOr(
                    CondSingle(
                      CondTermAnd(
                        CondTermSingle(
                          CondFactSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   false
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactSingle]
                        ) [CondTermSingle]
                        CondFactSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 true
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactSingle]
                      ) [CondTermAnd]
                    ) [CondSingle]
                    CondTermSingle(
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorBoolConst(
                               true
                              ) [FactorBoolConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermSingle]
                  ) [CondOr]
                ) [IfCond]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             4
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  12:16:39,548 - 

================SEMANTICKA OBRADA====================


INFO  12:16:39,564 - Deklarisana promenljiva 'x' na liniji 8
INFO  12:16:39,564 - Deklarisana promenljiva 'y' na liniji 8
INFO  12:16:39,564 - Deklarisana promenljiva 'bt' na liniji 9
INFO  12:16:39,564 - Deklarisan niz 'niz' na liniji 10
INFO  12:16:39,564 - ===================================
INFO  12:16:39,564 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 12:16:39,564 - ORD 0
ERROR 12:16:39,564 - ORD 1
ERROR 12:16:39,564 - ORD 0
ERROR 12:16:39,564 - PC 17
INFO  12:16:39,580 - Parsiranje uspesno zavrseno!
INFO  12:17:09,560 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:17:09,629 - #2 program
INFO  12:17:09,629 - #20 test301
INFO  12:17:09,629 - #47 {
INFO  12:17:09,629 - #16 void
INFO  12:17:09,629 - #20 main
INFO  12:17:09,629 - #43 (
INFO  12:17:09,629 - #44 )
INFO  12:17:09,629 - #20 int
INFO  12:17:09,629 - #20 x
INFO  12:17:09,629 - #41 ,
INFO  12:17:09,629 - #20 y
INFO  12:17:09,629 - #40 ;
INFO  12:17:09,629 - #20 bool
INFO  12:17:09,629 - #20 bt
INFO  12:17:09,629 - #40 ;
INFO  12:17:09,629 - #20 int
INFO  12:17:09,629 - #20 niz
INFO  12:17:09,629 - #45 [
INFO  12:17:09,629 - #46 ]
INFO  12:17:09,629 - #40 ;
INFO  12:17:09,629 - #47 {
INFO  12:17:09,629 - #20 x
INFO  12:17:09,629 - #37 =
INFO  12:17:09,629 - #21 1
INFO  12:17:09,629 - #40 ;
INFO  12:17:09,629 - #20 y
INFO  12:17:09,629 - #37 =
INFO  12:17:09,629 - #21 1
INFO  12:17:09,629 - #40 ;
INFO  12:17:09,629 - #20 bt
INFO  12:17:09,629 - #37 =
INFO  12:17:09,629 - #23 true
INFO  12:17:09,629 - #40 ;
INFO  12:17:09,629 - #8 if
INFO  12:17:09,629 - #43 (
INFO  12:17:09,629 - #23 false
INFO  12:17:09,629 - #35 &&
INFO  12:17:09,629 - #23 true
INFO  12:17:09,629 - #36 ||
INFO  12:17:09,629 - #23 true
INFO  12:17:09,629 - #44 )
INFO  12:17:09,629 - #20 x
INFO  12:17:09,629 - #37 =
INFO  12:17:09,629 - #21 4
INFO  12:17:09,629 - #40 ;
INFO  12:17:09,629 - #13 print
INFO  12:17:09,645 - #43 (
INFO  12:17:09,645 - #20 x
INFO  12:17:09,645 - #44 )
INFO  12:17:09,645 - #40 ;
INFO  12:17:09,645 - #48 }
INFO  12:17:09,645 - #48 }
INFO  12:17:09,645 - 

================SINTAKSNO STABLO====================


INFO  12:17:09,645 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     y
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondOr(
                    CondSingle(
                      CondTermAnd(
                        CondTermSingle(
                          CondFactSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   false
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactSingle]
                        ) [CondTermSingle]
                        CondFactSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 true
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactSingle]
                      ) [CondTermAnd]
                    ) [CondSingle]
                    CondTermSingle(
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorBoolConst(
                               true
                              ) [FactorBoolConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermSingle]
                  ) [CondOr]
                ) [IfCond]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             4
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  12:17:09,645 - 

================SEMANTICKA OBRADA====================


INFO  12:17:09,660 - Deklarisana promenljiva 'x' na liniji 8
INFO  12:17:09,660 - Deklarisana promenljiva 'y' na liniji 8
INFO  12:17:09,660 - Deklarisana promenljiva 'bt' na liniji 9
INFO  12:17:09,660 - Deklarisan niz 'niz' na liniji 10
INFO  12:17:09,660 - ===================================
INFO  12:17:09,660 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 12:17:09,676 - ORD 0
ERROR 12:17:09,676 - ORD 1
ERROR 12:17:09,676 - ORD 0
INFO  12:17:09,676 - Parsiranje uspesno zavrseno!
INFO  12:18:18,117 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:18:18,164 - #2 program
INFO  12:18:18,164 - #20 test301
INFO  12:18:18,164 - #47 {
INFO  12:18:18,164 - #16 void
INFO  12:18:18,164 - #20 main
INFO  12:18:18,164 - #43 (
INFO  12:18:18,164 - #44 )
INFO  12:18:18,164 - #20 int
INFO  12:18:18,164 - #20 x
INFO  12:18:18,164 - #41 ,
INFO  12:18:18,164 - #20 y
INFO  12:18:18,164 - #40 ;
INFO  12:18:18,164 - #20 bool
INFO  12:18:18,164 - #20 bt
INFO  12:18:18,164 - #40 ;
INFO  12:18:18,164 - #20 int
INFO  12:18:18,164 - #20 niz
INFO  12:18:18,164 - #45 [
INFO  12:18:18,164 - #46 ]
INFO  12:18:18,164 - #40 ;
INFO  12:18:18,164 - #47 {
INFO  12:18:18,164 - #20 x
INFO  12:18:18,164 - #37 =
INFO  12:18:18,164 - #21 1
INFO  12:18:18,164 - #40 ;
INFO  12:18:18,164 - #20 y
INFO  12:18:18,164 - #37 =
INFO  12:18:18,164 - #21 1
INFO  12:18:18,164 - #40 ;
INFO  12:18:18,164 - #20 bt
INFO  12:18:18,164 - #37 =
INFO  12:18:18,164 - #23 true
INFO  12:18:18,164 - #40 ;
INFO  12:18:18,164 - #8 if
INFO  12:18:18,164 - #43 (
INFO  12:18:18,164 - #23 false
INFO  12:18:18,164 - #35 &&
INFO  12:18:18,164 - #23 true
INFO  12:18:18,164 - #36 ||
INFO  12:18:18,164 - #23 true
INFO  12:18:18,164 - #44 )
INFO  12:18:18,164 - #20 x
INFO  12:18:18,164 - #37 =
INFO  12:18:18,164 - #21 4
INFO  12:18:18,164 - #40 ;
INFO  12:18:18,164 - #13 print
INFO  12:18:18,164 - #43 (
INFO  12:18:18,164 - #20 x
INFO  12:18:18,164 - #44 )
INFO  12:18:18,164 - #40 ;
INFO  12:18:18,164 - #48 }
INFO  12:18:18,164 - #48 }
INFO  12:18:18,164 - 

================SINTAKSNO STABLO====================


INFO  12:18:18,164 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     y
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondOr(
                    CondSingle(
                      CondTermAnd(
                        CondTermSingle(
                          CondFactSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   false
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactSingle]
                        ) [CondTermSingle]
                        CondFactSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 true
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactSingle]
                      ) [CondTermAnd]
                    ) [CondSingle]
                    CondTermSingle(
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorBoolConst(
                               true
                              ) [FactorBoolConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermSingle]
                  ) [CondOr]
                ) [IfCond]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             4
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  12:18:18,164 - 

================SEMANTICKA OBRADA====================


INFO  12:18:18,179 - Deklarisana promenljiva 'x' na liniji 8
INFO  12:18:18,179 - Deklarisana promenljiva 'y' na liniji 8
INFO  12:18:18,179 - Deklarisana promenljiva 'bt' na liniji 9
INFO  12:18:18,179 - Deklarisan niz 'niz' na liniji 10
INFO  12:18:18,195 - ===================================
INFO  12:18:18,195 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 12:18:18,195 - ORD 0
ERROR 12:18:18,201 - ORD 1
ERROR 12:18:18,201 - ORD 0
INFO  12:18:18,201 - Parsiranje uspesno zavrseno!
INFO  12:19:14,002 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:19:14,071 - #2 program
INFO  12:19:14,071 - #20 test301
INFO  12:19:14,071 - #47 {
INFO  12:19:14,087 - #16 void
INFO  12:19:14,087 - #20 main
INFO  12:19:14,087 - #43 (
INFO  12:19:14,087 - #44 )
INFO  12:19:14,087 - #20 int
INFO  12:19:14,087 - #20 x
INFO  12:19:14,087 - #41 ,
INFO  12:19:14,087 - #20 y
INFO  12:19:14,087 - #40 ;
INFO  12:19:14,087 - #20 bool
INFO  12:19:14,087 - #20 bt
INFO  12:19:14,087 - #40 ;
INFO  12:19:14,087 - #20 int
INFO  12:19:14,087 - #20 niz
INFO  12:19:14,087 - #45 [
INFO  12:19:14,087 - #46 ]
INFO  12:19:14,087 - #40 ;
INFO  12:19:14,087 - #47 {
INFO  12:19:14,087 - #20 x
INFO  12:19:14,087 - #37 =
INFO  12:19:14,087 - #21 1
INFO  12:19:14,087 - #40 ;
INFO  12:19:14,087 - #20 y
INFO  12:19:14,087 - #37 =
INFO  12:19:14,087 - #21 1
INFO  12:19:14,087 - #40 ;
INFO  12:19:14,087 - #20 bt
INFO  12:19:14,087 - #37 =
INFO  12:19:14,087 - #23 true
INFO  12:19:14,087 - #40 ;
INFO  12:19:14,087 - #8 if
INFO  12:19:14,087 - #43 (
INFO  12:19:14,087 - #23 false
INFO  12:19:14,087 - #35 &&
INFO  12:19:14,087 - #23 true
INFO  12:19:14,087 - #35 &&
INFO  12:19:14,087 - #23 false
INFO  12:19:14,087 - #36 ||
INFO  12:19:14,087 - #23 true
INFO  12:19:14,087 - #36 ||
INFO  12:19:14,087 - #23 false
INFO  12:19:14,087 - #44 )
INFO  12:19:14,087 - #20 x
INFO  12:19:14,087 - #37 =
INFO  12:19:14,087 - #21 4
INFO  12:19:14,087 - #40 ;
INFO  12:19:14,087 - #13 print
INFO  12:19:14,087 - #43 (
INFO  12:19:14,087 - #20 x
INFO  12:19:14,087 - #44 )
INFO  12:19:14,087 - #40 ;
INFO  12:19:14,087 - #48 }
INFO  12:19:14,087 - #48 }
INFO  12:19:14,087 - 

================SINTAKSNO STABLO====================


INFO  12:19:14,087 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     y
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondOr(
                    CondOr(
                      CondSingle(
                        CondTermAnd(
                          CondTermAnd(
                            CondTermSingle(
                              CondFactSingle(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorBoolConst(
                                       false
                                      ) [FactorBoolConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [CondFactSingle]
                            ) [CondTermSingle]
                            CondFactSingle(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorBoolConst(
                                     true
                                    ) [FactorBoolConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [CondFactSingle]
                          ) [CondTermAnd]
                          CondFactSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   false
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactSingle]
                        ) [CondTermAnd]
                      ) [CondSingle]
                      CondTermSingle(
                        CondFactSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 true
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactSingle]
                      ) [CondTermSingle]
                    ) [CondOr]
                    CondTermSingle(
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorBoolConst(
                               false
                              ) [FactorBoolConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermSingle]
                  ) [CondOr]
                ) [IfCond]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             4
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  12:19:14,103 - 

================SEMANTICKA OBRADA====================


INFO  12:19:14,118 - Deklarisana promenljiva 'x' na liniji 8
INFO  12:19:14,118 - Deklarisana promenljiva 'y' na liniji 8
INFO  12:19:14,118 - Deklarisana promenljiva 'bt' na liniji 9
INFO  12:19:14,118 - Deklarisan niz 'niz' na liniji 10
INFO  12:19:14,118 - ===================================
INFO  12:19:14,118 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 12:19:14,118 - ORD 0
ERROR 12:19:14,118 - ORD 1
ERROR 12:19:14,118 - ORD 2
ERROR 12:19:14,118 - ORD 0
ERROR 12:19:14,118 - ORD 0
INFO  12:19:14,118 - Parsiranje uspesno zavrseno!
INFO  12:20:40,338 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:20:40,385 - #2 program
INFO  12:20:40,385 - #20 test301
INFO  12:20:40,385 - #47 {
INFO  12:20:40,385 - #16 void
INFO  12:20:40,385 - #20 main
INFO  12:20:40,385 - #43 (
INFO  12:20:40,385 - #44 )
INFO  12:20:40,385 - #20 int
INFO  12:20:40,385 - #20 x
INFO  12:20:40,385 - #41 ,
INFO  12:20:40,385 - #20 y
INFO  12:20:40,385 - #40 ;
INFO  12:20:40,385 - #20 bool
INFO  12:20:40,385 - #20 bt
INFO  12:20:40,385 - #40 ;
INFO  12:20:40,385 - #20 int
INFO  12:20:40,385 - #20 niz
INFO  12:20:40,385 - #45 [
INFO  12:20:40,385 - #46 ]
INFO  12:20:40,385 - #40 ;
INFO  12:20:40,385 - #47 {
INFO  12:20:40,385 - #20 x
INFO  12:20:40,385 - #37 =
INFO  12:20:40,401 - #21 1
INFO  12:20:40,401 - #40 ;
INFO  12:20:40,401 - #20 y
INFO  12:20:40,401 - #37 =
INFO  12:20:40,401 - #21 1
INFO  12:20:40,401 - #40 ;
INFO  12:20:40,401 - #20 bt
INFO  12:20:40,401 - #37 =
INFO  12:20:40,401 - #23 true
INFO  12:20:40,401 - #40 ;
INFO  12:20:40,401 - #8 if
INFO  12:20:40,401 - #43 (
INFO  12:20:40,401 - #20 x
INFO  12:20:40,401 - #30 !=
INFO  12:20:40,401 - #21 0
INFO  12:20:40,407 - #35 &&
INFO  12:20:40,407 - #20 y
INFO  12:20:40,407 - #31 >
INFO  12:20:40,407 - #21 2
INFO  12:20:40,407 - #36 ||
INFO  12:20:40,407 - #20 x
INFO  12:20:40,407 - #29 ==
INFO  12:20:40,407 - #21 1
INFO  12:20:40,407 - #44 )
INFO  12:20:40,407 - #20 x
INFO  12:20:40,407 - #37 =
INFO  12:20:40,407 - #21 4
INFO  12:20:40,407 - #40 ;
INFO  12:20:40,407 - #13 print
INFO  12:20:40,407 - #43 (
INFO  12:20:40,407 - #20 x
INFO  12:20:40,407 - #44 )
INFO  12:20:40,407 - #40 ;
INFO  12:20:40,407 - #48 }
INFO  12:20:40,407 - #48 }
INFO  12:20:40,407 - 

================SINTAKSNO STABLO====================


INFO  12:20:40,407 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     y
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondOr(
                    CondSingle(
                      CondTermAnd(
                        CondTermSingle(
                          CondFactRelop(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     x
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                            RelopNE(
                            ) [RelopNE]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   0
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactRelop]
                        ) [CondTermSingle]
                        CondFactRelop(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   y
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                          RelopGT(
                          ) [RelopGT]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 2
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactRelop]
                      ) [CondTermAnd]
                    ) [CondSingle]
                    CondTermSingle(
                      CondFactRelop(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 x
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                        RelopEQ(
                        ) [RelopEQ]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactRelop]
                    ) [CondTermSingle]
                  ) [CondOr]
                ) [IfCond]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             4
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  12:20:40,407 - 

================SEMANTICKA OBRADA====================


INFO  12:20:40,423 - Deklarisana promenljiva 'x' na liniji 8
INFO  12:20:40,423 - Deklarisana promenljiva 'y' na liniji 8
INFO  12:20:40,423 - Deklarisana promenljiva 'bt' na liniji 9
INFO  12:20:40,423 - Deklarisan niz 'niz' na liniji 10
INFO  12:20:40,423 - ===================================
INFO  12:20:40,423 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 12:20:40,423 - ORD 0
ERROR 12:20:40,423 - ORD 1
ERROR 12:20:40,423 - ORD 0
INFO  12:20:40,439 - Parsiranje uspesno zavrseno!
INFO  12:22:32,723 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:22:32,759 - #2 program
INFO  12:22:32,759 - #20 test301
INFO  12:22:32,759 - #47 {
INFO  12:22:32,759 - #16 void
INFO  12:22:32,759 - #20 main
INFO  12:22:32,759 - #43 (
INFO  12:22:32,759 - #44 )
INFO  12:22:32,759 - #20 int
INFO  12:22:32,759 - #20 x
INFO  12:22:32,759 - #41 ,
INFO  12:22:32,759 - #20 y
INFO  12:22:32,759 - #40 ;
INFO  12:22:32,759 - #20 bool
INFO  12:22:32,759 - #20 bt
INFO  12:22:32,759 - #40 ;
INFO  12:22:32,759 - #20 int
INFO  12:22:32,759 - #20 niz
INFO  12:22:32,759 - #45 [
INFO  12:22:32,759 - #46 ]
INFO  12:22:32,759 - #40 ;
INFO  12:22:32,759 - #47 {
INFO  12:22:32,759 - #20 x
INFO  12:22:32,759 - #37 =
INFO  12:22:32,774 - #21 1
INFO  12:22:32,774 - #40 ;
INFO  12:22:32,774 - #20 y
INFO  12:22:32,774 - #37 =
INFO  12:22:32,774 - #21 1
INFO  12:22:32,774 - #40 ;
INFO  12:22:32,774 - #20 bt
INFO  12:22:32,774 - #37 =
INFO  12:22:32,774 - #23 true
INFO  12:22:32,774 - #40 ;
INFO  12:22:32,774 - #8 if
INFO  12:22:32,774 - #43 (
INFO  12:22:32,774 - #20 x
INFO  12:22:32,774 - #30 !=
INFO  12:22:32,774 - #21 0
INFO  12:22:32,774 - #35 &&
INFO  12:22:32,774 - #20 y
INFO  12:22:32,774 - #31 >
INFO  12:22:32,774 - #21 2
INFO  12:22:32,774 - #36 ||
INFO  12:22:32,774 - #20 x
INFO  12:22:32,774 - #29 ==
INFO  12:22:32,774 - #21 1
INFO  12:22:32,774 - #44 )
INFO  12:22:32,774 - #20 x
INFO  12:22:32,774 - #37 =
INFO  12:22:32,774 - #21 4
INFO  12:22:32,774 - #40 ;
INFO  12:22:32,774 - #13 print
INFO  12:22:32,774 - #43 (
INFO  12:22:32,774 - #20 x
INFO  12:22:32,774 - #44 )
INFO  12:22:32,774 - #40 ;
INFO  12:22:32,774 - #48 }
INFO  12:22:32,774 - #48 }
INFO  12:22:32,774 - 

================SINTAKSNO STABLO====================


INFO  12:22:32,774 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     y
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIf(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondOr(
                    CondSingle(
                      CondTermAnd(
                        CondTermSingle(
                          CondFactRelop(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     x
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                            RelopNE(
                            ) [RelopNE]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   0
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactRelop]
                        ) [CondTermSingle]
                        CondFactRelop(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   y
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                          RelopGT(
                          ) [RelopGT]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 2
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactRelop]
                      ) [CondTermAnd]
                    ) [CondSingle]
                    CondTermSingle(
                      CondFactRelop(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 x
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                        RelopEQ(
                        ) [RelopEQ]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactRelop]
                    ) [CondTermSingle]
                  ) [CondOr]
                ) [IfCond]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             4
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
            ) [StmtIf]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  12:22:32,774 - 

================SEMANTICKA OBRADA====================


INFO  12:22:32,790 - Deklarisana promenljiva 'x' na liniji 8
INFO  12:22:32,790 - Deklarisana promenljiva 'y' na liniji 8
INFO  12:22:32,790 - Deklarisana promenljiva 'bt' na liniji 9
INFO  12:22:32,790 - Deklarisan niz 'niz' na liniji 10
INFO  12:22:32,790 - ===================================
INFO  12:22:32,790 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  12:22:32,805 - Parsiranje uspesno zavrseno!
INFO  12:29:06,524 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:29:06,617 - #2 program
INFO  12:29:06,617 - #20 test301
INFO  12:29:06,617 - #47 {
INFO  12:29:06,617 - #16 void
INFO  12:29:06,617 - #20 main
INFO  12:29:06,617 - #43 (
INFO  12:29:06,617 - #44 )
INFO  12:29:06,617 - #20 int
INFO  12:29:06,617 - #20 x
INFO  12:29:06,625 - #41 ,
INFO  12:29:06,625 - #20 y
INFO  12:29:06,625 - #40 ;
INFO  12:29:06,625 - #20 bool
INFO  12:29:06,625 - #20 bt
INFO  12:29:06,625 - #40 ;
INFO  12:29:06,625 - #20 int
INFO  12:29:06,627 - #20 niz
INFO  12:29:06,627 - #45 [
INFO  12:29:06,627 - #46 ]
INFO  12:29:06,627 - #40 ;
INFO  12:29:06,627 - #47 {
INFO  12:29:06,627 - #20 x
INFO  12:29:06,627 - #37 =
INFO  12:29:06,627 - #21 1
INFO  12:29:06,627 - #40 ;
INFO  12:29:06,627 - #20 y
INFO  12:29:06,627 - #37 =
INFO  12:29:06,627 - #21 1
INFO  12:29:06,627 - #40 ;
INFO  12:29:06,627 - #20 bt
INFO  12:29:06,627 - #37 =
INFO  12:29:06,627 - #23 true
INFO  12:29:06,627 - #40 ;
INFO  12:29:06,627 - #8 if
INFO  12:29:06,627 - #43 (
INFO  12:29:06,627 - #20 x
INFO  12:29:06,627 - #30 !=
INFO  12:29:06,627 - #21 0
INFO  12:29:06,627 - #35 &&
INFO  12:29:06,627 - #20 y
INFO  12:29:06,627 - #31 >
INFO  12:29:06,627 - #21 2
INFO  12:29:06,627 - #36 ||
INFO  12:29:06,627 - #20 x
INFO  12:29:06,627 - #33 <
INFO  12:29:06,627 - #21 1
INFO  12:29:06,627 - #44 )
INFO  12:29:06,635 - #20 x
INFO  12:29:06,635 - #37 =
INFO  12:29:06,635 - #21 4
INFO  12:29:06,635 - #40 ;
INFO  12:29:06,635 - #6 else
INFO  12:29:06,635 - #8 if
INFO  12:29:06,635 - #43 (
INFO  12:29:06,635 - #20 x
INFO  12:29:06,635 - #29 ==
INFO  12:29:06,635 - #21 3
INFO  12:29:06,637 - #44 )
INFO  12:29:06,637 - #20 x
INFO  12:29:06,637 - #37 =
INFO  12:29:06,637 - #21 5
INFO  12:29:06,637 - #40 ;
INFO  12:29:06,637 - #6 else
INFO  12:29:06,637 - #20 x
INFO  12:29:06,637 - #37 =
INFO  12:29:06,637 - #21 6
INFO  12:29:06,637 - #40 ;
INFO  12:29:06,637 - #13 print
INFO  12:29:06,637 - #43 (
INFO  12:29:06,637 - #20 x
INFO  12:29:06,637 - #44 )
INFO  12:29:06,637 - #40 ;
INFO  12:29:06,637 - #48 }
INFO  12:29:06,637 - #48 }
INFO  12:29:06,637 - 

================SINTAKSNO STABLO====================


INFO  12:29:06,637 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     y
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtIfElse(
              IfKeyword(
              ) [IfKeyword]
              StmtIfBody(
                IfCond(
                  CondOr(
                    CondSingle(
                      CondTermAnd(
                        CondTermSingle(
                          CondFactRelop(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     x
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                            RelopNE(
                            ) [RelopNE]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   0
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactRelop]
                        ) [CondTermSingle]
                        CondFactRelop(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   y
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                          RelopGT(
                          ) [RelopGT]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 2
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactRelop]
                      ) [CondTermAnd]
                    ) [CondSingle]
                    CondTermSingle(
                      CondFactRelop(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 x
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                        RelopLT(
                        ) [RelopLT]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactRelop]
                    ) [CondTermSingle]
                  ) [CondOr]
                ) [IfCond]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             4
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfBody]
              StmtIfElse(
                IfKeyword(
                ) [IfKeyword]
                StmtIfBody(
                  IfCond(
                    CondSingle(
                      CondTermSingle(
                        CondFactRelop(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   x
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                          RelopEQ(
                          ) [RelopEQ]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 3
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactRelop]
                      ) [CondTermSingle]
                    ) [CondSingle]
                  ) [IfCond]
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               5
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StmtIfBody]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             6
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StmtIfElse]
            ) [StmtIfElse]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  12:29:06,637 - 

================SEMANTICKA OBRADA====================


INFO  12:29:06,657 - Deklarisana promenljiva 'x' na liniji 8
INFO  12:29:06,657 - Deklarisana promenljiva 'y' na liniji 8
INFO  12:29:06,657 - Deklarisana promenljiva 'bt' na liniji 9
INFO  12:29:06,657 - Deklarisan niz 'niz' na liniji 10
INFO  12:29:06,657 - ===================================
INFO  12:29:06,657 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  12:29:06,667 - Parsiranje uspesno zavrseno!
INFO  13:14:07,212 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  13:14:07,259 - #2 program
INFO  13:14:07,259 - #20 test301
INFO  13:14:07,259 - #47 {
INFO  13:14:07,259 - #16 void
INFO  13:14:07,259 - #20 main
INFO  13:14:07,259 - #43 (
INFO  13:14:07,259 - #44 )
INFO  13:14:07,259 - #20 int
INFO  13:14:07,259 - #20 x
INFO  13:14:07,259 - #41 ,
INFO  13:14:07,259 - #20 y
INFO  13:14:07,259 - #40 ;
INFO  13:14:07,259 - #20 bool
INFO  13:14:07,259 - #20 bt
INFO  13:14:07,259 - #40 ;
INFO  13:14:07,259 - #20 int
INFO  13:14:07,259 - #20 niz
INFO  13:14:07,259 - #45 [
INFO  13:14:07,259 - #46 ]
INFO  13:14:07,259 - #40 ;
INFO  13:14:07,259 - #47 {
INFO  13:14:07,259 - #20 x
INFO  13:14:07,259 - #37 =
INFO  13:14:07,259 - #21 1
INFO  13:14:07,259 - #40 ;
INFO  13:14:07,259 - #10 do
INFO  13:14:07,259 - #47 {
INFO  13:14:07,259 - #20 x
INFO  13:14:07,259 - #38 ++
INFO  13:14:07,259 - #40 ;
INFO  13:14:07,259 - #11 while
ERROR 13:14:07,259 - 
Sintaksna greska na liniji 16, koloni 2 za simbol "while"!
INFO  13:14:07,259 - #43 (
INFO  13:14:07,259 - #20 x
INFO  13:14:07,259 - #33 <
INFO  13:14:07,274 - #21 3
INFO  13:14:07,274 - #44 )
INFO  13:14:07,274 - #40 ;
INFO  13:14:07,274 - #13 print
INFO  13:14:07,274 - #43 (
INFO  13:14:07,274 - #20 x
INFO  13:14:07,274 - #44 )
INFO  13:14:07,274 - #40 ;
INFO  13:14:07,274 - #48 }
INFO  13:14:07,274 - #48 }
ERROR 13:14:07,274 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 32, koloni 1!
INFO  13:14:25,625 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  13:14:25,672 - #2 program
INFO  13:14:25,672 - #20 test301
INFO  13:14:25,672 - #47 {
INFO  13:14:25,672 - #16 void
INFO  13:14:25,672 - #20 main
INFO  13:14:25,672 - #43 (
INFO  13:14:25,672 - #44 )
INFO  13:14:25,672 - #20 int
INFO  13:14:25,672 - #20 x
INFO  13:14:25,672 - #41 ,
INFO  13:14:25,672 - #20 y
INFO  13:14:25,672 - #40 ;
INFO  13:14:25,672 - #20 bool
INFO  13:14:25,678 - #20 bt
INFO  13:14:25,678 - #40 ;
INFO  13:14:25,678 - #20 int
INFO  13:14:25,678 - #20 niz
INFO  13:14:25,678 - #45 [
INFO  13:14:25,678 - #46 ]
INFO  13:14:25,678 - #40 ;
INFO  13:14:25,678 - #47 {
INFO  13:14:25,678 - #20 x
INFO  13:14:25,678 - #37 =
INFO  13:14:25,678 - #21 1
INFO  13:14:25,678 - #40 ;
INFO  13:14:25,678 - #10 do
INFO  13:14:25,678 - #47 {
INFO  13:14:25,678 - #20 x
INFO  13:14:25,678 - #38 ++
INFO  13:14:25,678 - #40 ;
INFO  13:14:25,678 - #48 }
INFO  13:14:25,678 - #11 while
INFO  13:14:25,678 - #43 (
INFO  13:14:25,678 - #20 x
INFO  13:14:25,678 - #33 <
INFO  13:14:25,678 - #21 3
INFO  13:14:25,678 - #44 )
INFO  13:14:25,678 - #40 ;
INFO  13:14:25,678 - #13 print
INFO  13:14:25,678 - #43 (
INFO  13:14:25,678 - #20 x
INFO  13:14:25,678 - #44 )
INFO  13:14:25,678 - #40 ;
INFO  13:14:25,678 - #48 }
INFO  13:14:25,678 - #48 }
INFO  13:14:25,678 - 

================SINTAKSNO STABLO====================


INFO  13:14:25,678 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   x
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDoWhile(
              DoKeyword(
              ) [DoKeyword]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
              CondSingle(
                CondTermSingle(
                  CondFactRelop(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             x
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                    RelopLT(
                    ) [RelopLT]
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           3
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [CondFactRelop]
                ) [CondTermSingle]
              ) [CondSingle]
            ) [StmtDoWhile]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  13:14:25,678 - 

================SEMANTICKA OBRADA====================


INFO  13:14:25,694 - Deklarisana promenljiva 'x' na liniji 8
INFO  13:14:25,694 - Deklarisana promenljiva 'y' na liniji 8
INFO  13:14:25,694 - Deklarisana promenljiva 'bt' na liniji 9
INFO  13:14:25,694 - Deklarisan niz 'niz' na liniji 10
INFO  13:14:25,694 - ===================================
INFO  13:14:25,694 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  13:14:25,694 - Parsiranje uspesno zavrseno!
INFO  13:15:25,152 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  13:15:25,221 - #2 program
INFO  13:15:25,221 - #20 test301
INFO  13:15:25,221 - #47 {
INFO  13:15:25,221 - #16 void
INFO  13:15:25,221 - #20 main
INFO  13:15:25,221 - #43 (
INFO  13:15:25,221 - #44 )
INFO  13:15:25,221 - #20 int
INFO  13:15:25,221 - #20 x
INFO  13:15:25,221 - #41 ,
INFO  13:15:25,221 - #20 y
INFO  13:15:25,221 - #40 ;
INFO  13:15:25,221 - #20 bool
INFO  13:15:25,221 - #20 bt
INFO  13:15:25,221 - #40 ;
INFO  13:15:25,221 - #20 int
INFO  13:15:25,221 - #20 niz
INFO  13:15:25,221 - #45 [
INFO  13:15:25,221 - #46 ]
INFO  13:15:25,221 - #40 ;
INFO  13:15:25,221 - #47 {
INFO  13:15:25,221 - #20 x
INFO  13:15:25,221 - #37 =
INFO  13:15:25,221 - #21 1
INFO  13:15:25,221 - #40 ;
INFO  13:15:25,236 - #20 bt
INFO  13:15:25,236 - #37 =
INFO  13:15:25,236 - #23 true
INFO  13:15:25,236 - #40 ;
INFO  13:15:25,236 - #10 do
INFO  13:15:25,236 - #47 {
INFO  13:15:25,236 - #20 x
INFO  13:15:25,236 - #38 ++
INFO  13:15:25,236 - #40 ;
INFO  13:15:25,236 - #48 }
INFO  13:15:25,236 - #11 while
INFO  13:15:25,236 - #43 (
INFO  13:15:25,236 - #20 x
INFO  13:15:25,236 - #33 <
INFO  13:15:25,236 - #21 3
INFO  13:15:25,236 - #35 &&
INFO  13:15:25,236 - #20 bt
INFO  13:15:25,236 - #44 )
INFO  13:15:25,236 - #40 ;
INFO  13:15:25,236 - #13 print
INFO  13:15:25,236 - #43 (
INFO  13:15:25,236 - #20 x
INFO  13:15:25,236 - #44 )
INFO  13:15:25,236 - #40 ;
INFO  13:15:25,236 - #48 }
INFO  13:15:25,236 - #48 }
INFO  13:15:25,236 - 

================SINTAKSNO STABLO====================


INFO  13:15:25,236 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDoWhile(
              DoKeyword(
              ) [DoKeyword]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
              CondSingle(
                CondTermAnd(
                  CondTermSingle(
                    CondFactRelop(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               x
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                      RelopLT(
                      ) [RelopLT]
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             3
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactRelop]
                  ) [CondTermSingle]
                  CondFactSingle(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             bt
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [CondFactSingle]
                ) [CondTermAnd]
              ) [CondSingle]
            ) [StmtDoWhile]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  13:15:25,236 - 

================SEMANTICKA OBRADA====================


INFO  13:15:25,252 - Deklarisana promenljiva 'x' na liniji 8
INFO  13:15:25,252 - Deklarisana promenljiva 'y' na liniji 8
INFO  13:15:25,252 - Deklarisana promenljiva 'bt' na liniji 9
INFO  13:15:25,252 - Deklarisan niz 'niz' na liniji 10
INFO  13:15:25,267 - ===================================
INFO  13:15:25,267 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  13:16:11,693 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  13:16:11,746 - #2 program
INFO  13:16:11,746 - #20 test301
INFO  13:16:11,746 - #47 {
INFO  13:16:11,746 - #16 void
INFO  13:16:11,746 - #20 main
INFO  13:16:11,746 - #43 (
INFO  13:16:11,746 - #44 )
INFO  13:16:11,746 - #20 int
INFO  13:16:11,746 - #20 x
INFO  13:16:11,746 - #41 ,
INFO  13:16:11,746 - #20 y
INFO  13:16:11,746 - #40 ;
INFO  13:16:11,746 - #20 bool
INFO  13:16:11,746 - #20 bt
INFO  13:16:11,746 - #40 ;
INFO  13:16:11,746 - #20 int
INFO  13:16:11,746 - #20 niz
INFO  13:16:11,746 - #45 [
INFO  13:16:11,746 - #46 ]
INFO  13:16:11,746 - #40 ;
INFO  13:16:11,746 - #47 {
INFO  13:16:11,746 - #20 x
INFO  13:16:11,746 - #37 =
INFO  13:16:11,746 - #21 1
INFO  13:16:11,746 - #40 ;
INFO  13:16:11,746 - #20 bt
INFO  13:16:11,746 - #37 =
INFO  13:16:11,746 - #23 true
INFO  13:16:11,746 - #40 ;
INFO  13:16:11,746 - #10 do
INFO  13:16:11,746 - #47 {
INFO  13:16:11,746 - #20 x
INFO  13:16:11,746 - #38 ++
INFO  13:16:11,746 - #40 ;
INFO  13:16:11,746 - #48 }
INFO  13:16:11,746 - #11 while
INFO  13:16:11,746 - #43 (
INFO  13:16:11,746 - #20 x
INFO  13:16:11,746 - #33 <
INFO  13:16:11,746 - #21 3
INFO  13:16:11,746 - #35 &&
INFO  13:16:11,746 - #20 bt
INFO  13:16:11,746 - #44 )
INFO  13:16:11,746 - #40 ;
INFO  13:16:11,746 - #13 print
INFO  13:16:11,746 - #43 (
INFO  13:16:11,746 - #20 x
INFO  13:16:11,746 - #44 )
INFO  13:16:11,746 - #40 ;
INFO  13:16:11,746 - #48 }
INFO  13:16:11,746 - #48 }
INFO  13:16:11,746 - 

================SINTAKSNO STABLO====================


INFO  13:16:11,746 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDoWhile(
              DoKeyword(
              ) [DoKeyword]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
              CondSingle(
                CondTermAnd(
                  CondTermSingle(
                    CondFactRelop(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               x
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                      RelopLT(
                      ) [RelopLT]
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             3
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactRelop]
                  ) [CondTermSingle]
                  CondFactSingle(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             bt
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [CondFactSingle]
                ) [CondTermAnd]
              ) [CondSingle]
            ) [StmtDoWhile]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  13:16:11,746 - 

================SEMANTICKA OBRADA====================


INFO  13:16:11,762 - Deklarisana promenljiva 'x' na liniji 8
INFO  13:16:11,762 - Deklarisana promenljiva 'y' na liniji 8
INFO  13:16:11,762 - Deklarisana promenljiva 'bt' na liniji 9
INFO  13:16:11,762 - Deklarisan niz 'niz' na liniji 10
INFO  13:16:11,762 - ===================================
INFO  13:16:11,762 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  13:16:11,762 - Parsiranje uspesno zavrseno!
INFO  13:16:29,793 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  13:16:29,846 - #2 program
INFO  13:16:29,846 - #20 test301
INFO  13:16:29,846 - #47 {
INFO  13:16:29,846 - #16 void
INFO  13:16:29,846 - #20 main
INFO  13:16:29,846 - #43 (
INFO  13:16:29,846 - #44 )
INFO  13:16:29,846 - #20 int
INFO  13:16:29,846 - #20 x
INFO  13:16:29,846 - #41 ,
INFO  13:16:29,846 - #20 y
INFO  13:16:29,846 - #40 ;
INFO  13:16:29,846 - #20 bool
INFO  13:16:29,846 - #20 bt
INFO  13:16:29,846 - #40 ;
INFO  13:16:29,846 - #20 int
INFO  13:16:29,846 - #20 niz
INFO  13:16:29,846 - #45 [
INFO  13:16:29,846 - #46 ]
INFO  13:16:29,846 - #40 ;
INFO  13:16:29,846 - #47 {
INFO  13:16:29,846 - #20 x
INFO  13:16:29,846 - #37 =
INFO  13:16:29,846 - #21 1
INFO  13:16:29,846 - #40 ;
INFO  13:16:29,846 - #20 bt
INFO  13:16:29,846 - #37 =
INFO  13:16:29,846 - #23 true
INFO  13:16:29,846 - #40 ;
INFO  13:16:29,846 - #10 do
INFO  13:16:29,846 - #47 {
INFO  13:16:29,846 - #20 x
INFO  13:16:29,846 - #38 ++
INFO  13:16:29,846 - #40 ;
INFO  13:16:29,846 - #48 }
INFO  13:16:29,846 - #11 while
INFO  13:16:29,846 - #43 (
INFO  13:16:29,846 - #20 x
INFO  13:16:29,846 - #33 <
INFO  13:16:29,846 - #21 3
INFO  13:16:29,846 - #35 &&
INFO  13:16:29,846 - #20 bt
INFO  13:16:29,846 - #44 )
INFO  13:16:29,846 - #40 ;
INFO  13:16:29,846 - #13 print
INFO  13:16:29,846 - #43 (
INFO  13:16:29,846 - #20 x
INFO  13:16:29,846 - #44 )
INFO  13:16:29,846 - #40 ;
INFO  13:16:29,846 - #48 }
INFO  13:16:29,846 - #48 }
INFO  13:16:29,846 - 

================SINTAKSNO STABLO====================


INFO  13:16:29,846 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDoWhile(
              DoKeyword(
              ) [DoKeyword]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
              CondSingle(
                CondTermAnd(
                  CondTermSingle(
                    CondFactRelop(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               x
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                      RelopLT(
                      ) [RelopLT]
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             3
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactRelop]
                  ) [CondTermSingle]
                  CondFactSingle(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             bt
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [CondFactSingle]
                ) [CondTermAnd]
              ) [CondSingle]
            ) [StmtDoWhile]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  13:16:29,846 - 

================SEMANTICKA OBRADA====================


INFO  13:16:29,862 - Deklarisana promenljiva 'x' na liniji 8
INFO  13:16:29,862 - Deklarisana promenljiva 'y' na liniji 8
INFO  13:16:29,862 - Deklarisana promenljiva 'bt' na liniji 9
INFO  13:16:29,862 - Deklarisan niz 'niz' na liniji 10
INFO  13:16:29,862 - ===================================
INFO  13:16:29,862 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  13:16:29,878 - Parsiranje uspesno zavrseno!
INFO  13:20:50,949 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  13:20:50,987 - #2 program
INFO  13:20:50,987 - #20 test301
INFO  13:20:50,987 - #47 {
INFO  13:20:50,987 - #16 void
INFO  13:20:50,987 - #20 main
INFO  13:20:50,987 - #43 (
INFO  13:20:50,987 - #44 )
INFO  13:20:50,987 - #20 int
INFO  13:20:50,987 - #20 x
INFO  13:20:51,003 - #41 ,
INFO  13:20:51,003 - #20 y
INFO  13:20:51,003 - #40 ;
INFO  13:20:51,003 - #20 bool
INFO  13:20:51,003 - #20 bt
INFO  13:20:51,003 - #40 ;
INFO  13:20:51,003 - #20 int
INFO  13:20:51,003 - #20 niz
INFO  13:20:51,003 - #45 [
INFO  13:20:51,003 - #46 ]
INFO  13:20:51,003 - #40 ;
INFO  13:20:51,003 - #47 {
INFO  13:20:51,003 - #20 x
INFO  13:20:51,003 - #37 =
INFO  13:20:51,003 - #21 1
INFO  13:20:51,003 - #40 ;
INFO  13:20:51,003 - #20 bt
INFO  13:20:51,003 - #37 =
INFO  13:20:51,003 - #23 true
INFO  13:20:51,003 - #40 ;
INFO  13:20:51,003 - #10 do
INFO  13:20:51,003 - #47 {
INFO  13:20:51,003 - #20 x
INFO  13:20:51,003 - #38 ++
INFO  13:20:51,003 - #40 ;
INFO  13:20:51,003 - #48 }
INFO  13:20:51,003 - #11 while
INFO  13:20:51,003 - #43 (
INFO  13:20:51,003 - #20 x
INFO  13:20:51,003 - #33 <
INFO  13:20:51,003 - #21 3
INFO  13:20:51,003 - #35 &&
INFO  13:20:51,003 - #20 bt
INFO  13:20:51,003 - #44 )
INFO  13:20:51,003 - #40 ;
INFO  13:20:51,003 - #13 print
INFO  13:20:51,003 - #43 (
INFO  13:20:51,003 - #20 x
INFO  13:20:51,003 - #44 )
INFO  13:20:51,003 - #40 ;
INFO  13:20:51,003 - #48 }
INFO  13:20:51,003 - #48 }
INFO  13:20:51,003 - 

================SINTAKSNO STABLO====================


INFO  13:20:51,003 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDoWhile(
              DoKeyword(
              ) [DoKeyword]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
              CondSingle(
                CondTermAnd(
                  CondTermSingle(
                    CondFactRelop(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               x
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                      RelopLT(
                      ) [RelopLT]
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             3
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactRelop]
                  ) [CondTermSingle]
                  CondFactSingle(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             bt
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [CondFactSingle]
                ) [CondTermAnd]
              ) [CondSingle]
            ) [StmtDoWhile]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  13:20:51,003 - 

================SEMANTICKA OBRADA====================


INFO  13:20:51,018 - Deklarisana promenljiva 'x' na liniji 8
INFO  13:20:51,018 - Deklarisana promenljiva 'y' na liniji 8
INFO  13:20:51,018 - Deklarisana promenljiva 'bt' na liniji 9
INFO  13:20:51,018 - Deklarisan niz 'niz' na liniji 10
INFO  13:20:51,018 - ===================================
INFO  13:20:51,018 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  13:20:51,034 - Parsiranje uspesno zavrseno!
INFO  13:22:10,319 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  13:22:10,388 - #2 program
INFO  13:22:10,388 - #20 test301
INFO  13:22:10,388 - #47 {
INFO  13:22:10,388 - #16 void
INFO  13:22:10,388 - #20 main
INFO  13:22:10,388 - #43 (
INFO  13:22:10,388 - #44 )
INFO  13:22:10,388 - #20 int
INFO  13:22:10,388 - #20 x
INFO  13:22:10,388 - #41 ,
INFO  13:22:10,388 - #20 y
INFO  13:22:10,388 - #40 ;
INFO  13:22:10,388 - #20 bool
INFO  13:22:10,388 - #20 bt
INFO  13:22:10,388 - #40 ;
INFO  13:22:10,388 - #20 int
INFO  13:22:10,388 - #20 niz
INFO  13:22:10,388 - #45 [
INFO  13:22:10,388 - #46 ]
INFO  13:22:10,388 - #40 ;
INFO  13:22:10,388 - #47 {
INFO  13:22:10,388 - #20 x
INFO  13:22:10,388 - #37 =
INFO  13:22:10,388 - #21 1
INFO  13:22:10,388 - #40 ;
INFO  13:22:10,388 - #20 bt
INFO  13:22:10,388 - #37 =
INFO  13:22:10,388 - #23 false
INFO  13:22:10,388 - #40 ;
INFO  13:22:10,388 - #10 do
INFO  13:22:10,388 - #47 {
INFO  13:22:10,388 - #20 x
INFO  13:22:10,388 - #38 ++
INFO  13:22:10,388 - #40 ;
INFO  13:22:10,388 - #48 }
INFO  13:22:10,388 - #11 while
INFO  13:22:10,388 - #43 (
INFO  13:22:10,388 - #20 x
INFO  13:22:10,388 - #33 <
INFO  13:22:10,388 - #21 3
INFO  13:22:10,388 - #36 ||
INFO  13:22:10,388 - #20 bt
INFO  13:22:10,388 - #44 )
INFO  13:22:10,388 - #40 ;
INFO  13:22:10,388 - #13 print
INFO  13:22:10,388 - #43 (
INFO  13:22:10,388 - #20 x
INFO  13:22:10,388 - #44 )
INFO  13:22:10,388 - #40 ;
INFO  13:22:10,388 - #48 }
INFO  13:22:10,388 - #48 }
INFO  13:22:10,388 - 

================SINTAKSNO STABLO====================


INFO  13:22:10,388 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           false
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDoWhile(
              DoKeyword(
              ) [DoKeyword]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
              CondOr(
                CondSingle(
                  CondTermSingle(
                    CondFactRelop(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               x
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                      RelopLT(
                      ) [RelopLT]
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             3
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactRelop]
                  ) [CondTermSingle]
                ) [CondSingle]
                CondTermSingle(
                  CondFactSingle(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             bt
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [CondFactSingle]
                ) [CondTermSingle]
              ) [CondOr]
            ) [StmtDoWhile]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  13:22:10,403 - 

================SEMANTICKA OBRADA====================


INFO  13:22:10,403 - Deklarisana promenljiva 'x' na liniji 8
INFO  13:22:10,403 - Deklarisana promenljiva 'y' na liniji 8
INFO  13:22:10,403 - Deklarisana promenljiva 'bt' na liniji 9
INFO  13:22:10,403 - Deklarisan niz 'niz' na liniji 10
INFO  13:22:10,419 - ===================================
INFO  13:22:10,419 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  14:20:47,159 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  14:20:47,221 - #2 program
INFO  14:20:47,221 - #20 test301
INFO  14:20:47,221 - #47 {
INFO  14:20:47,221 - #16 void
INFO  14:20:47,221 - #20 main
INFO  14:20:47,221 - #43 (
INFO  14:20:47,221 - #44 )
INFO  14:20:47,221 - #20 int
INFO  14:20:47,221 - #20 x
INFO  14:20:47,237 - #41 ,
INFO  14:20:47,237 - #20 y
INFO  14:20:47,237 - #40 ;
INFO  14:20:47,237 - #20 bool
INFO  14:20:47,237 - #20 bt
INFO  14:20:47,237 - #40 ;
INFO  14:20:47,237 - #20 int
INFO  14:20:47,237 - #20 niz
INFO  14:20:47,237 - #45 [
INFO  14:20:47,237 - #46 ]
INFO  14:20:47,237 - #40 ;
INFO  14:20:47,237 - #47 {
INFO  14:20:47,237 - #20 x
INFO  14:20:47,237 - #37 =
INFO  14:20:47,237 - #21 1
INFO  14:20:47,237 - #40 ;
INFO  14:20:47,237 - #20 bt
INFO  14:20:47,237 - #37 =
INFO  14:20:47,237 - #23 false
INFO  14:20:47,237 - #40 ;
INFO  14:20:47,237 - #10 do
INFO  14:20:47,237 - #47 {
INFO  14:20:47,237 - #20 x
INFO  14:20:47,237 - #38 ++
INFO  14:20:47,237 - #40 ;
INFO  14:20:47,237 - #48 }
INFO  14:20:47,237 - #11 while
INFO  14:20:47,237 - #43 (
INFO  14:20:47,237 - #20 x
INFO  14:20:47,237 - #33 <
INFO  14:20:47,237 - #21 3
INFO  14:20:47,243 - #36 ||
INFO  14:20:47,243 - #20 bt
INFO  14:20:47,243 - #44 )
INFO  14:20:47,243 - #40 ;
INFO  14:20:47,243 - #13 print
INFO  14:20:47,243 - #43 (
INFO  14:20:47,243 - #20 x
INFO  14:20:47,243 - #44 )
INFO  14:20:47,243 - #40 ;
INFO  14:20:47,243 - #48 }
INFO  14:20:47,243 - #48 }
INFO  14:20:47,243 - 

================SINTAKSNO STABLO====================


INFO  14:20:47,243 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           false
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDoWhile(
              DoKeyword(
              ) [DoKeyword]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
              CondOr(
                CondSingle(
                  CondTermSingle(
                    CondFactRelop(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               x
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                      RelopLT(
                      ) [RelopLT]
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             3
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactRelop]
                  ) [CondTermSingle]
                ) [CondSingle]
                CondTermSingle(
                  CondFactSingle(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             bt
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [CondFactSingle]
                ) [CondTermSingle]
              ) [CondOr]
            ) [StmtDoWhile]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  14:20:47,243 - 

================SEMANTICKA OBRADA====================


INFO  14:20:47,259 - Deklarisana promenljiva 'x' na liniji 8
INFO  14:20:47,259 - Deklarisana promenljiva 'y' na liniji 8
INFO  14:20:47,259 - Deklarisana promenljiva 'bt' na liniji 9
INFO  14:20:47,259 - Deklarisan niz 'niz' na liniji 10
INFO  14:20:47,259 - ===================================
INFO  14:20:47,259 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  14:20:47,259 - Parsiranje uspesno zavrseno!
INFO  14:22:50,248 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  14:22:50,294 - #2 program
INFO  14:22:50,294 - #20 test301
INFO  14:22:50,294 - #47 {
INFO  14:22:50,294 - #16 void
INFO  14:22:50,294 - #20 main
INFO  14:22:50,294 - #43 (
INFO  14:22:50,294 - #44 )
INFO  14:22:50,294 - #20 int
INFO  14:22:50,294 - #20 x
INFO  14:22:50,294 - #41 ,
INFO  14:22:50,294 - #20 y
INFO  14:22:50,294 - #40 ;
INFO  14:22:50,294 - #20 bool
INFO  14:22:50,294 - #20 bt
INFO  14:22:50,294 - #40 ;
INFO  14:22:50,294 - #20 int
INFO  14:22:50,294 - #20 niz
INFO  14:22:50,294 - #45 [
INFO  14:22:50,294 - #46 ]
INFO  14:22:50,294 - #40 ;
INFO  14:22:50,294 - #47 {
INFO  14:22:50,294 - #20 x
INFO  14:22:50,294 - #37 =
INFO  14:22:50,294 - #21 1
INFO  14:22:50,294 - #40 ;
INFO  14:22:50,294 - #20 bt
INFO  14:22:50,294 - #37 =
INFO  14:22:50,294 - #23 false
INFO  14:22:50,294 - #40 ;
INFO  14:22:50,294 - #10 do
INFO  14:22:50,294 - #47 {
INFO  14:22:50,294 - #20 x
INFO  14:22:50,294 - #38 ++
INFO  14:22:50,294 - #40 ;
INFO  14:22:50,294 - #48 }
INFO  14:22:50,294 - #11 while
INFO  14:22:50,294 - #43 (
INFO  14:22:50,294 - #23 false
INFO  14:22:50,294 - #35 &&
INFO  14:22:50,294 - #23 true
INFO  14:22:50,294 - #35 &&
INFO  14:22:50,294 - #23 false
INFO  14:22:50,294 - #36 ||
INFO  14:22:50,294 - #23 false
INFO  14:22:50,294 - #36 ||
INFO  14:22:50,294 - #23 false
INFO  14:22:50,294 - #35 &&
INFO  14:22:50,294 - #23 true
INFO  14:22:50,294 - #44 )
INFO  14:22:50,294 - #40 ;
INFO  14:22:50,294 - #13 print
INFO  14:22:50,294 - #43 (
INFO  14:22:50,294 - #20 x
INFO  14:22:50,294 - #44 )
INFO  14:22:50,294 - #40 ;
INFO  14:22:50,294 - #48 }
INFO  14:22:50,294 - #48 }
INFO  14:22:50,294 - 

================SINTAKSNO STABLO====================


INFO  14:22:50,294 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           false
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDoWhile(
              DoKeyword(
              ) [DoKeyword]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
              CondOr(
                CondOr(
                  CondSingle(
                    CondTermAnd(
                      CondTermAnd(
                        CondTermSingle(
                          CondFactSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   false
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactSingle]
                        ) [CondTermSingle]
                        CondFactSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 true
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactSingle]
                      ) [CondTermAnd]
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorBoolConst(
                               false
                              ) [FactorBoolConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermAnd]
                  ) [CondSingle]
                  CondTermSingle(
                    CondFactSingle(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorBoolConst(
                             false
                            ) [FactorBoolConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactSingle]
                  ) [CondTermSingle]
                ) [CondOr]
                CondTermAnd(
                  CondTermSingle(
                    CondFactSingle(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorBoolConst(
                             false
                            ) [FactorBoolConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactSingle]
                  ) [CondTermSingle]
                  CondFactSingle(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [CondFactSingle]
                ) [CondTermAnd]
              ) [CondOr]
            ) [StmtDoWhile]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  14:22:50,294 - 

================SEMANTICKA OBRADA====================


INFO  14:22:50,310 - Deklarisana promenljiva 'x' na liniji 8
INFO  14:22:50,310 - Deklarisana promenljiva 'y' na liniji 8
INFO  14:22:50,310 - Deklarisana promenljiva 'bt' na liniji 9
INFO  14:22:50,310 - Deklarisan niz 'niz' na liniji 10
INFO  14:22:50,310 - ===================================
INFO  14:22:50,310 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  14:22:50,310 - Parsiranje uspesno zavrseno!
INFO  14:24:39,572 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  14:24:39,626 - #2 program
INFO  14:24:39,626 - #20 test301
INFO  14:24:39,626 - #47 {
INFO  14:24:39,626 - #16 void
INFO  14:24:39,626 - #20 main
INFO  14:24:39,626 - #43 (
INFO  14:24:39,626 - #44 )
INFO  14:24:39,626 - #20 int
INFO  14:24:39,626 - #20 x
INFO  14:24:39,626 - #41 ,
INFO  14:24:39,626 - #20 y
INFO  14:24:39,626 - #40 ;
INFO  14:24:39,626 - #20 bool
INFO  14:24:39,626 - #20 bt
INFO  14:24:39,626 - #40 ;
INFO  14:24:39,626 - #20 int
INFO  14:24:39,626 - #20 niz
INFO  14:24:39,626 - #45 [
INFO  14:24:39,626 - #46 ]
INFO  14:24:39,626 - #40 ;
INFO  14:24:39,626 - #47 {
INFO  14:24:39,626 - #20 x
INFO  14:24:39,626 - #37 =
INFO  14:24:39,626 - #21 1
INFO  14:24:39,626 - #40 ;
INFO  14:24:39,626 - #20 bt
INFO  14:24:39,626 - #37 =
INFO  14:24:39,626 - #23 false
INFO  14:24:39,626 - #40 ;
INFO  14:24:39,626 - #10 do
INFO  14:24:39,626 - #47 {
INFO  14:24:39,626 - #20 x
INFO  14:24:39,626 - #38 ++
INFO  14:24:39,626 - #40 ;
INFO  14:24:39,626 - #48 }
INFO  14:24:39,626 - #11 while
INFO  14:24:39,626 - #43 (
INFO  14:24:39,626 - #23 false
INFO  14:24:39,626 - #35 &&
INFO  14:24:39,626 - #23 true
INFO  14:24:39,626 - #35 &&
INFO  14:24:39,626 - #23 false
INFO  14:24:39,626 - #36 ||
INFO  14:24:39,626 - #23 false
INFO  14:24:39,626 - #36 ||
INFO  14:24:39,626 - #23 false
INFO  14:24:39,641 - #35 &&
INFO  14:24:39,641 - #23 true
INFO  14:24:39,641 - #44 )
INFO  14:24:39,641 - #40 ;
INFO  14:24:39,641 - #13 print
INFO  14:24:39,641 - #43 (
INFO  14:24:39,641 - #20 x
INFO  14:24:39,641 - #44 )
INFO  14:24:39,641 - #40 ;
INFO  14:24:39,641 - #48 }
INFO  14:24:39,641 - #48 }
INFO  14:24:39,641 - 

================SINTAKSNO STABLO====================


INFO  14:24:39,641 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           false
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDoWhile(
              DoKeyword(
              ) [DoKeyword]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
              CondOr(
                CondOr(
                  CondSingle(
                    CondTermAnd(
                      CondTermAnd(
                        CondTermSingle(
                          CondFactSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   false
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactSingle]
                        ) [CondTermSingle]
                        CondFactSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 true
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactSingle]
                      ) [CondTermAnd]
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorBoolConst(
                               false
                              ) [FactorBoolConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermAnd]
                  ) [CondSingle]
                  CondTermSingle(
                    CondFactSingle(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorBoolConst(
                             false
                            ) [FactorBoolConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactSingle]
                  ) [CondTermSingle]
                ) [CondOr]
                CondTermAnd(
                  CondTermSingle(
                    CondFactSingle(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorBoolConst(
                             false
                            ) [FactorBoolConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactSingle]
                  ) [CondTermSingle]
                  CondFactSingle(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [CondFactSingle]
                ) [CondTermAnd]
              ) [CondOr]
            ) [StmtDoWhile]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  14:24:39,641 - 

================SEMANTICKA OBRADA====================


INFO  14:24:39,641 - Deklarisana promenljiva 'x' na liniji 8
INFO  14:24:39,641 - Deklarisana promenljiva 'y' na liniji 8
INFO  14:24:39,641 - Deklarisana promenljiva 'bt' na liniji 9
INFO  14:24:39,641 - Deklarisan niz 'niz' na liniji 10
INFO  14:24:39,657 - ===================================
INFO  14:24:39,657 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  14:24:39,657 - Parsiranje uspesno zavrseno!
INFO  14:25:38,963 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  14:25:39,009 - #2 program
INFO  14:25:39,009 - #20 test301
INFO  14:25:39,009 - #47 {
INFO  14:25:39,025 - #16 void
INFO  14:25:39,025 - #20 main
INFO  14:25:39,025 - #43 (
INFO  14:25:39,025 - #44 )
INFO  14:25:39,025 - #20 int
INFO  14:25:39,025 - #20 x
INFO  14:25:39,025 - #41 ,
INFO  14:25:39,025 - #20 y
INFO  14:25:39,025 - #40 ;
INFO  14:25:39,025 - #20 bool
INFO  14:25:39,025 - #20 bt
INFO  14:25:39,025 - #40 ;
INFO  14:25:39,025 - #20 int
INFO  14:25:39,025 - #20 niz
INFO  14:25:39,025 - #45 [
INFO  14:25:39,025 - #46 ]
INFO  14:25:39,025 - #40 ;
INFO  14:25:39,025 - #47 {
INFO  14:25:39,025 - #20 x
INFO  14:25:39,025 - #37 =
INFO  14:25:39,025 - #21 1
INFO  14:25:39,025 - #40 ;
INFO  14:25:39,025 - #20 bt
INFO  14:25:39,025 - #37 =
INFO  14:25:39,025 - #23 false
INFO  14:25:39,025 - #40 ;
INFO  14:25:39,025 - #10 do
INFO  14:25:39,025 - #47 {
INFO  14:25:39,025 - #20 x
INFO  14:25:39,025 - #38 ++
INFO  14:25:39,025 - #40 ;
INFO  14:25:39,025 - #48 }
INFO  14:25:39,025 - #11 while
INFO  14:25:39,025 - #43 (
INFO  14:25:39,025 - #23 false
INFO  14:25:39,025 - #35 &&
INFO  14:25:39,025 - #23 true
INFO  14:25:39,025 - #35 &&
INFO  14:25:39,025 - #23 false
INFO  14:25:39,025 - #36 ||
INFO  14:25:39,025 - #23 false
INFO  14:25:39,025 - #36 ||
INFO  14:25:39,025 - #23 false
INFO  14:25:39,025 - #35 &&
INFO  14:25:39,025 - #23 true
INFO  14:25:39,025 - #44 )
INFO  14:25:39,025 - #40 ;
INFO  14:25:39,025 - #13 print
INFO  14:25:39,025 - #43 (
INFO  14:25:39,025 - #20 x
INFO  14:25:39,025 - #44 )
INFO  14:25:39,025 - #40 ;
INFO  14:25:39,025 - #48 }
INFO  14:25:39,025 - #48 }
INFO  14:25:39,025 - 

================SINTAKSNO STABLO====================


INFO  14:25:39,025 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           false
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDoWhile(
              DoKeyword(
              ) [DoKeyword]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
              CondOr(
                CondOr(
                  CondSingle(
                    CondTermAnd(
                      CondTermAnd(
                        CondTermSingle(
                          CondFactSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   false
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactSingle]
                        ) [CondTermSingle]
                        CondFactSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 true
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactSingle]
                      ) [CondTermAnd]
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorBoolConst(
                               false
                              ) [FactorBoolConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermAnd]
                  ) [CondSingle]
                  CondTermSingle(
                    CondFactSingle(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorBoolConst(
                             false
                            ) [FactorBoolConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactSingle]
                  ) [CondTermSingle]
                ) [CondOr]
                CondTermAnd(
                  CondTermSingle(
                    CondFactSingle(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorBoolConst(
                             false
                            ) [FactorBoolConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactSingle]
                  ) [CondTermSingle]
                  CondFactSingle(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [CondFactSingle]
                ) [CondTermAnd]
              ) [CondOr]
            ) [StmtDoWhile]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  14:25:39,025 - 

================SEMANTICKA OBRADA====================


INFO  14:25:39,041 - Deklarisana promenljiva 'x' na liniji 8
INFO  14:25:39,041 - Deklarisana promenljiva 'y' na liniji 8
INFO  14:25:39,041 - Deklarisana promenljiva 'bt' na liniji 9
INFO  14:25:39,041 - Deklarisan niz 'niz' na liniji 10
INFO  14:25:39,041 - ===================================
INFO  14:25:39,041 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  14:25:39,056 - Parsiranje uspesno zavrseno!
INFO  14:29:02,825 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  14:29:02,879 - #2 program
INFO  14:29:02,879 - #20 test301
INFO  14:29:02,879 - #47 {
INFO  14:29:02,879 - #16 void
INFO  14:29:02,879 - #20 main
INFO  14:29:02,879 - #43 (
INFO  14:29:02,879 - #44 )
INFO  14:29:02,879 - #20 int
INFO  14:29:02,879 - #20 x
INFO  14:29:02,894 - #41 ,
INFO  14:29:02,894 - #20 y
INFO  14:29:02,894 - #40 ;
INFO  14:29:02,894 - #20 bool
INFO  14:29:02,894 - #20 bt
INFO  14:29:02,894 - #40 ;
INFO  14:29:02,894 - #20 int
INFO  14:29:02,894 - #20 niz
INFO  14:29:02,894 - #45 [
INFO  14:29:02,894 - #46 ]
INFO  14:29:02,894 - #40 ;
INFO  14:29:02,894 - #47 {
INFO  14:29:02,894 - #20 x
INFO  14:29:02,894 - #37 =
INFO  14:29:02,894 - #21 1
INFO  14:29:02,894 - #40 ;
INFO  14:29:02,894 - #20 bt
INFO  14:29:02,894 - #37 =
INFO  14:29:02,894 - #23 false
INFO  14:29:02,894 - #40 ;
INFO  14:29:02,894 - #10 do
INFO  14:29:02,894 - #47 {
INFO  14:29:02,894 - #20 x
INFO  14:29:02,894 - #38 ++
INFO  14:29:02,894 - #40 ;
INFO  14:29:02,894 - #48 }
INFO  14:29:02,894 - #11 while
INFO  14:29:02,894 - #43 (
INFO  14:29:02,894 - #23 false
INFO  14:29:02,894 - #35 &&
INFO  14:29:02,894 - #23 true
INFO  14:29:02,894 - #35 &&
INFO  14:29:02,894 - #23 false
INFO  14:29:02,894 - #36 ||
INFO  14:29:02,894 - #23 false
INFO  14:29:02,894 - #36 ||
INFO  14:29:02,894 - #23 false
INFO  14:29:02,894 - #35 &&
INFO  14:29:02,894 - #23 true
INFO  14:29:02,894 - #44 )
INFO  14:29:02,894 - #40 ;
INFO  14:29:02,894 - #13 print
INFO  14:29:02,894 - #43 (
INFO  14:29:02,894 - #20 x
INFO  14:29:02,894 - #44 )
INFO  14:29:02,894 - #40 ;
INFO  14:29:02,894 - #48 }
INFO  14:29:02,894 - #48 }
INFO  14:29:02,894 - 

================SINTAKSNO STABLO====================


INFO  14:29:02,894 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           false
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDoWhile(
              DoKeyword(
              ) [DoKeyword]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
              CondOr(
                CondOr(
                  CondSingle(
                    CondTermAnd(
                      CondTermAnd(
                        CondTermSingle(
                          CondFactSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   false
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactSingle]
                        ) [CondTermSingle]
                        CondFactSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 true
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactSingle]
                      ) [CondTermAnd]
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorBoolConst(
                               false
                              ) [FactorBoolConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermAnd]
                  ) [CondSingle]
                  CondTermSingle(
                    CondFactSingle(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorBoolConst(
                             false
                            ) [FactorBoolConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactSingle]
                  ) [CondTermSingle]
                ) [CondOr]
                CondTermAnd(
                  CondTermSingle(
                    CondFactSingle(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorBoolConst(
                             false
                            ) [FactorBoolConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactSingle]
                  ) [CondTermSingle]
                  CondFactSingle(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [CondFactSingle]
                ) [CondTermAnd]
              ) [CondOr]
            ) [StmtDoWhile]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  14:29:02,910 - 

================SEMANTICKA OBRADA====================


INFO  14:29:02,910 - Deklarisana promenljiva 'x' na liniji 8
INFO  14:29:02,910 - Deklarisana promenljiva 'y' na liniji 8
INFO  14:29:02,910 - Deklarisana promenljiva 'bt' na liniji 9
INFO  14:29:02,910 - Deklarisan niz 'niz' na liniji 10
INFO  14:29:02,910 - ===================================
INFO  14:29:02,925 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  14:29:02,925 - Parsiranje uspesno zavrseno!
INFO  14:31:27,283 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  14:31:27,352 - #2 program
INFO  14:31:27,352 - #20 test301
INFO  14:31:27,352 - #47 {
INFO  14:31:27,368 - #16 void
INFO  14:31:27,368 - #20 main
INFO  14:31:27,368 - #43 (
INFO  14:31:27,368 - #44 )
INFO  14:31:27,368 - #20 int
INFO  14:31:27,368 - #20 x
INFO  14:31:27,368 - #41 ,
INFO  14:31:27,368 - #20 y
INFO  14:31:27,368 - #40 ;
INFO  14:31:27,368 - #20 bool
INFO  14:31:27,368 - #20 bt
INFO  14:31:27,368 - #40 ;
INFO  14:31:27,368 - #20 int
INFO  14:31:27,368 - #20 niz
INFO  14:31:27,368 - #45 [
INFO  14:31:27,368 - #46 ]
INFO  14:31:27,368 - #40 ;
INFO  14:31:27,368 - #47 {
INFO  14:31:27,368 - #20 x
INFO  14:31:27,368 - #37 =
INFO  14:31:27,368 - #21 1
INFO  14:31:27,368 - #40 ;
INFO  14:31:27,368 - #20 bt
INFO  14:31:27,368 - #37 =
INFO  14:31:27,368 - #23 false
INFO  14:31:27,368 - #40 ;
INFO  14:31:27,368 - #10 do
INFO  14:31:27,368 - #47 {
INFO  14:31:27,368 - #20 x
INFO  14:31:27,368 - #38 ++
INFO  14:31:27,368 - #40 ;
INFO  14:31:27,368 - #48 }
INFO  14:31:27,368 - #11 while
INFO  14:31:27,368 - #43 (
INFO  14:31:27,368 - #23 false
INFO  14:31:27,368 - #35 &&
INFO  14:31:27,368 - #23 true
INFO  14:31:27,368 - #35 &&
INFO  14:31:27,368 - #23 false
INFO  14:31:27,368 - #36 ||
INFO  14:31:27,368 - #23 false
INFO  14:31:27,368 - #36 ||
INFO  14:31:27,368 - #23 false
INFO  14:31:27,368 - #35 &&
INFO  14:31:27,368 - #23 true
INFO  14:31:27,368 - #44 )
INFO  14:31:27,368 - #40 ;
INFO  14:31:27,368 - #13 print
INFO  14:31:27,368 - #43 (
INFO  14:31:27,368 - #20 x
INFO  14:31:27,368 - #44 )
INFO  14:31:27,368 - #40 ;
INFO  14:31:27,368 - #48 }
INFO  14:31:27,368 - #48 }
INFO  14:31:27,368 - 

================SINTAKSNO STABLO====================


INFO  14:31:27,383 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           false
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDoWhile(
              DoKeyword(
              ) [DoKeyword]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
              CondOr(
                CondOr(
                  CondSingle(
                    CondTermAnd(
                      CondTermAnd(
                        CondTermSingle(
                          CondFactSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   false
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactSingle]
                        ) [CondTermSingle]
                        CondFactSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 true
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactSingle]
                      ) [CondTermAnd]
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorBoolConst(
                               false
                              ) [FactorBoolConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermAnd]
                  ) [CondSingle]
                  CondTermSingle(
                    CondFactSingle(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorBoolConst(
                             false
                            ) [FactorBoolConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactSingle]
                  ) [CondTermSingle]
                ) [CondOr]
                CondTermAnd(
                  CondTermSingle(
                    CondFactSingle(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorBoolConst(
                             false
                            ) [FactorBoolConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactSingle]
                  ) [CondTermSingle]
                  CondFactSingle(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [CondFactSingle]
                ) [CondTermAnd]
              ) [CondOr]
            ) [StmtDoWhile]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  14:31:27,383 - 

================SEMANTICKA OBRADA====================


INFO  14:31:27,399 - Deklarisana promenljiva 'x' na liniji 8
INFO  14:31:27,399 - Deklarisana promenljiva 'y' na liniji 8
INFO  14:31:27,399 - Deklarisana promenljiva 'bt' na liniji 9
INFO  14:31:27,399 - Deklarisan niz 'niz' na liniji 10
INFO  14:31:27,399 - ===================================
INFO  14:31:27,399 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 14:31:27,415 - PC 14
ERROR 14:31:27,415 - PC 19
INFO  14:31:27,415 - Parsiranje uspesno zavrseno!
INFO  14:33:07,211 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  14:33:07,257 - #2 program
INFO  14:33:07,257 - #20 test301
INFO  14:33:07,257 - #47 {
INFO  14:33:07,257 - #16 void
INFO  14:33:07,257 - #20 main
INFO  14:33:07,257 - #43 (
INFO  14:33:07,257 - #44 )
INFO  14:33:07,257 - #20 int
INFO  14:33:07,257 - #20 x
INFO  14:33:07,273 - #41 ,
INFO  14:33:07,273 - #20 y
INFO  14:33:07,273 - #40 ;
INFO  14:33:07,273 - #20 bool
INFO  14:33:07,273 - #20 bt
INFO  14:33:07,273 - #40 ;
INFO  14:33:07,273 - #20 int
INFO  14:33:07,273 - #20 niz
INFO  14:33:07,273 - #45 [
INFO  14:33:07,273 - #46 ]
INFO  14:33:07,273 - #40 ;
INFO  14:33:07,273 - #47 {
INFO  14:33:07,273 - #20 x
INFO  14:33:07,273 - #37 =
INFO  14:33:07,273 - #21 1
INFO  14:33:07,273 - #40 ;
INFO  14:33:07,273 - #20 bt
INFO  14:33:07,273 - #37 =
INFO  14:33:07,273 - #23 false
INFO  14:33:07,273 - #40 ;
INFO  14:33:07,273 - #10 do
INFO  14:33:07,273 - #47 {
INFO  14:33:07,273 - #20 x
INFO  14:33:07,273 - #38 ++
INFO  14:33:07,273 - #40 ;
INFO  14:33:07,273 - #48 }
INFO  14:33:07,273 - #11 while
INFO  14:33:07,273 - #43 (
INFO  14:33:07,273 - #23 false
INFO  14:33:07,273 - #35 &&
INFO  14:33:07,273 - #23 true
INFO  14:33:07,273 - #35 &&
INFO  14:33:07,273 - #23 false
INFO  14:33:07,273 - #36 ||
INFO  14:33:07,273 - #23 false
INFO  14:33:07,273 - #36 ||
INFO  14:33:07,273 - #23 false
INFO  14:33:07,273 - #35 &&
INFO  14:33:07,273 - #23 true
INFO  14:33:07,273 - #44 )
INFO  14:33:07,273 - #40 ;
INFO  14:33:07,273 - #13 print
INFO  14:33:07,273 - #43 (
INFO  14:33:07,273 - #20 x
INFO  14:33:07,273 - #44 )
INFO  14:33:07,273 - #40 ;
INFO  14:33:07,273 - #48 }
INFO  14:33:07,273 - #48 }
INFO  14:33:07,273 - 

================SINTAKSNO STABLO====================


INFO  14:33:07,273 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           false
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDoWhile(
              DoKeyword(
              ) [DoKeyword]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
              CondOr(
                CondOr(
                  CondSingle(
                    CondTermAnd(
                      CondTermAnd(
                        CondTermSingle(
                          CondFactSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   false
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactSingle]
                        ) [CondTermSingle]
                        CondFactSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 true
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactSingle]
                      ) [CondTermAnd]
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorBoolConst(
                               false
                              ) [FactorBoolConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermAnd]
                  ) [CondSingle]
                  CondTermSingle(
                    CondFactSingle(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorBoolConst(
                             false
                            ) [FactorBoolConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactSingle]
                  ) [CondTermSingle]
                ) [CondOr]
                CondTermAnd(
                  CondTermSingle(
                    CondFactSingle(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorBoolConst(
                             false
                            ) [FactorBoolConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactSingle]
                  ) [CondTermSingle]
                  CondFactSingle(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [CondFactSingle]
                ) [CondTermAnd]
              ) [CondOr]
            ) [StmtDoWhile]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  14:33:07,273 - 

================SEMANTICKA OBRADA====================


INFO  14:33:07,295 - Deklarisana promenljiva 'x' na liniji 8
INFO  14:33:07,295 - Deklarisana promenljiva 'y' na liniji 8
INFO  14:33:07,295 - Deklarisana promenljiva 'bt' na liniji 9
INFO  14:33:07,295 - Deklarisan niz 'niz' na liniji 10
INFO  14:33:07,295 - ===================================
INFO  14:33:07,295 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 14:33:07,311 - PC 14
ERROR 14:33:07,311 - PC 19
ERROR 14:33:07,311 - PC 29
ERROR 14:33:07,311 - PC 34
INFO  14:33:07,311 - Parsiranje uspesno zavrseno!
INFO  14:34:49,775 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  14:34:49,813 - #2 program
INFO  14:34:49,813 - #20 test301
INFO  14:34:49,813 - #47 {
INFO  14:34:49,813 - #16 void
INFO  14:34:49,813 - #20 main
INFO  14:34:49,813 - #43 (
INFO  14:34:49,813 - #44 )
INFO  14:34:49,813 - #20 int
INFO  14:34:49,813 - #20 x
INFO  14:34:49,813 - #41 ,
INFO  14:34:49,813 - #20 y
INFO  14:34:49,813 - #40 ;
INFO  14:34:49,828 - #20 bool
INFO  14:34:49,828 - #20 bt
INFO  14:34:49,828 - #40 ;
INFO  14:34:49,828 - #20 int
INFO  14:34:49,828 - #20 niz
INFO  14:34:49,828 - #45 [
INFO  14:34:49,828 - #46 ]
INFO  14:34:49,828 - #40 ;
INFO  14:34:49,828 - #47 {
INFO  14:34:49,828 - #20 x
INFO  14:34:49,828 - #37 =
INFO  14:34:49,828 - #21 1
INFO  14:34:49,828 - #40 ;
INFO  14:34:49,828 - #20 bt
INFO  14:34:49,828 - #37 =
INFO  14:34:49,828 - #23 false
INFO  14:34:49,828 - #40 ;
INFO  14:34:49,828 - #10 do
INFO  14:34:49,828 - #47 {
INFO  14:34:49,828 - #20 x
INFO  14:34:49,828 - #38 ++
INFO  14:34:49,828 - #40 ;
INFO  14:34:49,828 - #48 }
INFO  14:34:49,828 - #11 while
INFO  14:34:49,828 - #43 (
INFO  14:34:49,828 - #23 false
INFO  14:34:49,828 - #35 &&
INFO  14:34:49,828 - #23 true
INFO  14:34:49,828 - #35 &&
INFO  14:34:49,828 - #23 false
INFO  14:34:49,828 - #36 ||
INFO  14:34:49,828 - #23 false
INFO  14:34:49,828 - #36 ||
INFO  14:34:49,828 - #23 false
INFO  14:34:49,828 - #35 &&
INFO  14:34:49,828 - #23 true
INFO  14:34:49,828 - #44 )
INFO  14:34:49,828 - #40 ;
INFO  14:34:49,828 - #13 print
INFO  14:34:49,828 - #43 (
INFO  14:34:49,828 - #20 x
INFO  14:34:49,828 - #44 )
INFO  14:34:49,828 - #40 ;
INFO  14:34:49,828 - #48 }
INFO  14:34:49,828 - #48 }
INFO  14:34:49,828 - 

================SINTAKSNO STABLO====================


INFO  14:34:49,828 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           false
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDoWhile(
              DoKeyword(
              ) [DoKeyword]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
              CondOr(
                CondOr(
                  CondSingle(
                    CondTermAnd(
                      CondTermAnd(
                        CondTermSingle(
                          CondFactSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   false
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactSingle]
                        ) [CondTermSingle]
                        CondFactSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 true
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactSingle]
                      ) [CondTermAnd]
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorBoolConst(
                               false
                              ) [FactorBoolConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermAnd]
                  ) [CondSingle]
                  CondTermSingle(
                    CondFactSingle(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorBoolConst(
                             false
                            ) [FactorBoolConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactSingle]
                  ) [CondTermSingle]
                ) [CondOr]
                CondTermAnd(
                  CondTermSingle(
                    CondFactSingle(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorBoolConst(
                             false
                            ) [FactorBoolConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactSingle]
                  ) [CondTermSingle]
                  CondFactSingle(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [CondFactSingle]
                ) [CondTermAnd]
              ) [CondOr]
            ) [StmtDoWhile]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  14:34:49,828 - 

================SEMANTICKA OBRADA====================


INFO  14:34:49,844 - Deklarisana promenljiva 'x' na liniji 8
INFO  14:34:49,844 - Deklarisana promenljiva 'y' na liniji 8
INFO  14:34:49,844 - Deklarisana promenljiva 'bt' na liniji 9
INFO  14:34:49,844 - Deklarisan niz 'niz' na liniji 10
INFO  14:34:49,844 - ===================================
INFO  14:34:49,844 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 14:34:49,844 - PC 14
ERROR 14:34:49,844 - PC 19
ERROR 14:34:49,844 - PC 34
INFO  14:34:49,859 - Parsiranje uspesno zavrseno!
INFO  14:35:04,750 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  14:35:04,796 - #2 program
INFO  14:35:04,796 - #20 test301
INFO  14:35:04,796 - #47 {
INFO  14:35:04,796 - #16 void
INFO  14:35:04,796 - #20 main
INFO  14:35:04,796 - #43 (
INFO  14:35:04,796 - #44 )
INFO  14:35:04,796 - #20 int
INFO  14:35:04,812 - #20 x
INFO  14:35:04,812 - #41 ,
INFO  14:35:04,812 - #20 y
INFO  14:35:04,812 - #40 ;
INFO  14:35:04,812 - #20 bool
INFO  14:35:04,812 - #20 bt
INFO  14:35:04,812 - #40 ;
INFO  14:35:04,812 - #20 int
INFO  14:35:04,812 - #20 niz
INFO  14:35:04,812 - #45 [
INFO  14:35:04,812 - #46 ]
INFO  14:35:04,812 - #40 ;
INFO  14:35:04,812 - #47 {
INFO  14:35:04,812 - #20 x
INFO  14:35:04,812 - #37 =
INFO  14:35:04,812 - #21 1
INFO  14:35:04,812 - #40 ;
INFO  14:35:04,812 - #20 bt
INFO  14:35:04,812 - #37 =
INFO  14:35:04,812 - #23 false
INFO  14:35:04,812 - #40 ;
INFO  14:35:04,812 - #10 do
INFO  14:35:04,812 - #47 {
INFO  14:35:04,812 - #20 x
INFO  14:35:04,812 - #38 ++
INFO  14:35:04,812 - #40 ;
INFO  14:35:04,812 - #48 }
INFO  14:35:04,812 - #11 while
INFO  14:35:04,812 - #43 (
INFO  14:35:04,812 - #23 false
INFO  14:35:04,812 - #35 &&
INFO  14:35:04,812 - #23 true
INFO  14:35:04,812 - #35 &&
INFO  14:35:04,812 - #23 false
INFO  14:35:04,812 - #36 ||
INFO  14:35:04,812 - #23 false
INFO  14:35:04,812 - #36 ||
INFO  14:35:04,812 - #23 false
INFO  14:35:04,812 - #35 &&
INFO  14:35:04,812 - #23 true
INFO  14:35:04,812 - #44 )
INFO  14:35:04,812 - #40 ;
INFO  14:35:04,812 - #13 print
INFO  14:35:04,812 - #43 (
INFO  14:35:04,812 - #20 x
INFO  14:35:04,812 - #44 )
INFO  14:35:04,812 - #40 ;
INFO  14:35:04,812 - #48 }
INFO  14:35:04,812 - #48 }
INFO  14:35:04,812 - 

================SINTAKSNO STABLO====================


INFO  14:35:04,812 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           false
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDoWhile(
              DoKeyword(
              ) [DoKeyword]
              Stmt(
                StatementSingle(
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementSingle]
              ) [Stmt]
              CondOr(
                CondOr(
                  CondSingle(
                    CondTermAnd(
                      CondTermAnd(
                        CondTermSingle(
                          CondFactSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   false
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactSingle]
                        ) [CondTermSingle]
                        CondFactSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 true
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [CondFactSingle]
                      ) [CondTermAnd]
                      CondFactSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorBoolConst(
                               false
                              ) [FactorBoolConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [CondFactSingle]
                    ) [CondTermAnd]
                  ) [CondSingle]
                  CondTermSingle(
                    CondFactSingle(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorBoolConst(
                             false
                            ) [FactorBoolConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactSingle]
                  ) [CondTermSingle]
                ) [CondOr]
                CondTermAnd(
                  CondTermSingle(
                    CondFactSingle(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorBoolConst(
                             false
                            ) [FactorBoolConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [CondFactSingle]
                  ) [CondTermSingle]
                  CondFactSingle(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [CondFactSingle]
                ) [CondTermAnd]
              ) [CondOr]
            ) [StmtDoWhile]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  14:35:04,828 - 

================SEMANTICKA OBRADA====================


INFO  14:35:04,834 - Deklarisana promenljiva 'x' na liniji 8
INFO  14:35:04,834 - Deklarisana promenljiva 'y' na liniji 8
INFO  14:35:04,834 - Deklarisana promenljiva 'bt' na liniji 9
INFO  14:35:04,834 - Deklarisan niz 'niz' na liniji 10
INFO  14:35:04,834 - ===================================
INFO  14:35:04,834 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  14:35:04,850 - Parsiranje uspesno zavrseno!
INFO  14:36:04,452 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  14:36:04,505 - #2 program
INFO  14:36:04,505 - #20 test301
INFO  14:36:04,505 - #47 {
INFO  14:36:04,505 - #16 void
INFO  14:36:04,505 - #20 main
INFO  14:36:04,505 - #43 (
INFO  14:36:04,505 - #44 )
INFO  14:36:04,505 - #20 int
INFO  14:36:04,505 - #20 x
INFO  14:36:04,505 - #41 ,
INFO  14:36:04,505 - #20 y
INFO  14:36:04,505 - #40 ;
INFO  14:36:04,505 - #20 bool
INFO  14:36:04,505 - #20 bt
INFO  14:36:04,505 - #40 ;
INFO  14:36:04,505 - #20 int
INFO  14:36:04,505 - #20 niz
INFO  14:36:04,505 - #45 [
INFO  14:36:04,505 - #46 ]
INFO  14:36:04,505 - #40 ;
INFO  14:36:04,505 - #47 {
INFO  14:36:04,505 - #20 x
INFO  14:36:04,505 - #37 =
INFO  14:36:04,505 - #21 1
INFO  14:36:04,505 - #40 ;
INFO  14:36:04,505 - #20 bt
INFO  14:36:04,505 - #37 =
INFO  14:36:04,505 - #23 false
INFO  14:36:04,505 - #40 ;
INFO  14:36:04,505 - #10 do
INFO  14:36:04,505 - #47 {
INFO  14:36:04,505 - #20 x
INFO  14:36:04,505 - #38 ++
INFO  14:36:04,505 - #40 ;
INFO  14:36:04,505 - #8 if
INFO  14:36:04,505 - #43 (
INFO  14:36:04,505 - #20 x
INFO  14:36:04,505 - #29 ==
INFO  14:36:04,505 - #21 3
INFO  14:36:04,505 - #44 )
INFO  14:36:04,505 - #3 break
INFO  14:36:04,505 - #40 ;
INFO  14:36:04,505 - #48 }
INFO  14:36:04,505 - #11 while
INFO  14:36:04,505 - #43 (
INFO  14:36:04,505 - #23 true
INFO  14:36:04,505 - #44 )
INFO  14:36:04,505 - #40 ;
INFO  14:36:04,505 - #13 print
INFO  14:36:04,505 - #43 (
INFO  14:36:04,505 - #20 x
INFO  14:36:04,505 - #44 )
INFO  14:36:04,505 - #40 ;
INFO  14:36:04,505 - #48 }
INFO  14:36:04,505 - #48 }
INFO  14:36:04,505 - 

================SINTAKSNO STABLO====================


INFO  14:36:04,521 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           false
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDoWhile(
              DoKeyword(
              ) [DoKeyword]
              Stmt(
                StatementMulti(
                  StatementSingle(
                    StmtDesign(
                      DesignatorIncrement(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [DesignatorIncrement]
                    ) [StmtDesign]
                  ) [StatementSingle]
                  StmtIf(
                    IfKeyword(
                    ) [IfKeyword]
                    StmtIfBody(
                      IfCond(
                        CondSingle(
                          CondTermSingle(
                            CondFactRelop(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       x
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                              RelopEQ(
                              ) [RelopEQ]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [CondFactRelop]
                          ) [CondTermSingle]
                        ) [CondSingle]
                      ) [IfCond]
                      StmtBreak(
                      ) [StmtBreak]
                    ) [StmtIfBody]
                  ) [StmtIf]
                ) [StatementMulti]
              ) [Stmt]
              CondSingle(
                CondTermSingle(
                  CondFactSingle(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [CondFactSingle]
                ) [CondTermSingle]
              ) [CondSingle]
            ) [StmtDoWhile]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  14:36:04,521 - 

================SEMANTICKA OBRADA====================


INFO  14:36:04,521 - Deklarisana promenljiva 'x' na liniji 8
INFO  14:36:04,521 - Deklarisana promenljiva 'y' na liniji 8
INFO  14:36:04,521 - Deklarisana promenljiva 'bt' na liniji 9
INFO  14:36:04,521 - Deklarisan niz 'niz' na liniji 10
INFO  14:36:04,521 - ===================================
INFO  14:36:04,521 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  14:36:04,536 - Parsiranje uspesno zavrseno!
INFO  14:38:49,736 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  14:38:49,783 - #2 program
INFO  14:38:49,783 - #20 test301
INFO  14:38:49,783 - #47 {
INFO  14:38:49,783 - #16 void
INFO  14:38:49,783 - #20 main
INFO  14:38:49,783 - #43 (
INFO  14:38:49,783 - #44 )
INFO  14:38:49,783 - #20 int
INFO  14:38:49,783 - #20 x
INFO  14:38:49,799 - #41 ,
INFO  14:38:49,799 - #20 y
INFO  14:38:49,799 - #40 ;
INFO  14:38:49,799 - #20 bool
INFO  14:38:49,799 - #20 bt
INFO  14:38:49,799 - #40 ;
INFO  14:38:49,799 - #20 int
INFO  14:38:49,799 - #20 niz
INFO  14:38:49,799 - #45 [
INFO  14:38:49,799 - #46 ]
INFO  14:38:49,799 - #40 ;
INFO  14:38:49,799 - #47 {
INFO  14:38:49,799 - #20 x
INFO  14:38:49,799 - #37 =
INFO  14:38:49,799 - #21 1
INFO  14:38:49,799 - #40 ;
INFO  14:38:49,799 - #20 bt
INFO  14:38:49,799 - #37 =
INFO  14:38:49,799 - #23 false
INFO  14:38:49,799 - #40 ;
INFO  14:38:49,799 - #10 do
INFO  14:38:49,799 - #47 {
INFO  14:38:49,799 - #8 if
INFO  14:38:49,799 - #43 (
INFO  14:38:49,799 - #20 x
INFO  14:38:49,799 - #29 ==
INFO  14:38:49,805 - #21 3
INFO  14:38:49,805 - #44 )
INFO  14:38:49,805 - #18 continue
INFO  14:38:49,805 - #40 ;
INFO  14:38:49,805 - #20 x
INFO  14:38:49,805 - #38 ++
INFO  14:38:49,805 - #40 ;
INFO  14:38:49,805 - #48 }
INFO  14:38:49,805 - #11 while
INFO  14:38:49,805 - #43 (
INFO  14:38:49,805 - #20 x
INFO  14:38:49,805 - #33 <
INFO  14:38:49,805 - #21 2
INFO  14:38:49,805 - #44 )
INFO  14:38:49,805 - #40 ;
INFO  14:38:49,805 - #13 print
INFO  14:38:49,805 - #43 (
INFO  14:38:49,805 - #20 x
INFO  14:38:49,805 - #44 )
INFO  14:38:49,805 - #40 ;
INFO  14:38:49,805 - #48 }
INFO  14:38:49,805 - #48 }
INFO  14:38:49,805 - 

================SINTAKSNO STABLO====================


INFO  14:38:49,805 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           false
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDoWhile(
              DoKeyword(
              ) [DoKeyword]
              Stmt(
                StatementMulti(
                  StatementSingle(
                    StmtIf(
                      IfKeyword(
                      ) [IfKeyword]
                      StmtIfBody(
                        IfCond(
                          CondSingle(
                            CondTermSingle(
                              CondFactRelop(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         x
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                                RelopEQ(
                                ) [RelopEQ]
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       3
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [CondFactRelop]
                            ) [CondTermSingle]
                          ) [CondSingle]
                        ) [IfCond]
                        StmtContinue(
                        ) [StmtContinue]
                      ) [StmtIfBody]
                    ) [StmtIf]
                  ) [StatementSingle]
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementMulti]
              ) [Stmt]
              CondSingle(
                CondTermSingle(
                  CondFactRelop(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             x
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                    RelopLT(
                    ) [RelopLT]
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [CondFactRelop]
                ) [CondTermSingle]
              ) [CondSingle]
            ) [StmtDoWhile]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  14:38:49,805 - 

================SEMANTICKA OBRADA====================


INFO  14:38:49,821 - Deklarisana promenljiva 'x' na liniji 8
INFO  14:38:49,821 - Deklarisana promenljiva 'y' na liniji 8
INFO  14:38:49,821 - Deklarisana promenljiva 'bt' na liniji 9
INFO  14:38:49,821 - Deklarisan niz 'niz' na liniji 10
INFO  14:38:49,821 - ===================================
INFO  14:38:49,821 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  14:38:49,821 - Parsiranje uspesno zavrseno!
INFO  15:14:31,304 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:14:31,358 - #2 program
INFO  15:14:31,358 - #20 test301
INFO  15:14:31,358 - #47 {
INFO  15:14:31,358 - #16 void
INFO  15:14:31,358 - #20 main
INFO  15:14:31,358 - #43 (
INFO  15:14:31,358 - #44 )
INFO  15:14:31,358 - #20 int
INFO  15:14:31,358 - #20 x
INFO  15:14:31,358 - #41 ,
INFO  15:14:31,358 - #20 y
INFO  15:14:31,358 - #40 ;
INFO  15:14:31,358 - #20 bool
INFO  15:14:31,358 - #20 bt
INFO  15:14:31,358 - #40 ;
INFO  15:14:31,358 - #20 int
INFO  15:14:31,358 - #20 niz
INFO  15:14:31,358 - #45 [
INFO  15:14:31,358 - #46 ]
INFO  15:14:31,358 - #40 ;
INFO  15:14:31,358 - #47 {
INFO  15:14:31,358 - #20 x
INFO  15:14:31,358 - #37 =
INFO  15:14:31,358 - #21 1
INFO  15:14:31,358 - #40 ;
INFO  15:14:31,358 - #20 bt
INFO  15:14:31,358 - #37 =
INFO  15:14:31,358 - #23 false
INFO  15:14:31,358 - #40 ;
INFO  15:14:31,358 - #10 do
INFO  15:14:31,358 - #47 {
INFO  15:14:31,358 - #8 if
INFO  15:14:31,358 - #43 (
INFO  15:14:31,358 - #20 x
INFO  15:14:31,358 - #29 ==
INFO  15:14:31,358 - #21 3
INFO  15:14:31,358 - #44 )
INFO  15:14:31,358 - #18 continue
INFO  15:14:31,358 - #40 ;
INFO  15:14:31,358 - #20 x
INFO  15:14:31,358 - #38 ++
INFO  15:14:31,358 - #40 ;
INFO  15:14:31,373 - #48 }
INFO  15:14:31,373 - #11 while
INFO  15:14:31,373 - #43 (
INFO  15:14:31,373 - #20 x
INFO  15:14:31,373 - #33 <
INFO  15:14:31,373 - #21 2
INFO  15:14:31,373 - #44 )
INFO  15:14:31,373 - #40 ;
INFO  15:14:31,373 - #13 print
INFO  15:14:31,373 - #43 (
INFO  15:14:31,373 - #20 x
INFO  15:14:31,373 - #44 )
INFO  15:14:31,373 - #40 ;
INFO  15:14:31,373 - #48 }
INFO  15:14:31,373 - #48 }
INFO  15:14:31,373 - 

================SINTAKSNO STABLO====================


INFO  15:14:31,373 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarMulti(
                  VarSingle(
                    VarNormal(
                     x
                    ) [VarNormal]
                  ) [VarSingle]
                  VarNormal(
                   y
                  ) [VarNormal]
                ) [VarMulti]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 bt
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   bt
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           false
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDoWhile(
              DoKeyword(
              ) [DoKeyword]
              StmtWhileBody(
                Stmt(
                  StatementMulti(
                    StatementSingle(
                      StmtIf(
                        IfKeyword(
                        ) [IfKeyword]
                        StmtIfBody(
                          IfCond(
                            CondSingle(
                              CondTermSingle(
                                CondFactRelop(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorSimple(
                                           x
                                          ) [DesignatorSimple]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                  RelopEQ(
                                  ) [RelopEQ]
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         3
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [CondFactRelop]
                              ) [CondTermSingle]
                            ) [CondSingle]
                          ) [IfCond]
                          StmtContinue(
                          ) [StmtContinue]
                        ) [StmtIfBody]
                      ) [StmtIf]
                    ) [StatementSingle]
                    StmtDesign(
                      DesignatorIncrement(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [DesignatorIncrement]
                    ) [StmtDesign]
                  ) [StatementMulti]
                ) [Stmt]
              ) [StmtWhileBody]
              CondSingle(
                CondTermSingle(
                  CondFactRelop(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             x
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                    RelopLT(
                    ) [RelopLT]
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [CondFactRelop]
                ) [CondTermSingle]
              ) [CondSingle]
            ) [StmtDoWhile]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  15:14:31,420 - 

================SEMANTICKA OBRADA====================


INFO  15:14:31,442 - Deklarisana promenljiva 'x' na liniji 8
INFO  15:14:31,442 - Deklarisana promenljiva 'y' na liniji 8
INFO  15:14:31,442 - Deklarisana promenljiva 'bt' na liniji 9
INFO  15:14:31,442 - Deklarisan niz 'niz' na liniji 10
INFO  15:14:31,442 - ===================================
INFO  15:14:31,442 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  15:14:31,442 - Parsiranje uspesno zavrseno!
INFO  15:55:00,339 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:55:00,392 - #2 program
INFO  15:55:00,392 - #20 test301
INFO  15:55:00,392 - #20 int
INFO  15:55:00,392 - #20 x
INFO  15:55:00,392 - #40 ;
INFO  15:55:00,392 - #47 {
INFO  15:55:00,392 - #16 void
INFO  15:55:00,392 - #20 fun
INFO  15:55:00,392 - #43 (
INFO  15:55:00,392 - #44 )
INFO  15:55:00,392 - #47 {
INFO  15:55:00,392 - #20 x
INFO  15:55:00,392 - #37 =
INFO  15:55:00,392 - #21 3
INFO  15:55:00,392 - #40 ;
INFO  15:55:00,392 - #48 }
INFO  15:55:00,392 - #16 void
INFO  15:55:00,392 - #20 main
INFO  15:55:00,392 - #43 (
INFO  15:55:00,392 - #44 )
INFO  15:55:00,392 - #47 {
INFO  15:55:00,392 - #20 fun
INFO  15:55:00,392 - #43 (
INFO  15:55:00,408 - #44 )
INFO  15:55:00,408 - #40 ;
INFO  15:55:00,408 - #48 }
INFO  15:55:00,408 - #48 }
INFO  15:55:00,408 - 

================SINTAKSNO STABLO====================


INFO  15:55:00,408 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             x
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodVoidDeclaration(
        MethodVoid6(
          MethodVoidName(
           fun
          ) [MethodVoidName]
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         3
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
        ) [MethodVoid6]
      ) [MethodVoidDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorMethodCall(
              DesignatorSimple(
               fun
              ) [DesignatorSimple]
            ) [DesignatorMethodCall]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  15:55:00,408 - 

================SEMANTICKA OBRADA====================


INFO  15:55:00,424 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  15:55:00,424 - Pronadjen poziv funkcije 'fun' na liniji 12
INFO  15:55:00,424 - ===================================
INFO  15:55:00,424 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  15:55:00,424 - Parsiranje uspesno zavrseno!
INFO  15:55:59,205 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:55:59,268 - #2 program
INFO  15:55:59,268 - #20 test301
INFO  15:55:59,268 - #20 int
INFO  15:55:59,268 - #20 x
INFO  15:55:59,268 - #40 ;
INFO  15:55:59,268 - #47 {
INFO  15:55:59,268 - #16 void
INFO  15:55:59,268 - #20 fun
INFO  15:55:59,268 - #43 (
INFO  15:55:59,268 - #20 int
INFO  15:55:59,268 - #20 y
INFO  15:55:59,268 - #44 )
INFO  15:55:59,268 - #47 {
INFO  15:55:59,268 - #20 x
INFO  15:55:59,268 - #37 =
INFO  15:55:59,268 - #20 y
INFO  15:55:59,268 - #40 ;
INFO  15:55:59,268 - #48 }
INFO  15:55:59,268 - #16 void
INFO  15:55:59,283 - #20 main
INFO  15:55:59,283 - #43 (
INFO  15:55:59,283 - #44 )
INFO  15:55:59,283 - #47 {
INFO  15:55:59,283 - #20 fun
INFO  15:55:59,283 - #43 (
INFO  15:55:59,283 - #21 2
INFO  15:55:59,283 - #44 )
INFO  15:55:59,283 - #40 ;
INFO  15:55:59,283 - #48 }
INFO  15:55:59,283 - #48 }
INFO  15:55:59,283 - 

================SINTAKSNO STABLO====================


INFO  15:55:59,283 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             x
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodVoidDeclaration(
        MethodVoid2(
          MethodVoidName(
           fun
          ) [MethodVoidName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           y
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
        ) [MethodVoid2]
      ) [MethodVoidDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorMethodCallParams(
              DesignatorSimple(
               fun
              ) [DesignatorSimple]
              ActParsSingle(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       2
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [ActParsSingle]
            ) [DesignatorMethodCallParams]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  15:55:59,283 - 

================SEMANTICKA OBRADA====================


INFO  15:55:59,290 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  15:55:59,290 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  15:55:59,290 - Pronadjen poziv funkcije 'fun' na liniji 12
INFO  15:55:59,306 - ===================================
INFO  15:55:59,306 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  15:55:59,306 - Parsiranje uspesno zavrseno!
INFO  15:56:47,174 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:56:47,227 - #2 program
INFO  15:56:47,227 - #20 test301
INFO  15:56:47,227 - #20 int
INFO  15:56:47,227 - #20 x
INFO  15:56:47,227 - #40 ;
INFO  15:56:47,227 - #47 {
INFO  15:56:47,227 - #20 int
INFO  15:56:47,227 - #20 fun
INFO  15:56:47,227 - #43 (
INFO  15:56:47,227 - #20 int
INFO  15:56:47,227 - #20 y
INFO  15:56:47,227 - #44 )
INFO  15:56:47,227 - #47 {
INFO  15:56:47,227 - #15 return
INFO  15:56:47,227 - #20 y
INFO  15:56:47,227 - #26 *
INFO  15:56:47,227 - #21 2
INFO  15:56:47,227 - #40 ;
INFO  15:56:47,227 - #48 }
INFO  15:56:47,227 - #16 void
INFO  15:56:47,227 - #20 main
INFO  15:56:47,227 - #43 (
INFO  15:56:47,227 - #44 )
INFO  15:56:47,227 - #47 {
INFO  15:56:47,227 - #20 fun
INFO  15:56:47,227 - #43 (
INFO  15:56:47,227 - #21 2
INFO  15:56:47,227 - #44 )
INFO  15:56:47,227 - #40 ;
INFO  15:56:47,227 - #48 }
INFO  15:56:47,227 - #48 }
INFO  15:56:47,227 - 

================SINTAKSNO STABLO====================


INFO  15:56:47,227 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             x
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermMulop(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                    MulopMul(
                    ) [MulopMul]
                    FactorNumConst(
                     2
                    ) [FactorNumConst]
                  ) [TermMulop]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorMethodCallParams(
              DesignatorSimple(
               fun
              ) [DesignatorSimple]
              ActParsSingle(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       2
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [ActParsSingle]
            ) [DesignatorMethodCallParams]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  15:56:47,227 - 

================SEMANTICKA OBRADA====================


INFO  15:56:47,243 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  15:56:47,243 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  15:56:47,243 - Pronadjen poziv funkcije 'fun' na liniji 12
INFO  15:56:47,243 - ===================================
INFO  15:56:47,243 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  15:56:47,258 - Parsiranje uspesno zavrseno!
INFO  16:07:27,667 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:07:27,736 - #2 program
INFO  16:07:27,736 - #20 test301
INFO  16:07:27,736 - #20 int
INFO  16:07:27,736 - #20 x
INFO  16:07:27,736 - #40 ;
INFO  16:07:27,736 - #47 {
INFO  16:07:27,751 - #20 int
INFO  16:07:27,751 - #20 fun
INFO  16:07:27,751 - #43 (
INFO  16:07:27,751 - #20 int
INFO  16:07:27,751 - #20 y
INFO  16:07:27,751 - #44 )
INFO  16:07:27,751 - #47 {
INFO  16:07:27,751 - #15 return
INFO  16:07:27,751 - #20 y
INFO  16:07:27,751 - #26 *
INFO  16:07:27,751 - #21 2
INFO  16:07:27,751 - #40 ;
INFO  16:07:27,751 - #48 }
INFO  16:07:27,751 - #16 void
INFO  16:07:27,751 - #20 main
INFO  16:07:27,751 - #43 (
INFO  16:07:27,751 - #44 )
INFO  16:07:27,751 - #47 {
INFO  16:07:27,751 - #20 x
INFO  16:07:27,751 - #37 =
INFO  16:07:27,751 - #20 fun
INFO  16:07:27,751 - #43 (
INFO  16:07:27,751 - #21 2
INFO  16:07:27,751 - #44 )
INFO  16:07:27,751 - #40 ;
INFO  16:07:27,751 - #48 }
INFO  16:07:27,751 - #48 }
INFO  16:07:27,751 - 

================SINTAKSNO STABLO====================


INFO  16:07:27,751 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             x
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermMulop(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                    MulopMul(
                    ) [MulopMul]
                    FactorNumConst(
                     2
                    ) [FactorNumConst]
                  ) [TermMulop]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               x
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FuncCallParams(
                        DesignatorSimple(
                         fun
                        ) [DesignatorSimple]
                        ActParsSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 2
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [ActParsSingle]
                      ) [FuncCallParams]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:07:27,751 - 

================SEMANTICKA OBRADA====================


INFO  16:07:27,767 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  16:07:27,767 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  16:07:27,767 - Pronadjen poziv funkcije 'fun' na liniji 12
INFO  16:07:27,767 - ===================================
INFO  16:07:27,767 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  16:07:27,782 - Parsiranje uspesno zavrseno!
INFO  16:41:26,744 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:41:26,813 - #2 program
INFO  16:41:26,813 - #20 test301
INFO  16:41:26,813 - #20 int
INFO  16:41:26,828 - #20 x
INFO  16:41:26,828 - #40 ;
INFO  16:41:26,828 - #47 {
INFO  16:41:26,828 - #16 void
INFO  16:41:26,828 - #20 fun
INFO  16:41:26,828 - #43 (
INFO  16:41:26,828 - #20 int
INFO  16:41:26,828 - #20 y
INFO  16:41:26,828 - #44 )
INFO  16:41:26,828 - #47 {
INFO  16:41:26,828 - #15 return
INFO  16:41:26,828 - #40 ;
INFO  16:41:26,828 - #48 }
INFO  16:41:26,828 - #16 void
INFO  16:41:26,828 - #20 main
INFO  16:41:26,828 - #43 (
INFO  16:41:26,828 - #44 )
INFO  16:41:26,828 - #47 {
INFO  16:41:26,828 - #20 x
INFO  16:41:26,828 - #37 =
INFO  16:41:26,828 - #20 fun
INFO  16:41:26,828 - #43 (
INFO  16:41:26,828 - #21 2
INFO  16:41:26,828 - #44 )
INFO  16:41:26,828 - #40 ;
INFO  16:41:26,828 - #48 }
INFO  16:41:26,828 - #48 }
INFO  16:41:26,828 - 

================SINTAKSNO STABLO====================


INFO  16:41:26,828 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             x
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodVoidDeclaration(
        MethodVoid2(
          MethodVoidName(
           fun
          ) [MethodVoidName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturn(
            ) [StmtReturn]
          ) [StatementSingle]
        ) [MethodVoid2]
      ) [MethodVoidDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               x
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FuncCallParams(
                        DesignatorSimple(
                         fun
                        ) [DesignatorSimple]
                        ActParsSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 2
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [ActParsSingle]
                      ) [FuncCallParams]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:41:26,828 - 

================SEMANTICKA OBRADA====================


INFO  16:41:26,844 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  16:41:26,844 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  16:41:26,844 - Pronadjen poziv funkcije 'fun' na liniji 12
ERROR 16:41:26,844 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 12
INFO  16:41:26,844 - ===================================
ERROR 16:41:26,844 - Parsiranje nije uspesno zavrseno!
INFO  16:41:42,915 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:41:42,952 - #2 program
INFO  16:41:42,952 - #20 test301
INFO  16:41:42,952 - #20 int
INFO  16:41:42,952 - #20 x
INFO  16:41:42,952 - #40 ;
INFO  16:41:42,968 - #47 {
INFO  16:41:42,968 - #16 void
INFO  16:41:42,968 - #20 fun
INFO  16:41:42,968 - #43 (
INFO  16:41:42,968 - #20 int
INFO  16:41:42,968 - #20 y
INFO  16:41:42,968 - #44 )
INFO  16:41:42,968 - #47 {
INFO  16:41:42,968 - #15 return
INFO  16:41:42,968 - #40 ;
INFO  16:41:42,968 - #48 }
INFO  16:41:42,968 - #16 void
INFO  16:41:42,968 - #20 main
INFO  16:41:42,968 - #43 (
INFO  16:41:42,968 - #44 )
INFO  16:41:42,968 - #47 {
INFO  16:41:42,968 - #20 fun
INFO  16:41:42,968 - #43 (
INFO  16:41:42,968 - #21 2
INFO  16:41:42,968 - #44 )
INFO  16:41:42,968 - #40 ;
INFO  16:41:42,968 - #48 }
INFO  16:41:42,968 - #48 }
INFO  16:41:42,968 - 

================SINTAKSNO STABLO====================


INFO  16:41:42,968 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             x
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodVoidDeclaration(
        MethodVoid2(
          MethodVoidName(
           fun
          ) [MethodVoidName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturn(
            ) [StmtReturn]
          ) [StatementSingle]
        ) [MethodVoid2]
      ) [MethodVoidDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorMethodCallParams(
              DesignatorSimple(
               fun
              ) [DesignatorSimple]
              ActParsSingle(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       2
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [ActParsSingle]
            ) [DesignatorMethodCallParams]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:41:42,968 - 

================SEMANTICKA OBRADA====================


INFO  16:41:42,984 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  16:41:42,984 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  16:41:42,984 - Pronadjen poziv funkcije 'fun' na liniji 12
INFO  16:41:42,984 - ===================================
INFO  16:41:42,984 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  16:41:42,984 - Parsiranje uspesno zavrseno!
INFO  16:42:15,551 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:42:15,588 - #2 program
INFO  16:42:15,588 - #20 test301
INFO  16:42:15,588 - #20 int
INFO  16:42:15,588 - #20 x
INFO  16:42:15,588 - #40 ;
INFO  16:42:15,588 - #47 {
INFO  16:42:15,588 - #16 void
INFO  16:42:15,588 - #20 fun
INFO  16:42:15,588 - #43 (
INFO  16:42:15,588 - #20 int
INFO  16:42:15,588 - #20 y
INFO  16:42:15,588 - #44 )
INFO  16:42:15,588 - #47 {
INFO  16:42:15,588 - #15 return
INFO  16:42:15,588 - #40 ;
INFO  16:42:15,588 - #48 }
INFO  16:42:15,588 - #16 void
INFO  16:42:15,588 - #20 main
INFO  16:42:15,588 - #43 (
INFO  16:42:15,588 - #44 )
INFO  16:42:15,588 - #47 {
INFO  16:42:15,588 - #20 fun
INFO  16:42:15,588 - #43 (
INFO  16:42:15,588 - #21 2
INFO  16:42:15,588 - #44 )
INFO  16:42:15,588 - #40 ;
INFO  16:42:15,588 - #48 }
INFO  16:42:15,588 - #48 }
INFO  16:42:15,588 - 

================SINTAKSNO STABLO====================


INFO  16:42:15,588 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             x
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodVoidDeclaration(
        MethodVoid2(
          MethodVoidName(
           fun
          ) [MethodVoidName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturn(
            ) [StmtReturn]
          ) [StatementSingle]
        ) [MethodVoid2]
      ) [MethodVoidDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorMethodCallParams(
              DesignatorSimple(
               fun
              ) [DesignatorSimple]
              ActParsSingle(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       2
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [ActParsSingle]
            ) [DesignatorMethodCallParams]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:42:15,588 - 

================SEMANTICKA OBRADA====================


INFO  16:42:15,604 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  16:42:15,604 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  16:42:15,604 - Pronadjen poziv funkcije 'fun' na liniji 12
INFO  16:42:15,604 - ===================================
INFO  16:42:15,604 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  16:42:15,620 - Parsiranje uspesno zavrseno!
INFO  21:37:19,652 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  21:37:19,721 - #2 program
INFO  21:37:19,721 - #20 test301
INFO  21:37:19,721 - #20 int
INFO  21:37:19,721 - #20 x
INFO  21:37:19,737 - #40 ;
INFO  21:37:19,737 - #47 {
INFO  21:37:19,737 - #16 void
INFO  21:37:19,737 - #20 fun
INFO  21:37:19,737 - #43 (
INFO  21:37:19,737 - #20 int
INFO  21:37:19,737 - #20 x
INFO  21:37:19,737 - #41 ,
INFO  21:37:19,737 - #20 int
INFO  21:37:19,737 - #20 y
INFO  21:37:19,737 - #44 )
INFO  21:37:19,737 - #47 {
INFO  21:37:19,737 - #15 return
INFO  21:37:19,737 - #40 ;
INFO  21:37:19,737 - #48 }
INFO  21:37:19,737 - #16 void
INFO  21:37:19,737 - #20 main
INFO  21:37:19,737 - #43 (
INFO  21:37:19,737 - #44 )
INFO  21:37:19,737 - #47 {
INFO  21:37:19,737 - #20 fun
INFO  21:37:19,737 - #43 (
INFO  21:37:19,737 - #21 2
INFO  21:37:19,737 - #41 ,
INFO  21:37:19,737 - #21 3
INFO  21:37:19,737 - #44 )
INFO  21:37:19,737 - #40 ;
INFO  21:37:19,737 - #48 }
INFO  21:37:19,737 - #48 }
INFO  21:37:19,737 - 

================SINTAKSNO STABLO====================


INFO  21:37:19,737 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             x
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodVoidDeclaration(
        MethodVoid2(
          MethodVoidName(
           fun
          ) [MethodVoidName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          StatementSingle(
            StmtReturn(
            ) [StmtReturn]
          ) [StatementSingle]
        ) [MethodVoid2]
      ) [MethodVoidDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorMethodCallParams(
              DesignatorSimple(
               fun
              ) [DesignatorSimple]
              ActParsMulti(
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       3
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [ActParsMulti]
            ) [DesignatorMethodCallParams]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  21:37:19,737 - 

================SEMANTICKA OBRADA====================


INFO  21:37:19,753 - Deklarisana globalna promenljiva 'x' na liniji 4
ERROR 21:37:19,753 - Semanticka greska - 'x' vec postoji na liniji 6
INFO  21:37:19,753 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  21:37:19,753 - Pronadjen poziv funkcije 'fun' na liniji 12
ERROR 21:37:19,753 - Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 12
INFO  21:37:19,753 - ===================================
ERROR 21:37:19,753 - Parsiranje nije uspesno zavrseno!
INFO  21:37:46,541 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  21:37:46,594 - #2 program
INFO  21:37:46,594 - #20 test301
INFO  21:37:46,594 - #47 {
INFO  21:37:46,594 - #16 void
INFO  21:37:46,594 - #20 fun
INFO  21:37:46,594 - #43 (
INFO  21:37:46,594 - #20 int
INFO  21:37:46,594 - #20 x
INFO  21:37:46,594 - #41 ,
INFO  21:37:46,594 - #20 int
INFO  21:37:46,594 - #20 y
INFO  21:37:46,594 - #44 )
INFO  21:37:46,594 - #47 {
INFO  21:37:46,594 - #15 return
INFO  21:37:46,594 - #40 ;
INFO  21:37:46,594 - #48 }
INFO  21:37:46,594 - #16 void
INFO  21:37:46,594 - #20 main
INFO  21:37:46,594 - #43 (
INFO  21:37:46,594 - #44 )
INFO  21:37:46,594 - #47 {
INFO  21:37:46,594 - #20 fun
INFO  21:37:46,594 - #43 (
INFO  21:37:46,594 - #21 2
INFO  21:37:46,594 - #41 ,
INFO  21:37:46,594 - #21 3
INFO  21:37:46,594 - #44 )
INFO  21:37:46,594 - #40 ;
INFO  21:37:46,594 - #48 }
INFO  21:37:46,594 - #48 }
INFO  21:37:46,594 - 

================SINTAKSNO STABLO====================


INFO  21:37:46,594 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDecMulti(
    MethodDeclSingle(
      MethodVoidDeclaration(
        MethodVoid2(
          MethodVoidName(
           fun
          ) [MethodVoidName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          StatementSingle(
            StmtReturn(
            ) [StmtReturn]
          ) [StatementSingle]
        ) [MethodVoid2]
      ) [MethodVoidDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorMethodCallParams(
              DesignatorSimple(
               fun
              ) [DesignatorSimple]
              ActParsMulti(
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       3
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [ActParsMulti]
            ) [DesignatorMethodCallParams]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  21:37:46,594 - 

================SEMANTICKA OBRADA====================


INFO  21:37:46,610 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  21:37:46,610 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  21:37:46,610 - Pronadjen poziv funkcije 'fun' na liniji 12
INFO  21:37:46,610 - ===================================
INFO  21:37:46,610 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  21:37:46,610 - Parsiranje uspesno zavrseno!
INFO  21:38:54,797 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  21:38:54,843 - #2 program
INFO  21:38:54,843 - #20 test301
INFO  21:38:54,843 - #20 int
INFO  21:38:54,843 - #20 a
INFO  21:38:54,843 - #40 ;
INFO  21:38:54,843 - #47 {
INFO  21:38:54,843 - #20 int
INFO  21:38:54,843 - #20 fun
INFO  21:38:54,843 - #43 (
INFO  21:38:54,843 - #20 int
INFO  21:38:54,843 - #20 x
INFO  21:38:54,843 - #41 ,
INFO  21:38:54,843 - #20 int
INFO  21:38:54,843 - #20 y
INFO  21:38:54,843 - #44 )
INFO  21:38:54,843 - #47 {
INFO  21:38:54,843 - #15 return
INFO  21:38:54,843 - #20 x
INFO  21:38:54,843 - #24 +
INFO  21:38:54,859 - #20 y
INFO  21:38:54,859 - #40 ;
INFO  21:38:54,859 - #48 }
INFO  21:38:54,859 - #16 void
INFO  21:38:54,859 - #20 main
INFO  21:38:54,859 - #43 (
INFO  21:38:54,859 - #44 )
INFO  21:38:54,859 - #47 {
INFO  21:38:54,859 - #20 a
INFO  21:38:54,859 - #37 =
INFO  21:38:54,859 - #20 fun
INFO  21:38:54,859 - #43 (
INFO  21:38:54,859 - #21 2
INFO  21:38:54,859 - #41 ,
INFO  21:38:54,859 - #21 3
INFO  21:38:54,859 - #44 )
INFO  21:38:54,859 - #40 ;
INFO  21:38:54,859 - #48 }
INFO  21:38:54,859 - #48 }
INFO  21:38:54,859 - 

================SINTAKSNO STABLO====================


INFO  21:38:54,859 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             a
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               a
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FuncCallParams(
                        DesignatorSimple(
                         fun
                        ) [DesignatorSimple]
                        ActParsMulti(
                          ActParsSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   2
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsSingle]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 3
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [ActParsMulti]
                      ) [FuncCallParams]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  21:38:54,859 - 

================SEMANTICKA OBRADA====================


INFO  21:38:54,875 - Deklarisana globalna promenljiva 'a' na liniji 4
INFO  21:38:54,875 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  21:38:54,875 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  21:38:54,875 - Pronadjen poziv funkcije 'fun' na liniji 12
INFO  21:38:54,881 - ===================================
INFO  21:38:54,881 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  21:38:54,881 - Parsiranje uspesno zavrseno!
INFO  21:41:23,986 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  21:41:24,071 - #2 program
INFO  21:41:24,071 - #20 test301
INFO  21:41:24,071 - #20 int
INFO  21:41:24,071 - #20 a
INFO  21:41:24,071 - #40 ;
INFO  21:41:24,071 - #47 {
INFO  21:41:24,071 - #20 int
INFO  21:41:24,071 - #20 fun
INFO  21:41:24,071 - #43 (
INFO  21:41:24,071 - #20 int
INFO  21:41:24,071 - #20 x
INFO  21:41:24,071 - #41 ,
INFO  21:41:24,071 - #20 int
INFO  21:41:24,071 - #20 y
INFO  21:41:24,071 - #44 )
INFO  21:41:24,071 - #47 {
INFO  21:41:24,071 - #15 return
INFO  21:41:24,071 - #20 x
INFO  21:41:24,071 - #24 +
INFO  21:41:24,071 - #20 y
INFO  21:41:24,071 - #40 ;
INFO  21:41:24,071 - #48 }
INFO  21:41:24,071 - #16 void
INFO  21:41:24,071 - #20 main
INFO  21:41:24,071 - #43 (
INFO  21:41:24,071 - #44 )
INFO  21:41:24,071 - #47 {
INFO  21:41:24,071 - #20 fun
INFO  21:41:24,071 - #43 (
INFO  21:41:24,071 - #21 2
INFO  21:41:24,087 - #41 ,
INFO  21:41:24,087 - #21 3
INFO  21:41:24,087 - #44 )
INFO  21:41:24,087 - #40 ;
INFO  21:41:24,087 - #48 }
INFO  21:41:24,087 - #48 }
INFO  21:41:24,087 - 

================SINTAKSNO STABLO====================


INFO  21:41:24,087 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             a
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorMethodCallParams(
              DesignatorSimple(
               fun
              ) [DesignatorSimple]
              ActParsMulti(
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       3
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [ActParsMulti]
            ) [DesignatorMethodCallParams]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  21:41:24,087 - 

================SEMANTICKA OBRADA====================


INFO  21:41:24,102 - Deklarisana globalna promenljiva 'a' na liniji 4
INFO  21:41:24,102 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  21:41:24,102 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  21:41:24,102 - Pronadjen poziv funkcije 'fun' na liniji 12
INFO  21:41:24,102 - ===================================
INFO  21:41:24,102 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  21:41:24,118 - Parsiranje uspesno zavrseno!
INFO  23:44:52,570 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:44:52,623 - #2 program
INFO  23:44:52,623 - #20 test301
INFO  23:44:52,623 - #20 int
INFO  23:44:52,623 - #20 a
INFO  23:44:52,623 - #40 ;
INFO  23:44:52,623 - #47 {
INFO  23:44:52,623 - #20 int
INFO  23:44:52,623 - #20 fun
INFO  23:44:52,623 - #43 (
INFO  23:44:52,623 - #20 int
INFO  23:44:52,623 - #20 x
INFO  23:44:52,623 - #41 ,
INFO  23:44:52,623 - #20 int
INFO  23:44:52,623 - #20 y
INFO  23:44:52,623 - #44 )
INFO  23:44:52,623 - #47 {
INFO  23:44:52,623 - #15 return
INFO  23:44:52,623 - #20 x
INFO  23:44:52,623 - #24 +
INFO  23:44:52,623 - #20 y
INFO  23:44:52,623 - #40 ;
INFO  23:44:52,623 - #48 }
INFO  23:44:52,623 - #16 void
INFO  23:44:52,623 - #20 main
INFO  23:44:52,623 - #43 (
INFO  23:44:52,623 - #44 )
INFO  23:44:52,623 - #47 {
INFO  23:44:52,623 - #20 a
INFO  23:44:52,623 - #37 =
INFO  23:44:52,623 - #20 fun
INFO  23:44:52,623 - #43 (
INFO  23:44:52,623 - #21 2
INFO  23:44:52,623 - #41 ,
INFO  23:44:52,623 - #21 3
INFO  23:44:52,623 - #44 )
INFO  23:44:52,623 - #40 ;
INFO  23:44:52,623 - #48 }
INFO  23:44:52,623 - #48 }
INFO  23:44:52,623 - 

================SINTAKSNO STABLO====================


INFO  23:44:52,623 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             a
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               a
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FuncCallParams(
                        DesignatorSimple(
                         fun
                        ) [DesignatorSimple]
                        ActParsMulti(
                          ActParsSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   2
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsSingle]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 3
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [ActParsMulti]
                      ) [FuncCallParams]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  23:44:52,623 - 

================SEMANTICKA OBRADA====================


INFO  23:44:52,639 - Deklarisana globalna promenljiva 'a' na liniji 4
INFO  23:44:52,639 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  23:44:52,639 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  23:44:52,639 - Pronadjen poziv funkcije 'fun' na liniji 12
INFO  23:44:52,639 - ===================================
INFO  23:44:52,639 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  23:44:52,655 - Parsiranje uspesno zavrseno!
INFO  23:46:29,762 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:46:29,795 - #2 program
INFO  23:46:29,795 - #20 test301
INFO  23:46:29,795 - #20 int
INFO  23:46:29,795 - #20 a
INFO  23:46:29,795 - #40 ;
INFO  23:46:29,795 - #47 {
INFO  23:46:29,795 - #20 int
INFO  23:46:29,795 - #20 fun
INFO  23:46:29,810 - #43 (
INFO  23:46:29,810 - #20 int
INFO  23:46:29,810 - #20 x
INFO  23:46:29,810 - #41 ,
INFO  23:46:29,810 - #20 int
INFO  23:46:29,810 - #20 y
INFO  23:46:29,810 - #44 )
INFO  23:46:29,810 - #47 {
INFO  23:46:29,810 - #15 return
INFO  23:46:29,810 - #20 x
INFO  23:46:29,810 - #24 +
INFO  23:46:29,810 - #20 y
INFO  23:46:29,810 - #40 ;
INFO  23:46:29,810 - #48 }
INFO  23:46:29,810 - #16 void
INFO  23:46:29,810 - #20 main
INFO  23:46:29,810 - #43 (
INFO  23:46:29,810 - #44 )
INFO  23:46:29,810 - #47 {
INFO  23:46:29,810 - #20 a
INFO  23:46:29,810 - #37 =
INFO  23:46:29,810 - #20 fun
INFO  23:46:29,810 - #43 (
INFO  23:46:29,810 - #21 2
INFO  23:46:29,810 - #24 +
INFO  23:46:29,810 - #21 3
INFO  23:46:29,810 - #41 ,
INFO  23:46:29,810 - #21 3
INFO  23:46:29,810 - #26 *
INFO  23:46:29,810 - #21 10
INFO  23:46:29,810 - #44 )
INFO  23:46:29,810 - #40 ;
INFO  23:46:29,810 - #13 print
INFO  23:46:29,810 - #43 (
INFO  23:46:29,810 - #20 a
INFO  23:46:29,810 - #44 )
INFO  23:46:29,810 - #40 ;
INFO  23:46:29,810 - #48 }
INFO  23:46:29,810 - #48 }
INFO  23:46:29,810 - 

================SINTAKSNO STABLO====================


INFO  23:46:29,810 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             a
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 a
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     a
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  23:46:29,810 - 

================SEMANTICKA OBRADA====================


INFO  23:46:29,826 - Deklarisana globalna promenljiva 'a' na liniji 4
INFO  23:46:29,826 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  23:46:29,826 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  23:46:29,826 - Pronadjen poziv funkcije 'fun' na liniji 12
INFO  23:46:29,826 - ===================================
INFO  23:46:29,826 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  23:46:29,842 - Parsiranje uspesno zavrseno!
INFO  23:47:18,454 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:47:18,516 - #2 program
INFO  23:47:18,516 - #20 test301
INFO  23:47:18,516 - #20 int
INFO  23:47:18,516 - #20 a
INFO  23:47:18,516 - #40 ;
INFO  23:47:18,532 - #47 {
INFO  23:47:18,532 - #20 int
INFO  23:47:18,532 - #20 fun
INFO  23:47:18,532 - #43 (
INFO  23:47:18,532 - #20 int
INFO  23:47:18,532 - #20 x
INFO  23:47:18,532 - #41 ,
INFO  23:47:18,532 - #20 int
INFO  23:47:18,532 - #20 y
INFO  23:47:18,532 - #44 )
INFO  23:47:18,532 - #47 {
INFO  23:47:18,532 - #48 }
INFO  23:47:18,532 - #16 void
INFO  23:47:18,532 - #20 main
INFO  23:47:18,532 - #43 (
INFO  23:47:18,532 - #44 )
INFO  23:47:18,532 - #47 {
INFO  23:47:18,532 - #20 a
INFO  23:47:18,532 - #37 =
INFO  23:47:18,532 - #20 fun
INFO  23:47:18,532 - #43 (
INFO  23:47:18,532 - #21 2
INFO  23:47:18,532 - #24 +
INFO  23:47:18,532 - #21 3
INFO  23:47:18,532 - #41 ,
INFO  23:47:18,539 - #21 3
INFO  23:47:18,539 - #26 *
INFO  23:47:18,539 - #21 10
INFO  23:47:18,539 - #44 )
INFO  23:47:18,539 - #40 ;
INFO  23:47:18,539 - #13 print
INFO  23:47:18,539 - #43 (
INFO  23:47:18,539 - #20 a
INFO  23:47:18,539 - #44 )
INFO  23:47:18,539 - #40 ;
INFO  23:47:18,539 - #48 }
INFO  23:47:18,539 - #48 }
INFO  23:47:18,539 - 

================SINTAKSNO STABLO====================


INFO  23:47:18,539 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             a
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 a
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     a
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  23:47:18,539 - 

================SEMANTICKA OBRADA====================


INFO  23:47:18,554 - Deklarisana globalna promenljiva 'a' na liniji 4
INFO  23:47:18,554 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  23:47:18,554 - Formalni parametar funkcije fun: 'y' na liniji 6
ERROR 23:47:18,554 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  23:47:18,554 - Pronadjen poziv funkcije 'fun' na liniji 12
INFO  23:47:18,554 - ===================================
ERROR 23:47:18,554 - Parsiranje nije uspesno zavrseno!
INFO  23:47:46,912 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:47:46,966 - #2 program
INFO  23:47:46,966 - #20 test301
INFO  23:47:46,966 - #20 int
INFO  23:47:46,966 - #20 a
INFO  23:47:46,966 - #40 ;
INFO  23:47:46,966 - #47 {
INFO  23:47:46,966 - #20 int
INFO  23:47:46,966 - #20 fun
INFO  23:47:46,966 - #43 (
INFO  23:47:46,966 - #20 int
INFO  23:47:46,966 - #20 x
INFO  23:47:46,966 - #41 ,
INFO  23:47:46,966 - #20 int
INFO  23:47:46,966 - #20 y
INFO  23:47:46,966 - #44 )
INFO  23:47:46,966 - #47 {
INFO  23:47:46,966 - #48 }
INFO  23:47:46,966 - #16 void
INFO  23:47:46,966 - #20 main
INFO  23:47:46,966 - #43 (
INFO  23:47:46,966 - #44 )
INFO  23:47:46,966 - #47 {
INFO  23:47:46,966 - #20 a
INFO  23:47:46,966 - #37 =
INFO  23:47:46,966 - #20 fun
INFO  23:47:46,966 - #43 (
INFO  23:47:46,966 - #21 2
INFO  23:47:46,966 - #24 +
INFO  23:47:46,966 - #21 3
INFO  23:47:46,966 - #41 ,
INFO  23:47:46,966 - #21 3
INFO  23:47:46,966 - #26 *
INFO  23:47:46,966 - #21 10
INFO  23:47:46,966 - #44 )
INFO  23:47:46,966 - #40 ;
INFO  23:47:46,966 - #13 print
INFO  23:47:46,966 - #43 (
INFO  23:47:46,966 - #20 a
INFO  23:47:46,966 - #44 )
INFO  23:47:46,966 - #40 ;
INFO  23:47:46,966 - #48 }
INFO  23:47:46,966 - #48 }
INFO  23:47:46,966 - 

================SINTAKSNO STABLO====================


INFO  23:47:46,966 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             a
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 a
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     a
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  23:47:46,966 - 

================SEMANTICKA OBRADA====================


INFO  23:47:46,981 - Deklarisana globalna promenljiva 'a' na liniji 4
INFO  23:47:46,981 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  23:47:46,981 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  23:47:46,981 - Pronadjen poziv funkcije 'fun' na liniji 12
INFO  23:47:46,981 - ===================================
INFO  23:47:46,981 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  23:47:46,981 - Parsiranje uspesno zavrseno!
INFO  23:48:42,471 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:48:42,517 - #2 program
INFO  23:48:42,517 - #20 test301
INFO  23:48:42,517 - #20 int
INFO  23:48:42,517 - #20 a
INFO  23:48:42,517 - #40 ;
INFO  23:48:42,517 - #47 {
INFO  23:48:42,517 - #20 int
INFO  23:48:42,517 - #20 fun
INFO  23:48:42,517 - #43 (
INFO  23:48:42,517 - #20 int
INFO  23:48:42,517 - #20 x
INFO  23:48:42,517 - #41 ,
INFO  23:48:42,517 - #20 int
INFO  23:48:42,517 - #20 y
INFO  23:48:42,517 - #44 )
INFO  23:48:42,517 - #47 {
INFO  23:48:42,517 - #15 return
INFO  23:48:42,524 - #20 x
INFO  23:48:42,524 - #24 +
INFO  23:48:42,524 - #20 y
INFO  23:48:42,524 - #40 ;
INFO  23:48:42,524 - #48 }
INFO  23:48:42,524 - #16 void
INFO  23:48:42,524 - #20 main
INFO  23:48:42,524 - #43 (
INFO  23:48:42,524 - #44 )
INFO  23:48:42,524 - #47 {
INFO  23:48:42,524 - #20 a
INFO  23:48:42,524 - #37 =
INFO  23:48:42,524 - #20 fun
INFO  23:48:42,524 - #43 (
INFO  23:48:42,524 - #21 2
INFO  23:48:42,524 - #24 +
INFO  23:48:42,524 - #21 3
INFO  23:48:42,524 - #41 ,
INFO  23:48:42,524 - #21 3
INFO  23:48:42,524 - #26 *
INFO  23:48:42,524 - #21 10
INFO  23:48:42,524 - #44 )
INFO  23:48:42,524 - #40 ;
INFO  23:48:42,524 - #13 print
INFO  23:48:42,524 - #43 (
INFO  23:48:42,524 - #20 a
INFO  23:48:42,524 - #44 )
INFO  23:48:42,524 - #40 ;
INFO  23:48:42,524 - #48 }
INFO  23:48:42,524 - #48 }
INFO  23:48:42,524 - 

================SINTAKSNO STABLO====================


INFO  23:48:42,524 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             a
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 a
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     a
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  23:48:42,524 - 

================SEMANTICKA OBRADA====================


INFO  23:48:42,540 - Deklarisana globalna promenljiva 'a' na liniji 4
INFO  23:48:42,540 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  23:48:42,540 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  23:48:42,540 - Pronadjen poziv funkcije 'fun' na liniji 12
INFO  23:48:42,540 - ===================================
INFO  23:48:42,540 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  23:48:42,555 - Parsiranje uspesno zavrseno!
