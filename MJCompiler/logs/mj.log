INFO  17:39:16,329 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:39:16,389 - #2 program
INFO  17:39:16,389 - #20 MJProgram
INFO  17:39:16,389 - #7 const
INFO  17:39:16,389 - #20 int
INFO  17:39:16,389 - #20 m
INFO  17:39:16,390 - #37 =
INFO  17:39:16,390 - #21 1
INFO  17:39:16,390 - #40 ;
INFO  17:39:16,391 - #20 int
INFO  17:39:16,391 - #20 global
INFO  17:39:16,391 - #41 ,
INFO  17:39:16,392 - #20 globarArr
INFO  17:39:16,392 - #45 [
INFO  17:39:16,392 - #46 ]
INFO  17:39:16,392 - #40 ;
INFO  17:39:16,392 - #47 {
INFO  17:39:16,393 - #20 int
INFO  17:39:16,393 - #20 fun
INFO  17:39:16,393 - #43 (
INFO  17:39:16,393 - #20 int
INFO  17:39:16,393 - #20 x
INFO  17:39:16,394 - #44 )
INFO  17:39:16,395 - #47 {
INFO  17:39:16,395 - #15 return
INFO  17:39:16,395 - #21 1
INFO  17:39:16,395 - #40 ;
INFO  17:39:16,396 - #48 }
INFO  17:39:16,396 - #16 void
INFO  17:39:16,397 - #20 main
INFO  17:39:16,397 - #43 (
INFO  17:39:16,397 - #44 )
INFO  17:39:16,397 - #20 int
INFO  17:39:16,397 - #20 b
INFO  17:39:16,397 - #41 ,
INFO  17:39:16,397 - #20 a
INFO  17:39:16,397 - #45 [
INFO  17:39:16,398 - #46 ]
INFO  17:39:16,398 - #40 ;
INFO  17:39:16,398 - #47 {
INFO  17:39:16,398 - #20 a
INFO  17:39:16,398 - #45 [
INFO  17:39:16,398 - #21 1
INFO  17:39:16,398 - #46 ]
INFO  17:39:16,398 - #37 =
INFO  17:39:16,398 - #22 a
INFO  17:39:16,398 - #40 ;
INFO  17:39:16,399 - #20 funk
INFO  17:39:16,399 - #43 (
INFO  17:39:16,399 - #20 m
INFO  17:39:16,399 - #44 )
INFO  17:39:16,399 - #40 ;
INFO  17:39:16,399 - #48 }
INFO  17:39:16,400 - #48 }
INFO  17:39:16,400 - 

================SINTAKSNO STABLO====================


INFO  17:39:16,402 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorArray(
                 a
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         1
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [DesignatorArray]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtDesign(
            DesignatorMethodCall0(
              DesignatorSimple(
               funk
              ) [DesignatorSimple]
              ActParsSingle(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         m
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [ActParsSingle]
            ) [DesignatorMethodCall0]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  17:39:16,402 - 

================SEMANTICKA OBRADA====================


INFO  17:39:16,411 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  17:39:16,411 - Deklarisana konstanta 'm' na liniji 2
INFO  17:39:16,411 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  17:39:16,411 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  17:39:16,411 - Pocetak obrade metode fun na liniji 6
INFO  17:39:16,412 - Formalni parametar funkcije fun: 'x' na liniji 6
ERROR 17:39:16,412 - Semanticka greska - tip povratne vrednosti metode i tip vrednosti izraza u return naredbi se ne slazu na liniji 7
INFO  17:39:16,412 - Kraj obrade metode fun na liniji 6
INFO  17:39:16,412 - Pocetak obrade metode main na liniji 10
INFO  17:39:16,412 - Deklarisana promenljiva 'b' na liniji 10
INFO  17:39:16,412 - Deklarisan niz 'a' na liniji 10
INFO  17:39:42,309 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:39:42,356 - #2 program
INFO  17:39:42,356 - #20 MJProgram
INFO  17:39:42,356 - #7 const
INFO  17:39:42,356 - #20 int
INFO  17:39:42,356 - #20 m
INFO  17:39:42,357 - #37 =
INFO  17:39:42,357 - #21 1
INFO  17:39:42,357 - #40 ;
INFO  17:39:42,357 - #20 int
INFO  17:39:42,358 - #20 global
INFO  17:39:42,358 - #41 ,
INFO  17:39:42,358 - #20 globarArr
INFO  17:39:42,358 - #45 [
INFO  17:39:42,358 - #46 ]
INFO  17:39:42,358 - #40 ;
INFO  17:39:42,358 - #47 {
INFO  17:39:42,358 - #20 int
INFO  17:39:42,359 - #20 fun
INFO  17:39:42,359 - #43 (
INFO  17:39:42,359 - #20 int
INFO  17:39:42,359 - #20 x
INFO  17:39:42,359 - #44 )
INFO  17:39:42,359 - #47 {
INFO  17:39:42,359 - #15 return
INFO  17:39:42,359 - #21 1
INFO  17:39:42,359 - #40 ;
INFO  17:39:42,360 - #48 }
INFO  17:39:42,360 - #16 void
INFO  17:39:42,361 - #20 main
INFO  17:39:42,361 - #43 (
INFO  17:39:42,361 - #44 )
INFO  17:39:42,361 - #20 int
INFO  17:39:42,361 - #20 b
INFO  17:39:42,361 - #41 ,
INFO  17:39:42,361 - #20 a
INFO  17:39:42,361 - #45 [
INFO  17:39:42,361 - #46 ]
INFO  17:39:42,361 - #40 ;
INFO  17:39:42,362 - #47 {
INFO  17:39:42,362 - #20 a
INFO  17:39:42,362 - #45 [
INFO  17:39:42,362 - #21 1
INFO  17:39:42,362 - #46 ]
INFO  17:39:42,362 - #37 =
INFO  17:39:42,362 - #22 a
INFO  17:39:42,362 - #40 ;
INFO  17:39:42,363 - #20 funk
INFO  17:39:42,363 - #43 (
INFO  17:39:42,363 - #20 m
INFO  17:39:42,363 - #44 )
INFO  17:39:42,363 - #40 ;
INFO  17:39:42,363 - #48 }
INFO  17:39:42,363 - #48 }
INFO  17:39:42,364 - 

================SINTAKSNO STABLO====================


INFO  17:39:42,365 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorArray(
                 a
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         1
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [DesignatorArray]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtDesign(
            DesignatorMethodCall0(
              DesignatorSimple(
               funk
              ) [DesignatorSimple]
              ActParsSingle(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         m
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [ActParsSingle]
            ) [DesignatorMethodCall0]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  17:39:42,366 - 

================SEMANTICKA OBRADA====================


INFO  17:39:42,377 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  17:39:42,378 - Deklarisana konstanta 'm' na liniji 2
INFO  17:39:42,378 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  17:39:42,378 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  17:39:42,378 - Pocetak obrade metode fun na liniji 6
INFO  17:39:42,378 - Formalni parametar funkcije fun: 'x' na liniji 6
ERROR 17:39:42,378 - Semanticka greska - tip povratne vrednosti metode i tip vrednosti izraza u return naredbi se ne slazu na liniji 7
INFO  17:39:42,378 - Kraj obrade metode fun na liniji 6
INFO  17:39:42,378 - Pocetak obrade metode main na liniji 10
INFO  17:39:42,378 - Deklarisana promenljiva 'b' na liniji 10
INFO  17:39:42,378 - Deklarisan niz 'a' na liniji 10
INFO  17:39:42,379 - Kraj obrade metode main na liniji 10
INFO  17:39:42,379 - Kraj obrade programa 'MJProgram' na liniji 1
INFO  17:39:42,379 - ===================================
INFO  17:40:01,784 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:40:01,843 - #2 program
INFO  17:40:01,843 - #20 MJProgram
INFO  17:40:01,844 - #7 const
INFO  17:40:01,844 - #20 int
INFO  17:40:01,844 - #20 m
INFO  17:40:01,845 - #37 =
INFO  17:40:01,845 - #21 1
INFO  17:40:01,845 - #40 ;
INFO  17:40:01,846 - #20 int
INFO  17:40:01,846 - #20 global
INFO  17:40:01,847 - #41 ,
INFO  17:40:01,847 - #20 globarArr
INFO  17:40:01,847 - #45 [
INFO  17:40:01,847 - #46 ]
INFO  17:40:01,847 - #40 ;
INFO  17:40:01,847 - #47 {
INFO  17:40:01,848 - #20 int
INFO  17:40:01,848 - #20 fun
INFO  17:40:01,848 - #43 (
INFO  17:40:01,848 - #20 int
INFO  17:40:01,848 - #20 x
INFO  17:40:01,848 - #44 )
INFO  17:40:01,849 - #47 {
INFO  17:40:01,849 - #15 return
INFO  17:40:01,849 - #21 1
INFO  17:40:01,849 - #40 ;
INFO  17:40:01,850 - #48 }
INFO  17:40:01,850 - #16 void
INFO  17:40:01,851 - #20 main
INFO  17:40:01,851 - #43 (
INFO  17:40:01,851 - #44 )
INFO  17:40:01,851 - #20 int
INFO  17:40:01,851 - #20 b
INFO  17:40:01,851 - #41 ,
INFO  17:40:01,852 - #20 a
INFO  17:40:01,852 - #45 [
INFO  17:40:01,852 - #46 ]
INFO  17:40:01,852 - #40 ;
INFO  17:40:01,852 - #47 {
INFO  17:40:01,853 - #20 a
INFO  17:40:01,853 - #45 [
INFO  17:40:01,853 - #21 1
INFO  17:40:01,853 - #46 ]
INFO  17:40:01,853 - #37 =
INFO  17:40:01,854 - #22 a
INFO  17:40:01,854 - #40 ;
INFO  17:40:01,854 - #20 funk
INFO  17:40:01,854 - #43 (
INFO  17:40:01,855 - #20 m
INFO  17:40:01,855 - #44 )
INFO  17:40:01,855 - #40 ;
INFO  17:40:01,855 - #14 read
INFO  17:40:01,855 - #43 (
INFO  17:40:01,855 - #20 b
INFO  17:40:01,855 - #44 )
INFO  17:40:01,855 - #40 ;
INFO  17:40:01,855 - #48 }
INFO  17:40:01,856 - #48 }
INFO  17:40:01,857 - 

================SINTAKSNO STABLO====================


INFO  17:40:01,858 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 funk
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  17:40:01,860 - 

================SEMANTICKA OBRADA====================


INFO  17:40:01,870 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  17:40:01,871 - Deklarisana konstanta 'm' na liniji 2
INFO  17:40:01,872 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  17:40:01,872 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  17:40:01,872 - Pocetak obrade metode fun na liniji 6
INFO  17:40:01,872 - Formalni parametar funkcije fun: 'x' na liniji 6
ERROR 17:40:01,872 - Semanticka greska - tip povratne vrednosti metode i tip vrednosti izraza u return naredbi se ne slazu na liniji 7
INFO  17:40:01,872 - Kraj obrade metode fun na liniji 6
INFO  17:40:01,872 - Pocetak obrade metode main na liniji 10
INFO  17:40:01,873 - Deklarisana promenljiva 'b' na liniji 10
INFO  17:40:01,873 - Deklarisan niz 'a' na liniji 10
INFO  17:46:36,210 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:46:36,257 - #2 program
INFO  17:46:36,257 - #20 MJProgram
INFO  17:46:36,258 - #7 const
INFO  17:46:36,258 - #20 int
INFO  17:46:36,258 - #20 m
INFO  17:46:36,258 - #37 =
INFO  17:46:36,258 - #21 1
INFO  17:46:36,259 - #40 ;
INFO  17:46:36,259 - #20 int
INFO  17:46:36,259 - #20 global
INFO  17:46:36,260 - #41 ,
INFO  17:46:36,260 - #20 globarArr
INFO  17:46:36,260 - #45 [
INFO  17:46:36,260 - #46 ]
INFO  17:46:36,260 - #40 ;
INFO  17:46:36,260 - #47 {
INFO  17:46:36,260 - #20 int
INFO  17:46:36,260 - #20 fun
INFO  17:46:36,260 - #43 (
INFO  17:46:36,261 - #20 int
INFO  17:46:36,261 - #20 x
INFO  17:46:36,261 - #44 )
INFO  17:46:36,262 - #47 {
INFO  17:46:36,262 - #15 return
INFO  17:46:36,262 - #21 1
INFO  17:46:36,262 - #40 ;
INFO  17:46:36,262 - #48 }
INFO  17:46:36,263 - #16 void
INFO  17:46:36,263 - #20 main
INFO  17:46:36,263 - #43 (
INFO  17:46:36,263 - #44 )
INFO  17:46:36,263 - #20 int
INFO  17:46:36,263 - #20 b
INFO  17:46:36,263 - #41 ,
INFO  17:46:36,264 - #20 a
INFO  17:46:36,264 - #45 [
INFO  17:46:36,264 - #46 ]
INFO  17:46:36,264 - #40 ;
INFO  17:46:36,264 - #47 {
INFO  17:46:36,264 - #20 a
INFO  17:46:36,264 - #45 [
INFO  17:46:36,264 - #21 1
INFO  17:46:36,264 - #46 ]
INFO  17:46:36,265 - #37 =
INFO  17:46:36,265 - #22 a
INFO  17:46:36,265 - #40 ;
INFO  17:46:36,265 - #20 funk
INFO  17:46:36,265 - #43 (
INFO  17:46:36,265 - #20 m
INFO  17:46:36,265 - #44 )
INFO  17:46:36,266 - #40 ;
INFO  17:46:36,266 - #14 read
INFO  17:46:36,266 - #43 (
INFO  17:46:36,266 - #20 b
INFO  17:46:36,266 - #44 )
INFO  17:46:36,266 - #40 ;
INFO  17:46:36,266 - #48 }
INFO  17:46:36,266 - #48 }
INFO  17:46:36,267 - 

================SINTAKSNO STABLO====================


INFO  17:46:36,270 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 funk
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  17:46:36,272 - 

================SEMANTICKA OBRADA====================


INFO  17:46:36,284 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  17:46:36,285 - Deklarisana konstanta 'm' na liniji 2
INFO  17:46:36,286 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  17:46:36,286 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  17:46:36,286 - Pocetak obrade metode fun na liniji 6
INFO  17:46:36,286 - Formalni parametar funkcije fun: 'x' na liniji 6
ERROR 17:46:36,286 - Semanticka greska - tip povratne vrednosti metode i tip vrednosti izraza u return naredbi se ne slazu na liniji 7
INFO  17:46:36,286 - Kraj obrade metode fun na liniji 6
INFO  17:46:36,286 - Pocetak obrade metode main na liniji 10
INFO  17:46:36,286 - Deklarisana promenljiva 'b' na liniji 10
INFO  17:46:36,286 - Deklarisan niz 'a' na liniji 10
ERROR 17:46:36,286 - Semanticka greska - nevalidan pristup elementu niza na liniji 13
ERROR 17:46:36,286 - Semanticka greska - 'funk' nije deklarisano na liniji 14
ERROR 17:46:36,286 - Semanticka greska - izraz u read naredbi mora biti int, char ili bool tipa na liniji 15
INFO  17:46:36,286 - Kraj obrade metode main na liniji 10
INFO  17:46:36,287 - Kraj obrade programa 'MJProgram' na liniji 1
INFO  17:46:36,287 - ===================================
INFO  17:47:12,778 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:47:12,838 - #2 program
INFO  17:47:12,838 - #20 MJProgram
INFO  17:47:12,838 - #7 const
INFO  17:47:12,838 - #20 int
INFO  17:47:12,839 - #20 m
INFO  17:47:12,839 - #37 =
INFO  17:47:12,839 - #21 1
INFO  17:47:12,839 - #40 ;
INFO  17:47:12,840 - #20 int
INFO  17:47:12,841 - #20 global
INFO  17:47:12,841 - #41 ,
INFO  17:47:12,841 - #20 globarArr
INFO  17:47:12,841 - #45 [
INFO  17:47:12,841 - #46 ]
INFO  17:47:12,841 - #40 ;
INFO  17:47:12,842 - #47 {
INFO  17:47:12,842 - #20 int
INFO  17:47:12,842 - #20 fun
INFO  17:47:12,842 - #43 (
INFO  17:47:12,843 - #20 int
INFO  17:47:12,843 - #20 x
INFO  17:47:12,843 - #44 )
INFO  17:47:12,843 - #47 {
INFO  17:47:12,844 - #15 return
INFO  17:47:12,844 - #21 1
INFO  17:47:12,844 - #40 ;
INFO  17:47:12,845 - #48 }
INFO  17:47:12,845 - #16 void
INFO  17:47:12,845 - #20 main
INFO  17:47:12,846 - #43 (
INFO  17:47:12,846 - #44 )
INFO  17:47:12,846 - #20 int
INFO  17:47:12,846 - #20 b
INFO  17:47:12,846 - #41 ,
INFO  17:47:12,846 - #20 a
INFO  17:47:12,846 - #45 [
INFO  17:47:12,847 - #46 ]
INFO  17:47:12,847 - #40 ;
INFO  17:47:12,847 - #47 {
INFO  17:47:12,847 - #20 a
INFO  17:47:12,847 - #45 [
INFO  17:47:12,847 - #21 1
INFO  17:47:12,847 - #46 ]
INFO  17:47:12,848 - #37 =
INFO  17:47:12,848 - #22 a
INFO  17:47:12,848 - #40 ;
INFO  17:47:12,848 - #20 funk
INFO  17:47:12,849 - #43 (
INFO  17:47:12,849 - #20 m
INFO  17:47:12,849 - #44 )
INFO  17:47:12,849 - #40 ;
INFO  17:47:12,849 - #14 read
INFO  17:47:12,849 - #43 (
INFO  17:47:12,849 - #20 b
INFO  17:47:12,850 - #44 )
INFO  17:47:12,850 - #40 ;
INFO  17:47:12,850 - #48 }
INFO  17:47:12,850 - #48 }
INFO  17:47:12,851 - 

================SINTAKSNO STABLO====================


INFO  17:47:12,852 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 funk
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  17:47:12,854 - 

================SEMANTICKA OBRADA====================


INFO  17:47:12,864 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  17:47:12,865 - Deklarisana konstanta 'm' na liniji 2
INFO  17:47:12,865 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  17:47:12,865 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  17:47:12,865 - Pocetak obrade metode fun na liniji 6
INFO  17:47:12,865 - Formalni parametar funkcije fun: 'x' na liniji 6
ERROR 17:47:12,865 - Semanticka greska - tip povratne vrednosti metode i tip vrednosti izraza u return naredbi se ne slazu na liniji 7
INFO  17:47:12,865 - Kraj obrade metode fun na liniji 6
INFO  17:47:12,865 - Pocetak obrade metode main na liniji 10
INFO  17:47:12,865 - Deklarisana promenljiva 'b' na liniji 10
INFO  17:47:12,866 - Deklarisan niz 'a' na liniji 10
ERROR 17:47:12,866 - Semanticka greska - nevalidan pristup elementu niza na liniji 13
ERROR 17:47:12,866 - Semanticka greska - 'funk' nije deklarisano na liniji 14
ERROR 17:47:12,866 - Semanticka greska - izraz u read naredbi mora biti int, char ili bool tipa na liniji 15
INFO  17:47:12,866 - Kraj obrade metode main na liniji 10
INFO  17:47:12,866 - Kraj obrade programa 'MJProgram' na liniji 1
INFO  17:47:12,867 - ===================================
INFO  17:47:43,344 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:47:43,392 - #2 program
INFO  17:47:43,392 - #20 MJProgram
INFO  17:47:43,392 - #7 const
INFO  17:47:43,393 - #20 int
INFO  17:47:43,393 - #20 m
INFO  17:47:43,393 - #37 =
INFO  17:47:43,393 - #21 1
INFO  17:47:43,393 - #40 ;
INFO  17:47:43,394 - #20 int
INFO  17:47:43,394 - #20 global
INFO  17:47:43,394 - #41 ,
INFO  17:47:43,395 - #20 globarArr
INFO  17:47:43,395 - #45 [
INFO  17:47:43,395 - #46 ]
INFO  17:47:43,395 - #40 ;
INFO  17:47:43,395 - #47 {
INFO  17:47:43,395 - #20 int
INFO  17:47:43,395 - #20 fun
INFO  17:47:43,395 - #43 (
INFO  17:47:43,395 - #20 int
INFO  17:47:43,395 - #20 x
INFO  17:47:43,396 - #44 )
INFO  17:47:43,396 - #47 {
INFO  17:47:43,396 - #15 return
INFO  17:47:43,396 - #21 1
INFO  17:47:43,396 - #40 ;
INFO  17:47:43,397 - #48 }
INFO  17:47:43,397 - #16 void
INFO  17:47:43,397 - #20 main
INFO  17:47:43,397 - #43 (
INFO  17:47:43,398 - #44 )
INFO  17:47:43,398 - #20 int
INFO  17:47:43,398 - #20 b
INFO  17:47:43,398 - #41 ,
INFO  17:47:43,398 - #20 a
INFO  17:47:43,398 - #45 [
INFO  17:47:43,398 - #46 ]
INFO  17:47:43,398 - #40 ;
INFO  17:47:43,399 - #47 {
INFO  17:47:43,399 - #20 a
INFO  17:47:43,399 - #45 [
INFO  17:47:43,399 - #21 1
INFO  17:47:43,399 - #46 ]
INFO  17:47:43,399 - #37 =
INFO  17:47:43,400 - #22 a
INFO  17:47:43,400 - #40 ;
INFO  17:47:43,400 - #20 funk
INFO  17:47:43,400 - #43 (
INFO  17:47:43,400 - #20 m
INFO  17:47:43,400 - #44 )
INFO  17:47:43,401 - #40 ;
INFO  17:47:43,401 - #14 read
INFO  17:47:43,401 - #43 (
INFO  17:47:43,401 - #20 b
INFO  17:47:43,401 - #44 )
INFO  17:47:43,401 - #40 ;
INFO  17:47:43,401 - #48 }
INFO  17:47:43,401 - #48 }
INFO  17:47:43,402 - 

================SINTAKSNO STABLO====================


INFO  17:47:43,403 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 funk
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  17:47:43,404 - 

================SEMANTICKA OBRADA====================


INFO  17:47:43,414 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  17:47:43,414 - Deklarisana konstanta 'm' na liniji 2
INFO  17:47:43,414 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  17:47:43,414 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  17:47:43,414 - Pocetak obrade metode fun na liniji 6
INFO  17:47:43,415 - Formalni parametar funkcije fun: 'x' na liniji 6
ERROR 17:47:43,415 - Semanticka greska - tip povratne vrednosti metode i tip vrednosti izraza u return naredbi se ne slazu na liniji 7
INFO  17:47:43,415 - Kraj obrade metode fun na liniji 6
INFO  17:47:43,415 - Pocetak obrade metode main na liniji 10
INFO  17:47:43,415 - Deklarisana promenljiva 'b' na liniji 10
INFO  17:47:43,415 - Deklarisan niz 'a' na liniji 10
ERROR 17:47:43,415 - Semanticka greska - nevalidan pristup elementu niza na liniji 13
INFO  17:48:53,816 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:48:53,864 - #2 program
INFO  17:48:53,864 - #20 MJProgram
INFO  17:48:53,864 - #7 const
INFO  17:48:53,865 - #20 int
INFO  17:48:53,865 - #20 m
INFO  17:48:53,865 - #37 =
INFO  17:48:53,865 - #21 1
INFO  17:48:53,865 - #40 ;
INFO  17:48:53,866 - #20 int
INFO  17:48:53,866 - #20 global
INFO  17:48:53,867 - #41 ,
INFO  17:48:53,867 - #20 globarArr
INFO  17:48:53,867 - #45 [
INFO  17:48:53,867 - #46 ]
INFO  17:48:53,867 - #40 ;
INFO  17:48:53,867 - #47 {
INFO  17:48:53,867 - #20 int
INFO  17:48:53,867 - #20 fun
INFO  17:48:53,867 - #43 (
INFO  17:48:53,868 - #20 int
INFO  17:48:53,868 - #20 x
INFO  17:48:53,868 - #44 )
INFO  17:48:53,868 - #47 {
INFO  17:48:53,868 - #15 return
INFO  17:48:53,868 - #21 1
INFO  17:48:53,868 - #40 ;
INFO  17:48:53,869 - #48 }
INFO  17:48:53,870 - #16 void
INFO  17:48:53,870 - #20 main
INFO  17:48:53,870 - #43 (
INFO  17:48:53,870 - #44 )
INFO  17:48:53,870 - #20 int
INFO  17:48:53,870 - #20 b
INFO  17:48:53,870 - #41 ,
INFO  17:48:53,870 - #20 a
INFO  17:48:53,871 - #45 [
INFO  17:48:53,871 - #46 ]
INFO  17:48:53,871 - #40 ;
INFO  17:48:53,871 - #47 {
INFO  17:48:53,871 - #20 a
INFO  17:48:53,871 - #45 [
INFO  17:48:53,871 - #21 1
INFO  17:48:53,871 - #46 ]
INFO  17:48:53,871 - #37 =
INFO  17:48:53,871 - #22 a
INFO  17:48:53,871 - #40 ;
INFO  17:48:53,872 - #20 funk
INFO  17:48:53,872 - #43 (
INFO  17:48:53,872 - #20 m
INFO  17:48:53,872 - #44 )
INFO  17:48:53,872 - #40 ;
INFO  17:48:53,872 - #14 read
INFO  17:48:53,873 - #43 (
INFO  17:48:53,873 - #20 b
INFO  17:48:53,873 - #44 )
INFO  17:48:53,873 - #40 ;
INFO  17:48:53,873 - #48 }
INFO  17:48:53,873 - #48 }
INFO  17:48:53,874 - 

================SINTAKSNO STABLO====================


INFO  17:48:53,874 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 funk
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  17:48:53,875 - 

================SEMANTICKA OBRADA====================


INFO  17:48:53,887 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  17:48:53,888 - Deklarisana konstanta 'm' na liniji 2
INFO  17:48:53,888 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  17:48:53,888 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  17:48:53,889 - Pocetak obrade metode fun na liniji 6
INFO  17:48:53,889 - Formalni parametar funkcije fun: 'x' na liniji 6
ERROR 17:48:53,889 - Semanticka greska - tip povratne vrednosti metode i tip vrednosti izraza u return naredbi se ne slazu na liniji 7
INFO  17:48:53,889 - Kraj obrade metode fun na liniji 6
INFO  17:48:53,889 - Pocetak obrade metode main na liniji 10
INFO  17:48:53,889 - Deklarisana promenljiva 'b' na liniji 10
INFO  17:48:53,889 - Deklarisan niz 'a' na liniji 10
ERROR 17:48:53,889 - Semanticka greska - nevalidan pristup elementu niza na liniji 13
ERROR 17:48:53,889 - AssignmentExpr ExprOne(
  ExprSingle(
    TermSingle(
      FactorCharConst(
       a
      ) [FactorCharConst]
    ) [TermSingle]
  ) [ExprSingle]
) [ExprOne] na liniji 13
INFO  17:49:36,704 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:49:36,760 - #2 program
INFO  17:49:36,760 - #20 MJProgram
INFO  17:49:36,761 - #7 const
INFO  17:49:36,761 - #20 int
INFO  17:49:36,761 - #20 m
INFO  17:49:36,762 - #37 =
INFO  17:49:36,762 - #21 1
INFO  17:49:36,762 - #40 ;
INFO  17:49:36,763 - #20 int
INFO  17:49:36,763 - #20 global
INFO  17:49:36,763 - #41 ,
INFO  17:49:36,764 - #20 globarArr
INFO  17:49:36,764 - #45 [
INFO  17:49:36,764 - #46 ]
INFO  17:49:36,764 - #40 ;
INFO  17:49:36,764 - #47 {
INFO  17:49:36,764 - #20 int
INFO  17:49:36,765 - #20 fun
INFO  17:49:36,765 - #43 (
INFO  17:49:36,765 - #20 int
INFO  17:49:36,765 - #20 x
INFO  17:49:36,766 - #44 )
INFO  17:49:36,766 - #47 {
INFO  17:49:36,766 - #15 return
INFO  17:49:36,767 - #21 1
INFO  17:49:36,767 - #40 ;
INFO  17:49:36,767 - #48 }
INFO  17:49:36,767 - #16 void
INFO  17:49:36,768 - #20 main
INFO  17:49:36,768 - #43 (
INFO  17:49:36,768 - #44 )
INFO  17:49:36,768 - #20 int
INFO  17:49:36,768 - #20 b
INFO  17:49:36,768 - #41 ,
INFO  17:49:36,768 - #20 a
INFO  17:49:36,769 - #45 [
INFO  17:49:36,769 - #46 ]
INFO  17:49:36,769 - #40 ;
INFO  17:49:36,769 - #47 {
INFO  17:49:36,769 - #20 a
INFO  17:49:36,769 - #45 [
INFO  17:49:36,769 - #21 1
INFO  17:49:36,769 - #46 ]
INFO  17:49:36,769 - #37 =
INFO  17:49:36,770 - #22 a
INFO  17:49:36,770 - #40 ;
INFO  17:49:36,770 - #20 funk
INFO  17:49:36,770 - #43 (
INFO  17:49:36,771 - #20 m
INFO  17:49:36,771 - #44 )
INFO  17:49:36,771 - #40 ;
INFO  17:49:36,771 - #14 read
INFO  17:49:36,771 - #43 (
INFO  17:49:36,771 - #20 b
INFO  17:49:36,771 - #44 )
INFO  17:49:36,771 - #40 ;
INFO  17:49:36,772 - #48 }
INFO  17:49:36,772 - #48 }
INFO  17:49:36,773 - 

================SINTAKSNO STABLO====================


INFO  17:49:36,774 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 funk
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  17:49:36,775 - 

================SEMANTICKA OBRADA====================


INFO  17:49:36,787 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  17:49:36,787 - Deklarisana konstanta 'm' na liniji 2
INFO  17:49:36,788 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  17:49:36,788 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  17:49:36,788 - Pocetak obrade metode fun na liniji 6
INFO  17:49:36,788 - Formalni parametar funkcije fun: 'x' na liniji 6
ERROR 17:49:36,788 - Semanticka greska - tip povratne vrednosti metode i tip vrednosti izraza u return naredbi se ne slazu na liniji 7
INFO  17:49:36,788 - Kraj obrade metode fun na liniji 6
INFO  17:49:36,788 - Pocetak obrade metode main na liniji 10
INFO  17:49:36,788 - Deklarisana promenljiva 'b' na liniji 10
INFO  17:49:36,788 - Deklarisan niz 'a' na liniji 10
ERROR 17:49:36,788 - Semanticka greska - nevalidan pristup elementu niza na liniji 13
ERROR 17:49:36,788 - AssignmentExpr null na liniji 13
ERROR 17:49:36,788 - assignmentRight null na liniji 13
ERROR 17:49:36,788 - assignmentLeft rs.etf.pp1.symboltable.concepts.Struct@378fd1ac na liniji 13
INFO  17:51:40,842 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:51:40,887 - #2 program
INFO  17:51:40,887 - #20 MJProgram
INFO  17:51:40,887 - #7 const
INFO  17:51:40,888 - #20 int
INFO  17:51:40,888 - #20 m
INFO  17:51:40,888 - #37 =
INFO  17:51:40,888 - #21 1
INFO  17:51:40,888 - #40 ;
INFO  17:51:40,889 - #20 int
INFO  17:51:40,889 - #20 global
INFO  17:51:40,889 - #41 ,
INFO  17:51:40,889 - #20 globarArr
INFO  17:51:40,889 - #45 [
INFO  17:51:40,889 - #46 ]
INFO  17:51:40,890 - #40 ;
INFO  17:51:40,890 - #47 {
INFO  17:51:40,890 - #20 int
INFO  17:51:40,890 - #20 fun
INFO  17:51:40,890 - #43 (
INFO  17:51:40,890 - #20 int
INFO  17:51:40,890 - #20 x
INFO  17:51:40,890 - #44 )
INFO  17:51:40,891 - #47 {
INFO  17:51:40,891 - #15 return
INFO  17:51:40,891 - #21 1
INFO  17:51:40,891 - #40 ;
INFO  17:51:40,891 - #48 }
INFO  17:51:40,892 - #16 void
INFO  17:51:40,892 - #20 main
INFO  17:51:40,892 - #43 (
INFO  17:51:40,892 - #44 )
INFO  17:51:40,893 - #20 int
INFO  17:51:40,893 - #20 b
INFO  17:51:40,893 - #41 ,
INFO  17:51:40,893 - #20 a
INFO  17:51:40,893 - #45 [
INFO  17:51:40,893 - #46 ]
INFO  17:51:40,893 - #40 ;
INFO  17:51:40,893 - #47 {
INFO  17:51:40,894 - #20 a
INFO  17:51:40,894 - #45 [
INFO  17:51:40,894 - #21 1
INFO  17:51:40,894 - #46 ]
INFO  17:51:40,894 - #37 =
INFO  17:51:40,894 - #22 a
INFO  17:51:40,894 - #40 ;
INFO  17:51:40,894 - #20 funk
INFO  17:51:40,895 - #43 (
INFO  17:51:40,895 - #20 m
INFO  17:51:40,895 - #44 )
INFO  17:51:40,895 - #40 ;
INFO  17:51:40,895 - #14 read
INFO  17:51:40,895 - #43 (
INFO  17:51:40,895 - #20 b
INFO  17:51:40,895 - #44 )
INFO  17:51:40,895 - #40 ;
INFO  17:51:40,895 - #48 }
INFO  17:51:40,895 - #48 }
INFO  17:51:40,896 - 

================SINTAKSNO STABLO====================


INFO  17:51:40,897 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 funk
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  17:51:40,898 - 

================SEMANTICKA OBRADA====================


INFO  17:51:40,909 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  17:51:40,909 - Deklarisana konstanta 'm' na liniji 2
INFO  17:51:40,909 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  17:51:40,909 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  17:51:40,910 - Pocetak obrade metode fun na liniji 6
INFO  17:51:40,910 - Formalni parametar funkcije fun: 'x' na liniji 6
ERROR 17:51:40,910 - Semanticka greska - tip povratne vrednosti metode i tip vrednosti izraza u return naredbi se ne slazu na liniji 7
INFO  17:51:40,910 - Kraj obrade metode fun na liniji 6
INFO  17:51:40,910 - Pocetak obrade metode main na liniji 10
INFO  17:51:40,910 - Deklarisana promenljiva 'b' na liniji 10
INFO  17:51:40,910 - Deklarisan niz 'a' na liniji 10
ERROR 17:51:40,910 - Semanticka greska - nevalidan pristup elementu niza na liniji 13
ERROR 17:51:40,910 - AssignmentExprExprOne(
  ExprSingle(
    TermSingle(
      FactorCharConst(
       a
      ) [FactorCharConst]
    ) [TermSingle]
  ) [ExprSingle]
) [ExprOne] na liniji 13
INFO  17:55:06,777 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:55:06,841 - #2 program
INFO  17:55:06,841 - #20 MJProgram
INFO  17:55:06,841 - #7 const
INFO  17:55:06,842 - #20 int
INFO  17:55:06,842 - #20 m
INFO  17:55:06,843 - #37 =
INFO  17:55:06,843 - #21 1
INFO  17:55:06,843 - #40 ;
INFO  17:55:06,844 - #20 int
INFO  17:55:06,844 - #20 global
INFO  17:55:06,844 - #41 ,
INFO  17:55:06,845 - #20 globarArr
INFO  17:55:06,845 - #45 [
INFO  17:55:06,845 - #46 ]
INFO  17:55:06,845 - #40 ;
INFO  17:55:06,845 - #47 {
INFO  17:55:06,846 - #20 int
INFO  17:55:06,846 - #20 fun
INFO  17:55:06,846 - #43 (
INFO  17:55:06,846 - #20 int
INFO  17:55:06,846 - #20 x
INFO  17:55:06,846 - #44 )
INFO  17:55:06,847 - #47 {
INFO  17:55:06,847 - #15 return
INFO  17:55:06,847 - #21 1
INFO  17:55:06,847 - #40 ;
INFO  17:55:06,848 - #48 }
INFO  17:55:06,848 - #16 void
INFO  17:55:06,848 - #20 main
INFO  17:55:06,849 - #43 (
INFO  17:55:06,849 - #44 )
INFO  17:55:06,849 - #20 int
INFO  17:55:06,849 - #20 b
INFO  17:55:06,849 - #41 ,
INFO  17:55:06,849 - #20 a
INFO  17:55:06,849 - #45 [
INFO  17:55:06,850 - #46 ]
INFO  17:55:06,850 - #40 ;
INFO  17:55:06,850 - #47 {
INFO  17:55:06,850 - #20 a
INFO  17:55:06,850 - #45 [
INFO  17:55:06,850 - #21 1
INFO  17:55:06,851 - #46 ]
INFO  17:55:06,851 - #37 =
INFO  17:55:06,851 - #22 a
INFO  17:55:06,851 - #40 ;
INFO  17:55:06,852 - #20 funk
INFO  17:55:06,852 - #43 (
INFO  17:55:06,852 - #20 m
INFO  17:55:06,852 - #44 )
INFO  17:55:06,853 - #40 ;
INFO  17:55:06,853 - #14 read
INFO  17:55:06,853 - #43 (
INFO  17:55:06,853 - #20 b
INFO  17:55:06,853 - #44 )
INFO  17:55:06,854 - #40 ;
INFO  17:55:06,854 - #48 }
INFO  17:55:06,854 - #48 }
INFO  17:55:06,855 - 

================SINTAKSNO STABLO====================


INFO  17:55:06,856 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 funk
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  17:55:06,857 - 

================SEMANTICKA OBRADA====================


INFO  17:55:06,869 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  17:55:06,870 - Deklarisana konstanta 'm' na liniji 2
INFO  17:55:06,870 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  17:55:06,870 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  17:55:06,870 - Pocetak obrade metode fun na liniji 6
INFO  17:55:06,870 - Formalni parametar funkcije fun: 'x' na liniji 6
ERROR 17:55:06,870 - Semanticka greska - tip povratne vrednosti metode i tip vrednosti izraza u return naredbi se ne slazu na liniji 7
INFO  17:55:06,870 - Kraj obrade metode fun na liniji 6
INFO  17:55:06,870 - Pocetak obrade metode main na liniji 10
INFO  17:55:06,871 - Deklarisana promenljiva 'b' na liniji 10
INFO  17:55:06,871 - Deklarisan niz 'a' na liniji 10
ERROR 17:55:06,871 - Semanticka greska - nevalidan pristup elementu niza na liniji 13
ERROR 17:55:06,871 - FactorCharConstFactorCharConst(
 a
) [FactorCharConst] na liniji 13
ERROR 17:55:06,871 - AssignmentExprExprOne(
  ExprSingle(
    TermSingle(
      FactorCharConst(
       a
      ) [FactorCharConst]
    ) [TermSingle]
  ) [ExprSingle]
) [ExprOne] na liniji 13
INFO  17:55:39,159 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:55:39,208 - #2 program
INFO  17:55:39,208 - #20 MJProgram
INFO  17:55:39,208 - #7 const
INFO  17:55:39,209 - #20 int
INFO  17:55:39,209 - #20 m
INFO  17:55:39,209 - #37 =
INFO  17:55:39,209 - #21 1
INFO  17:55:39,209 - #40 ;
INFO  17:55:39,210 - #20 int
INFO  17:55:39,210 - #20 global
INFO  17:55:39,210 - #41 ,
INFO  17:55:39,210 - #20 globarArr
INFO  17:55:39,210 - #45 [
INFO  17:55:39,210 - #46 ]
INFO  17:55:39,211 - #40 ;
INFO  17:55:39,211 - #47 {
INFO  17:55:39,211 - #20 int
INFO  17:55:39,211 - #20 fun
INFO  17:55:39,211 - #43 (
INFO  17:55:39,211 - #20 int
INFO  17:55:39,211 - #20 x
INFO  17:55:39,211 - #44 )
INFO  17:55:39,212 - #47 {
INFO  17:55:39,212 - #15 return
INFO  17:55:39,212 - #21 1
INFO  17:55:39,212 - #40 ;
INFO  17:55:39,212 - #48 }
INFO  17:55:39,213 - #16 void
INFO  17:55:39,213 - #20 main
INFO  17:55:39,213 - #43 (
INFO  17:55:39,213 - #44 )
INFO  17:55:39,213 - #20 int
INFO  17:55:39,213 - #20 b
INFO  17:55:39,213 - #41 ,
INFO  17:55:39,214 - #20 a
INFO  17:55:39,214 - #45 [
INFO  17:55:39,214 - #46 ]
INFO  17:55:39,214 - #40 ;
INFO  17:55:39,214 - #47 {
INFO  17:55:39,215 - #20 a
INFO  17:55:39,215 - #45 [
INFO  17:55:39,215 - #21 1
INFO  17:55:39,215 - #46 ]
INFO  17:55:39,215 - #37 =
INFO  17:55:39,215 - #22 a
INFO  17:55:39,215 - #40 ;
INFO  17:55:39,216 - #20 funk
INFO  17:55:39,216 - #43 (
INFO  17:55:39,216 - #20 m
INFO  17:55:39,216 - #44 )
INFO  17:55:39,216 - #40 ;
INFO  17:55:39,216 - #14 read
INFO  17:55:39,216 - #43 (
INFO  17:55:39,217 - #20 b
INFO  17:55:39,217 - #44 )
INFO  17:55:39,217 - #40 ;
INFO  17:55:39,217 - #48 }
INFO  17:55:39,217 - #48 }
INFO  17:55:39,218 - 

================SINTAKSNO STABLO====================


INFO  17:55:39,218 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 funk
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  17:55:39,219 - 

================SEMANTICKA OBRADA====================


INFO  17:55:39,230 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  17:55:39,230 - Deklarisana konstanta 'm' na liniji 2
INFO  17:55:39,231 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  17:55:39,232 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  17:55:39,232 - Pocetak obrade metode fun na liniji 6
INFO  17:55:39,232 - Formalni parametar funkcije fun: 'x' na liniji 6
ERROR 17:55:39,232 - Semanticka greska - tip povratne vrednosti metode i tip vrednosti izraza u return naredbi se ne slazu na liniji 7
INFO  17:55:39,232 - Kraj obrade metode fun na liniji 6
INFO  17:55:39,232 - Pocetak obrade metode main na liniji 10
INFO  17:55:39,232 - Deklarisana promenljiva 'b' na liniji 10
INFO  17:55:39,232 - Deklarisan niz 'a' na liniji 10
ERROR 17:55:39,232 - Semanticka greska - nevalidan pristup elementu niza na liniji 13
ERROR 17:55:39,232 - AssignmentExprnull na liniji 13
INFO  17:56:22,055 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:56:22,100 - #2 program
INFO  17:56:22,101 - #20 MJProgram
INFO  17:56:22,101 - #7 const
INFO  17:56:22,101 - #20 int
INFO  17:56:22,101 - #20 m
INFO  17:56:22,102 - #37 =
INFO  17:56:22,102 - #21 1
INFO  17:56:22,102 - #40 ;
INFO  17:56:22,102 - #20 int
INFO  17:56:22,103 - #20 global
INFO  17:56:22,103 - #41 ,
INFO  17:56:22,103 - #20 globarArr
INFO  17:56:22,103 - #45 [
INFO  17:56:22,103 - #46 ]
INFO  17:56:22,103 - #40 ;
INFO  17:56:22,103 - #47 {
INFO  17:56:22,103 - #20 int
INFO  17:56:22,103 - #20 fun
INFO  17:56:22,104 - #43 (
INFO  17:56:22,104 - #20 int
INFO  17:56:22,104 - #20 x
INFO  17:56:22,104 - #44 )
INFO  17:56:22,104 - #47 {
INFO  17:56:22,104 - #15 return
INFO  17:56:22,104 - #21 1
INFO  17:56:22,105 - #40 ;
INFO  17:56:22,105 - #48 }
INFO  17:56:22,105 - #16 void
INFO  17:56:22,106 - #20 main
INFO  17:56:22,106 - #43 (
INFO  17:56:22,106 - #44 )
INFO  17:56:22,106 - #20 int
INFO  17:56:22,106 - #20 b
INFO  17:56:22,106 - #41 ,
INFO  17:56:22,106 - #20 a
INFO  17:56:22,106 - #45 [
INFO  17:56:22,107 - #46 ]
INFO  17:56:22,107 - #40 ;
INFO  17:56:22,107 - #47 {
INFO  17:56:22,107 - #20 a
INFO  17:56:22,107 - #45 [
INFO  17:56:22,107 - #21 1
INFO  17:56:22,107 - #46 ]
INFO  17:56:22,107 - #37 =
INFO  17:56:22,107 - #22 a
INFO  17:56:22,107 - #40 ;
INFO  17:56:22,108 - #20 funk
INFO  17:56:22,108 - #43 (
INFO  17:56:22,108 - #20 m
INFO  17:56:22,108 - #44 )
INFO  17:56:22,108 - #40 ;
INFO  17:56:22,109 - #14 read
INFO  17:56:22,109 - #43 (
INFO  17:56:22,109 - #20 b
INFO  17:56:22,109 - #44 )
INFO  17:56:22,109 - #40 ;
INFO  17:56:22,109 - #48 }
INFO  17:56:22,109 - #48 }
INFO  17:56:22,110 - 

================SINTAKSNO STABLO====================


INFO  17:56:22,111 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 funk
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  17:56:22,111 - 

================SEMANTICKA OBRADA====================


INFO  17:56:22,122 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  17:56:22,122 - Deklarisana konstanta 'm' na liniji 2
INFO  17:56:22,123 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  17:56:22,123 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  17:56:22,123 - Pocetak obrade metode fun na liniji 6
INFO  17:56:22,123 - Formalni parametar funkcije fun: 'x' na liniji 6
ERROR 17:56:22,123 - Semanticka greska - tip povratne vrednosti metode i tip vrednosti izraza u return naredbi se ne slazu na liniji 7
INFO  17:56:22,123 - Kraj obrade metode fun na liniji 6
INFO  17:56:22,123 - Pocetak obrade metode main na liniji 10
INFO  17:56:22,123 - Deklarisana promenljiva 'b' na liniji 10
INFO  17:56:22,123 - Deklarisan niz 'a' na liniji 10
ERROR 17:56:22,123 - Semanticka greska - nevalidan pristup elementu niza na liniji 13
ERROR 17:56:22,123 - AssignmentExprnull na liniji 13
INFO  18:01:32,622 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  18:01:32,667 - #2 program
INFO  18:01:32,667 - #20 MJProgram
INFO  18:01:32,667 - #7 const
INFO  18:01:32,668 - #20 int
INFO  18:01:32,668 - #20 m
INFO  18:01:32,668 - #37 =
INFO  18:01:32,668 - #21 1
INFO  18:01:32,668 - #40 ;
INFO  18:01:32,669 - #20 int
INFO  18:01:32,669 - #20 global
INFO  18:01:32,669 - #41 ,
INFO  18:01:32,669 - #20 globarArr
INFO  18:01:32,669 - #45 [
INFO  18:01:32,669 - #46 ]
INFO  18:01:32,669 - #40 ;
INFO  18:01:32,670 - #47 {
INFO  18:01:32,670 - #20 int
INFO  18:01:32,670 - #20 fun
INFO  18:01:32,670 - #43 (
INFO  18:01:32,670 - #20 int
INFO  18:01:32,670 - #20 x
INFO  18:01:32,670 - #44 )
INFO  18:01:32,671 - #47 {
INFO  18:01:32,671 - #15 return
INFO  18:01:32,671 - #21 1
INFO  18:01:32,671 - #40 ;
INFO  18:01:32,671 - #48 }
INFO  18:01:32,672 - #16 void
INFO  18:01:32,672 - #20 main
INFO  18:01:32,672 - #43 (
INFO  18:01:32,672 - #44 )
INFO  18:01:32,672 - #20 int
INFO  18:01:32,672 - #20 b
INFO  18:01:32,672 - #41 ,
INFO  18:01:32,673 - #20 a
INFO  18:01:32,673 - #45 [
INFO  18:01:32,673 - #46 ]
INFO  18:01:32,673 - #40 ;
INFO  18:01:32,673 - #47 {
INFO  18:01:32,673 - #20 a
INFO  18:01:32,673 - #45 [
INFO  18:01:32,673 - #21 1
INFO  18:01:32,673 - #46 ]
INFO  18:01:32,673 - #37 =
INFO  18:01:32,674 - #22 a
INFO  18:01:32,674 - #40 ;
INFO  18:01:32,674 - #20 funk
INFO  18:01:32,674 - #43 (
INFO  18:01:32,674 - #20 m
INFO  18:01:32,674 - #44 )
INFO  18:01:32,675 - #40 ;
INFO  18:01:32,675 - #14 read
INFO  18:01:32,675 - #43 (
INFO  18:01:32,675 - #20 b
INFO  18:01:32,675 - #44 )
INFO  18:01:32,675 - #40 ;
INFO  18:01:32,675 - #48 }
INFO  18:01:32,675 - #48 }
INFO  18:01:32,676 - 

================SINTAKSNO STABLO====================


INFO  18:01:32,677 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 funk
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  18:01:32,679 - 

================SEMANTICKA OBRADA====================


INFO  18:01:32,691 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  18:01:32,691 - Deklarisana konstanta 'm' na liniji 2
INFO  18:01:32,692 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  18:01:32,692 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  18:01:32,692 - Pocetak obrade metode fun na liniji 6
INFO  18:01:32,692 - Formalni parametar funkcije fun: 'x' na liniji 6
ERROR 18:01:32,692 - Semanticka greska - tip povratne vrednosti metode i tip vrednosti izraza u return naredbi se ne slazu na liniji 7
INFO  18:01:32,692 - Kraj obrade metode fun na liniji 6
INFO  18:01:32,692 - Pocetak obrade metode main na liniji 10
INFO  18:01:32,692 - Deklarisana promenljiva 'b' na liniji 10
INFO  18:01:32,692 - Deklarisan niz 'a' na liniji 10
ERROR 18:01:32,692 - Semanticka greska - nevalidan pristup elementu niza na liniji 13
ERROR 18:01:32,692 - AssignmentExprnull na liniji 13
INFO  18:53:51,007 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  18:53:51,055 - #2 program
INFO  18:53:51,056 - #20 MJProgram
INFO  18:53:51,056 - #7 const
INFO  18:53:51,056 - #20 int
INFO  18:53:51,056 - #20 m
INFO  18:53:51,057 - #37 =
INFO  18:53:51,057 - #21 1
INFO  18:53:51,057 - #40 ;
INFO  18:53:51,057 - #20 int
INFO  18:53:51,058 - #20 global
INFO  18:53:51,058 - #41 ,
INFO  18:53:51,058 - #20 globarArr
INFO  18:53:51,058 - #45 [
INFO  18:53:51,058 - #46 ]
INFO  18:53:51,058 - #40 ;
INFO  18:53:51,058 - #47 {
INFO  18:53:51,059 - #20 int
INFO  18:53:51,059 - #20 fun
INFO  18:53:51,059 - #43 (
INFO  18:53:51,059 - #20 int
INFO  18:53:51,059 - #20 x
INFO  18:53:51,059 - #44 )
INFO  18:53:51,059 - #47 {
INFO  18:53:51,059 - #15 return
INFO  18:53:51,060 - #21 1
INFO  18:53:51,060 - #40 ;
INFO  18:53:51,060 - #48 }
INFO  18:53:51,060 - #16 void
INFO  18:53:51,061 - #20 main
INFO  18:53:51,061 - #43 (
INFO  18:53:51,061 - #44 )
INFO  18:53:51,061 - #20 int
INFO  18:53:51,061 - #20 b
INFO  18:53:51,061 - #41 ,
INFO  18:53:51,061 - #20 a
INFO  18:53:51,062 - #45 [
INFO  18:53:51,062 - #46 ]
INFO  18:53:51,062 - #40 ;
INFO  18:53:51,062 - #47 {
INFO  18:53:51,062 - #20 a
INFO  18:53:51,062 - #45 [
INFO  18:53:51,062 - #21 1
INFO  18:53:51,062 - #46 ]
INFO  18:53:51,062 - #37 =
INFO  18:53:51,062 - #22 a
INFO  18:53:51,063 - #40 ;
INFO  18:53:51,063 - #20 funk
INFO  18:53:51,063 - #43 (
INFO  18:53:51,063 - #20 m
INFO  18:53:51,063 - #44 )
INFO  18:53:51,063 - #40 ;
INFO  18:53:51,064 - #14 read
INFO  18:53:51,064 - #43 (
INFO  18:53:51,064 - #20 b
INFO  18:53:51,064 - #44 )
INFO  18:53:51,064 - #40 ;
INFO  18:53:51,064 - #48 }
INFO  18:53:51,064 - #48 }
INFO  18:53:51,065 - 

================SINTAKSNO STABLO====================


INFO  18:53:51,066 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 funk
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  18:53:51,068 - 

================SEMANTICKA OBRADA====================


INFO  18:53:51,078 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  18:53:51,079 - Deklarisana konstanta 'm' na liniji 2
INFO  18:53:51,079 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  18:53:51,079 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  18:53:51,079 - Pocetak obrade metode fun na liniji 6
INFO  18:53:51,079 - Formalni parametar funkcije fun: 'x' na liniji 6
ERROR 18:53:51,079 - Semanticka greska - tip povratne vrednosti metode i tip vrednosti izraza u return naredbi se ne slazu na liniji 7
INFO  18:53:51,079 - Kraj obrade metode fun na liniji 6
INFO  18:53:51,079 - Pocetak obrade metode main na liniji 10
INFO  18:53:51,080 - Deklarisana promenljiva 'b' na liniji 10
INFO  18:53:51,080 - Deklarisan niz 'a' na liniji 10
ERROR 18:53:51,080 - Semanticka greska - nevalidan pristup elementu niza na liniji 13
ERROR 18:53:51,080 - AssignmentExprExprOne(
  ExprSingle(
    TermSingle(
      FactorCharConst(
       a
      ) [FactorCharConst]
    ) [TermSingle]
  ) [ExprSingle]
) [ExprOne] na liniji 13
INFO  19:15:51,656 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  19:15:51,706 - #2 program
INFO  19:15:51,707 - #20 MJProgram
INFO  19:15:51,707 - #7 const
INFO  19:15:51,707 - #20 int
INFO  19:15:51,707 - #20 m
INFO  19:15:51,708 - #37 =
INFO  19:15:51,708 - #21 1
INFO  19:15:51,708 - #40 ;
INFO  19:15:51,708 - #20 int
INFO  19:15:51,709 - #20 global
INFO  19:15:51,709 - #41 ,
INFO  19:15:51,709 - #20 globarArr
INFO  19:15:51,709 - #45 [
INFO  19:15:51,709 - #46 ]
INFO  19:15:51,709 - #40 ;
INFO  19:15:51,709 - #47 {
INFO  19:15:51,709 - #20 int
INFO  19:15:51,709 - #20 fun
INFO  19:15:51,710 - #43 (
INFO  19:15:51,710 - #20 int
INFO  19:15:51,710 - #20 x
INFO  19:15:51,710 - #44 )
INFO  19:15:51,710 - #47 {
INFO  19:15:51,710 - #15 return
INFO  19:15:51,710 - #21 1
INFO  19:15:51,710 - #40 ;
INFO  19:15:51,711 - #48 }
INFO  19:15:51,711 - #16 void
INFO  19:15:51,711 - #20 main
INFO  19:15:51,711 - #43 (
INFO  19:15:51,712 - #44 )
INFO  19:15:51,712 - #20 int
INFO  19:15:51,712 - #20 b
INFO  19:15:51,712 - #41 ,
INFO  19:15:51,713 - #20 a
INFO  19:15:51,713 - #45 [
INFO  19:15:51,713 - #46 ]
INFO  19:15:51,713 - #40 ;
INFO  19:15:51,713 - #47 {
INFO  19:15:51,714 - #20 a
INFO  19:15:51,714 - #45 [
INFO  19:15:51,714 - #21 1
INFO  19:15:51,714 - #46 ]
INFO  19:15:51,714 - #37 =
INFO  19:15:51,714 - #22 a
INFO  19:15:51,714 - #40 ;
INFO  19:15:51,715 - #20 funk
INFO  19:15:51,715 - #43 (
INFO  19:15:51,716 - #20 m
INFO  19:15:51,716 - #44 )
INFO  19:15:51,716 - #40 ;
INFO  19:15:51,716 - #14 read
INFO  19:15:51,717 - #43 (
INFO  19:15:51,717 - #20 b
INFO  19:15:51,717 - #44 )
INFO  19:15:51,717 - #40 ;
INFO  19:15:51,717 - #48 }
INFO  19:15:51,717 - #48 }
INFO  19:15:51,718 - 

================SINTAKSNO STABLO====================


INFO  19:15:51,719 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 funk
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  19:15:51,720 - 

================SEMANTICKA OBRADA====================


INFO  19:15:51,729 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  19:15:51,730 - Deklarisana konstanta 'm' na liniji 2
INFO  19:15:51,730 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  19:15:51,730 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  19:15:51,730 - Pocetak obrade metode fun na liniji 6
INFO  19:15:51,730 - Formalni parametar funkcije fun: 'x' na liniji 6
ERROR 19:15:51,730 - TermSinglers.etf.pp1.symboltable.concepts.Struct@378fd1ac na liniji 7
ERROR 19:15:51,730 - ExprSinglers.etf.pp1.symboltable.concepts.Struct@378fd1ac na liniji 7
ERROR 19:15:51,730 - Semanticka greska - tip povratne vrednosti metode i tip vrednosti izraza u return naredbi se ne slazu na liniji 7
INFO  19:15:51,731 - Kraj obrade metode fun na liniji 6
INFO  19:15:51,731 - Pocetak obrade metode main na liniji 10
INFO  19:15:51,731 - Deklarisana promenljiva 'b' na liniji 10
INFO  19:15:51,731 - Deklarisan niz 'a' na liniji 10
ERROR 19:15:51,731 - TermSinglers.etf.pp1.symboltable.concepts.Struct@378fd1ac na liniji 13
ERROR 19:15:51,731 - ExprSinglers.etf.pp1.symboltable.concepts.Struct@378fd1ac na liniji 13
ERROR 19:15:51,731 - Semanticka greska - nevalidan pristup elementu niza na liniji 13
ERROR 19:15:51,731 - FactorCharConstrs.etf.pp1.symboltable.concepts.Struct@49097b5d na liniji 13
ERROR 19:15:51,731 - TermSinglers.etf.pp1.symboltable.concepts.Struct@49097b5d na liniji 13
ERROR 19:15:51,731 - ExprSinglers.etf.pp1.symboltable.concepts.Struct@49097b5d na liniji 13
ERROR 19:15:51,731 - AssignmentExprExprOne(
  ExprSingle(
    TermSingle(
      FactorCharConst(
       a
      ) [FactorCharConst]
    ) [TermSingle]
  ) [ExprSingle]
) [ExprOne] na liniji 13
INFO  19:18:02,883 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  19:18:02,933 - #2 program
INFO  19:18:02,933 - #20 MJProgram
INFO  19:18:02,933 - #7 const
INFO  19:18:02,933 - #20 int
INFO  19:18:02,933 - #20 m
INFO  19:18:02,934 - #37 =
INFO  19:18:02,934 - #21 1
INFO  19:18:02,934 - #40 ;
INFO  19:18:02,935 - #20 int
INFO  19:18:02,935 - #20 global
INFO  19:18:02,935 - #41 ,
INFO  19:18:02,935 - #20 globarArr
INFO  19:18:02,935 - #45 [
INFO  19:18:02,935 - #46 ]
INFO  19:18:02,935 - #40 ;
INFO  19:18:02,935 - #47 {
INFO  19:18:02,936 - #20 int
INFO  19:18:02,936 - #20 fun
INFO  19:18:02,936 - #43 (
INFO  19:18:02,936 - #20 int
INFO  19:18:02,936 - #20 x
INFO  19:18:02,936 - #44 )
INFO  19:18:02,936 - #47 {
INFO  19:18:02,936 - #15 return
INFO  19:18:02,936 - #21 1
INFO  19:18:02,936 - #40 ;
INFO  19:18:02,937 - #48 }
INFO  19:18:02,937 - #16 void
INFO  19:18:02,937 - #20 main
INFO  19:18:02,937 - #43 (
INFO  19:18:02,937 - #44 )
INFO  19:18:02,938 - #20 int
INFO  19:18:02,938 - #20 b
INFO  19:18:02,938 - #41 ,
INFO  19:18:02,938 - #20 a
INFO  19:18:02,938 - #45 [
INFO  19:18:02,938 - #46 ]
INFO  19:18:02,938 - #40 ;
INFO  19:18:02,938 - #47 {
INFO  19:18:02,938 - #20 a
INFO  19:18:02,938 - #45 [
INFO  19:18:02,939 - #21 1
INFO  19:18:02,939 - #46 ]
INFO  19:18:02,939 - #37 =
INFO  19:18:02,939 - #22 a
INFO  19:18:02,939 - #40 ;
INFO  19:18:02,939 - #20 funk
INFO  19:18:02,939 - #43 (
INFO  19:18:02,939 - #20 m
INFO  19:18:02,939 - #44 )
INFO  19:18:02,940 - #40 ;
INFO  19:18:02,940 - #14 read
INFO  19:18:02,940 - #43 (
INFO  19:18:02,940 - #20 b
INFO  19:18:02,940 - #44 )
INFO  19:18:02,940 - #40 ;
INFO  19:18:02,940 - #48 }
INFO  19:18:02,940 - #48 }
INFO  19:18:02,941 - 

================SINTAKSNO STABLO====================


INFO  19:18:02,942 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 funk
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  19:18:02,943 - 

================SEMANTICKA OBRADA====================


INFO  19:18:02,955 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  19:18:02,955 - Deklarisana konstanta 'm' na liniji 2
INFO  19:18:02,956 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  19:18:02,956 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  19:18:02,956 - Pocetak obrade metode fun na liniji 6
INFO  19:18:02,956 - Formalni parametar funkcije fun: 'x' na liniji 6
ERROR 19:18:02,956 - TermSinglers.etf.pp1.symboltable.concepts.Struct@378fd1ac na liniji 7
ERROR 19:18:02,956 - ExprSinglers.etf.pp1.symboltable.concepts.Struct@378fd1ac na liniji 7
INFO  19:18:02,956 - Kraj obrade metode fun na liniji 6
INFO  19:18:02,956 - Pocetak obrade metode main na liniji 10
INFO  19:18:02,956 - Deklarisana promenljiva 'b' na liniji 10
INFO  19:18:02,956 - Deklarisan niz 'a' na liniji 10
ERROR 19:18:02,956 - TermSinglers.etf.pp1.symboltable.concepts.Struct@378fd1ac na liniji 13
ERROR 19:18:02,956 - ExprSinglers.etf.pp1.symboltable.concepts.Struct@378fd1ac na liniji 13
ERROR 19:18:02,957 - FactorCharConstrs.etf.pp1.symboltable.concepts.Struct@49097b5d na liniji 13
ERROR 19:18:02,957 - TermSinglers.etf.pp1.symboltable.concepts.Struct@49097b5d na liniji 13
ERROR 19:18:02,957 - ExprSinglers.etf.pp1.symboltable.concepts.Struct@49097b5d na liniji 13
ERROR 19:18:02,957 - AssignmentExprExprOne(
  ExprSingle(
    TermSingle(
      FactorCharConst(
       a
      ) [FactorCharConst]
    ) [TermSingle]
  ) [ExprSingle]
) [ExprOne] na liniji 13
ERROR 19:18:02,957 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 13
ERROR 19:18:02,957 - Semanticka greska - 'funk' nije deklarisano na liniji 14
ERROR 19:18:02,957 - TermSinglers.etf.pp1.symboltable.concepts.Struct@378fd1ac na liniji 14
ERROR 19:18:02,957 - ExprSinglers.etf.pp1.symboltable.concepts.Struct@378fd1ac na liniji 14
ERROR 19:18:02,957 - Semanticka greska - izraz u read naredbi mora biti int, char ili bool tipa na liniji 15
INFO  19:18:02,957 - Kraj obrade metode main na liniji 10
INFO  19:18:02,958 - Kraj obrade programa 'MJProgram' na liniji 1
INFO  19:18:02,958 - ===================================
INFO  19:19:47,664 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  19:19:47,711 - #2 program
INFO  19:19:47,711 - #20 MJProgram
INFO  19:19:47,711 - #7 const
INFO  19:19:47,711 - #20 int
INFO  19:19:47,711 - #20 m
INFO  19:19:47,712 - #37 =
INFO  19:19:47,712 - #21 1
INFO  19:19:47,712 - #40 ;
INFO  19:19:47,713 - #20 int
INFO  19:19:47,713 - #20 global
INFO  19:19:47,713 - #41 ,
INFO  19:19:47,713 - #20 globarArr
INFO  19:19:47,713 - #45 [
INFO  19:19:47,713 - #46 ]
INFO  19:19:47,714 - #40 ;
INFO  19:19:47,714 - #47 {
INFO  19:19:47,714 - #20 int
INFO  19:19:47,714 - #20 fun
INFO  19:19:47,714 - #43 (
INFO  19:19:47,714 - #20 int
INFO  19:19:47,714 - #20 x
INFO  19:19:47,714 - #44 )
INFO  19:19:47,715 - #47 {
INFO  19:19:47,715 - #15 return
INFO  19:19:47,715 - #21 1
INFO  19:19:47,715 - #40 ;
INFO  19:19:47,715 - #48 }
INFO  19:19:47,716 - #16 void
INFO  19:19:47,716 - #20 main
INFO  19:19:47,716 - #43 (
INFO  19:19:47,716 - #44 )
INFO  19:19:47,717 - #20 int
INFO  19:19:47,717 - #20 b
INFO  19:19:47,717 - #41 ,
INFO  19:19:47,717 - #20 a
INFO  19:19:47,717 - #45 [
INFO  19:19:47,717 - #46 ]
INFO  19:19:47,717 - #40 ;
INFO  19:19:47,717 - #47 {
INFO  19:19:47,718 - #20 a
INFO  19:19:47,718 - #45 [
INFO  19:19:47,718 - #21 1
INFO  19:19:47,718 - #46 ]
INFO  19:19:47,718 - #37 =
INFO  19:19:47,719 - #22 a
INFO  19:19:47,719 - #40 ;
INFO  19:19:47,719 - #20 funk
INFO  19:19:47,719 - #43 (
INFO  19:19:47,720 - #20 m
INFO  19:19:47,720 - #44 )
INFO  19:19:47,720 - #40 ;
INFO  19:19:47,720 - #14 read
INFO  19:19:47,720 - #43 (
INFO  19:19:47,720 - #20 b
INFO  19:19:47,720 - #44 )
INFO  19:19:47,720 - #40 ;
INFO  19:19:47,720 - #48 }
INFO  19:19:47,720 - #48 }
INFO  19:19:47,721 - 

================SINTAKSNO STABLO====================


INFO  19:19:47,723 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 funk
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  19:19:47,725 - 

================SEMANTICKA OBRADA====================


INFO  19:19:47,735 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  19:19:47,736 - Deklarisana konstanta 'm' na liniji 2
INFO  19:19:47,736 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  19:19:47,736 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  19:19:47,736 - Pocetak obrade metode fun na liniji 6
INFO  19:19:47,737 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  19:19:47,737 - Kraj obrade metode fun na liniji 6
INFO  19:19:47,737 - Pocetak obrade metode main na liniji 10
INFO  19:19:47,737 - Deklarisana promenljiva 'b' na liniji 10
INFO  19:19:47,737 - Deklarisan niz 'a' na liniji 10
ERROR 19:19:47,737 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 13
ERROR 19:19:47,737 - Semanticka greska - 'funk' nije deklarisano na liniji 14
ERROR 19:19:47,737 - Semanticka greska - izraz u read naredbi mora biti int, char ili bool tipa na liniji 15
INFO  19:19:47,737 - Kraj obrade metode main na liniji 10
INFO  19:19:47,737 - Kraj obrade programa 'MJProgram' na liniji 1
INFO  19:19:47,738 - ===================================
INFO  19:20:06,913 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  19:20:06,962 - #2 program
INFO  19:20:06,962 - #20 MJProgram
INFO  19:20:06,962 - #7 const
INFO  19:20:06,963 - #20 int
INFO  19:20:06,963 - #20 m
INFO  19:20:06,963 - #37 =
INFO  19:20:06,963 - #21 1
INFO  19:20:06,963 - #40 ;
INFO  19:20:06,963 - #20 int
INFO  19:20:06,963 - #20 global
INFO  19:20:06,963 - #41 ,
INFO  19:20:06,964 - #20 globarArr
INFO  19:20:06,964 - #45 [
INFO  19:20:06,964 - #46 ]
INFO  19:20:06,964 - #40 ;
INFO  19:20:06,964 - #47 {
INFO  19:20:06,964 - #20 int
INFO  19:20:06,964 - #20 fun
INFO  19:20:06,964 - #43 (
INFO  19:20:06,965 - #20 int
INFO  19:20:06,965 - #20 x
INFO  19:20:06,965 - #44 )
INFO  19:20:06,965 - #47 {
INFO  19:20:06,965 - #15 return
INFO  19:20:06,965 - #21 1
INFO  19:20:06,966 - #40 ;
INFO  19:20:06,966 - #48 }
INFO  19:20:06,966 - #16 void
INFO  19:20:06,967 - #20 main
INFO  19:20:06,967 - #43 (
INFO  19:20:06,967 - #44 )
INFO  19:20:06,967 - #20 int
INFO  19:20:06,967 - #20 b
INFO  19:20:06,967 - #41 ,
INFO  19:20:06,967 - #20 a
INFO  19:20:06,967 - #45 [
INFO  19:20:06,968 - #46 ]
INFO  19:20:06,968 - #40 ;
INFO  19:20:06,968 - #47 {
INFO  19:20:06,968 - #20 a
INFO  19:20:06,968 - #45 [
INFO  19:20:06,968 - #21 1
INFO  19:20:06,968 - #46 ]
INFO  19:20:06,968 - #37 =
INFO  19:20:06,968 - #22 a
INFO  19:20:06,968 - #40 ;
INFO  19:20:06,969 - #20 fun
INFO  19:20:06,969 - #43 (
INFO  19:20:06,969 - #20 m
INFO  19:20:06,969 - #44 )
INFO  19:20:06,969 - #40 ;
INFO  19:20:06,969 - #14 read
INFO  19:20:06,969 - #43 (
INFO  19:20:06,970 - #20 b
INFO  19:20:06,970 - #44 )
INFO  19:20:06,970 - #40 ;
INFO  19:20:06,970 - #48 }
INFO  19:20:06,970 - #48 }
INFO  19:20:06,971 - 

================SINTAKSNO STABLO====================


INFO  19:20:06,972 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 fun
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  19:20:06,972 - 

================SEMANTICKA OBRADA====================


INFO  19:20:06,983 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  19:20:06,984 - Deklarisana konstanta 'm' na liniji 2
INFO  19:20:06,984 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  19:20:06,984 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  19:20:06,984 - Pocetak obrade metode fun na liniji 6
INFO  19:20:06,984 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  19:20:06,985 - Kraj obrade metode fun na liniji 6
INFO  19:20:06,985 - Pocetak obrade metode main na liniji 10
INFO  19:20:06,985 - Deklarisana promenljiva 'b' na liniji 10
INFO  19:20:06,985 - Deklarisan niz 'a' na liniji 10
ERROR 19:20:06,985 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 13
ERROR 19:20:06,985 - Semanticka greska - izraz u read naredbi mora biti int, char ili bool tipa na liniji 15
INFO  19:20:06,985 - Kraj obrade metode main na liniji 10
INFO  19:20:06,985 - Kraj obrade programa 'MJProgram' na liniji 1
INFO  19:20:06,985 - ===================================
INFO  19:50:39,664 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  19:50:39,710 - #2 program
INFO  19:50:39,710 - #20 MJProgram
INFO  19:50:39,710 - #7 const
INFO  19:50:39,710 - #20 int
INFO  19:50:39,710 - #20 m
INFO  19:50:39,711 - #37 =
INFO  19:50:39,711 - #21 1
INFO  19:50:39,711 - #40 ;
INFO  19:50:39,712 - #20 int
INFO  19:50:39,712 - #20 global
INFO  19:50:39,712 - #41 ,
INFO  19:50:39,712 - #20 globarArr
INFO  19:50:39,712 - #45 [
INFO  19:50:39,712 - #46 ]
INFO  19:50:39,712 - #40 ;
INFO  19:50:39,713 - #47 {
INFO  19:50:39,713 - #20 int
INFO  19:50:39,713 - #20 fun
INFO  19:50:39,713 - #43 (
INFO  19:50:39,713 - #20 int
INFO  19:50:39,713 - #20 x
INFO  19:50:39,713 - #44 )
INFO  19:50:39,714 - #47 {
INFO  19:50:39,714 - #15 return
INFO  19:50:39,714 - #21 1
INFO  19:50:39,714 - #40 ;
INFO  19:50:39,714 - #48 }
INFO  19:50:39,715 - #16 void
INFO  19:50:39,715 - #20 main
INFO  19:50:39,715 - #43 (
INFO  19:50:39,715 - #44 )
INFO  19:50:39,715 - #20 int
INFO  19:50:39,716 - #20 b
INFO  19:50:39,716 - #41 ,
INFO  19:50:39,716 - #20 a
INFO  19:50:39,716 - #45 [
INFO  19:50:39,716 - #46 ]
INFO  19:50:39,716 - #40 ;
INFO  19:50:39,716 - #47 {
INFO  19:50:39,717 - #20 a
INFO  19:50:39,717 - #45 [
INFO  19:50:39,717 - #21 1
INFO  19:50:39,717 - #46 ]
INFO  19:50:39,717 - #37 =
INFO  19:50:39,717 - #22 a
INFO  19:50:39,717 - #40 ;
INFO  19:50:39,718 - #20 fun
INFO  19:50:39,718 - #43 (
INFO  19:50:39,718 - #20 m
INFO  19:50:39,718 - #44 )
INFO  19:50:39,719 - #40 ;
INFO  19:50:39,719 - #14 read
INFO  19:50:39,719 - #43 (
INFO  19:50:39,719 - #20 b
INFO  19:50:39,719 - #44 )
INFO  19:50:39,719 - #40 ;
INFO  19:50:39,719 - #48 }
INFO  19:50:39,719 - #48 }
INFO  19:50:39,720 - 

================SINTAKSNO STABLO====================


INFO  19:50:39,721 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 fun
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  19:50:39,722 - 

================SEMANTICKA OBRADA====================


INFO  19:50:39,733 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  19:50:39,733 - Deklarisana konstanta 'm' na liniji 2
INFO  19:50:39,734 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  19:50:39,734 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  19:50:39,734 - Pocetak obrade metode fun na liniji 6
INFO  19:50:39,734 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  19:50:39,734 - Kraj obrade metode fun na liniji 6
INFO  19:50:39,734 - Pocetak obrade metode main na liniji 10
INFO  19:50:39,734 - Deklarisana promenljiva 'b' na liniji 10
INFO  19:50:39,734 - Deklarisan niz 'a' na liniji 10
ERROR 19:50:39,734 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 13
ERROR 19:50:39,734 - StmtRead rs.etf.pp1.symboltable.concepts.Struct@378fd1ac na liniji 15
ERROR 19:50:39,734 - Semanticka greska - izraz u read naredbi mora biti int, char ili bool tipa na liniji 15
INFO  19:50:39,735 - Kraj obrade metode main na liniji 10
INFO  19:50:39,735 - Kraj obrade programa 'MJProgram' na liniji 1
INFO  19:50:39,735 - ===================================
INFO  19:51:38,888 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  19:51:38,952 - #2 program
INFO  19:51:38,952 - #20 MJProgram
INFO  19:51:38,952 - #7 const
INFO  19:51:38,953 - #20 int
INFO  19:51:38,953 - #20 m
INFO  19:51:38,954 - #37 =
INFO  19:51:38,954 - #21 1
INFO  19:51:38,954 - #40 ;
INFO  19:51:38,955 - #20 int
INFO  19:51:38,955 - #20 global
INFO  19:51:38,955 - #41 ,
INFO  19:51:38,955 - #20 globarArr
INFO  19:51:38,955 - #45 [
INFO  19:51:38,955 - #46 ]
INFO  19:51:38,955 - #40 ;
INFO  19:51:38,956 - #47 {
INFO  19:51:38,956 - #20 int
INFO  19:51:38,956 - #20 fun
INFO  19:51:38,956 - #43 (
INFO  19:51:38,956 - #20 int
INFO  19:51:38,956 - #20 x
INFO  19:51:38,956 - #44 )
INFO  19:51:38,957 - #47 {
INFO  19:51:38,957 - #15 return
INFO  19:51:38,957 - #21 1
INFO  19:51:38,957 - #40 ;
INFO  19:51:38,958 - #48 }
INFO  19:51:38,958 - #16 void
INFO  19:51:38,958 - #20 main
INFO  19:51:38,958 - #43 (
INFO  19:51:38,958 - #44 )
INFO  19:51:38,959 - #20 int
INFO  19:51:38,959 - #20 b
INFO  19:51:38,959 - #41 ,
INFO  19:51:38,959 - #20 a
INFO  19:51:38,959 - #45 [
INFO  19:51:38,959 - #46 ]
INFO  19:51:38,959 - #40 ;
INFO  19:51:38,959 - #47 {
INFO  19:51:38,960 - #20 a
INFO  19:51:38,960 - #45 [
INFO  19:51:38,960 - #21 1
INFO  19:51:38,960 - #46 ]
INFO  19:51:38,960 - #37 =
INFO  19:51:38,960 - #22 a
INFO  19:51:38,960 - #40 ;
INFO  19:51:38,960 - #20 fun
INFO  19:51:38,961 - #43 (
INFO  19:51:38,961 - #20 m
INFO  19:51:38,961 - #44 )
INFO  19:51:38,961 - #40 ;
INFO  19:51:38,961 - #14 read
INFO  19:51:38,961 - #43 (
INFO  19:51:38,961 - #20 b
INFO  19:51:38,962 - #44 )
INFO  19:51:38,962 - #40 ;
INFO  19:51:38,962 - #48 }
INFO  19:51:38,962 - #48 }
INFO  19:51:38,963 - 

================SINTAKSNO STABLO====================


INFO  19:51:38,964 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 fun
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  19:51:38,965 - 

================SEMANTICKA OBRADA====================


INFO  19:51:38,975 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  19:51:38,976 - Deklarisana konstanta 'm' na liniji 2
INFO  19:51:38,976 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  19:51:38,976 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  19:51:38,976 - Pocetak obrade metode fun na liniji 6
INFO  19:51:38,976 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  19:51:38,977 - Kraj obrade metode fun na liniji 6
INFO  19:51:38,977 - Pocetak obrade metode main na liniji 10
INFO  19:51:38,977 - Deklarisana promenljiva 'b' na liniji 10
INFO  19:51:38,977 - Deklarisan niz 'a' na liniji 10
ERROR 19:51:38,977 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 13
ERROR 19:51:38,977 - StmtRead 1 na liniji 15
ERROR 19:51:38,977 - Semanticka greska - izraz u read naredbi mora biti int, char ili bool tipa na liniji 15
INFO  19:51:38,977 - Kraj obrade metode main na liniji 10
INFO  19:51:38,977 - Kraj obrade programa 'MJProgram' na liniji 1
INFO  19:51:38,978 - ===================================
INFO  19:52:36,782 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  19:52:36,830 - #2 program
INFO  19:52:36,830 - #20 MJProgram
INFO  19:52:36,830 - #7 const
INFO  19:52:36,831 - #20 int
INFO  19:52:36,831 - #20 m
INFO  19:52:36,831 - #37 =
INFO  19:52:36,831 - #21 1
INFO  19:52:36,831 - #40 ;
INFO  19:52:36,832 - #20 int
INFO  19:52:36,832 - #20 global
INFO  19:52:36,832 - #41 ,
INFO  19:52:36,832 - #20 globarArr
INFO  19:52:36,833 - #45 [
INFO  19:52:36,833 - #46 ]
INFO  19:52:36,833 - #40 ;
INFO  19:52:36,833 - #47 {
INFO  19:52:36,833 - #20 int
INFO  19:52:36,833 - #20 fun
INFO  19:52:36,833 - #43 (
INFO  19:52:36,833 - #20 int
INFO  19:52:36,833 - #20 x
INFO  19:52:36,833 - #44 )
INFO  19:52:36,834 - #47 {
INFO  19:52:36,834 - #15 return
INFO  19:52:36,834 - #21 1
INFO  19:52:36,834 - #40 ;
INFO  19:52:36,834 - #48 }
INFO  19:52:36,835 - #16 void
INFO  19:52:36,835 - #20 main
INFO  19:52:36,835 - #43 (
INFO  19:52:36,835 - #44 )
INFO  19:52:36,835 - #20 int
INFO  19:52:36,835 - #20 b
INFO  19:52:36,836 - #41 ,
INFO  19:52:36,836 - #20 a
INFO  19:52:36,836 - #45 [
INFO  19:52:36,836 - #46 ]
INFO  19:52:36,836 - #40 ;
INFO  19:52:36,836 - #47 {
INFO  19:52:36,836 - #20 a
INFO  19:52:36,837 - #45 [
INFO  19:52:36,837 - #21 1
INFO  19:52:36,837 - #46 ]
INFO  19:52:36,837 - #37 =
INFO  19:52:36,837 - #22 a
INFO  19:52:36,837 - #40 ;
INFO  19:52:36,837 - #20 fun
INFO  19:52:36,837 - #43 (
INFO  19:52:36,837 - #20 m
INFO  19:52:36,838 - #44 )
INFO  19:52:36,838 - #40 ;
INFO  19:52:36,838 - #14 read
INFO  19:52:36,838 - #43 (
INFO  19:52:36,838 - #20 b
INFO  19:52:36,838 - #44 )
INFO  19:52:36,838 - #40 ;
INFO  19:52:36,838 - #48 }
INFO  19:52:36,839 - #48 }
INFO  19:52:36,839 - 

================SINTAKSNO STABLO====================


INFO  19:52:36,841 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 fun
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  19:52:36,843 - 

================SEMANTICKA OBRADA====================


INFO  19:52:36,855 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  19:52:36,855 - Deklarisana konstanta 'm' na liniji 2
INFO  19:52:36,855 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  19:52:36,855 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  19:52:36,855 - Pocetak obrade metode fun na liniji 6
INFO  19:52:36,856 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  19:52:36,856 - Kraj obrade metode fun na liniji 6
INFO  19:52:36,856 - Pocetak obrade metode main na liniji 10
INFO  19:52:36,856 - Deklarisana promenljiva 'b' na liniji 10
INFO  19:52:36,856 - Deklarisan niz 'a' na liniji 10
ERROR 19:52:36,856 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 13
ERROR 19:52:36,856 - StmtRead 1 na liniji 15
ERROR 19:52:36,856 - Semanticka greska - izraz u read naredbi mora biti int, char ili bool tipa na liniji 15
INFO  19:52:36,856 - Kraj obrade metode main na liniji 10
INFO  19:52:36,856 - Kraj obrade programa 'MJProgram' na liniji 1
INFO  19:52:36,857 - ===================================
INFO  19:53:34,407 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  19:53:34,456 - #2 program
INFO  19:53:34,456 - #20 MJProgram
INFO  19:53:34,456 - #7 const
INFO  19:53:34,457 - #20 int
INFO  19:53:34,457 - #20 m
INFO  19:53:34,457 - #37 =
INFO  19:53:34,457 - #21 1
INFO  19:53:34,457 - #40 ;
INFO  19:53:34,458 - #20 int
INFO  19:53:34,458 - #20 global
INFO  19:53:34,458 - #41 ,
INFO  19:53:34,458 - #20 globarArr
INFO  19:53:34,458 - #45 [
INFO  19:53:34,459 - #46 ]
INFO  19:53:34,459 - #40 ;
INFO  19:53:34,459 - #47 {
INFO  19:53:34,459 - #20 int
INFO  19:53:34,459 - #20 fun
INFO  19:53:34,459 - #43 (
INFO  19:53:34,459 - #20 int
INFO  19:53:34,459 - #20 x
INFO  19:53:34,459 - #44 )
INFO  19:53:34,460 - #47 {
INFO  19:53:34,460 - #15 return
INFO  19:53:34,460 - #21 1
INFO  19:53:34,460 - #40 ;
INFO  19:53:34,460 - #48 }
INFO  19:53:34,461 - #16 void
INFO  19:53:34,461 - #20 main
INFO  19:53:34,461 - #43 (
INFO  19:53:34,461 - #44 )
INFO  19:53:34,462 - #20 int
INFO  19:53:34,462 - #20 b
INFO  19:53:34,462 - #41 ,
INFO  19:53:34,462 - #20 a
INFO  19:53:34,462 - #45 [
INFO  19:53:34,462 - #46 ]
INFO  19:53:34,462 - #40 ;
INFO  19:53:34,462 - #47 {
INFO  19:53:34,462 - #20 a
INFO  19:53:34,462 - #45 [
INFO  19:53:34,462 - #21 1
INFO  19:53:34,463 - #46 ]
INFO  19:53:34,463 - #37 =
INFO  19:53:34,463 - #22 a
INFO  19:53:34,463 - #40 ;
INFO  19:53:34,463 - #20 fun
INFO  19:53:34,464 - #43 (
INFO  19:53:34,464 - #20 m
INFO  19:53:34,464 - #44 )
INFO  19:53:34,464 - #40 ;
INFO  19:53:34,464 - #14 read
INFO  19:53:34,464 - #43 (
INFO  19:53:34,464 - #20 b
INFO  19:53:34,464 - #44 )
INFO  19:53:34,464 - #40 ;
INFO  19:53:34,465 - #48 }
INFO  19:53:34,465 - #48 }
INFO  19:53:34,466 - 

================SINTAKSNO STABLO====================


INFO  19:53:34,467 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 fun
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  19:53:34,470 - 

================SEMANTICKA OBRADA====================


INFO  19:53:34,482 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  19:53:34,483 - Deklarisana konstanta 'm' na liniji 2
INFO  19:53:34,483 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  19:53:34,483 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  19:53:34,483 - Pocetak obrade metode fun na liniji 6
INFO  19:53:34,483 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  19:53:34,483 - Kraj obrade metode fun na liniji 6
INFO  19:53:34,483 - Pocetak obrade metode main na liniji 10
INFO  19:53:34,484 - Deklarisana promenljiva 'b' na liniji 10
INFO  19:53:34,484 - Deklarisan niz 'a' na liniji 10
ERROR 19:53:34,484 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 13
INFO  19:53:34,484 - Kraj obrade metode main na liniji 10
INFO  19:53:34,484 - Kraj obrade programa 'MJProgram' na liniji 1
INFO  19:53:34,484 - ===================================
INFO  19:54:42,920 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  19:54:42,967 - #2 program
INFO  19:54:42,967 - #20 MJProgram
INFO  19:54:42,967 - #7 const
INFO  19:54:42,967 - #20 int
INFO  19:54:42,967 - #20 m
INFO  19:54:42,968 - #37 =
INFO  19:54:42,968 - #21 1
INFO  19:54:42,968 - #40 ;
INFO  19:54:42,969 - #20 int
INFO  19:54:42,969 - #20 global
INFO  19:54:42,969 - #41 ,
INFO  19:54:42,969 - #20 globarArr
INFO  19:54:42,969 - #45 [
INFO  19:54:42,969 - #46 ]
INFO  19:54:42,970 - #40 ;
INFO  19:54:42,970 - #47 {
INFO  19:54:42,970 - #20 int
INFO  19:54:42,970 - #20 fun
INFO  19:54:42,970 - #43 (
INFO  19:54:42,970 - #20 int
INFO  19:54:42,970 - #20 x
INFO  19:54:42,970 - #44 )
INFO  19:54:42,971 - #47 {
INFO  19:54:42,971 - #15 return
INFO  19:54:42,971 - #21 1
INFO  19:54:42,971 - #40 ;
INFO  19:54:42,971 - #48 }
INFO  19:54:42,972 - #16 void
INFO  19:54:42,972 - #20 main
INFO  19:54:42,972 - #43 (
INFO  19:54:42,972 - #44 )
INFO  19:54:42,972 - #20 int
INFO  19:54:42,972 - #20 b
INFO  19:54:42,972 - #41 ,
INFO  19:54:42,973 - #20 a
INFO  19:54:42,973 - #45 [
INFO  19:54:42,973 - #46 ]
INFO  19:54:42,973 - #40 ;
INFO  19:54:42,973 - #47 {
INFO  19:54:42,973 - #20 a
INFO  19:54:42,973 - #45 [
INFO  19:54:42,973 - #21 1
INFO  19:54:42,973 - #46 ]
INFO  19:54:42,974 - #37 =
INFO  19:54:42,974 - #22 a
INFO  19:54:42,974 - #40 ;
INFO  19:54:42,974 - #20 fun
INFO  19:54:42,974 - #43 (
INFO  19:54:42,974 - #20 m
INFO  19:54:42,975 - #44 )
INFO  19:54:42,975 - #40 ;
INFO  19:54:42,975 - #14 read
INFO  19:54:42,975 - #43 (
INFO  19:54:42,975 - #20 b
INFO  19:54:42,975 - #44 )
INFO  19:54:42,975 - #40 ;
INFO  19:54:42,975 - #48 }
INFO  19:54:42,975 - #48 }
INFO  19:54:42,976 - 

================SINTAKSNO STABLO====================


INFO  19:54:42,977 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 fun
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  19:54:42,979 - 

================SEMANTICKA OBRADA====================


INFO  19:54:42,990 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  19:54:42,990 - Deklarisana konstanta 'm' na liniji 2
INFO  19:54:42,990 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  19:54:42,990 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  19:54:42,991 - Pocetak obrade metode fun na liniji 6
INFO  19:54:42,991 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  19:54:42,991 - Kraj obrade metode fun na liniji 6
INFO  19:54:42,991 - Pocetak obrade metode main na liniji 10
INFO  19:54:42,991 - Deklarisana promenljiva 'b' na liniji 10
INFO  19:54:42,991 - Deklarisan niz 'a' na liniji 10
ERROR 19:54:42,991 - AssignmentExprrs.etf.pp1.symboltable.concepts.Struct@378fd1ac na liniji 13
ERROR 19:54:42,991 - DesignatorAssignmentrs.etf.pp1.symboltable.concepts.Struct@49097b5d na liniji 13
ERROR 19:54:42,991 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 13
INFO  19:54:42,991 - Kraj obrade metode main na liniji 10
INFO  19:54:42,991 - Kraj obrade programa 'MJProgram' na liniji 1
INFO  19:54:42,992 - ===================================
INFO  19:55:07,637 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  19:55:07,711 - #2 program
INFO  19:55:07,711 - #20 MJProgram
INFO  19:55:07,711 - #7 const
INFO  19:55:07,711 - #20 int
INFO  19:55:07,711 - #20 m
INFO  19:55:07,713 - #37 =
INFO  19:55:07,713 - #21 1
INFO  19:55:07,713 - #40 ;
INFO  19:55:07,713 - #20 int
INFO  19:55:07,713 - #20 global
INFO  19:55:07,714 - #41 ,
INFO  19:55:07,714 - #20 globarArr
INFO  19:55:07,714 - #45 [
INFO  19:55:07,714 - #46 ]
INFO  19:55:07,714 - #40 ;
INFO  19:55:07,714 - #47 {
INFO  19:55:07,715 - #20 int
INFO  19:55:07,715 - #20 fun
INFO  19:55:07,715 - #43 (
INFO  19:55:07,715 - #20 int
INFO  19:55:07,715 - #20 x
INFO  19:55:07,715 - #44 )
INFO  19:55:07,716 - #47 {
INFO  19:55:07,716 - #15 return
INFO  19:55:07,716 - #21 1
INFO  19:55:07,716 - #40 ;
INFO  19:55:07,717 - #48 }
INFO  19:55:07,718 - #16 void
INFO  19:55:07,718 - #20 main
INFO  19:55:07,718 - #43 (
INFO  19:55:07,718 - #44 )
INFO  19:55:07,719 - #20 int
INFO  19:55:07,719 - #20 b
INFO  19:55:07,719 - #41 ,
INFO  19:55:07,719 - #20 a
INFO  19:55:07,719 - #45 [
INFO  19:55:07,719 - #46 ]
INFO  19:55:07,719 - #40 ;
INFO  19:55:07,720 - #47 {
INFO  19:55:07,720 - #20 a
INFO  19:55:07,720 - #45 [
INFO  19:55:07,720 - #21 1
INFO  19:55:07,721 - #46 ]
INFO  19:55:07,721 - #37 =
INFO  19:55:07,721 - #22 a
INFO  19:55:07,721 - #40 ;
INFO  19:55:07,722 - #20 fun
INFO  19:55:07,722 - #43 (
INFO  19:55:07,722 - #20 m
INFO  19:55:07,722 - #44 )
INFO  19:55:07,722 - #40 ;
INFO  19:55:07,723 - #14 read
INFO  19:55:07,723 - #43 (
INFO  19:55:07,723 - #20 b
INFO  19:55:07,723 - #44 )
INFO  19:55:07,723 - #40 ;
INFO  19:55:07,723 - #48 }
INFO  19:55:07,723 - #48 }
INFO  19:55:07,724 - 

================SINTAKSNO STABLO====================


INFO  19:55:07,726 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 fun
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  19:55:07,727 - 

================SEMANTICKA OBRADA====================


INFO  19:55:07,740 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  19:55:07,741 - Deklarisana konstanta 'm' na liniji 2
INFO  19:55:07,741 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  19:55:07,742 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  19:55:07,742 - Pocetak obrade metode fun na liniji 6
INFO  19:55:07,742 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  19:55:07,742 - Kraj obrade metode fun na liniji 6
INFO  19:55:07,742 - Pocetak obrade metode main na liniji 10
INFO  19:55:07,742 - Deklarisana promenljiva 'b' na liniji 10
INFO  19:55:07,743 - Deklarisan niz 'a' na liniji 10
ERROR 19:55:07,743 - AssignmentExpr2 na liniji 13
ERROR 19:55:07,743 - DesignatorAssignment1 na liniji 13
ERROR 19:55:07,743 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 13
INFO  19:55:07,743 - Kraj obrade metode main na liniji 10
INFO  19:55:07,743 - Kraj obrade programa 'MJProgram' na liniji 1
INFO  19:55:07,744 - ===================================
INFO  19:55:45,342 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  19:55:45,390 - #2 program
INFO  19:55:45,391 - #20 MJProgram
INFO  19:55:45,391 - #7 const
INFO  19:55:45,391 - #20 int
INFO  19:55:45,391 - #20 m
INFO  19:55:45,392 - #37 =
INFO  19:55:45,392 - #21 1
INFO  19:55:45,392 - #40 ;
INFO  19:55:45,393 - #20 int
INFO  19:55:45,393 - #20 global
INFO  19:55:45,393 - #41 ,
INFO  19:55:45,393 - #20 globarArr
INFO  19:55:45,393 - #45 [
INFO  19:55:45,393 - #46 ]
INFO  19:55:45,393 - #40 ;
INFO  19:55:45,394 - #47 {
INFO  19:55:45,394 - #20 int
INFO  19:55:45,394 - #20 fun
INFO  19:55:45,394 - #43 (
INFO  19:55:45,394 - #20 int
INFO  19:55:45,394 - #20 x
INFO  19:55:45,394 - #44 )
INFO  19:55:45,394 - #47 {
INFO  19:55:45,394 - #15 return
INFO  19:55:45,395 - #21 1
INFO  19:55:45,395 - #40 ;
INFO  19:55:45,395 - #48 }
INFO  19:55:45,396 - #16 void
INFO  19:55:45,396 - #20 main
INFO  19:55:45,396 - #43 (
INFO  19:55:45,396 - #44 )
INFO  19:55:45,396 - #20 int
INFO  19:55:45,396 - #20 b
INFO  19:55:45,396 - #41 ,
INFO  19:55:45,397 - #20 a
INFO  19:55:45,397 - #45 [
INFO  19:55:45,397 - #46 ]
INFO  19:55:45,397 - #40 ;
INFO  19:55:45,397 - #47 {
INFO  19:55:45,397 - #20 a
INFO  19:55:45,397 - #45 [
INFO  19:55:45,398 - #21 1
INFO  19:55:45,398 - #46 ]
INFO  19:55:45,398 - #37 =
INFO  19:55:45,398 - #21 1
INFO  19:55:45,398 - #40 ;
INFO  19:55:45,399 - #20 fun
INFO  19:55:45,399 - #43 (
INFO  19:55:45,399 - #20 m
INFO  19:55:45,399 - #44 )
INFO  19:55:45,399 - #40 ;
INFO  19:55:45,400 - #14 read
INFO  19:55:45,400 - #43 (
INFO  19:55:45,400 - #20 b
INFO  19:55:45,400 - #44 )
INFO  19:55:45,400 - #40 ;
INFO  19:55:45,400 - #48 }
INFO  19:55:45,400 - #48 }
INFO  19:55:45,401 - 

================SINTAKSNO STABLO====================


INFO  19:55:45,402 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 fun
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  19:55:45,403 - 

================SEMANTICKA OBRADA====================


INFO  19:55:45,413 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  19:55:45,413 - Deklarisana konstanta 'm' na liniji 2
INFO  19:55:45,413 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  19:55:45,413 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  19:55:45,414 - Pocetak obrade metode fun na liniji 6
INFO  19:55:45,414 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  19:55:45,414 - Kraj obrade metode fun na liniji 6
INFO  19:55:45,414 - Pocetak obrade metode main na liniji 10
INFO  19:55:45,414 - Deklarisana promenljiva 'b' na liniji 10
INFO  19:55:45,414 - Deklarisan niz 'a' na liniji 10
ERROR 19:55:45,414 - AssignmentExpr1 na liniji 14
ERROR 19:55:45,414 - DesignatorAssignment1 na liniji 14
INFO  19:55:45,414 - Kraj obrade metode main na liniji 10
INFO  19:55:45,414 - Kraj obrade programa 'MJProgram' na liniji 1
INFO  19:55:45,415 - ===================================
INFO  19:56:02,966 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  19:56:03,011 - #2 program
INFO  19:56:03,012 - #20 MJProgram
INFO  19:56:03,012 - #7 const
INFO  19:56:03,012 - #20 int
INFO  19:56:03,012 - #20 m
INFO  19:56:03,012 - #37 =
INFO  19:56:03,013 - #21 1
INFO  19:56:03,013 - #40 ;
INFO  19:56:03,013 - #20 int
INFO  19:56:03,013 - #20 global
INFO  19:56:03,013 - #41 ,
INFO  19:56:03,014 - #20 globarArr
INFO  19:56:03,014 - #45 [
INFO  19:56:03,014 - #46 ]
INFO  19:56:03,014 - #40 ;
INFO  19:56:03,014 - #47 {
INFO  19:56:03,014 - #20 int
INFO  19:56:03,014 - #20 fun
INFO  19:56:03,014 - #43 (
INFO  19:56:03,014 - #20 int
INFO  19:56:03,014 - #20 x
INFO  19:56:03,015 - #44 )
INFO  19:56:03,015 - #47 {
INFO  19:56:03,015 - #15 return
INFO  19:56:03,015 - #21 1
INFO  19:56:03,015 - #40 ;
INFO  19:56:03,016 - #48 }
INFO  19:56:03,016 - #16 void
INFO  19:56:03,016 - #20 main
INFO  19:56:03,017 - #43 (
INFO  19:56:03,017 - #44 )
INFO  19:56:03,017 - #20 int
INFO  19:56:03,017 - #20 b
INFO  19:56:03,017 - #41 ,
INFO  19:56:03,017 - #20 a
INFO  19:56:03,017 - #45 [
INFO  19:56:03,017 - #46 ]
INFO  19:56:03,017 - #40 ;
INFO  19:56:03,018 - #47 {
INFO  19:56:03,018 - #20 a
INFO  19:56:03,018 - #45 [
INFO  19:56:03,018 - #21 1
INFO  19:56:03,018 - #46 ]
INFO  19:56:03,018 - #37 =
INFO  19:56:03,018 - #21 1
INFO  19:56:03,018 - #40 ;
INFO  19:56:03,019 - #20 fun
INFO  19:56:03,019 - #43 (
INFO  19:56:03,019 - #20 m
INFO  19:56:03,019 - #44 )
INFO  19:56:03,019 - #40 ;
INFO  19:56:03,019 - #14 read
INFO  19:56:03,020 - #43 (
INFO  19:56:03,020 - #20 b
INFO  19:56:03,020 - #44 )
INFO  19:56:03,020 - #40 ;
INFO  19:56:03,020 - #48 }
INFO  19:56:03,020 - #48 }
INFO  19:56:03,021 - 

================SINTAKSNO STABLO====================


INFO  19:56:03,021 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 fun
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  19:56:03,022 - 

================SEMANTICKA OBRADA====================


INFO  19:56:03,033 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  19:56:03,034 - Deklarisana konstanta 'm' na liniji 2
INFO  19:56:03,034 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  19:56:03,034 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  19:56:03,034 - Pocetak obrade metode fun na liniji 6
INFO  19:56:03,034 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  19:56:03,034 - Kraj obrade metode fun na liniji 6
INFO  19:56:03,034 - Pocetak obrade metode main na liniji 10
INFO  19:56:03,034 - Deklarisana promenljiva 'b' na liniji 10
INFO  19:56:03,034 - Deklarisan niz 'a' na liniji 10
INFO  19:56:03,034 - Kraj obrade metode main na liniji 10
INFO  19:56:03,034 - Kraj obrade programa 'MJProgram' na liniji 1
INFO  19:56:03,035 - ===================================
INFO  20:03:09,620 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:03:09,683 - #2 program
INFO  20:03:09,683 - #20 MJProgram
INFO  20:03:09,683 - #7 const
INFO  20:03:09,684 - #20 int
INFO  20:03:09,684 - #20 m
INFO  20:03:09,684 - #37 =
INFO  20:03:09,685 - #21 1
INFO  20:03:09,685 - #40 ;
INFO  20:03:09,686 - #20 int
INFO  20:03:09,686 - #20 global
INFO  20:03:09,686 - #41 ,
INFO  20:03:09,687 - #20 globarArr
INFO  20:03:09,687 - #45 [
INFO  20:03:09,687 - #46 ]
INFO  20:03:09,687 - #40 ;
INFO  20:03:09,687 - #47 {
INFO  20:03:09,688 - #20 int
INFO  20:03:09,688 - #20 fun
INFO  20:03:09,688 - #43 (
INFO  20:03:09,688 - #20 int
INFO  20:03:09,688 - #20 x
INFO  20:03:09,688 - #44 )
INFO  20:03:09,689 - #47 {
INFO  20:03:09,689 - #15 return
INFO  20:03:09,689 - #20 x
INFO  20:03:09,689 - #40 ;
INFO  20:03:09,689 - #48 }
INFO  20:03:09,690 - #16 void
INFO  20:03:09,690 - #20 main
INFO  20:03:09,690 - #43 (
INFO  20:03:09,690 - #44 )
INFO  20:03:09,690 - #20 int
INFO  20:03:09,690 - #20 b
INFO  20:03:09,691 - #41 ,
INFO  20:03:09,691 - #20 a
INFO  20:03:09,691 - #45 [
INFO  20:03:09,691 - #46 ]
INFO  20:03:09,691 - #40 ;
INFO  20:03:09,691 - #47 {
INFO  20:03:09,691 - #20 a
INFO  20:03:09,691 - #45 [
INFO  20:03:09,692 - #21 1
INFO  20:03:09,692 - #46 ]
INFO  20:03:09,692 - #37 =
INFO  20:03:09,692 - #21 1
INFO  20:03:09,692 - #40 ;
INFO  20:03:09,692 - #20 fun
INFO  20:03:09,693 - #43 (
INFO  20:03:09,693 - #20 m
INFO  20:03:09,693 - #44 )
INFO  20:03:09,693 - #40 ;
INFO  20:03:09,693 - #14 read
INFO  20:03:09,693 - #43 (
INFO  20:03:09,693 - #20 b
INFO  20:03:09,693 - #44 )
INFO  20:03:09,694 - #40 ;
INFO  20:03:09,694 - #48 }
INFO  20:03:09,694 - #48 }
INFO  20:03:09,695 - 

================SINTAKSNO STABLO====================


INFO  20:03:09,696 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 fun
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  20:03:09,698 - 

================SEMANTICKA OBRADA====================


INFO  20:03:09,707 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  20:03:09,708 - Deklarisana konstanta 'm' na liniji 2
INFO  20:03:09,709 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  20:03:09,709 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  20:03:09,709 - Pocetak obrade metode fun na liniji 6
INFO  20:03:09,709 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  20:03:09,709 - Kraj obrade metode fun na liniji 6
INFO  20:03:09,709 - Pocetak obrade metode main na liniji 10
INFO  20:03:09,709 - Deklarisana promenljiva 'b' na liniji 10
INFO  20:03:09,709 - Deklarisan niz 'a' na liniji 10
INFO  20:03:09,710 - Kraj obrade metode main na liniji 10
INFO  20:03:09,710 - Kraj obrade programa 'MJProgram' na liniji 1
INFO  20:03:09,711 - ===================================
INFO  20:07:56,587 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:07:56,635 - #2 program
INFO  20:07:56,635 - #20 MJProgram
INFO  20:07:56,635 - #7 const
INFO  20:07:56,635 - #20 int
INFO  20:07:56,635 - #20 m
INFO  20:07:56,636 - #37 =
INFO  20:07:56,636 - #21 1
INFO  20:07:56,636 - #40 ;
INFO  20:07:56,636 - #20 int
INFO  20:07:56,637 - #20 global
INFO  20:07:56,637 - #41 ,
INFO  20:07:56,637 - #20 globarArr
INFO  20:07:56,637 - #45 [
INFO  20:07:56,637 - #46 ]
INFO  20:07:56,637 - #40 ;
INFO  20:07:56,637 - #47 {
INFO  20:07:56,637 - #20 int
INFO  20:07:56,637 - #20 fun
INFO  20:07:56,638 - #43 (
INFO  20:07:56,638 - #20 int
INFO  20:07:56,638 - #20 x
INFO  20:07:56,638 - #44 )
INFO  20:07:56,638 - #47 {
INFO  20:07:56,638 - #15 return
INFO  20:07:56,638 - #20 x
INFO  20:07:56,638 - #40 ;
INFO  20:07:56,639 - #48 }
INFO  20:07:56,639 - #16 void
INFO  20:07:56,639 - #20 main
INFO  20:07:56,639 - #43 (
INFO  20:07:56,640 - #44 )
INFO  20:07:56,640 - #20 int
INFO  20:07:56,640 - #20 b
INFO  20:07:56,640 - #41 ,
INFO  20:07:56,640 - #20 a
INFO  20:07:56,640 - #45 [
INFO  20:07:56,640 - #46 ]
INFO  20:07:56,640 - #40 ;
INFO  20:07:56,640 - #47 {
INFO  20:07:56,641 - #20 a
INFO  20:07:56,641 - #45 [
INFO  20:07:56,641 - #21 1
INFO  20:07:56,641 - #46 ]
INFO  20:07:56,641 - #37 =
INFO  20:07:56,641 - #21 1
INFO  20:07:56,641 - #40 ;
INFO  20:07:56,641 - #20 fun
INFO  20:07:56,642 - #43 (
INFO  20:07:56,642 - #20 m
INFO  20:07:56,642 - #44 )
INFO  20:07:56,642 - #40 ;
INFO  20:07:56,642 - #14 read
INFO  20:07:56,643 - #43 (
INFO  20:07:56,643 - #20 b
INFO  20:07:56,643 - #44 )
INFO  20:07:56,643 - #40 ;
INFO  20:07:56,643 - #48 }
INFO  20:07:56,643 - #48 }
INFO  20:07:56,645 - 

================SINTAKSNO STABLO====================


INFO  20:07:56,646 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 fun
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  20:07:56,648 - 

================SEMANTICKA OBRADA====================


INFO  20:07:56,658 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  20:07:56,658 - Deklarisana konstanta 'm' na liniji 2
INFO  20:07:56,658 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  20:07:56,658 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  20:07:56,659 - Pocetak obrade metode fun na liniji 6
INFO  20:07:56,659 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  20:07:56,659 - Kraj obrade metode fun na liniji 6
INFO  20:07:56,659 - Pocetak obrade metode main na liniji 10
INFO  20:07:56,659 - Deklarisana promenljiva 'b' na liniji 10
INFO  20:07:56,659 - Deklarisan niz 'a' na liniji 10
INFO  20:07:56,660 - Pronadjen poziv funkcije 'fun' na liniji 15
INFO  20:07:56,660 - Kraj obrade metode main na liniji 10
INFO  20:07:56,660 - Kraj obrade programa 'MJProgram' na liniji 1
INFO  20:07:56,661 - ===================================
INFO  20:13:05,554 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:13:05,616 - #2 program
INFO  20:13:05,616 - #20 MJProgram
INFO  20:13:05,616 - #7 const
INFO  20:13:05,616 - #20 avs
INFO  20:13:05,617 - #20 m
INFO  20:13:05,618 - #37 =
INFO  20:13:05,618 - #21 1
INFO  20:13:05,618 - #40 ;
INFO  20:13:05,619 - #20 int
INFO  20:13:05,619 - #20 global
INFO  20:13:05,620 - #41 ,
INFO  20:13:05,620 - #20 globarArr
INFO  20:13:05,620 - #45 [
INFO  20:13:05,621 - #46 ]
INFO  20:13:05,621 - #40 ;
INFO  20:13:05,621 - #47 {
INFO  20:13:05,621 - #20 int
INFO  20:13:05,621 - #20 fun
INFO  20:13:05,621 - #43 (
INFO  20:13:05,622 - #20 int
INFO  20:13:05,622 - #20 x
INFO  20:13:05,622 - #44 )
INFO  20:13:05,622 - #47 {
INFO  20:13:05,622 - #15 return
INFO  20:13:05,622 - #20 x
INFO  20:13:05,622 - #40 ;
INFO  20:13:05,623 - #48 }
INFO  20:13:05,623 - #16 void
INFO  20:13:05,624 - #20 main
INFO  20:13:05,624 - #43 (
INFO  20:13:05,624 - #44 )
INFO  20:13:05,624 - #20 int
INFO  20:13:05,624 - #20 b
INFO  20:13:05,624 - #41 ,
INFO  20:13:05,624 - #20 a
INFO  20:13:05,624 - #45 [
INFO  20:13:05,624 - #46 ]
INFO  20:13:05,624 - #40 ;
INFO  20:13:05,625 - #47 {
INFO  20:13:05,625 - #20 a
INFO  20:13:05,625 - #45 [
INFO  20:13:05,625 - #21 1
INFO  20:13:05,625 - #46 ]
INFO  20:13:05,625 - #37 =
INFO  20:13:05,626 - #21 1
INFO  20:13:05,626 - #40 ;
INFO  20:13:05,626 - #20 fun
INFO  20:13:05,626 - #43 (
INFO  20:13:05,626 - #20 m
INFO  20:13:05,626 - #44 )
INFO  20:13:05,626 - #40 ;
INFO  20:13:05,626 - #14 read
INFO  20:13:05,626 - #43 (
INFO  20:13:05,626 - #20 b
INFO  20:13:05,626 - #44 )
INFO  20:13:05,626 - #40 ;
INFO  20:13:05,626 - #48 }
INFO  20:13:05,626 - #48 }
INFO  20:13:05,627 - 

================SINTAKSNO STABLO====================


INFO  20:13:05,629 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           avs
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 fun
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  20:13:05,631 - 

================SEMANTICKA OBRADA====================


INFO  20:13:05,643 - Pocetak obrade programa 'MJProgram' na liniji 1
ERROR 20:13:05,643 - Semanticka greska - nije pronadjen tip 'avs' u tabeli simbola!
INFO  20:13:05,644 - Deklarisana konstanta 'm' na liniji 2
INFO  20:13:05,644 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  20:13:05,644 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  20:13:05,645 - Pocetak obrade metode fun na liniji 6
INFO  20:13:05,645 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  20:13:05,645 - Kraj obrade metode fun na liniji 6
INFO  20:13:05,645 - Pocetak obrade metode main na liniji 10
INFO  20:13:05,645 - Deklarisana promenljiva 'b' na liniji 10
INFO  20:13:05,645 - Deklarisan niz 'a' na liniji 10
INFO  20:13:05,645 - Pronadjen poziv funkcije 'fun' na liniji 15
INFO  20:13:05,645 - Kraj obrade metode main na liniji 10
INFO  20:13:05,646 - Kraj obrade programa 'MJProgram' na liniji 1
INFO  20:13:05,647 - ===================================
INFO  20:16:18,988 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:16:19,040 - #2 program
INFO  20:16:19,041 - #20 MJProgram
INFO  20:16:19,041 - #7 const
INFO  20:16:19,041 - #20 int
INFO  20:16:19,041 - #20 m
INFO  20:16:19,042 - #37 =
INFO  20:16:19,042 - #21 1
INFO  20:16:19,042 - #40 ;
INFO  20:16:19,042 - #20 int
INFO  20:16:19,043 - #20 global
INFO  20:16:19,043 - #41 ,
INFO  20:16:19,043 - #20 globarArr
INFO  20:16:19,043 - #45 [
INFO  20:16:19,043 - #46 ]
INFO  20:16:19,043 - #40 ;
INFO  20:16:19,043 - #47 {
INFO  20:16:19,043 - #20 int
INFO  20:16:19,044 - #20 fun
INFO  20:16:19,044 - #43 (
INFO  20:16:19,044 - #20 int
INFO  20:16:19,044 - #20 m
INFO  20:16:19,044 - #44 )
INFO  20:16:19,044 - #47 {
INFO  20:16:19,044 - #15 return
INFO  20:16:19,045 - #20 x
INFO  20:16:19,045 - #40 ;
INFO  20:16:19,045 - #48 }
INFO  20:16:19,045 - #16 void
INFO  20:16:19,046 - #20 main
INFO  20:16:19,046 - #43 (
INFO  20:16:19,046 - #44 )
INFO  20:16:19,046 - #20 int
INFO  20:16:19,046 - #20 b
INFO  20:16:19,046 - #41 ,
INFO  20:16:19,046 - #20 a
INFO  20:16:19,047 - #45 [
INFO  20:16:19,047 - #46 ]
INFO  20:16:19,047 - #40 ;
INFO  20:16:19,047 - #47 {
INFO  20:16:19,047 - #20 a
INFO  20:16:19,047 - #45 [
INFO  20:16:19,047 - #21 1
INFO  20:16:19,047 - #46 ]
INFO  20:16:19,047 - #37 =
INFO  20:16:19,047 - #21 1
INFO  20:16:19,047 - #40 ;
INFO  20:16:19,048 - #20 fun
INFO  20:16:19,048 - #43 (
INFO  20:16:19,048 - #20 m
INFO  20:16:19,048 - #44 )
INFO  20:16:19,048 - #40 ;
INFO  20:16:19,048 - #14 read
INFO  20:16:19,049 - #43 (
INFO  20:16:19,049 - #20 b
INFO  20:16:19,049 - #44 )
INFO  20:16:19,049 - #40 ;
INFO  20:16:19,049 - #48 }
INFO  20:16:19,049 - #48 }
INFO  20:16:19,050 - 

================SINTAKSNO STABLO====================


INFO  20:16:19,052 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             m
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 fun
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  20:16:19,054 - 

================SEMANTICKA OBRADA====================


INFO  20:16:19,064 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  20:16:19,065 - Deklarisana konstanta 'm' na liniji 2
INFO  20:16:19,065 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  20:16:19,065 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  20:16:19,065 - Pocetak obrade metode fun na liniji 6
ERROR 20:16:19,066 - Semanticka greska - 'm' vec postoji na liniji 6
ERROR 20:16:19,066 - Semanticka greska - 'x' nije deklarisano na liniji 7
ERROR 20:16:19,066 - Semanticka greska - tip povratne vrednosti metode i tip vrednosti izraza u return naredbi se ne slazu na liniji 7
INFO  20:16:19,066 - Kraj obrade metode fun na liniji 6
INFO  20:16:19,066 - Pocetak obrade metode main na liniji 10
INFO  20:16:19,066 - Deklarisana promenljiva 'b' na liniji 10
INFO  20:16:19,066 - Deklarisan niz 'a' na liniji 10
INFO  20:16:19,066 - Pronadjen poziv funkcije 'fun' na liniji 15
INFO  20:16:19,066 - Kraj obrade metode main na liniji 10
INFO  20:16:19,066 - Kraj obrade programa 'MJProgram' na liniji 1
INFO  20:16:19,067 - ===================================
INFO  20:16:33,732 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:16:33,777 - #2 program
INFO  20:16:33,777 - #20 MJProgram
INFO  20:16:33,777 - #7 const
INFO  20:16:33,777 - #20 int
INFO  20:16:33,777 - #20 m
INFO  20:16:33,778 - #37 =
INFO  20:16:33,778 - #21 1
INFO  20:16:33,778 - #40 ;
INFO  20:16:33,778 - #20 int
INFO  20:16:33,779 - #20 global
INFO  20:16:33,779 - #41 ,
INFO  20:16:33,779 - #20 globarArr
INFO  20:16:33,779 - #45 [
INFO  20:16:33,779 - #46 ]
INFO  20:16:33,779 - #40 ;
INFO  20:16:33,779 - #47 {
INFO  20:16:33,780 - #20 int
INFO  20:16:33,780 - #20 fun
INFO  20:16:33,780 - #43 (
INFO  20:16:33,780 - #20 int
INFO  20:16:33,780 - #20 m
INFO  20:16:33,780 - #44 )
INFO  20:16:33,780 - #47 {
INFO  20:16:33,780 - #15 return
INFO  20:16:33,781 - #21 1
INFO  20:16:33,781 - #40 ;
INFO  20:16:33,781 - #48 }
INFO  20:16:33,781 - #16 void
INFO  20:16:33,781 - #20 main
INFO  20:16:33,782 - #43 (
INFO  20:16:33,782 - #44 )
INFO  20:16:33,782 - #20 int
INFO  20:16:33,782 - #20 b
INFO  20:16:33,782 - #41 ,
INFO  20:16:33,782 - #20 a
INFO  20:16:33,782 - #45 [
INFO  20:16:33,782 - #46 ]
INFO  20:16:33,782 - #40 ;
INFO  20:16:33,783 - #47 {
INFO  20:16:33,783 - #20 a
INFO  20:16:33,783 - #45 [
INFO  20:16:33,783 - #21 1
INFO  20:16:33,783 - #46 ]
INFO  20:16:33,783 - #37 =
INFO  20:16:33,783 - #21 1
INFO  20:16:33,783 - #40 ;
INFO  20:16:33,784 - #20 fun
INFO  20:16:33,784 - #43 (
INFO  20:16:33,784 - #20 m
INFO  20:16:33,784 - #44 )
INFO  20:16:33,785 - #40 ;
INFO  20:16:33,785 - #14 read
INFO  20:16:33,785 - #43 (
INFO  20:16:33,785 - #20 b
INFO  20:16:33,785 - #44 )
INFO  20:16:33,785 - #40 ;
INFO  20:16:33,785 - #48 }
INFO  20:16:33,785 - #48 }
INFO  20:16:33,787 - 

================SINTAKSNO STABLO====================


INFO  20:16:33,789 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             m
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorNumConst(
                     1
                    ) [FactorNumConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 fun
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  20:16:33,790 - 

================SEMANTICKA OBRADA====================


INFO  20:16:33,802 - Pocetak obrade programa 'MJProgram' na liniji 1
INFO  20:16:33,802 - Deklarisana konstanta 'm' na liniji 2
INFO  20:16:33,802 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  20:16:33,802 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  20:16:33,802 - Pocetak obrade metode fun na liniji 6
ERROR 20:16:33,803 - Semanticka greska - 'm' vec postoji na liniji 6
INFO  20:16:33,803 - Kraj obrade metode fun na liniji 6
INFO  20:16:33,803 - Pocetak obrade metode main na liniji 10
INFO  20:16:33,803 - Deklarisana promenljiva 'b' na liniji 10
INFO  20:16:33,803 - Deklarisan niz 'a' na liniji 10
INFO  20:16:33,803 - Pronadjen poziv funkcije 'fun' na liniji 15
INFO  20:16:33,803 - Kraj obrade metode main na liniji 10
INFO  20:16:33,803 - Kraj obrade programa 'MJProgram' na liniji 1
INFO  20:16:33,804 - ===================================
INFO  22:08:38,273 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:08:38,330 - #2 program
INFO  22:08:38,330 - #20 MJProgram
INFO  22:08:38,330 - #7 const
INFO  22:08:38,330 - #20 int
INFO  22:08:38,330 - #20 m
INFO  22:08:38,331 - #37 =
INFO  22:08:38,331 - #21 1
INFO  22:08:38,331 - #40 ;
INFO  22:08:38,331 - #20 int
INFO  22:08:38,332 - #20 global
INFO  22:08:38,332 - #41 ,
INFO  22:08:38,332 - #20 globarArr
INFO  22:08:38,332 - #45 [
INFO  22:08:38,332 - #46 ]
INFO  22:08:38,332 - #40 ;
INFO  22:08:38,332 - #47 {
INFO  22:08:38,332 - #20 int
INFO  22:08:38,333 - #20 fun
INFO  22:08:38,333 - #43 (
INFO  22:08:38,333 - #20 int
INFO  22:08:38,333 - #20 m
INFO  22:08:38,333 - #44 )
INFO  22:08:38,333 - #47 {
INFO  22:08:38,333 - #15 return
INFO  22:08:38,333 - #20 m
INFO  22:08:38,333 - #40 ;
INFO  22:08:38,334 - #48 }
INFO  22:08:38,334 - #16 void
INFO  22:08:38,335 - #20 main
INFO  22:08:38,335 - #43 (
INFO  22:08:38,335 - #44 )
INFO  22:08:38,335 - #20 int
INFO  22:08:38,335 - #20 b
INFO  22:08:38,335 - #41 ,
INFO  22:08:38,335 - #20 a
INFO  22:08:38,335 - #45 [
INFO  22:08:38,335 - #46 ]
INFO  22:08:38,336 - #40 ;
INFO  22:08:38,336 - #47 {
INFO  22:08:38,336 - #20 a
INFO  22:08:38,336 - #45 [
INFO  22:08:38,336 - #21 1
INFO  22:08:38,336 - #46 ]
INFO  22:08:38,337 - #37 =
INFO  22:08:38,337 - #21 1
INFO  22:08:38,337 - #40 ;
INFO  22:08:38,337 - #20 fun
INFO  22:08:38,337 - #43 (
INFO  22:08:38,337 - #20 m
INFO  22:08:38,338 - #44 )
INFO  22:08:38,338 - #40 ;
INFO  22:08:38,338 - #14 read
INFO  22:08:38,338 - #43 (
INFO  22:08:38,338 - #20 b
INFO  22:08:38,338 - #44 )
INFO  22:08:38,338 - #40 ;
INFO  22:08:38,339 - #48 }
INFO  22:08:38,339 - #48 }
INFO  22:08:38,339 - 

================SINTAKSNO STABLO====================


INFO  22:08:38,340 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             m
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       m
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 fun
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  22:08:38,341 - 

================SEMANTICKA OBRADA====================


INFO  22:08:38,353 - Deklarisana konstanta 'm' na liniji 2
INFO  22:08:38,353 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  22:08:38,354 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  22:08:38,354 - Pocetak obrade metode fun na liniji 6
ERROR 22:08:38,354 - Semanticka greska - 'm' vec postoji na liniji 6
INFO  22:08:38,354 - Kraj obrade metode fun na liniji 6
INFO  22:08:38,354 - Pocetak obrade metode main na liniji 10
INFO  22:08:38,354 - Deklarisana promenljiva 'b' na liniji 10
INFO  22:08:38,354 - Nadjeno: rs.etf.pp1.symboltable.concepts.Obj@378fd1ac na liniji 10
INFO  22:08:38,354 - Pronadjen poziv funkcije 'fun' na liniji 15
INFO  22:08:38,354 - Kraj obrade metode main na liniji 10
INFO  22:08:38,355 - ===================================
INFO  22:08:57,487 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:08:57,537 - #2 program
INFO  22:08:57,537 - #20 MJProgram
INFO  22:08:57,537 - #7 const
INFO  22:08:57,538 - #20 int
INFO  22:08:57,538 - #20 m
INFO  22:08:57,538 - #37 =
INFO  22:08:57,538 - #21 1
INFO  22:08:57,539 - #40 ;
INFO  22:08:57,539 - #20 int
INFO  22:08:57,539 - #20 global
INFO  22:08:57,540 - #41 ,
INFO  22:08:57,540 - #20 globarArr
INFO  22:08:57,540 - #45 [
INFO  22:08:57,540 - #46 ]
INFO  22:08:57,540 - #40 ;
INFO  22:08:57,540 - #47 {
INFO  22:08:57,540 - #20 int
INFO  22:08:57,540 - #20 fun
INFO  22:08:57,540 - #43 (
INFO  22:08:57,541 - #20 int
INFO  22:08:57,541 - #20 m
INFO  22:08:57,541 - #44 )
INFO  22:08:57,541 - #47 {
INFO  22:08:57,541 - #15 return
INFO  22:08:57,541 - #20 m
INFO  22:08:57,541 - #40 ;
INFO  22:08:57,542 - #48 }
INFO  22:08:57,542 - #16 void
INFO  22:08:57,543 - #20 main
INFO  22:08:57,543 - #43 (
INFO  22:08:57,543 - #44 )
INFO  22:08:57,543 - #20 int
INFO  22:08:57,543 - #20 b
INFO  22:08:57,543 - #41 ,
INFO  22:08:57,544 - #20 a
INFO  22:08:57,544 - #45 [
INFO  22:08:57,544 - #46 ]
INFO  22:08:57,544 - #40 ;
INFO  22:08:57,544 - #47 {
INFO  22:08:57,544 - #20 a
INFO  22:08:57,544 - #45 [
INFO  22:08:57,544 - #21 1
INFO  22:08:57,544 - #46 ]
INFO  22:08:57,544 - #37 =
INFO  22:08:57,545 - #21 1
INFO  22:08:57,545 - #40 ;
INFO  22:08:57,545 - #20 fun
INFO  22:08:57,545 - #43 (
INFO  22:08:57,545 - #20 m
INFO  22:08:57,545 - #44 )
INFO  22:08:57,545 - #40 ;
INFO  22:08:57,546 - #14 read
INFO  22:08:57,546 - #43 (
INFO  22:08:57,546 - #20 b
INFO  22:08:57,546 - #44 )
INFO  22:08:57,546 - #40 ;
INFO  22:08:57,546 - #48 }
INFO  22:08:57,546 - #48 }
INFO  22:08:57,547 - 

================SINTAKSNO STABLO====================


INFO  22:08:57,548 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             m
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       m
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 fun
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  22:08:57,548 - 

================SEMANTICKA OBRADA====================


INFO  22:08:57,561 - Deklarisana konstanta 'm' na liniji 2
INFO  22:08:57,561 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  22:08:57,561 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  22:08:57,561 - Pocetak obrade metode fun na liniji 6
ERROR 22:08:57,561 - Semanticka greska - 'm' vec postoji na liniji 6
INFO  22:08:57,561 - Kraj obrade metode fun na liniji 6
INFO  22:08:57,561 - Pocetak obrade metode main na liniji 10
INFO  22:08:57,562 - Deklarisana promenljiva 'b' na liniji 10
INFO  22:08:57,562 - Nadjeno: rs.etf.pp1.symboltable.concepts.Obj@378fd1ac na liniji 10
INFO  22:08:57,562 - Pronadjen poziv funkcije 'fun' na liniji 15
INFO  22:08:57,562 - Kraj obrade metode main na liniji 10
INFO  22:08:57,563 - ===================================
INFO  22:14:39,135 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:14:39,185 - #2 program
INFO  22:14:39,185 - #20 MJProgram
INFO  22:14:39,186 - #7 const
INFO  22:14:39,186 - #20 int
INFO  22:14:39,186 - #20 m
INFO  22:14:39,187 - #37 =
INFO  22:14:39,187 - #21 1
INFO  22:14:39,187 - #40 ;
INFO  22:14:39,188 - #20 int
INFO  22:14:39,188 - #20 global
INFO  22:14:39,188 - #41 ,
INFO  22:14:39,188 - #20 globarArr
INFO  22:14:39,188 - #45 [
INFO  22:14:39,188 - #46 ]
INFO  22:14:39,188 - #40 ;
INFO  22:14:39,189 - #47 {
INFO  22:14:39,189 - #20 int
INFO  22:14:39,189 - #20 fun
INFO  22:14:39,189 - #43 (
INFO  22:14:39,189 - #20 int
INFO  22:14:39,189 - #20 m
INFO  22:14:39,189 - #44 )
INFO  22:14:39,190 - #47 {
INFO  22:14:39,190 - #15 return
INFO  22:14:39,190 - #20 m
INFO  22:14:39,190 - #40 ;
INFO  22:14:39,190 - #48 }
INFO  22:14:39,190 - #16 void
INFO  22:14:39,191 - #20 main
INFO  22:14:39,191 - #43 (
INFO  22:14:39,191 - #44 )
INFO  22:14:39,191 - #20 int
INFO  22:14:39,191 - #20 b
INFO  22:14:39,191 - #41 ,
INFO  22:14:39,191 - #20 a
INFO  22:14:39,191 - #45 [
INFO  22:14:39,192 - #46 ]
INFO  22:14:39,192 - #40 ;
INFO  22:14:39,192 - #47 {
INFO  22:14:39,192 - #20 a
INFO  22:14:39,192 - #45 [
INFO  22:14:39,192 - #21 1
INFO  22:14:39,192 - #46 ]
INFO  22:14:39,192 - #37 =
INFO  22:14:39,193 - #21 1
INFO  22:14:39,193 - #40 ;
INFO  22:14:39,193 - #20 fun
INFO  22:14:39,193 - #43 (
INFO  22:14:39,193 - #20 m
INFO  22:14:39,193 - #44 )
INFO  22:14:39,193 - #40 ;
INFO  22:14:39,194 - #14 read
INFO  22:14:39,194 - #43 (
INFO  22:14:39,194 - #20 b
INFO  22:14:39,194 - #44 )
INFO  22:14:39,194 - #40 ;
INFO  22:14:39,194 - #48 }
INFO  22:14:39,194 - #48 }
INFO  22:14:39,195 - 

================SINTAKSNO STABLO====================


INFO  22:14:39,196 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             m
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       m
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 fun
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  22:14:39,197 - 

================SEMANTICKA OBRADA====================


INFO  22:14:39,207 - Deklarisana konstanta 'm' na liniji 2
INFO  22:14:39,207 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  22:14:39,207 - Deklarisan globalni niz 'globarArr' na liniji 3
ERROR 22:14:39,208 - Semanticka greska - 'm' vec postoji na liniji 6
INFO  22:14:39,208 - Deklarisana promenljiva 'b' na liniji 10
INFO  22:14:39,208 - Deklarisan niz 'a' na liniji 10
INFO  22:14:39,208 - Pristup elementu niza 'a' na liniji 14
INFO  22:14:39,208 - Pronadjen poziv funkcije 'fun' na liniji 15
INFO  22:14:39,208 - ===================================
INFO  22:15:04,785 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:15:04,841 - #2 program
INFO  22:15:04,841 - #20 MJProgram
INFO  22:15:04,842 - #7 const
INFO  22:15:04,842 - #20 int
INFO  22:15:04,842 - #20 m
INFO  22:15:04,843 - #37 =
INFO  22:15:04,843 - #21 1
INFO  22:15:04,843 - #40 ;
INFO  22:15:04,844 - #20 int
INFO  22:15:04,844 - #20 global
INFO  22:15:04,844 - #41 ,
INFO  22:15:04,844 - #20 globarArr
INFO  22:15:04,844 - #45 [
INFO  22:15:04,845 - #46 ]
INFO  22:15:04,845 - #40 ;
INFO  22:15:04,845 - #47 {
INFO  22:15:04,846 - #20 int
INFO  22:15:04,846 - #20 fun
INFO  22:15:04,846 - #43 (
INFO  22:15:04,846 - #20 int
INFO  22:15:04,846 - #20 x
INFO  22:15:04,846 - #44 )
INFO  22:15:04,846 - #47 {
INFO  22:15:04,846 - #15 return
INFO  22:15:04,847 - #20 x
INFO  22:15:04,847 - #40 ;
INFO  22:15:04,847 - #48 }
INFO  22:15:04,848 - #16 void
INFO  22:15:04,848 - #20 main
INFO  22:15:04,849 - #43 (
INFO  22:15:04,849 - #44 )
INFO  22:15:04,849 - #20 int
INFO  22:15:04,849 - #20 b
INFO  22:15:04,849 - #41 ,
INFO  22:15:04,849 - #20 a
INFO  22:15:04,849 - #45 [
INFO  22:15:04,849 - #46 ]
INFO  22:15:04,849 - #40 ;
INFO  22:15:04,849 - #47 {
INFO  22:15:04,850 - #20 a
INFO  22:15:04,850 - #45 [
INFO  22:15:04,850 - #21 1
INFO  22:15:04,850 - #46 ]
INFO  22:15:04,850 - #37 =
INFO  22:15:04,850 - #21 1
INFO  22:15:04,850 - #40 ;
INFO  22:15:04,850 - #20 fun
INFO  22:15:04,851 - #43 (
INFO  22:15:04,851 - #20 m
INFO  22:15:04,851 - #44 )
INFO  22:15:04,851 - #40 ;
INFO  22:15:04,851 - #14 read
INFO  22:15:04,852 - #43 (
INFO  22:15:04,852 - #20 b
INFO  22:15:04,852 - #44 )
INFO  22:15:04,852 - #40 ;
INFO  22:15:04,852 - #48 }
INFO  22:15:04,852 - #48 }
INFO  22:15:04,853 - 

================SINTAKSNO STABLO====================


INFO  22:15:04,855 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   a
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 fun
                ) [DesignatorSimple]
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           m
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             b
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  22:15:04,857 - 

================SEMANTICKA OBRADA====================


INFO  22:15:04,870 - Deklarisana konstanta 'm' na liniji 2
INFO  22:15:04,870 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  22:15:04,870 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  22:15:04,870 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  22:15:04,871 - Deklarisana promenljiva 'b' na liniji 10
INFO  22:15:04,871 - Deklarisan niz 'a' na liniji 10
INFO  22:15:04,871 - Pristup elementu niza 'a' na liniji 14
INFO  22:15:04,871 - Pronadjen poziv funkcije 'fun' na liniji 15
INFO  22:15:04,872 - ===================================
INFO  22:36:12,274 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:36:12,328 - #2 program
INFO  22:36:12,328 - #20 MJProgram
INFO  22:36:12,328 - #47 {
ERROR 22:36:12,328 - 
Sintaksna greska na liniji 3, koloni 0 za simbol "{"!
ERROR 22:36:12,328 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 3, koloni 0 za simbol "{"!
INFO  22:36:23,606 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:36:23,654 - #2 program
INFO  22:36:23,654 - #20 MJProgram
INFO  22:36:23,654 - #47 {
ERROR 22:36:23,654 - 
Sintaksna greska na liniji 3, koloni 0 za simbol "{"!
ERROR 22:36:23,654 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 3, koloni 0 za simbol "{"!
INFO  22:36:44,721 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:36:44,772 - #2 program
INFO  22:36:44,772 - #20 MJProgram
INFO  22:36:44,773 - #7 const
INFO  22:36:44,773 - #20 int
INFO  22:36:44,773 - #20 m
INFO  22:36:44,774 - #37 =
INFO  22:36:44,774 - #21 1
INFO  22:36:44,774 - #40 ;
INFO  22:36:44,774 - #20 int
INFO  22:36:44,775 - #20 global
INFO  22:36:44,776 - #41 ,
INFO  22:36:44,776 - #20 globarArr
INFO  22:36:44,776 - #45 [
INFO  22:36:44,776 - #46 ]
INFO  22:36:44,776 - #40 ;
INFO  22:36:44,777 - #47 {
INFO  22:36:44,777 - #16 void
INFO  22:36:44,777 - #20 main
INFO  22:36:44,777 - #43 (
INFO  22:36:44,777 - #44 )
INFO  22:36:44,777 - #20 int
INFO  22:36:44,778 - #20 b
INFO  22:36:44,778 - #41 ,
INFO  22:36:44,778 - #20 a
INFO  22:36:44,778 - #45 [
INFO  22:36:44,778 - #46 ]
INFO  22:36:44,778 - #40 ;
INFO  22:36:44,779 - #47 {
INFO  22:36:44,779 - #48 }
INFO  22:36:44,779 - #48 }
INFO  22:36:44,780 - 

================SINTAKSNO STABLO====================


INFO  22:36:44,781 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclSingle(
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             m
              NumConst(
               1
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclSingle]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVarNormal(
             global
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
          GlobalVarArray(
           globarArr
          ) [GlobalVarArray]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid5(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
      ) [MethodVoid5]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:36:44,781 - 

================SEMANTICKA OBRADA====================


INFO  22:36:44,794 - Deklarisana konstanta 'm' na liniji 2
INFO  22:36:44,794 - Deklarisana globalna promenljiva 'global' na liniji 3
INFO  22:36:44,794 - Deklarisan globalni niz 'globarArr' na liniji 3
INFO  22:36:44,794 - Deklarisana promenljiva 'b' na liniji 6
INFO  22:36:44,794 - Deklarisan niz 'a' na liniji 6
INFO  22:36:44,795 - ===================================
INFO  22:36:51,341 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:36:51,387 - #2 program
INFO  22:36:51,387 - #20 MJProgram
INFO  22:36:51,387 - #47 {
ERROR 22:36:51,387 - 
Sintaksna greska na liniji 3, koloni 0 za simbol "{"!
ERROR 22:36:51,387 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 3, koloni 0 za simbol "{"!
INFO  22:39:50,989 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:39:51,041 - #2 program
INFO  22:39:51,042 - #20 MJProgram
INFO  22:39:51,042 - #47 {
ERROR 22:39:51,042 - 
Sintaksna greska na liniji 3, koloni 0 za simbol "{"!
ERROR 22:39:51,042 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 3, koloni 0 za simbol "{"!
INFO  22:40:02,870 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:40:02,914 - #2 program
INFO  22:40:02,914 - #20 MJProgram
INFO  22:40:02,914 - #47 {
INFO  22:40:02,915 - #16 void
INFO  22:40:02,915 - #20 main
INFO  22:40:02,915 - #43 (
INFO  22:40:02,915 - #44 )
INFO  22:40:02,915 - #20 int
INFO  22:40:02,915 - #20 b
INFO  22:40:02,916 - #41 ,
INFO  22:40:02,916 - #20 a
INFO  22:40:02,916 - #45 [
INFO  22:40:02,916 - #46 ]
INFO  22:40:02,916 - #40 ;
INFO  22:40:02,917 - #47 {
INFO  22:40:02,917 - #48 }
INFO  22:40:02,917 - #48 }
INFO  22:40:02,918 - 

================SINTAKSNO STABLO====================


INFO  22:40:02,918 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid5(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
              VarArray(
               a
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
      ) [MethodVoid5]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:40:02,918 - 

================SEMANTICKA OBRADA====================


INFO  22:40:02,928 - Deklarisana promenljiva 'b' na liniji 4
INFO  22:40:02,929 - Deklarisan niz 'a' na liniji 4
INFO  22:40:02,929 - ===================================
INFO  22:49:41,112 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:49:41,161 - #2 program
INFO  22:49:41,161 - #20 MJProgram
INFO  22:49:41,161 - #47 {
INFO  22:49:41,161 - #16 void
INFO  22:49:41,161 - #20 main
INFO  22:49:41,162 - #43 (
INFO  22:49:41,162 - #44 )
INFO  22:49:41,162 - #47 {
INFO  22:49:41,162 - #48 }
INFO  22:49:41,162 - #48 }
INFO  22:49:41,163 - 

================SINTAKSNO STABLO====================


INFO  22:49:41,163 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid7(
        MethodVoidName(
         main
        ) [MethodVoidName]
      ) [MethodVoid7]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:49:41,163 - 

================SEMANTICKA OBRADA====================


INFO  22:49:41,174 - ===================================
INFO  22:50:28,383 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:50:28,436 - #2 program
INFO  22:50:28,436 - #20 MJProgram
INFO  22:50:28,436 - #47 {
INFO  22:50:28,437 - #16 void
INFO  22:50:28,437 - #20 main
INFO  22:50:28,437 - #43 (
INFO  22:50:28,437 - #44 )
INFO  22:50:28,437 - #47 {
INFO  22:50:28,437 - #20 a
INFO  22:50:28,437 - #37 =
INFO  22:50:28,437 - #21 1
INFO  22:50:28,437 - #40 ;
INFO  22:50:28,438 - #48 }
INFO  22:50:28,438 - #48 }
INFO  22:50:28,439 - 

================SINTAKSNO STABLO====================


INFO  22:50:28,439 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               a
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       1
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:50:28,439 - 

================SEMANTICKA OBRADA====================


ERROR 22:50:28,450 - Semanticka greska - 'a' nije deklarisano na liniji 6
ERROR 22:50:28,450 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 6
INFO  22:50:28,451 - ===================================
INFO  22:51:18,621 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:51:18,689 - #2 program
INFO  22:51:18,689 - #20 MJProgram
INFO  22:51:18,689 - #47 {
INFO  22:51:18,690 - #16 void
INFO  22:51:18,690 - #20 main
INFO  22:51:18,690 - #43 (
INFO  22:51:18,690 - #44 )
INFO  22:51:18,691 - #20 int
INFO  22:51:18,691 - #20 b
INFO  22:51:18,691 - #40 ;
INFO  22:51:18,692 - #20 char
INFO  22:51:18,692 - #20 b
INFO  22:51:18,692 - #40 ;
INFO  22:51:18,692 - #47 {
INFO  22:51:18,693 - #20 a
INFO  22:51:18,693 - #37 =
INFO  22:51:18,693 - #21 1
INFO  22:51:18,693 - #40 ;
INFO  22:51:18,694 - #48 }
INFO  22:51:18,695 - #48 }
INFO  22:51:18,697 - 

================SINTAKSNO STABLO====================


INFO  22:51:18,697 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               b
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               a
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       1
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:51:18,698 - 

================SEMANTICKA OBRADA====================


INFO  22:51:18,714 - Deklarisana promenljiva 'b' na liniji 4
ERROR 22:51:18,714 - Semanticka greska - 'b' je vec deklarisano na liniji 4
ERROR 22:51:18,715 - Semanticka greska - 'a' nije deklarisano na liniji 6
ERROR 22:51:18,715 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 6
INFO  22:51:18,717 - ===================================
INFO  22:51:55,033 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:51:55,081 - #2 program
INFO  22:51:55,081 - #20 MJProgram
INFO  22:51:55,081 - #47 {
INFO  22:51:55,081 - #48 }
ERROR 22:51:55,082 - 
Sintaksna greska na liniji 5, koloni 0 za simbol "}"!
ERROR 22:51:55,082 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 5, koloni 0 za simbol "}"!
INFO  22:52:08,236 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:52:08,294 - #2 program
INFO  22:52:08,294 - #20 MJProgram
INFO  22:52:08,294 - #47 {
INFO  22:52:08,295 - #20 int
INFO  22:52:08,295 - #20 main
INFO  22:52:08,296 - #43 (
INFO  22:52:08,296 - #44 )
INFO  22:52:08,296 - #20 int
INFO  22:52:08,296 - #20 b
INFO  22:52:08,296 - #40 ;
INFO  22:52:08,296 - #20 char
INFO  22:52:08,297 - #20 b
INFO  22:52:08,297 - #40 ;
INFO  22:52:08,297 - #47 {
INFO  22:52:08,297 - #20 a
INFO  22:52:08,297 - #37 =
INFO  22:52:08,298 - #21 1
INFO  22:52:08,298 - #40 ;
INFO  22:52:08,298 - #48 }
INFO  22:52:08,299 - #48 }
INFO  22:52:08,300 - 

================SINTAKSNO STABLO====================


INFO  22:52:08,301 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodTypeDeclaration(
      MethodType4(
        MethodTypeName(
          Type(
           int
          ) [Type]
         main
        ) [MethodTypeName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               b
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               a
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       1
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodType4]
    ) [MethodTypeDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:52:08,301 - 

================SEMANTICKA OBRADA====================


INFO  22:52:08,313 - Deklarisana promenljiva 'b' na liniji 5
ERROR 22:52:08,313 - Semanticka greska - 'b' je vec deklarisano na liniji 5
ERROR 22:52:08,313 - Semanticka greska - 'a' nije deklarisano na liniji 7
ERROR 22:52:08,313 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 7
ERROR 22:52:08,313 - Semanticka greska - metoda 'main' treba da ima povratnu vrednost!
INFO  22:52:08,314 - ===================================
INFO  22:52:52,778 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:52:52,822 - #2 program
INFO  22:52:52,822 - #20 MJProgram
INFO  22:52:52,822 - #47 {
INFO  22:52:52,823 - #20 int
INFO  22:52:52,823 - #20 maina
INFO  22:52:52,823 - #43 (
INFO  22:52:52,823 - #44 )
INFO  22:52:52,823 - #20 int
INFO  22:52:52,824 - #20 b
INFO  22:52:52,824 - #40 ;
INFO  22:52:52,824 - #20 char
INFO  22:52:52,824 - #20 b
INFO  22:52:52,824 - #40 ;
INFO  22:52:52,824 - #47 {
INFO  22:52:52,824 - #20 a
INFO  22:52:52,824 - #37 =
INFO  22:52:52,824 - #21 1
INFO  22:52:52,824 - #40 ;
INFO  22:52:52,825 - #48 }
INFO  22:52:52,825 - #48 }
INFO  22:52:52,826 - 

================SINTAKSNO STABLO====================


INFO  22:52:52,826 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodTypeDeclaration(
      MethodType4(
        MethodTypeName(
          Type(
           int
          ) [Type]
         maina
        ) [MethodTypeName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               b
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               a
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       1
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodType4]
    ) [MethodTypeDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:52:52,826 - 

================SEMANTICKA OBRADA====================


INFO  22:52:52,836 - Deklarisana promenljiva 'b' na liniji 5
ERROR 22:52:52,836 - Semanticka greska - 'b' je vec deklarisano na liniji 5
ERROR 22:52:52,837 - Semanticka greska - 'a' nije deklarisano na liniji 7
ERROR 22:52:52,837 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 7
ERROR 22:52:52,837 - Semanticka greska - metoda 'maina' treba da ima povratnu vrednost!
INFO  22:52:52,838 - ===================================
INFO  22:53:44,878 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:53:44,926 - #2 program
INFO  22:53:44,926 - #20 MJProgram
INFO  22:53:44,926 - #47 {
INFO  22:53:44,928 - #16 void
INFO  22:53:44,928 - #20 main
INFO  22:53:44,928 - #43 (
INFO  22:53:44,928 - #44 )
INFO  22:53:44,928 - #20 int
INFO  22:53:44,928 - #20 b
INFO  22:53:44,928 - #40 ;
INFO  22:53:44,929 - #20 char
INFO  22:53:44,929 - #20 b
INFO  22:53:44,929 - #40 ;
INFO  22:53:44,929 - #47 {
INFO  22:53:44,929 - #20 a
INFO  22:53:44,929 - #37 =
INFO  22:53:44,929 - #21 1
INFO  22:53:44,929 - #40 ;
INFO  22:53:44,930 - #20 chr
INFO  22:53:44,930 - #43 (
INFO  22:53:44,930 - #21 1
INFO  22:53:44,930 - #44 )
INFO  22:53:44,930 - #40 ;
INFO  22:53:44,931 - #48 }
INFO  22:53:44,931 - #48 }
INFO  22:53:44,932 - 

================SINTAKSNO STABLO====================


INFO  22:53:44,933 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               b
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 a
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         1
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtDesign(
            DesignatorMethodCall0(
              DesignatorSimple(
               chr
              ) [DesignatorSimple]
              ActParsSingle(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       1
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [ActParsSingle]
            ) [DesignatorMethodCall0]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:53:44,933 - 

================SEMANTICKA OBRADA====================


INFO  22:53:44,946 - Deklarisana promenljiva 'b' na liniji 5
ERROR 22:53:44,946 - Semanticka greska - 'b' je vec deklarisano na liniji 5
ERROR 22:53:44,946 - Semanticka greska - 'a' nije deklarisano na liniji 7
ERROR 22:53:44,946 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 7
INFO  22:53:44,946 - Pronadjen poziv funkcije 'chr' na liniji 8
INFO  22:53:44,947 - ===================================
INFO  22:53:51,224 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:53:51,269 - #2 program
INFO  22:53:51,269 - #20 MJProgram
INFO  22:53:51,269 - #47 {
INFO  22:53:51,269 - #16 void
INFO  22:53:51,269 - #20 main
INFO  22:53:51,270 - #43 (
INFO  22:53:51,270 - #44 )
INFO  22:53:51,270 - #20 int
INFO  22:53:51,270 - #20 b
INFO  22:53:51,270 - #40 ;
INFO  22:53:51,270 - #20 char
INFO  22:53:51,271 - #20 b
INFO  22:53:51,271 - #40 ;
INFO  22:53:51,271 - #47 {
INFO  22:53:51,271 - #20 a
INFO  22:53:51,271 - #37 =
INFO  22:53:51,271 - #21 1
INFO  22:53:51,271 - #40 ;
INFO  22:53:51,271 - #20 chr
INFO  22:53:51,272 - #43 (
INFO  22:53:51,272 - #22 a
INFO  22:53:51,272 - #44 )
INFO  22:53:51,272 - #40 ;
INFO  22:53:51,272 - #48 }
INFO  22:53:51,272 - #48 }
INFO  22:53:51,273 - 

================SINTAKSNO STABLO====================


INFO  22:53:51,274 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 b
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             char
            ) [Type]
            VarSingle(
              VarNormal(
               b
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 a
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         1
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtDesign(
            DesignatorMethodCall0(
              DesignatorSimple(
               chr
              ) [DesignatorSimple]
              ActParsSingle(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorCharConst(
                       a
                      ) [FactorCharConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [ActParsSingle]
            ) [DesignatorMethodCall0]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:53:51,274 - 

================SEMANTICKA OBRADA====================


INFO  22:53:51,287 - Deklarisana promenljiva 'b' na liniji 5
ERROR 22:53:51,287 - Semanticka greska - 'b' je vec deklarisano na liniji 5
ERROR 22:53:51,287 - Semanticka greska - 'a' nije deklarisano na liniji 7
ERROR 22:53:51,287 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 7
INFO  22:53:51,287 - Pronadjen poziv funkcije 'chr' na liniji 8
INFO  22:53:51,288 - ===================================
INFO  22:55:54,281 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:55:54,331 - #2 program
INFO  22:55:54,331 - #20 MJProgram
INFO  22:55:54,332 - #47 {
INFO  22:55:54,332 - #16 void
INFO  22:55:54,332 - #20 main
INFO  22:55:54,332 - #43 (
INFO  22:55:54,333 - #44 )
INFO  22:55:54,333 - #20 int
INFO  22:55:54,333 - #20 b
INFO  22:55:54,333 - #40 ;
INFO  22:55:54,333 - #20 char
INFO  22:55:54,333 - #20 b
INFO  22:55:54,334 - #40 ;
INFO  22:55:54,334 - #20 int
INFO  22:55:54,334 - #20 num
INFO  22:55:54,334 - #40 ;
INFO  22:55:54,334 - #20 char
INFO  22:55:54,334 - #20 chr
INFO  22:55:54,334 - #40 ;
INFO  22:55:54,334 - #20 bool
INFO  22:55:54,334 - #20 boolean
INFO  22:55:54,334 - #40 ;
INFO  22:55:54,334 - #47 {
INFO  22:55:54,334 - #20 a
INFO  22:55:54,334 - #37 =
INFO  22:55:54,335 - #21 1
INFO  22:55:54,335 - #40 ;
INFO  22:55:54,336 - #20 num
INFO  22:55:54,336 - #37 =
INFO  22:55:54,336 - #21 1
INFO  22:55:54,336 - #40 ;
INFO  22:55:54,337 - #20 chr
INFO  22:55:54,337 - #37 =
INFO  22:55:54,337 - #22 a
INFO  22:55:54,337 - #40 ;
INFO  22:55:54,337 - #20 boolean
INFO  22:55:54,337 - #37 =
INFO  22:55:54,337 - #23 true
INFO  22:55:54,337 - #40 ;
INFO  22:55:54,338 - #48 }
INFO  22:55:54,338 - #48 }
INFO  22:55:54,339 - 

================SINTAKSNO STABLO====================


INFO  22:55:54,340 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclSingle(
                  VarDeclaration(
                    Type(
                     int
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclSingle]
                VarDeclaration(
                  Type(
                   char
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     b
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   num
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               char
              ) [Type]
              VarSingle(
                VarNormal(
                 chr
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               boolean
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     a
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   num
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 chr
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               boolean
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorBoolConst(
                       true
                      ) [FactorBoolConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:55:54,341 - 

================SEMANTICKA OBRADA====================


INFO  22:55:54,351 - Deklarisana promenljiva 'b' na liniji 5
ERROR 22:55:54,352 - Semanticka greska - 'b' je vec deklarisano na liniji 5
INFO  22:55:54,352 - Deklarisana promenljiva 'num' na liniji 6
ERROR 22:55:54,352 - Semanticka greska - 'chr' je vec deklarisano na liniji 6
INFO  22:55:54,352 - Deklarisana promenljiva 'boolean' na liniji 6
ERROR 22:55:54,352 - Semanticka greska - 'a' nije deklarisano na liniji 8
ERROR 22:55:54,352 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 8
INFO  22:55:54,353 - ===================================
INFO  22:56:06,527 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:56:06,575 - #2 program
INFO  22:56:06,575 - #20 MJProgram
INFO  22:56:06,575 - #47 {
INFO  22:56:06,576 - #16 void
INFO  22:56:06,576 - #20 main
INFO  22:56:06,576 - #43 (
INFO  22:56:06,576 - #44 )
INFO  22:56:06,576 - #20 int
INFO  22:56:06,577 - #20 b
INFO  22:56:06,577 - #40 ;
INFO  22:56:06,577 - #20 char
INFO  22:56:06,577 - #20 b
INFO  22:56:06,577 - #40 ;
INFO  22:56:06,577 - #20 int
INFO  22:56:06,578 - #20 num
INFO  22:56:06,578 - #40 ;
INFO  22:56:06,578 - #20 char
INFO  22:56:06,578 - #20 chr
INFO  22:56:06,578 - #40 ;
INFO  22:56:06,578 - #20 bool
INFO  22:56:06,578 - #20 boolean
INFO  22:56:06,578 - #40 ;
INFO  22:56:06,578 - #47 {
INFO  22:56:06,578 - #20 a
INFO  22:56:06,578 - #37 =
INFO  22:56:06,578 - #21 1
INFO  22:56:06,579 - #40 ;
INFO  22:56:06,579 - #20 num
INFO  22:56:06,580 - #37 =
INFO  22:56:06,580 - #22 a
INFO  22:56:06,580 - #40 ;
INFO  22:56:06,580 - #20 chr
INFO  22:56:06,580 - #37 =
INFO  22:56:06,580 - #22 a
INFO  22:56:06,581 - #40 ;
INFO  22:56:06,581 - #20 boolean
INFO  22:56:06,581 - #37 =
INFO  22:56:06,581 - #23 true
INFO  22:56:06,581 - #40 ;
INFO  22:56:06,581 - #48 }
INFO  22:56:06,581 - #48 }
INFO  22:56:06,582 - 

================SINTAKSNO STABLO====================


INFO  22:56:06,583 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclSingle(
                  VarDeclaration(
                    Type(
                     int
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclSingle]
                VarDeclaration(
                  Type(
                   char
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     b
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   num
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               char
              ) [Type]
              VarSingle(
                VarNormal(
                 chr
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               boolean
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     a
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   num
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 chr
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               boolean
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorBoolConst(
                       true
                      ) [FactorBoolConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:56:06,584 - 

================SEMANTICKA OBRADA====================


INFO  22:56:06,595 - Deklarisana promenljiva 'b' na liniji 5
ERROR 22:56:06,595 - Semanticka greska - 'b' je vec deklarisano na liniji 5
INFO  22:56:06,595 - Deklarisana promenljiva 'num' na liniji 6
ERROR 22:56:06,595 - Semanticka greska - 'chr' je vec deklarisano na liniji 6
INFO  22:56:06,595 - Deklarisana promenljiva 'boolean' na liniji 6
ERROR 22:56:06,596 - Semanticka greska - 'a' nije deklarisano na liniji 8
ERROR 22:56:06,596 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 8
ERROR 22:56:06,596 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 9
INFO  22:56:06,597 - ===================================
INFO  22:56:58,288 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:56:58,336 - #2 program
INFO  22:56:58,336 - #20 MJProgram
INFO  22:56:58,336 - #47 {
INFO  22:56:58,337 - #16 void
INFO  22:56:58,338 - #20 main
INFO  22:56:58,338 - #43 (
INFO  22:56:58,338 - #44 )
INFO  22:56:58,338 - #20 int
INFO  22:56:58,338 - #20 b
INFO  22:56:58,339 - #40 ;
INFO  22:56:58,339 - #20 char
INFO  22:56:58,339 - #20 b
INFO  22:56:58,339 - #40 ;
INFO  22:56:58,339 - #20 int
INFO  22:56:58,339 - #20 num
INFO  22:56:58,340 - #40 ;
INFO  22:56:58,340 - #20 char
INFO  22:56:58,340 - #20 chr
INFO  22:56:58,340 - #40 ;
INFO  22:56:58,340 - #20 bool
INFO  22:56:58,340 - #20 boolean
INFO  22:56:58,340 - #40 ;
INFO  22:56:58,340 - #47 {
INFO  22:56:58,340 - #20 a
INFO  22:56:58,340 - #37 =
INFO  22:56:58,341 - #21 1
INFO  22:56:58,341 - #40 ;
INFO  22:56:58,341 - #20 num
INFO  22:56:58,342 - #37 =
INFO  22:56:58,342 - #22 a
INFO  22:56:58,342 - #40 ;
INFO  22:56:58,342 - #20 num
INFO  22:56:58,342 - #37 =
INFO  22:56:58,342 - #23 true
INFO  22:56:58,342 - #40 ;
INFO  22:56:58,343 - #20 chr
INFO  22:56:58,343 - #37 =
INFO  22:56:58,343 - #21 1
INFO  22:56:58,343 - #40 ;
INFO  22:56:58,343 - #20 chr
INFO  22:56:58,343 - #37 =
INFO  22:56:58,343 - #23 true
INFO  22:56:58,343 - #40 ;
INFO  22:56:58,343 - #20 boolean
INFO  22:56:58,343 - #37 =
INFO  22:56:58,343 - #21 1
INFO  22:56:58,343 - #40 ;
INFO  22:56:58,343 - #20 boolean
INFO  22:56:58,343 - #37 =
INFO  22:56:58,344 - #22 a
INFO  22:56:58,344 - #40 ;
INFO  22:56:58,344 - #48 }
INFO  22:56:58,344 - #48 }
INFO  22:56:58,345 - 

================SINTAKSNO STABLO====================


INFO  22:56:58,346 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclSingle(
                  VarDeclaration(
                    Type(
                     int
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclSingle]
                VarDeclaration(
                  Type(
                   char
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     b
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   num
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               char
              ) [Type]
              VarSingle(
                VarNormal(
                 chr
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               boolean
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementSingle(
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           a
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   1
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementSingle]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         num
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorCharConst(
                                 a
                                ) [FactorCharConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       num
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorBoolConst(
                               true
                              ) [FactorBoolConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     chr
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   chr
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 boolean
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         1
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               boolean
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorCharConst(
                       a
                      ) [FactorCharConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  22:56:58,347 - 

================SEMANTICKA OBRADA====================


INFO  22:56:58,357 - Deklarisana promenljiva 'b' na liniji 5
ERROR 22:56:58,358 - Semanticka greska - 'b' je vec deklarisano na liniji 5
INFO  22:56:58,358 - Deklarisana promenljiva 'num' na liniji 6
ERROR 22:56:58,358 - Semanticka greska - 'chr' je vec deklarisano na liniji 6
INFO  22:56:58,358 - Deklarisana promenljiva 'boolean' na liniji 6
ERROR 22:56:58,358 - Semanticka greska - 'a' nije deklarisano na liniji 8
ERROR 22:56:58,358 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 8
ERROR 22:56:58,358 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 11
ERROR 22:56:58,358 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 12
ERROR 22:56:58,358 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 13
ERROR 22:56:58,359 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 14
ERROR 22:56:58,359 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 15
ERROR 22:56:58,359 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 16
INFO  22:56:58,359 - ===================================
INFO  22:57:51,355 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:57:51,408 - #2 program
INFO  22:57:51,409 - #20 MJProgram
INFO  22:57:51,409 - #47 {
INFO  22:57:51,409 - #20 int
INFO  22:57:51,409 - #20 fun
INFO  22:57:51,410 - #43 (
INFO  22:57:51,410 - #44 )
INFO  22:57:51,410 - #47 {
INFO  22:57:51,410 - #48 }
INFO  22:57:51,410 - #16 void
INFO  22:57:51,410 - #20 main
INFO  22:57:51,410 - #43 (
INFO  22:57:51,411 - #44 )
INFO  22:57:51,411 - #20 int
INFO  22:57:51,411 - #20 b
INFO  22:57:51,411 - #40 ;
INFO  22:57:51,411 - #20 char
INFO  22:57:51,412 - #20 b
INFO  22:57:51,412 - #40 ;
INFO  22:57:51,412 - #20 int
INFO  22:57:51,412 - #20 num
INFO  22:57:51,412 - #40 ;
INFO  22:57:51,412 - #20 char
INFO  22:57:51,412 - #20 chr
INFO  22:57:51,412 - #40 ;
INFO  22:57:51,413 - #20 bool
INFO  22:57:51,413 - #20 boolean
INFO  22:57:51,413 - #40 ;
INFO  22:57:51,413 - #47 {
INFO  22:57:51,413 - #20 a
INFO  22:57:51,413 - #37 =
INFO  22:57:51,413 - #21 1
INFO  22:57:51,413 - #40 ;
INFO  22:57:51,414 - #20 num
INFO  22:57:51,414 - #37 =
INFO  22:57:51,414 - #22 a
INFO  22:57:51,414 - #40 ;
INFO  22:57:51,414 - #20 num
INFO  22:57:51,415 - #37 =
INFO  22:57:51,415 - #23 true
INFO  22:57:51,415 - #40 ;
INFO  22:57:51,415 - #20 chr
INFO  22:57:51,415 - #37 =
INFO  22:57:51,415 - #21 1
INFO  22:57:51,415 - #40 ;
INFO  22:57:51,415 - #20 chr
INFO  22:57:51,415 - #37 =
INFO  22:57:51,415 - #23 true
INFO  22:57:51,415 - #40 ;
INFO  22:57:51,415 - #20 boolean
INFO  22:57:51,415 - #37 =
INFO  22:57:51,416 - #21 1
INFO  22:57:51,416 - #40 ;
INFO  22:57:51,416 - #20 boolean
INFO  22:57:51,416 - #37 =
INFO  22:57:51,416 - #22 a
INFO  22:57:51,416 - #40 ;
INFO  22:57:51,416 - #48 }
INFO  22:57:51,416 - #48 }
INFO  22:57:51,417 - 

================SINTAKSNO STABLO====================


INFO  22:57:51,418 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType7(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
        ) [MethodType7]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclSingle(
                  VarDeclaration(
                    Type(
                     int
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclSingle]
                VarDeclaration(
                  Type(
                   char
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     b
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   num
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               char
              ) [Type]
              VarSingle(
                VarNormal(
                 chr
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               boolean
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementSingle(
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           a
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   1
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementSingle]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         num
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorCharConst(
                                 a
                                ) [FactorCharConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       num
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorBoolConst(
                               true
                              ) [FactorBoolConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     chr
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   chr
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 boolean
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         1
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               boolean
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorCharConst(
                       a
                      ) [FactorCharConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  22:57:51,419 - 

================SEMANTICKA OBRADA====================


ERROR 22:57:51,430 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  22:57:51,430 - Deklarisana promenljiva 'b' na liniji 9
ERROR 22:57:51,431 - Semanticka greska - 'b' je vec deklarisano na liniji 9
INFO  22:57:51,431 - Deklarisana promenljiva 'num' na liniji 10
ERROR 22:57:51,431 - Semanticka greska - 'chr' je vec deklarisano na liniji 10
INFO  22:57:51,431 - Deklarisana promenljiva 'boolean' na liniji 10
ERROR 22:57:51,431 - Semanticka greska - 'a' nije deklarisano na liniji 12
ERROR 22:57:51,431 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 12
ERROR 22:57:51,431 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 15
ERROR 22:57:51,431 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 16
ERROR 22:57:51,431 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 22:57:51,431 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 22:57:51,431 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 22:57:51,431 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
INFO  22:57:51,432 - ===================================
INFO  22:58:47,746 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  22:58:47,794 - #2 program
INFO  22:58:47,795 - #20 MJProgram
INFO  22:58:47,795 - #20 abc
INFO  22:58:47,795 - #20 a
INFO  22:58:47,796 - #40 ;
INFO  22:58:47,796 - #47 {
INFO  22:58:47,796 - #20 int
INFO  22:58:47,796 - #20 fun
INFO  22:58:47,796 - #43 (
INFO  22:58:47,796 - #44 )
INFO  22:58:47,796 - #47 {
INFO  22:58:47,796 - #48 }
INFO  22:58:47,797 - #16 void
INFO  22:58:47,797 - #20 main
INFO  22:58:47,797 - #43 (
INFO  22:58:47,797 - #44 )
INFO  22:58:47,797 - #20 int
INFO  22:58:47,797 - #20 b
INFO  22:58:47,797 - #40 ;
INFO  22:58:47,797 - #20 char
INFO  22:58:47,797 - #20 b
INFO  22:58:47,798 - #40 ;
INFO  22:58:47,798 - #20 int
INFO  22:58:47,798 - #20 num
INFO  22:58:47,798 - #40 ;
INFO  22:58:47,798 - #20 char
INFO  22:58:47,798 - #20 chr
INFO  22:58:47,798 - #40 ;
INFO  22:58:47,798 - #20 bool
INFO  22:58:47,798 - #20 boolean
INFO  22:58:47,798 - #40 ;
INFO  22:58:47,798 - #47 {
INFO  22:58:47,799 - #20 a
INFO  22:58:47,799 - #37 =
INFO  22:58:47,799 - #21 1
INFO  22:58:47,799 - #40 ;
INFO  22:58:47,800 - #20 num
INFO  22:58:47,800 - #37 =
INFO  22:58:47,800 - #22 a
INFO  22:58:47,800 - #40 ;
INFO  22:58:47,800 - #20 num
INFO  22:58:47,800 - #37 =
INFO  22:58:47,800 - #23 true
INFO  22:58:47,801 - #40 ;
INFO  22:58:47,801 - #20 chr
INFO  22:58:47,801 - #37 =
INFO  22:58:47,801 - #21 1
INFO  22:58:47,801 - #40 ;
INFO  22:58:47,801 - #20 chr
INFO  22:58:47,801 - #37 =
INFO  22:58:47,801 - #23 true
INFO  22:58:47,801 - #40 ;
INFO  22:58:47,801 - #20 boolean
INFO  22:58:47,801 - #37 =
INFO  22:58:47,801 - #21 1
INFO  22:58:47,801 - #40 ;
INFO  22:58:47,801 - #20 boolean
INFO  22:58:47,802 - #37 =
INFO  22:58:47,802 - #22 a
INFO  22:58:47,802 - #40 ;
INFO  22:58:47,802 - #48 }
INFO  22:58:47,802 - #48 }
INFO  22:58:47,803 - 

================SINTAKSNO STABLO====================


INFO  22:58:47,804 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         abc
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           a
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType7(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
        ) [MethodType7]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclSingle(
                  VarDeclaration(
                    Type(
                     int
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclSingle]
                VarDeclaration(
                  Type(
                   char
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     b
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   num
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               char
              ) [Type]
              VarSingle(
                VarNormal(
                 chr
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               boolean
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementSingle(
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           a
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   1
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementSingle]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         num
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorCharConst(
                                 a
                                ) [FactorCharConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       num
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorBoolConst(
                               true
                              ) [FactorBoolConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     chr
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   chr
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorBoolConst(
                           true
                          ) [FactorBoolConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 boolean
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         1
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               boolean
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorCharConst(
                       a
                      ) [FactorCharConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  22:58:47,805 - 

================SEMANTICKA OBRADA====================


ERROR 22:58:47,815 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  22:58:47,816 - Deklarisana globalna promenljiva 'a' na liniji 2
ERROR 22:58:47,816 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  22:58:47,816 - Deklarisana promenljiva 'b' na liniji 9
ERROR 22:58:47,816 - Semanticka greska - 'b' je vec deklarisano na liniji 9
INFO  22:58:47,816 - Deklarisana promenljiva 'num' na liniji 10
ERROR 22:58:47,816 - Semanticka greska - 'chr' je vec deklarisano na liniji 10
INFO  22:58:47,816 - Deklarisana promenljiva 'boolean' na liniji 10
ERROR 22:58:47,817 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 12
ERROR 22:58:47,817 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 15
ERROR 22:58:47,817 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 16
ERROR 22:58:47,817 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 22:58:47,817 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 22:58:47,817 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 22:58:47,817 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
INFO  22:58:47,818 - ===================================
INFO  23:01:55,358 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:01:55,409 - #2 program
INFO  23:01:55,409 - #20 MJProgram
INFO  23:01:55,409 - #20 abc
INFO  23:01:55,410 - #20 a
INFO  23:01:55,411 - #40 ;
INFO  23:01:55,411 - #7 const
INFO  23:01:55,411 - #20 int
INFO  23:01:55,411 - #20 cnst
INFO  23:01:55,411 - #37 =
INFO  23:01:55,411 - #21 1
INFO  23:01:55,411 - #40 ;
INFO  23:01:55,412 - #47 {
INFO  23:01:55,412 - #20 int
INFO  23:01:55,412 - #20 fun
INFO  23:01:55,412 - #43 (
INFO  23:01:55,413 - #44 )
INFO  23:01:55,413 - #47 {
INFO  23:01:55,413 - #48 }
INFO  23:01:55,413 - #16 void
INFO  23:01:55,414 - #20 main
INFO  23:01:55,414 - #43 (
INFO  23:01:55,414 - #44 )
INFO  23:01:55,414 - #20 int
INFO  23:01:55,414 - #20 b
INFO  23:01:55,414 - #40 ;
INFO  23:01:55,414 - #20 char
INFO  23:01:55,415 - #20 b
INFO  23:01:55,415 - #40 ;
INFO  23:01:55,415 - #20 int
INFO  23:01:55,415 - #20 num
INFO  23:01:55,415 - #40 ;
INFO  23:01:55,415 - #20 char
INFO  23:01:55,415 - #20 chr
INFO  23:01:55,415 - #40 ;
INFO  23:01:55,415 - #20 bool
INFO  23:01:55,416 - #20 boolean
INFO  23:01:55,416 - #40 ;
INFO  23:01:55,416 - #47 {
INFO  23:01:55,416 - #20 a
INFO  23:01:55,416 - #37 =
INFO  23:01:55,416 - #21 1
INFO  23:01:55,416 - #40 ;
INFO  23:01:55,417 - #20 num
INFO  23:01:55,417 - #37 =
INFO  23:01:55,417 - #22 a
INFO  23:01:55,417 - #40 ;
INFO  23:01:55,417 - #20 num
INFO  23:01:55,418 - #37 =
INFO  23:01:55,418 - #23 true
INFO  23:01:55,418 - #40 ;
INFO  23:01:55,418 - #20 chr
INFO  23:01:55,418 - #37 =
INFO  23:01:55,418 - #21 1
INFO  23:01:55,418 - #40 ;
INFO  23:01:55,418 - #20 chr
INFO  23:01:55,418 - #37 =
INFO  23:01:55,418 - #23 true
INFO  23:01:55,418 - #40 ;
INFO  23:01:55,418 - #20 boolean
INFO  23:01:55,418 - #37 =
INFO  23:01:55,418 - #21 1
INFO  23:01:55,418 - #40 ;
INFO  23:01:55,418 - #20 boolean
INFO  23:01:55,419 - #37 =
INFO  23:01:55,419 - #22 a
INFO  23:01:55,419 - #40 ;
INFO  23:01:55,419 - #20 cnst
INFO  23:01:55,419 - #37 =
INFO  23:01:55,419 - #21 2
INFO  23:01:55,419 - #40 ;
INFO  23:01:55,420 - #48 }
INFO  23:01:55,420 - #48 }
INFO  23:01:55,421 - 

================SINTAKSNO STABLO====================


INFO  23:01:55,423 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType7(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
        ) [MethodType7]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclSingle(
                  VarDeclaration(
                    Type(
                     int
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclSingle]
                VarDeclaration(
                  Type(
                   char
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     b
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   num
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               char
              ) [Type]
              VarSingle(
                VarNormal(
                 chr
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               boolean
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementSingle(
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             a
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     1
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementSingle]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorCharConst(
                                   a
                                  ) [FactorCharConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         num
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 true
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       chr
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     chr
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorBoolConst(
                             true
                            ) [FactorBoolConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   boolean
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 boolean
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               cnst
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       2
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  23:01:55,424 - 

================SEMANTICKA OBRADA====================


ERROR 23:01:55,434 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  23:01:55,434 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  23:01:55,435 - Deklarisana konstanta 'cnst' na liniji 3
ERROR 23:01:55,435 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  23:01:55,435 - Deklarisana promenljiva 'b' na liniji 10
ERROR 23:01:55,435 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  23:01:55,435 - Deklarisana promenljiva 'num' na liniji 11
ERROR 23:01:55,435 - Semanticka greska - 'chr' je vec deklarisano na liniji 11
INFO  23:01:55,435 - Deklarisana promenljiva 'boolean' na liniji 11
ERROR 23:01:55,435 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 13
ERROR 23:01:55,435 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 16
ERROR 23:01:55,435 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 23:01:55,436 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 23:01:55,436 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 23:01:55,436 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 23:01:55,436 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
INFO  23:01:55,436 - ===================================
INFO  23:05:40,941 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:05:40,997 - #2 program
INFO  23:05:40,997 - #20 MJProgram
INFO  23:05:40,997 - #20 abc
INFO  23:05:40,998 - #20 a
INFO  23:05:40,999 - #40 ;
INFO  23:05:40,999 - #7 const
INFO  23:05:40,999 - #20 int
INFO  23:05:40,999 - #20 cnst
INFO  23:05:40,999 - #37 =
INFO  23:05:41,000 - #21 1
INFO  23:05:41,000 - #40 ;
INFO  23:05:41,001 - #47 {
INFO  23:05:41,001 - #20 int
INFO  23:05:41,001 - #20 fun
INFO  23:05:41,001 - #43 (
INFO  23:05:41,001 - #44 )
INFO  23:05:41,001 - #47 {
INFO  23:05:41,002 - #48 }
INFO  23:05:41,002 - #16 void
INFO  23:05:41,002 - #20 main
INFO  23:05:41,002 - #43 (
INFO  23:05:41,002 - #44 )
INFO  23:05:41,003 - #20 int
INFO  23:05:41,003 - #20 b
INFO  23:05:41,003 - #40 ;
INFO  23:05:41,003 - #20 char
INFO  23:05:41,003 - #20 b
INFO  23:05:41,003 - #40 ;
INFO  23:05:41,004 - #20 int
INFO  23:05:41,004 - #20 num
INFO  23:05:41,004 - #40 ;
INFO  23:05:41,004 - #20 char
INFO  23:05:41,004 - #20 chr
INFO  23:05:41,004 - #40 ;
INFO  23:05:41,004 - #20 bool
INFO  23:05:41,004 - #20 boolean
INFO  23:05:41,004 - #40 ;
INFO  23:05:41,004 - #47 {
INFO  23:05:41,005 - #20 a
INFO  23:05:41,005 - #37 =
INFO  23:05:41,005 - #21 1
INFO  23:05:41,005 - #40 ;
INFO  23:05:41,006 - #20 num
INFO  23:05:41,006 - #37 =
INFO  23:05:41,006 - #22 a
INFO  23:05:41,006 - #40 ;
INFO  23:05:41,006 - #20 num
INFO  23:05:41,007 - #37 =
INFO  23:05:41,007 - #23 true
INFO  23:05:41,007 - #40 ;
INFO  23:05:41,007 - #20 chr
INFO  23:05:41,007 - #37 =
INFO  23:05:41,007 - #21 1
INFO  23:05:41,007 - #40 ;
INFO  23:05:41,007 - #20 chr
INFO  23:05:41,008 - #37 =
INFO  23:05:41,008 - #23 true
INFO  23:05:41,008 - #40 ;
INFO  23:05:41,008 - #20 boolean
INFO  23:05:41,008 - #37 =
INFO  23:05:41,008 - #21 1
INFO  23:05:41,008 - #40 ;
INFO  23:05:41,008 - #20 boolean
INFO  23:05:41,008 - #37 =
INFO  23:05:41,009 - #22 a
INFO  23:05:41,009 - #40 ;
INFO  23:05:41,009 - #20 cnst
INFO  23:05:41,009 - #37 =
INFO  23:05:41,009 - #21 2
INFO  23:05:41,009 - #40 ;
INFO  23:05:41,009 - #48 }
INFO  23:05:41,009 - #48 }
INFO  23:05:41,011 - 

================SINTAKSNO STABLO====================


INFO  23:05:41,013 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType7(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
        ) [MethodType7]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclSingle(
                  VarDeclaration(
                    Type(
                     int
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclSingle]
                VarDeclaration(
                  Type(
                   char
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     b
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   num
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               char
              ) [Type]
              VarSingle(
                VarNormal(
                 chr
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               boolean
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementSingle(
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             a
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     1
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementSingle]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorCharConst(
                                   a
                                  ) [FactorCharConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         num
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 true
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       chr
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     chr
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorBoolConst(
                             true
                            ) [FactorBoolConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   boolean
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 boolean
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               cnst
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       2
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  23:05:41,015 - 

================SEMANTICKA OBRADA====================


ERROR 23:05:41,027 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  23:05:41,028 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  23:05:41,028 - Deklarisana konstanta 'cnst' na liniji 3
ERROR 23:05:41,028 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  23:05:41,029 - Deklarisana promenljiva 'b' na liniji 10
ERROR 23:05:41,029 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  23:05:41,029 - Deklarisana promenljiva 'num' na liniji 11
ERROR 23:05:41,029 - Semanticka greska - 'chr' je vec deklarisano na liniji 11
INFO  23:05:41,029 - Deklarisana promenljiva 'boolean' na liniji 11
ERROR 23:05:41,029 - Assignment1 na liniji 13
ERROR 23:05:41,029 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 13
ERROR 23:05:41,029 - Assignment1 na liniji 16
ERROR 23:05:41,029 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 16
ERROR 23:05:41,029 - Assignment1 na liniji 17
ERROR 23:05:41,029 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 23:05:41,029 - Assignment3 na liniji 18
ERROR 23:05:41,030 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 23:05:41,030 - Assignment3 na liniji 19
ERROR 23:05:41,030 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 23:05:41,030 - Assignment1 na liniji 20
ERROR 23:05:41,030 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 23:05:41,030 - Assignment1 na liniji 21
ERROR 23:05:41,030 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 23:05:41,030 - Assignment0 na liniji 23
INFO  23:05:41,031 - ===================================
INFO  23:06:21,940 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:06:21,987 - #2 program
INFO  23:06:21,987 - #20 MJProgram
INFO  23:06:21,987 - #20 abc
INFO  23:06:21,988 - #20 a
INFO  23:06:21,989 - #40 ;
INFO  23:06:21,989 - #7 const
INFO  23:06:21,989 - #20 int
INFO  23:06:21,989 - #20 cnst
INFO  23:06:21,989 - #37 =
INFO  23:06:21,989 - #21 1
INFO  23:06:21,989 - #40 ;
INFO  23:06:21,990 - #47 {
INFO  23:06:21,990 - #20 int
INFO  23:06:21,990 - #20 fun
INFO  23:06:21,990 - #43 (
INFO  23:06:21,991 - #44 )
INFO  23:06:21,991 - #47 {
INFO  23:06:21,991 - #48 }
INFO  23:06:21,991 - #16 void
INFO  23:06:21,991 - #20 main
INFO  23:06:21,991 - #43 (
INFO  23:06:21,991 - #44 )
INFO  23:06:21,991 - #20 int
INFO  23:06:21,991 - #20 b
INFO  23:06:21,991 - #40 ;
INFO  23:06:21,992 - #20 char
INFO  23:06:21,992 - #20 b
INFO  23:06:21,992 - #40 ;
INFO  23:06:21,992 - #20 int
INFO  23:06:21,992 - #20 num
INFO  23:06:21,992 - #40 ;
INFO  23:06:21,992 - #20 char
INFO  23:06:21,993 - #20 character
INFO  23:06:21,993 - #40 ;
INFO  23:06:21,993 - #20 bool
INFO  23:06:21,993 - #20 boolean
INFO  23:06:21,993 - #40 ;
INFO  23:06:21,993 - #47 {
INFO  23:06:21,993 - #20 a
INFO  23:06:21,993 - #37 =
INFO  23:06:21,993 - #21 1
INFO  23:06:21,993 - #40 ;
INFO  23:06:21,994 - #20 num
INFO  23:06:21,994 - #37 =
INFO  23:06:21,994 - #22 a
INFO  23:06:21,994 - #40 ;
INFO  23:06:21,994 - #20 num
INFO  23:06:21,994 - #37 =
INFO  23:06:21,995 - #23 true
INFO  23:06:21,995 - #40 ;
INFO  23:06:21,995 - #20 character
INFO  23:06:21,995 - #37 =
INFO  23:06:21,995 - #21 1
INFO  23:06:21,995 - #40 ;
INFO  23:06:21,995 - #20 character
INFO  23:06:21,995 - #37 =
INFO  23:06:21,995 - #23 true
INFO  23:06:21,995 - #40 ;
INFO  23:06:21,995 - #20 boolean
INFO  23:06:21,995 - #37 =
INFO  23:06:21,995 - #21 1
INFO  23:06:21,995 - #40 ;
INFO  23:06:21,996 - #20 boolean
INFO  23:06:21,996 - #37 =
INFO  23:06:21,996 - #22 a
INFO  23:06:21,996 - #40 ;
INFO  23:06:21,996 - #20 cnst
INFO  23:06:21,996 - #37 =
INFO  23:06:21,996 - #21 2
INFO  23:06:21,996 - #40 ;
INFO  23:06:21,996 - #48 }
INFO  23:06:21,996 - #48 }
INFO  23:06:21,998 - 

================SINTAKSNO STABLO====================


INFO  23:06:21,999 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType7(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
        ) [MethodType7]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclSingle(
                  VarDeclaration(
                    Type(
                     int
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclSingle]
                VarDeclaration(
                  Type(
                   char
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     b
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   num
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               char
              ) [Type]
              VarSingle(
                VarNormal(
                 character
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               boolean
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementSingle(
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             a
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     1
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementSingle]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorCharConst(
                                   a
                                  ) [FactorCharConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         num
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorBoolConst(
                                 true
                                ) [FactorBoolConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       character
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     character
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorBoolConst(
                             true
                            ) [FactorBoolConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   boolean
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 boolean
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               cnst
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       2
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  23:06:22,002 - 

================SEMANTICKA OBRADA====================


ERROR 23:06:22,013 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  23:06:22,014 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  23:06:22,014 - Deklarisana konstanta 'cnst' na liniji 3
ERROR 23:06:22,014 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  23:06:22,015 - Deklarisana promenljiva 'b' na liniji 10
ERROR 23:06:22,015 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  23:06:22,015 - Deklarisana promenljiva 'num' na liniji 11
INFO  23:06:22,015 - Deklarisana promenljiva 'character' na liniji 11
INFO  23:06:22,015 - Deklarisana promenljiva 'boolean' na liniji 11
ERROR 23:06:22,015 - Assignment1 na liniji 13
ERROR 23:06:22,018 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 13
ERROR 23:06:22,018 - Assignment1 na liniji 16
ERROR 23:06:22,018 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 16
ERROR 23:06:22,018 - Assignment1 na liniji 17
ERROR 23:06:22,018 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 23:06:22,018 - Assignment1 na liniji 18
ERROR 23:06:22,018 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 23:06:22,018 - Assignment1 na liniji 19
ERROR 23:06:22,018 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 23:06:22,018 - Assignment1 na liniji 20
ERROR 23:06:22,018 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 23:06:22,019 - Assignment1 na liniji 21
ERROR 23:06:22,019 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 23:06:22,019 - Assignment0 na liniji 23
INFO  23:06:22,019 - ===================================
INFO  23:06:57,754 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:06:57,802 - #2 program
INFO  23:06:57,802 - #20 MJProgram
INFO  23:06:57,802 - #20 abc
INFO  23:06:57,803 - #20 a
INFO  23:06:57,803 - #40 ;
INFO  23:06:57,804 - #7 const
INFO  23:06:57,804 - #20 int
INFO  23:06:57,804 - #20 cnst
INFO  23:06:57,804 - #37 =
INFO  23:06:57,804 - #21 1
INFO  23:06:57,804 - #40 ;
INFO  23:06:57,805 - #47 {
INFO  23:06:57,805 - #20 int
INFO  23:06:57,805 - #20 fun
INFO  23:06:57,805 - #43 (
INFO  23:06:57,805 - #44 )
INFO  23:06:57,805 - #47 {
INFO  23:06:57,805 - #48 }
INFO  23:06:57,805 - #16 void
INFO  23:06:57,805 - #20 main
INFO  23:06:57,805 - #43 (
INFO  23:06:57,805 - #44 )
INFO  23:06:57,805 - #20 int
INFO  23:06:57,805 - #20 b
INFO  23:06:57,805 - #45 [
INFO  23:06:57,805 - #46 ]
INFO  23:06:57,805 - #40 ;
INFO  23:06:57,806 - #20 char
INFO  23:06:57,806 - #20 b
INFO  23:06:57,806 - #40 ;
INFO  23:06:57,806 - #20 int
INFO  23:06:57,807 - #20 num
INFO  23:06:57,807 - #40 ;
INFO  23:06:57,807 - #20 char
INFO  23:06:57,807 - #20 character
INFO  23:06:57,807 - #40 ;
INFO  23:06:57,807 - #20 bool
INFO  23:06:57,807 - #20 boolean
INFO  23:06:57,807 - #40 ;
INFO  23:06:57,807 - #47 {
INFO  23:06:57,807 - #20 a
INFO  23:06:57,807 - #37 =
INFO  23:06:57,807 - #21 1
INFO  23:06:57,808 - #40 ;
INFO  23:06:57,808 - #20 num
INFO  23:06:57,808 - #37 =
INFO  23:06:57,808 - #22 a
INFO  23:06:57,808 - #40 ;
INFO  23:06:57,809 - #20 num
INFO  23:06:57,809 - #37 =
INFO  23:06:57,809 - #23 true
INFO  23:06:57,809 - #40 ;
INFO  23:06:57,809 - #20 character
INFO  23:06:57,809 - #37 =
INFO  23:06:57,809 - #21 1
INFO  23:06:57,809 - #40 ;
INFO  23:06:57,809 - #20 character
INFO  23:06:57,809 - #37 =
INFO  23:06:57,809 - #23 true
INFO  23:06:57,809 - #40 ;
INFO  23:06:57,809 - #20 boolean
INFO  23:06:57,810 - #37 =
INFO  23:06:57,810 - #21 1
INFO  23:06:57,810 - #40 ;
INFO  23:06:57,810 - #20 boolean
INFO  23:06:57,810 - #37 =
INFO  23:06:57,810 - #22 a
INFO  23:06:57,810 - #40 ;
INFO  23:06:57,810 - #20 cnst
INFO  23:06:57,810 - #37 =
INFO  23:06:57,810 - #21 2
INFO  23:06:57,810 - #40 ;
INFO  23:06:57,810 - #20 b
INFO  23:06:57,810 - #45 [
INFO  23:06:57,810 - #21 1
INFO  23:06:57,811 - #46 ]
INFO  23:06:57,811 - #37 =
INFO  23:06:57,811 - #21 1
INFO  23:06:57,811 - #40 ;
INFO  23:06:57,811 - #48 }
INFO  23:06:57,811 - #48 }
INFO  23:06:57,812 - 

================SINTAKSNO STABLO====================


INFO  23:06:57,814 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType7(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
        ) [MethodType7]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclSingle(
                  VarDeclaration(
                    Type(
                     int
                    ) [Type]
                    VarSingle(
                      VarArray(
                       b
                      ) [VarArray]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclSingle]
                VarDeclaration(
                  Type(
                   char
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     b
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   num
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               char
              ) [Type]
              VarSingle(
                VarNormal(
                 character
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               boolean
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementSingle(
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               a
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementSingle]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorCharConst(
                                     a
                                    ) [FactorCharConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   true
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         character
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       character
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorBoolConst(
                               true
                              ) [FactorBoolConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     boolean
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   boolean
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 cnst
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorArray(
               b
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       1
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [DesignatorArray]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       1
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  23:06:57,814 - 

================SEMANTICKA OBRADA====================


ERROR 23:06:57,827 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  23:06:57,830 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  23:06:57,830 - Deklarisana konstanta 'cnst' na liniji 3
ERROR 23:06:57,830 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  23:06:57,830 - Deklarisan niz 'b' na liniji 10
ERROR 23:06:57,830 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  23:06:57,830 - Deklarisana promenljiva 'num' na liniji 11
INFO  23:06:57,830 - Deklarisana promenljiva 'character' na liniji 11
INFO  23:06:57,830 - Deklarisana promenljiva 'boolean' na liniji 11
ERROR 23:06:57,830 - Assignment1 na liniji 13
ERROR 23:06:57,830 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 13
ERROR 23:06:57,831 - Assignment1 na liniji 16
ERROR 23:06:57,831 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 16
ERROR 23:06:57,831 - Assignment1 na liniji 17
ERROR 23:06:57,831 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 23:06:57,831 - Assignment1 na liniji 18
ERROR 23:06:57,831 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 23:06:57,831 - Assignment1 na liniji 19
ERROR 23:06:57,831 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 23:06:57,831 - Assignment1 na liniji 20
ERROR 23:06:57,831 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 23:06:57,831 - Assignment1 na liniji 21
ERROR 23:06:57,831 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 23:06:57,831 - Assignment0 na liniji 23
INFO  23:06:57,831 - Pristup elementu niza 'b' na liniji 24
ERROR 23:06:57,831 - Assignment5 na liniji 24
INFO  23:06:57,832 - ===================================
INFO  23:09:19,316 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:09:19,390 - #2 program
INFO  23:09:19,390 - #20 MJProgram
INFO  23:09:19,390 - #20 abc
INFO  23:09:19,391 - #20 a
INFO  23:09:19,392 - #40 ;
INFO  23:09:19,392 - #7 const
INFO  23:09:19,393 - #20 int
INFO  23:09:19,393 - #20 cnst
INFO  23:09:19,393 - #37 =
INFO  23:09:19,393 - #21 1
INFO  23:09:19,393 - #40 ;
INFO  23:09:19,394 - #47 {
INFO  23:09:19,395 - #20 int
INFO  23:09:19,395 - #20 fun
INFO  23:09:19,395 - #43 (
INFO  23:09:19,395 - #44 )
INFO  23:09:19,395 - #47 {
INFO  23:09:19,395 - #48 }
INFO  23:09:19,396 - #16 void
INFO  23:09:19,396 - #20 main
INFO  23:09:19,396 - #43 (
INFO  23:09:19,397 - #44 )
INFO  23:09:19,397 - #20 int
INFO  23:09:19,397 - #20 b
INFO  23:09:19,397 - #45 [
INFO  23:09:19,397 - #46 ]
INFO  23:09:19,397 - #40 ;
INFO  23:09:19,398 - #20 char
INFO  23:09:19,398 - #20 b
INFO  23:09:19,398 - #40 ;
INFO  23:09:19,399 - #20 int
INFO  23:09:19,399 - #20 num
INFO  23:09:19,399 - #40 ;
INFO  23:09:19,399 - #20 char
INFO  23:09:19,399 - #20 character
INFO  23:09:19,399 - #40 ;
INFO  23:09:19,399 - #20 bool
INFO  23:09:19,399 - #20 boolean
INFO  23:09:19,400 - #40 ;
INFO  23:09:19,400 - #47 {
INFO  23:09:19,400 - #20 a
INFO  23:09:19,400 - #37 =
INFO  23:09:19,400 - #21 1
INFO  23:09:19,400 - #40 ;
INFO  23:09:19,401 - #20 num
INFO  23:09:19,402 - #37 =
INFO  23:09:19,402 - #22 a
INFO  23:09:19,402 - #40 ;
INFO  23:09:19,402 - #20 num
INFO  23:09:19,403 - #37 =
INFO  23:09:19,403 - #23 true
INFO  23:09:19,403 - #40 ;
INFO  23:09:19,403 - #20 character
INFO  23:09:19,403 - #37 =
INFO  23:09:19,403 - #21 1
INFO  23:09:19,403 - #40 ;
INFO  23:09:19,403 - #20 character
INFO  23:09:19,404 - #37 =
INFO  23:09:19,404 - #23 true
INFO  23:09:19,404 - #40 ;
INFO  23:09:19,404 - #20 boolean
INFO  23:09:19,404 - #37 =
INFO  23:09:19,404 - #21 1
INFO  23:09:19,404 - #40 ;
INFO  23:09:19,405 - #20 boolean
INFO  23:09:19,405 - #37 =
INFO  23:09:19,405 - #22 a
INFO  23:09:19,405 - #40 ;
INFO  23:09:19,405 - #20 cnst
INFO  23:09:19,405 - #37 =
INFO  23:09:19,406 - #21 2
INFO  23:09:19,406 - #40 ;
INFO  23:09:19,406 - #20 b
INFO  23:09:19,406 - #45 [
INFO  23:09:19,406 - #21 1
INFO  23:09:19,406 - #46 ]
INFO  23:09:19,406 - #37 =
INFO  23:09:19,407 - #21 1
INFO  23:09:19,407 - #40 ;
INFO  23:09:19,407 - #48 }
INFO  23:09:19,407 - #48 }
INFO  23:09:19,409 - 

================SINTAKSNO STABLO====================


INFO  23:09:19,411 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType7(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
        ) [MethodType7]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclSingle(
                  VarDeclaration(
                    Type(
                     int
                    ) [Type]
                    VarSingle(
                      VarArray(
                       b
                      ) [VarArray]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclSingle]
                VarDeclaration(
                  Type(
                   char
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     b
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   num
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               char
              ) [Type]
              VarSingle(
                VarNormal(
                 character
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               boolean
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementSingle(
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               a
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementSingle]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorCharConst(
                                     a
                                    ) [FactorCharConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   true
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         character
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       character
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorBoolConst(
                               true
                              ) [FactorBoolConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     boolean
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   boolean
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 cnst
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorArray(
               b
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       1
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [DesignatorArray]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       1
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  23:09:19,412 - 

================SEMANTICKA OBRADA====================


ERROR 23:09:19,427 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  23:09:19,431 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  23:09:19,431 - Deklarisana konstanta 'cnst' na liniji 3
ERROR 23:09:19,431 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  23:09:19,431 - Deklarisan niz 'b' na liniji 10
ERROR 23:09:19,431 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  23:09:19,431 - Deklarisana promenljiva 'num' na liniji 11
INFO  23:09:19,432 - Deklarisana promenljiva 'character' na liniji 11
INFO  23:09:19,432 - Deklarisana promenljiva 'boolean' na liniji 11
ERROR 23:09:19,432 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 13
ERROR 23:09:19,432 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 16
ERROR 23:09:19,432 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 23:09:19,432 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 23:09:19,432 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 23:09:19,432 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 23:09:19,433 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 23:09:19,433 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 23
INFO  23:09:19,433 - Pristup elementu niza 'b' na liniji 24
INFO  23:09:19,434 - ===================================
INFO  23:09:43,535 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:09:43,582 - #2 program
INFO  23:09:43,582 - #20 MJProgram
INFO  23:09:43,582 - #20 abc
INFO  23:09:43,583 - #20 a
INFO  23:09:43,583 - #40 ;
INFO  23:09:43,583 - #7 const
INFO  23:09:43,583 - #20 int
INFO  23:09:43,584 - #20 cnst
INFO  23:09:43,584 - #37 =
INFO  23:09:43,584 - #21 1
INFO  23:09:43,584 - #40 ;
INFO  23:09:43,585 - #47 {
INFO  23:09:43,585 - #20 int
INFO  23:09:43,585 - #20 fun
INFO  23:09:43,585 - #43 (
INFO  23:09:43,585 - #44 )
INFO  23:09:43,585 - #47 {
INFO  23:09:43,585 - #48 }
INFO  23:09:43,585 - #16 void
INFO  23:09:43,586 - #20 main
INFO  23:09:43,586 - #43 (
INFO  23:09:43,586 - #44 )
INFO  23:09:43,586 - #20 int
INFO  23:09:43,586 - #20 b
INFO  23:09:43,586 - #40 ;
INFO  23:09:43,587 - #20 char
INFO  23:09:43,587 - #20 b
INFO  23:09:43,587 - #40 ;
INFO  23:09:43,587 - #20 int
INFO  23:09:43,587 - #20 num
INFO  23:09:43,587 - #40 ;
INFO  23:09:43,588 - #20 char
INFO  23:09:43,588 - #20 character
INFO  23:09:43,588 - #40 ;
INFO  23:09:43,588 - #20 bool
INFO  23:09:43,588 - #20 boolean
INFO  23:09:43,588 - #40 ;
INFO  23:09:43,588 - #20 int
INFO  23:09:43,588 - #20 niz
INFO  23:09:43,588 - #45 [
INFO  23:09:43,588 - #46 ]
INFO  23:09:43,588 - #40 ;
INFO  23:09:43,588 - #47 {
INFO  23:09:43,588 - #20 a
INFO  23:09:43,589 - #37 =
INFO  23:09:43,589 - #21 1
INFO  23:09:43,589 - #40 ;
INFO  23:09:43,589 - #20 num
INFO  23:09:43,589 - #37 =
INFO  23:09:43,590 - #22 a
INFO  23:09:43,590 - #40 ;
INFO  23:09:43,590 - #20 num
INFO  23:09:43,590 - #37 =
INFO  23:09:43,590 - #23 true
INFO  23:09:43,590 - #40 ;
INFO  23:09:43,590 - #20 character
INFO  23:09:43,590 - #37 =
INFO  23:09:43,590 - #21 1
INFO  23:09:43,590 - #40 ;
INFO  23:09:43,590 - #20 character
INFO  23:09:43,590 - #37 =
INFO  23:09:43,590 - #23 true
INFO  23:09:43,590 - #40 ;
INFO  23:09:43,591 - #20 boolean
INFO  23:09:43,591 - #37 =
INFO  23:09:43,591 - #21 1
INFO  23:09:43,591 - #40 ;
INFO  23:09:43,591 - #20 boolean
INFO  23:09:43,591 - #37 =
INFO  23:09:43,591 - #22 a
INFO  23:09:43,591 - #40 ;
INFO  23:09:43,591 - #20 cnst
INFO  23:09:43,591 - #37 =
INFO  23:09:43,591 - #21 2
INFO  23:09:43,591 - #40 ;
INFO  23:09:43,591 - #20 niz
INFO  23:09:43,592 - #37 =
INFO  23:09:43,592 - #21 1
INFO  23:09:43,592 - #40 ;
INFO  23:09:43,592 - #48 }
INFO  23:09:43,592 - #48 }
INFO  23:09:43,593 - 

================SINTAKSNO STABLO====================


INFO  23:09:43,595 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType7(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
        ) [MethodType7]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementSingle(
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               a
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementSingle]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorCharConst(
                                     a
                                    ) [FactorCharConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   true
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         character
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       character
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorBoolConst(
                               true
                              ) [FactorBoolConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     boolean
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   boolean
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 cnst
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               niz
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       1
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  23:09:43,597 - 

================SEMANTICKA OBRADA====================


ERROR 23:09:43,607 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  23:09:43,610 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  23:09:43,610 - Deklarisana konstanta 'cnst' na liniji 3
ERROR 23:09:43,610 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  23:09:43,611 - Deklarisana promenljiva 'b' na liniji 10
ERROR 23:09:43,611 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  23:09:43,611 - Deklarisana promenljiva 'num' na liniji 11
INFO  23:09:43,611 - Deklarisana promenljiva 'character' na liniji 11
INFO  23:09:43,611 - Deklarisana promenljiva 'boolean' na liniji 11
INFO  23:09:43,611 - Deklarisan niz 'niz' na liniji 12
ERROR 23:09:43,611 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 14
ERROR 23:09:43,611 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 23:09:43,611 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 23:09:43,611 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 23:09:43,611 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 23:09:43,611 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 23:09:43,611 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 23:09:43,611 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 24
ERROR 23:09:43,611 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 25
INFO  23:09:43,612 - ===================================
INFO  23:10:04,854 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:10:04,901 - #2 program
INFO  23:10:04,901 - #20 MJProgram
INFO  23:10:04,902 - #20 abc
INFO  23:10:04,902 - #20 a
INFO  23:10:04,903 - #40 ;
INFO  23:10:04,903 - #7 const
INFO  23:10:04,903 - #20 int
INFO  23:10:04,903 - #20 cnst
INFO  23:10:04,903 - #37 =
INFO  23:10:04,903 - #21 1
INFO  23:10:04,903 - #40 ;
INFO  23:10:04,904 - #47 {
INFO  23:10:04,904 - #20 int
INFO  23:10:04,904 - #20 fun
INFO  23:10:04,904 - #43 (
INFO  23:10:04,904 - #44 )
INFO  23:10:04,904 - #47 {
INFO  23:10:04,904 - #48 }
INFO  23:10:04,904 - #16 void
INFO  23:10:04,905 - #20 main
INFO  23:10:04,905 - #43 (
INFO  23:10:04,905 - #44 )
INFO  23:10:04,905 - #20 int
INFO  23:10:04,905 - #20 b
INFO  23:10:04,905 - #40 ;
INFO  23:10:04,905 - #20 char
INFO  23:10:04,906 - #20 b
INFO  23:10:04,906 - #40 ;
INFO  23:10:04,906 - #20 int
INFO  23:10:04,906 - #20 num
INFO  23:10:04,906 - #40 ;
INFO  23:10:04,906 - #20 char
INFO  23:10:04,906 - #20 character
INFO  23:10:04,906 - #40 ;
INFO  23:10:04,906 - #20 bool
INFO  23:10:04,906 - #20 boolean
INFO  23:10:04,907 - #40 ;
INFO  23:10:04,907 - #20 int
INFO  23:10:04,907 - #20 niz
INFO  23:10:04,907 - #45 [
INFO  23:10:04,907 - #46 ]
INFO  23:10:04,907 - #41 ,
INFO  23:10:04,907 - #20 niz1
INFO  23:10:04,907 - #45 [
INFO  23:10:04,907 - #46 ]
INFO  23:10:04,907 - #40 ;
INFO  23:10:04,907 - #47 {
INFO  23:10:04,908 - #20 a
INFO  23:10:04,908 - #37 =
INFO  23:10:04,908 - #21 1
INFO  23:10:04,908 - #40 ;
INFO  23:10:04,908 - #20 num
INFO  23:10:04,909 - #37 =
INFO  23:10:04,909 - #22 a
INFO  23:10:04,909 - #40 ;
INFO  23:10:04,909 - #20 num
INFO  23:10:04,909 - #37 =
INFO  23:10:04,909 - #23 true
INFO  23:10:04,909 - #40 ;
INFO  23:10:04,909 - #20 character
INFO  23:10:04,909 - #37 =
INFO  23:10:04,909 - #21 1
INFO  23:10:04,909 - #40 ;
INFO  23:10:04,910 - #20 character
INFO  23:10:04,910 - #37 =
INFO  23:10:04,910 - #23 true
INFO  23:10:04,910 - #40 ;
INFO  23:10:04,910 - #20 boolean
INFO  23:10:04,910 - #37 =
INFO  23:10:04,910 - #21 1
INFO  23:10:04,910 - #40 ;
INFO  23:10:04,910 - #20 boolean
INFO  23:10:04,910 - #37 =
INFO  23:10:04,910 - #22 a
INFO  23:10:04,910 - #40 ;
INFO  23:10:04,910 - #20 cnst
INFO  23:10:04,910 - #37 =
INFO  23:10:04,910 - #21 2
INFO  23:10:04,911 - #40 ;
INFO  23:10:04,911 - #20 niz
INFO  23:10:04,911 - #37 =
INFO  23:10:04,911 - #20 niz1
INFO  23:10:04,911 - #40 ;
INFO  23:10:04,911 - #48 }
INFO  23:10:04,911 - #48 }
INFO  23:10:04,913 - 

================SINTAKSNO STABLO====================


INFO  23:10:04,915 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType7(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
        ) [MethodType7]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
              VarArray(
               niz1
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementSingle(
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               a
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementSingle]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorCharConst(
                                     a
                                    ) [FactorCharConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   true
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         character
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       character
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorBoolConst(
                               true
                              ) [FactorBoolConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     boolean
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   boolean
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 cnst
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               niz
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         niz1
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  23:10:04,916 - 

================SEMANTICKA OBRADA====================


ERROR 23:10:04,926 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  23:10:04,927 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  23:10:04,927 - Deklarisana konstanta 'cnst' na liniji 3
ERROR 23:10:04,927 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  23:10:04,927 - Deklarisana promenljiva 'b' na liniji 10
ERROR 23:10:04,927 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  23:10:04,927 - Deklarisana promenljiva 'num' na liniji 11
INFO  23:10:04,927 - Deklarisana promenljiva 'character' na liniji 11
INFO  23:10:04,927 - Deklarisana promenljiva 'boolean' na liniji 11
INFO  23:10:04,927 - Deklarisan niz 'niz' na liniji 12
INFO  23:10:04,927 - Deklarisan niz 'niz1' na liniji 12
ERROR 23:10:04,927 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 14
ERROR 23:10:04,928 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 23:10:04,928 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 23:10:04,928 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 23:10:04,928 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 23:10:04,928 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 23:10:04,928 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 23:10:04,928 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 24
INFO  23:10:04,928 - ===================================
INFO  23:11:10,416 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:11:10,489 - #2 program
INFO  23:11:10,489 - #20 MJProgram
INFO  23:11:10,489 - #20 abc
INFO  23:11:10,490 - #20 a
INFO  23:11:10,492 - #40 ;
INFO  23:11:10,492 - #7 const
INFO  23:11:10,492 - #20 int
INFO  23:11:10,493 - #20 cnst
INFO  23:11:10,493 - #37 =
INFO  23:11:10,493 - #21 1
INFO  23:11:10,493 - #40 ;
INFO  23:11:10,494 - #47 {
INFO  23:11:10,494 - #20 int
INFO  23:11:10,494 - #20 fun
INFO  23:11:10,494 - #43 (
INFO  23:11:10,495 - #44 )
INFO  23:11:10,495 - #47 {
INFO  23:11:10,495 - #48 }
INFO  23:11:10,495 - #16 void
INFO  23:11:10,495 - #20 main
INFO  23:11:10,495 - #43 (
INFO  23:11:10,496 - #44 )
INFO  23:11:10,496 - #20 int
INFO  23:11:10,496 - #20 b
INFO  23:11:10,496 - #40 ;
INFO  23:11:10,497 - #20 char
INFO  23:11:10,497 - #20 b
INFO  23:11:10,497 - #40 ;
INFO  23:11:10,497 - #20 int
INFO  23:11:10,498 - #20 num
INFO  23:11:10,498 - #40 ;
INFO  23:11:10,498 - #20 char
INFO  23:11:10,498 - #20 character
INFO  23:11:10,498 - #40 ;
INFO  23:11:10,499 - #20 bool
INFO  23:11:10,499 - #20 boolean
INFO  23:11:10,499 - #40 ;
INFO  23:11:10,499 - #20 int
INFO  23:11:10,499 - #20 niz
INFO  23:11:10,499 - #45 [
INFO  23:11:10,499 - #46 ]
INFO  23:11:10,499 - #41 ,
INFO  23:11:10,500 - #20 niz1
INFO  23:11:10,500 - #45 [
INFO  23:11:10,500 - #46 ]
INFO  23:11:10,500 - #40 ;
INFO  23:11:10,500 - #47 {
INFO  23:11:10,501 - #20 a
INFO  23:11:10,501 - #37 =
INFO  23:11:10,501 - #21 1
INFO  23:11:10,501 - #40 ;
INFO  23:11:10,502 - #20 num
INFO  23:11:10,502 - #37 =
INFO  23:11:10,503 - #22 a
INFO  23:11:10,503 - #40 ;
INFO  23:11:10,503 - #20 num
INFO  23:11:10,503 - #37 =
INFO  23:11:10,503 - #23 true
INFO  23:11:10,504 - #40 ;
INFO  23:11:10,504 - #20 character
INFO  23:11:10,504 - #37 =
INFO  23:11:10,504 - #21 1
INFO  23:11:10,504 - #40 ;
INFO  23:11:10,504 - #20 character
INFO  23:11:10,505 - #37 =
INFO  23:11:10,505 - #23 true
INFO  23:11:10,505 - #40 ;
INFO  23:11:10,505 - #20 boolean
INFO  23:11:10,505 - #37 =
INFO  23:11:10,505 - #21 1
INFO  23:11:10,505 - #40 ;
INFO  23:11:10,505 - #20 boolean
INFO  23:11:10,506 - #37 =
INFO  23:11:10,506 - #22 a
INFO  23:11:10,506 - #40 ;
INFO  23:11:10,506 - #20 cnst
INFO  23:11:10,506 - #37 =
INFO  23:11:10,506 - #21 2
INFO  23:11:10,506 - #40 ;
INFO  23:11:10,507 - #20 niz
INFO  23:11:10,507 - #37 =
INFO  23:11:10,507 - #20 niz1
INFO  23:11:10,507 - #40 ;
INFO  23:11:10,508 - #48 }
INFO  23:11:10,508 - #48 }
INFO  23:11:10,510 - 

================SINTAKSNO STABLO====================


INFO  23:11:10,512 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType7(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
        ) [MethodType7]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
              VarArray(
               niz1
              ) [VarArray]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementSingle(
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               a
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementSingle]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             num
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorCharConst(
                                     a
                                    ) [FactorCharConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           num
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   true
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         character
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       character
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorBoolConst(
                               true
                              ) [FactorBoolConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     boolean
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   boolean
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 cnst
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               niz
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         niz1
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  23:11:10,513 - 

================SEMANTICKA OBRADA====================


ERROR 23:11:10,527 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  23:11:10,528 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  23:11:10,528 - Deklarisana konstanta 'cnst' na liniji 3
ERROR 23:11:10,528 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  23:11:10,529 - Deklarisana promenljiva 'b' na liniji 10
ERROR 23:11:10,529 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  23:11:10,529 - Deklarisana promenljiva 'num' na liniji 11
INFO  23:11:10,529 - Deklarisana promenljiva 'character' na liniji 11
INFO  23:11:10,529 - Deklarisana promenljiva 'boolean' na liniji 11
INFO  23:11:10,529 - Deklarisan niz 'niz' na liniji 12
INFO  23:11:10,529 - Deklarisan niz 'niz1' na liniji 12
ERROR 23:11:10,529 - designatorAssignment 1 na liniji 14
ERROR 23:11:10,530 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 14
ERROR 23:11:10,530 - designatorAssignment 1 na liniji 17
ERROR 23:11:10,530 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 23:11:10,530 - designatorAssignment 1 na liniji 18
ERROR 23:11:10,530 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 23:11:10,530 - designatorAssignment 1 na liniji 19
ERROR 23:11:10,530 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 23:11:10,530 - designatorAssignment 1 na liniji 20
ERROR 23:11:10,530 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 23:11:10,530 - designatorAssignment 1 na liniji 21
ERROR 23:11:10,530 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 23:11:10,530 - designatorAssignment 1 na liniji 22
ERROR 23:11:10,530 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 23:11:10,530 - designatorAssignment 0 na liniji 25
ERROR 23:11:10,531 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 25
ERROR 23:11:10,531 - designatorAssignment 1 na liniji 26
INFO  23:11:10,532 - ===================================
INFO  23:22:58,851 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:22:58,899 - #2 program
INFO  23:22:58,899 - #20 MJProgram
INFO  23:22:58,899 - #20 abc
INFO  23:22:58,900 - #20 a
INFO  23:22:58,900 - #40 ;
INFO  23:22:58,900 - #7 const
INFO  23:22:58,901 - #20 int
INFO  23:22:58,901 - #20 cnst
INFO  23:22:58,901 - #37 =
INFO  23:22:58,901 - #21 1
INFO  23:22:58,901 - #40 ;
INFO  23:22:58,902 - #47 {
INFO  23:22:58,902 - #20 int
INFO  23:22:58,902 - #20 fun
INFO  23:22:58,902 - #43 (
INFO  23:22:58,902 - #44 )
INFO  23:22:58,902 - #47 {
INFO  23:22:58,902 - #48 }
INFO  23:22:58,902 - #16 void
INFO  23:22:58,902 - #20 main
INFO  23:22:58,902 - #43 (
INFO  23:22:58,903 - #44 )
INFO  23:22:58,903 - #20 int
INFO  23:22:58,903 - #20 b
INFO  23:22:58,903 - #40 ;
INFO  23:22:58,903 - #20 char
INFO  23:22:58,904 - #20 b
INFO  23:22:58,904 - #40 ;
INFO  23:22:58,904 - #20 int
INFO  23:22:58,904 - #20 num
INFO  23:22:58,904 - #40 ;
INFO  23:22:58,904 - #20 char
INFO  23:22:58,904 - #20 character
INFO  23:22:58,904 - #40 ;
INFO  23:22:58,905 - #20 bool
INFO  23:22:58,905 - #20 boolean
INFO  23:22:58,905 - #40 ;
INFO  23:22:58,905 - #20 int
INFO  23:22:58,905 - #20 niz
INFO  23:22:58,905 - #45 [
INFO  23:22:58,905 - #46 ]
INFO  23:22:58,905 - #40 ;
INFO  23:22:58,905 - #47 {
INFO  23:22:58,905 - #20 a
INFO  23:22:58,905 - #37 =
INFO  23:22:58,906 - #21 1
INFO  23:22:58,906 - #40 ;
INFO  23:22:58,906 - #20 num
INFO  23:22:58,906 - #37 =
INFO  23:22:58,906 - #22 a
INFO  23:22:58,906 - #40 ;
INFO  23:22:58,907 - #20 num
INFO  23:22:58,907 - #37 =
INFO  23:22:58,907 - #23 true
INFO  23:22:58,907 - #40 ;
INFO  23:22:58,907 - #20 character
INFO  23:22:58,907 - #37 =
INFO  23:22:58,907 - #21 1
INFO  23:22:58,907 - #40 ;
INFO  23:22:58,907 - #20 character
INFO  23:22:58,907 - #37 =
INFO  23:22:58,907 - #23 true
INFO  23:22:58,907 - #40 ;
INFO  23:22:58,908 - #20 boolean
INFO  23:22:58,908 - #37 =
INFO  23:22:58,908 - #21 1
INFO  23:22:58,908 - #40 ;
INFO  23:22:58,908 - #20 boolean
INFO  23:22:58,908 - #37 =
INFO  23:22:58,908 - #22 a
INFO  23:22:58,908 - #40 ;
INFO  23:22:58,908 - #20 cnst
INFO  23:22:58,908 - #37 =
INFO  23:22:58,908 - #21 2
INFO  23:22:58,908 - #40 ;
INFO  23:22:58,909 - #20 character
INFO  23:22:58,909 - #38 ++
INFO  23:22:58,909 - #40 ;
INFO  23:22:58,909 - #20 num
INFO  23:22:58,909 - #38 ++
INFO  23:22:58,909 - #40 ;
INFO  23:22:58,909 - #20 boolean
INFO  23:22:58,909 - #38 ++
INFO  23:22:58,909 - #40 ;
INFO  23:22:58,909 - #48 }
INFO  23:22:58,909 - #48 }
INFO  23:22:58,910 - 

================SINTAKSNO STABLO====================


INFO  23:22:58,912 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType7(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
        ) [MethodType7]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementSingle(
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   a
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           1
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementSingle]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorCharConst(
                                         a
                                        ) [FactorCharConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorBoolConst(
                                       true
                                      ) [FactorBoolConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             character
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     1
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           character
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   true
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         boolean
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       boolean
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorCharConst(
                               a
                              ) [FactorCharConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     cnst
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             2
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorIncrement(
                  DesignatorSimple(
                   character
                  ) [DesignatorSimple]
                ) [DesignatorIncrement]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 num
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorIncrement(
              DesignatorSimple(
               boolean
              ) [DesignatorSimple]
            ) [DesignatorIncrement]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  23:22:58,913 - 

================SEMANTICKA OBRADA====================


ERROR 23:22:58,924 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  23:22:58,925 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  23:22:58,925 - Deklarisana konstanta 'cnst' na liniji 3
ERROR 23:22:58,925 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  23:22:58,925 - Deklarisana promenljiva 'b' na liniji 10
ERROR 23:22:58,925 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  23:22:58,925 - Deklarisana promenljiva 'num' na liniji 11
INFO  23:22:58,925 - Deklarisana promenljiva 'character' na liniji 11
INFO  23:22:58,925 - Deklarisana promenljiva 'boolean' na liniji 11
INFO  23:22:58,925 - Deklarisan niz 'niz' na liniji 12
ERROR 23:22:58,925 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 14
ERROR 23:22:58,926 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 23:22:58,926 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 23:22:58,926 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 23:22:58,926 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 23:22:58,926 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 23:22:58,926 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 23:22:58,926 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 25
ERROR 23:22:58,926 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 28
ERROR 23:22:58,926 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 30
INFO  23:22:58,926 - ===================================
INFO  23:23:08,768 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:23:08,829 - #2 program
INFO  23:23:08,829 - #20 MJProgram
INFO  23:23:08,829 - #20 abc
INFO  23:23:08,830 - #20 a
INFO  23:23:08,831 - #40 ;
INFO  23:23:08,831 - #7 const
INFO  23:23:08,832 - #20 int
INFO  23:23:08,833 - #20 cnst
INFO  23:23:08,833 - #37 =
INFO  23:23:08,833 - #21 1
INFO  23:23:08,833 - #40 ;
INFO  23:23:08,834 - #47 {
INFO  23:23:08,834 - #20 int
INFO  23:23:08,834 - #20 fun
INFO  23:23:08,834 - #43 (
INFO  23:23:08,835 - #44 )
INFO  23:23:08,835 - #47 {
INFO  23:23:08,835 - #48 }
INFO  23:23:08,835 - #16 void
INFO  23:23:08,835 - #20 main
INFO  23:23:08,835 - #43 (
INFO  23:23:08,836 - #44 )
INFO  23:23:08,836 - #20 int
INFO  23:23:08,836 - #20 b
INFO  23:23:08,836 - #40 ;
INFO  23:23:08,836 - #20 char
INFO  23:23:08,836 - #20 b
INFO  23:23:08,837 - #40 ;
INFO  23:23:08,837 - #20 int
INFO  23:23:08,837 - #20 num
INFO  23:23:08,837 - #40 ;
INFO  23:23:08,837 - #20 char
INFO  23:23:08,837 - #20 character
INFO  23:23:08,837 - #40 ;
INFO  23:23:08,837 - #20 bool
INFO  23:23:08,837 - #20 boolean
INFO  23:23:08,838 - #40 ;
INFO  23:23:08,838 - #20 int
INFO  23:23:08,838 - #20 niz
INFO  23:23:08,838 - #45 [
INFO  23:23:08,838 - #46 ]
INFO  23:23:08,838 - #40 ;
INFO  23:23:08,838 - #47 {
INFO  23:23:08,838 - #20 a
INFO  23:23:08,839 - #37 =
INFO  23:23:08,839 - #21 1
INFO  23:23:08,839 - #40 ;
INFO  23:23:08,839 - #20 num
INFO  23:23:08,839 - #37 =
INFO  23:23:08,840 - #22 a
INFO  23:23:08,840 - #40 ;
INFO  23:23:08,840 - #20 num
INFO  23:23:08,840 - #37 =
INFO  23:23:08,840 - #23 true
INFO  23:23:08,840 - #40 ;
INFO  23:23:08,840 - #20 character
INFO  23:23:08,840 - #37 =
INFO  23:23:08,840 - #21 1
INFO  23:23:08,840 - #40 ;
INFO  23:23:08,841 - #20 character
INFO  23:23:08,841 - #37 =
INFO  23:23:08,841 - #23 true
INFO  23:23:08,841 - #40 ;
INFO  23:23:08,841 - #20 boolean
INFO  23:23:08,841 - #37 =
INFO  23:23:08,841 - #21 1
INFO  23:23:08,841 - #40 ;
INFO  23:23:08,842 - #20 boolean
INFO  23:23:08,842 - #37 =
INFO  23:23:08,842 - #22 a
INFO  23:23:08,842 - #40 ;
INFO  23:23:08,842 - #20 cnst
INFO  23:23:08,842 - #37 =
INFO  23:23:08,842 - #21 2
INFO  23:23:08,842 - #40 ;
INFO  23:23:08,842 - #20 character
INFO  23:23:08,842 - #38 ++
INFO  23:23:08,842 - #40 ;
INFO  23:23:08,843 - #20 num
INFO  23:23:08,843 - #38 ++
INFO  23:23:08,843 - #40 ;
INFO  23:23:08,843 - #20 boolean
INFO  23:23:08,843 - #39 --
INFO  23:23:08,844 - #40 ;
INFO  23:23:08,844 - #48 }
INFO  23:23:08,844 - #48 }
INFO  23:23:08,845 - 

================SINTAKSNO STABLO====================


INFO  23:23:08,848 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType7(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
        ) [MethodType7]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementSingle(
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   a
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           1
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementSingle]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorCharConst(
                                         a
                                        ) [FactorCharConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorBoolConst(
                                       true
                                      ) [FactorBoolConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             character
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     1
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           character
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   true
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         boolean
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       boolean
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorCharConst(
                               a
                              ) [FactorCharConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     cnst
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             2
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorIncrement(
                  DesignatorSimple(
                   character
                  ) [DesignatorSimple]
                ) [DesignatorIncrement]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 num
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorDecrement(
              DesignatorSimple(
               boolean
              ) [DesignatorSimple]
            ) [DesignatorDecrement]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  23:23:08,848 - 

================SEMANTICKA OBRADA====================


ERROR 23:23:08,859 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  23:23:08,860 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  23:23:08,860 - Deklarisana konstanta 'cnst' na liniji 3
ERROR 23:23:08,860 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  23:23:08,860 - Deklarisana promenljiva 'b' na liniji 10
ERROR 23:23:08,860 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  23:23:08,861 - Deklarisana promenljiva 'num' na liniji 11
INFO  23:23:08,861 - Deklarisana promenljiva 'character' na liniji 11
INFO  23:23:08,861 - Deklarisana promenljiva 'boolean' na liniji 11
INFO  23:23:08,861 - Deklarisan niz 'niz' na liniji 12
ERROR 23:23:08,861 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 14
ERROR 23:23:08,861 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 23:23:08,861 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 23:23:08,861 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 23:23:08,861 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 23:23:08,861 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 23:23:08,861 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 23:23:08,861 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 25
ERROR 23:23:08,862 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 28
ERROR 23:23:08,862 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 30
INFO  23:23:08,863 - ===================================
INFO  23:24:21,320 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:24:21,365 - #2 program
INFO  23:24:21,365 - #20 MJProgram
INFO  23:24:21,365 - #20 abc
INFO  23:24:21,366 - #20 a
INFO  23:24:21,366 - #40 ;
INFO  23:24:21,367 - #7 const
INFO  23:24:21,367 - #20 int
INFO  23:24:21,367 - #20 cnst
INFO  23:24:21,367 - #37 =
INFO  23:24:21,367 - #21 1
INFO  23:24:21,367 - #40 ;
INFO  23:24:21,368 - #47 {
INFO  23:24:21,368 - #20 int
INFO  23:24:21,368 - #20 fun
INFO  23:24:21,368 - #43 (
INFO  23:24:21,368 - #44 )
INFO  23:24:21,368 - #47 {
INFO  23:24:21,368 - #48 }
INFO  23:24:21,368 - #16 void
INFO  23:24:21,368 - #20 main
INFO  23:24:21,368 - #43 (
INFO  23:24:21,369 - #44 )
INFO  23:24:21,369 - #20 int
INFO  23:24:21,369 - #20 b
INFO  23:24:21,369 - #40 ;
INFO  23:24:21,369 - #20 char
INFO  23:24:21,369 - #20 b
INFO  23:24:21,369 - #40 ;
INFO  23:24:21,369 - #20 int
INFO  23:24:21,370 - #20 num
INFO  23:24:21,370 - #40 ;
INFO  23:24:21,370 - #20 char
INFO  23:24:21,370 - #20 character
INFO  23:24:21,370 - #40 ;
INFO  23:24:21,370 - #20 bool
INFO  23:24:21,370 - #20 boolean
INFO  23:24:21,370 - #40 ;
INFO  23:24:21,370 - #20 int
INFO  23:24:21,370 - #20 niz
INFO  23:24:21,370 - #45 [
INFO  23:24:21,370 - #46 ]
INFO  23:24:21,371 - #40 ;
INFO  23:24:21,371 - #47 {
INFO  23:24:21,371 - #20 a
INFO  23:24:21,371 - #37 =
INFO  23:24:21,371 - #21 1
INFO  23:24:21,371 - #40 ;
INFO  23:24:21,372 - #20 num
INFO  23:24:21,372 - #37 =
INFO  23:24:21,372 - #22 a
INFO  23:24:21,373 - #40 ;
INFO  23:24:21,373 - #20 num
INFO  23:24:21,373 - #37 =
INFO  23:24:21,373 - #23 true
INFO  23:24:21,373 - #40 ;
INFO  23:24:21,373 - #20 character
INFO  23:24:21,373 - #37 =
INFO  23:24:21,374 - #21 1
INFO  23:24:21,374 - #40 ;
INFO  23:24:21,374 - #20 character
INFO  23:24:21,374 - #37 =
INFO  23:24:21,374 - #23 true
INFO  23:24:21,374 - #40 ;
INFO  23:24:21,374 - #20 boolean
INFO  23:24:21,374 - #37 =
INFO  23:24:21,374 - #21 1
INFO  23:24:21,374 - #40 ;
INFO  23:24:21,375 - #20 boolean
INFO  23:24:21,375 - #37 =
INFO  23:24:21,375 - #22 a
INFO  23:24:21,375 - #40 ;
INFO  23:24:21,375 - #20 cnst
INFO  23:24:21,375 - #37 =
INFO  23:24:21,375 - #21 2
INFO  23:24:21,375 - #40 ;
INFO  23:24:21,376 - #20 character
INFO  23:24:21,376 - #38 ++
INFO  23:24:21,376 - #40 ;
INFO  23:24:21,376 - #20 boolean
INFO  23:24:21,376 - #39 --
INFO  23:24:21,376 - #40 ;
INFO  23:24:21,376 - #3 break
INFO  23:24:21,377 - #40 ;
INFO  23:24:21,377 - #48 }
INFO  23:24:21,378 - #48 }
INFO  23:24:21,379 - 

================SINTAKSNO STABLO====================


INFO  23:24:21,380 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType7(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
        ) [MethodType7]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementSingle(
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   a
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           1
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementSingle]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorCharConst(
                                         a
                                        ) [FactorCharConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorBoolConst(
                                       true
                                      ) [FactorBoolConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             character
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     1
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           character
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   true
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         boolean
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       boolean
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorCharConst(
                               a
                              ) [FactorCharConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     cnst
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             2
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorIncrement(
                  DesignatorSimple(
                   character
                  ) [DesignatorSimple]
                ) [DesignatorIncrement]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorDecrement(
                DesignatorSimple(
                 boolean
                ) [DesignatorSimple]
              ) [DesignatorDecrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtBreak(
          ) [StmtBreak]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  23:24:21,381 - 

================SEMANTICKA OBRADA====================


ERROR 23:24:21,390 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  23:24:21,391 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  23:24:21,391 - Deklarisana konstanta 'cnst' na liniji 3
ERROR 23:24:21,391 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  23:24:21,391 - Deklarisana promenljiva 'b' na liniji 10
ERROR 23:24:21,391 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  23:24:21,391 - Deklarisana promenljiva 'num' na liniji 11
INFO  23:24:21,391 - Deklarisana promenljiva 'character' na liniji 11
INFO  23:24:21,392 - Deklarisana promenljiva 'boolean' na liniji 11
INFO  23:24:21,392 - Deklarisan niz 'niz' na liniji 12
ERROR 23:24:21,392 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 14
ERROR 23:24:21,392 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 23:24:21,392 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 23:24:21,392 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 23:24:21,392 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 23:24:21,392 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 23:24:21,392 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 23:24:21,392 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 25
ERROR 23:24:21,392 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 28
ERROR 23:24:21,392 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 29
INFO  23:24:21,393 - ===================================
INFO  23:25:51,579 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:25:51,624 - #2 program
INFO  23:25:51,624 - #20 MJProgram
INFO  23:25:51,624 - #20 abc
INFO  23:25:51,625 - #20 a
INFO  23:25:51,626 - #40 ;
INFO  23:25:51,626 - #7 const
INFO  23:25:51,626 - #20 int
INFO  23:25:51,626 - #20 cnst
INFO  23:25:51,626 - #37 =
INFO  23:25:51,626 - #21 1
INFO  23:25:51,626 - #40 ;
INFO  23:25:51,627 - #47 {
INFO  23:25:51,627 - #20 int
INFO  23:25:51,628 - #20 fun
INFO  23:25:51,628 - #43 (
INFO  23:25:51,628 - #44 )
INFO  23:25:51,628 - #47 {
INFO  23:25:51,628 - #48 }
INFO  23:25:51,628 - #16 void
INFO  23:25:51,628 - #20 main
INFO  23:25:51,628 - #43 (
INFO  23:25:51,629 - #44 )
INFO  23:25:51,629 - #20 int
INFO  23:25:51,629 - #20 b
INFO  23:25:51,629 - #40 ;
INFO  23:25:51,629 - #20 char
INFO  23:25:51,630 - #20 b
INFO  23:25:51,630 - #40 ;
INFO  23:25:51,630 - #20 int
INFO  23:25:51,630 - #20 num
INFO  23:25:51,630 - #40 ;
INFO  23:25:51,630 - #20 char
INFO  23:25:51,630 - #20 character
INFO  23:25:51,630 - #40 ;
INFO  23:25:51,630 - #20 bool
INFO  23:25:51,631 - #20 boolean
INFO  23:25:51,631 - #40 ;
INFO  23:25:51,631 - #20 int
INFO  23:25:51,631 - #20 niz
INFO  23:25:51,631 - #45 [
INFO  23:25:51,631 - #46 ]
INFO  23:25:51,631 - #40 ;
INFO  23:25:51,631 - #47 {
INFO  23:25:51,631 - #20 a
INFO  23:25:51,631 - #37 =
INFO  23:25:51,631 - #21 1
INFO  23:25:51,632 - #40 ;
INFO  23:25:51,632 - #20 num
INFO  23:25:51,632 - #37 =
INFO  23:25:51,633 - #22 a
INFO  23:25:51,633 - #40 ;
INFO  23:25:51,633 - #20 num
INFO  23:25:51,633 - #37 =
INFO  23:25:51,633 - #23 true
INFO  23:25:51,633 - #40 ;
INFO  23:25:51,633 - #20 character
INFO  23:25:51,633 - #37 =
INFO  23:25:51,633 - #21 1
INFO  23:25:51,633 - #40 ;
INFO  23:25:51,633 - #20 character
INFO  23:25:51,633 - #37 =
INFO  23:25:51,634 - #23 true
INFO  23:25:51,634 - #40 ;
INFO  23:25:51,634 - #20 boolean
INFO  23:25:51,634 - #37 =
INFO  23:25:51,634 - #21 1
INFO  23:25:51,634 - #40 ;
INFO  23:25:51,634 - #20 boolean
INFO  23:25:51,634 - #37 =
INFO  23:25:51,634 - #22 a
INFO  23:25:51,634 - #40 ;
INFO  23:25:51,634 - #20 cnst
INFO  23:25:51,634 - #37 =
INFO  23:25:51,634 - #21 2
INFO  23:25:51,635 - #40 ;
INFO  23:25:51,635 - #20 character
INFO  23:25:51,635 - #38 ++
INFO  23:25:51,635 - #40 ;
INFO  23:25:51,635 - #20 boolean
INFO  23:25:51,635 - #39 --
INFO  23:25:51,635 - #40 ;
INFO  23:25:51,635 - #3 break
INFO  23:25:51,635 - #40 ;
INFO  23:25:51,635 - #48 }
INFO  23:25:51,636 - #48 }
INFO  23:25:51,638 - 

================SINTAKSNO STABLO====================


INFO  23:25:51,642 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType7(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
        ) [MethodType7]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementSingle(
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   a
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           1
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementSingle]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorCharConst(
                                         a
                                        ) [FactorCharConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorBoolConst(
                                       true
                                      ) [FactorBoolConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             character
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     1
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           character
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   true
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         boolean
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       boolean
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorCharConst(
                               a
                              ) [FactorCharConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     cnst
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             2
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorIncrement(
                  DesignatorSimple(
                   character
                  ) [DesignatorSimple]
                ) [DesignatorIncrement]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorDecrement(
                DesignatorSimple(
                 boolean
                ) [DesignatorSimple]
              ) [DesignatorDecrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtBreak(
          ) [StmtBreak]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  23:25:51,642 - 

================SEMANTICKA OBRADA====================


ERROR 23:25:51,655 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  23:25:51,656 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  23:25:51,656 - Deklarisana konstanta 'cnst' na liniji 3
ERROR 23:25:51,656 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  23:25:51,656 - Deklarisana promenljiva 'b' na liniji 10
ERROR 23:25:51,656 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  23:25:51,656 - Deklarisana promenljiva 'num' na liniji 11
INFO  23:25:51,656 - Deklarisana promenljiva 'character' na liniji 11
INFO  23:25:51,656 - Deklarisana promenljiva 'boolean' na liniji 11
INFO  23:25:51,656 - Deklarisan niz 'niz' na liniji 12
ERROR 23:25:51,656 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 14
ERROR 23:25:51,656 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 23:25:51,656 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 23:25:51,657 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 23:25:51,657 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 23:25:51,657 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 23:25:51,657 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 23:25:51,657 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 25
ERROR 23:25:51,657 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 28
ERROR 23:25:51,657 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 29
ERROR 23:25:51,657 - BREAK
INFO  23:25:51,658 - ===================================
INFO  23:30:07,862 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:30:07,916 - #2 program
INFO  23:30:07,916 - #20 MJProgram
INFO  23:30:07,916 - #20 abc
INFO  23:30:07,917 - #20 a
INFO  23:30:07,917 - #40 ;
INFO  23:30:07,917 - #7 const
INFO  23:30:07,918 - #20 int
INFO  23:30:07,918 - #20 cnst
INFO  23:30:07,918 - #37 =
INFO  23:30:07,918 - #21 1
INFO  23:30:07,918 - #40 ;
INFO  23:30:07,919 - #47 {
INFO  23:30:07,920 - #20 int
INFO  23:30:07,920 - #20 fun
INFO  23:30:07,920 - #43 (
INFO  23:30:07,920 - #20 int
INFO  23:30:07,920 - #20 x
INFO  23:30:07,920 - #44 )
INFO  23:30:07,920 - #47 {
INFO  23:30:07,920 - #48 }
INFO  23:30:07,921 - #16 void
INFO  23:30:07,921 - #20 main
INFO  23:30:07,921 - #43 (
INFO  23:30:07,921 - #44 )
INFO  23:30:07,921 - #20 int
INFO  23:30:07,921 - #20 b
INFO  23:30:07,921 - #40 ;
INFO  23:30:07,922 - #20 char
INFO  23:30:07,922 - #20 b
INFO  23:30:07,922 - #40 ;
INFO  23:30:07,922 - #20 int
INFO  23:30:07,922 - #20 num
INFO  23:30:07,922 - #40 ;
INFO  23:30:07,923 - #20 char
INFO  23:30:07,923 - #20 character
INFO  23:30:07,923 - #40 ;
INFO  23:30:07,923 - #20 bool
INFO  23:30:07,923 - #20 boolean
INFO  23:30:07,923 - #40 ;
INFO  23:30:07,923 - #20 int
INFO  23:30:07,923 - #20 niz
INFO  23:30:07,923 - #45 [
INFO  23:30:07,923 - #46 ]
INFO  23:30:07,923 - #40 ;
INFO  23:30:07,923 - #47 {
INFO  23:30:07,923 - #20 a
INFO  23:30:07,923 - #37 =
INFO  23:30:07,924 - #21 1
INFO  23:30:07,924 - #40 ;
INFO  23:30:07,924 - #20 num
INFO  23:30:07,924 - #37 =
INFO  23:30:07,924 - #22 a
INFO  23:30:07,924 - #40 ;
INFO  23:30:07,925 - #20 num
INFO  23:30:07,925 - #37 =
INFO  23:30:07,925 - #23 true
INFO  23:30:07,925 - #40 ;
INFO  23:30:07,925 - #20 character
INFO  23:30:07,925 - #37 =
INFO  23:30:07,925 - #21 1
INFO  23:30:07,925 - #40 ;
INFO  23:30:07,925 - #20 character
INFO  23:30:07,925 - #37 =
INFO  23:30:07,925 - #23 true
INFO  23:30:07,925 - #40 ;
INFO  23:30:07,925 - #20 boolean
INFO  23:30:07,926 - #37 =
INFO  23:30:07,926 - #21 1
INFO  23:30:07,926 - #40 ;
INFO  23:30:07,926 - #20 boolean
INFO  23:30:07,926 - #37 =
INFO  23:30:07,926 - #22 a
INFO  23:30:07,926 - #40 ;
INFO  23:30:07,926 - #20 cnst
INFO  23:30:07,926 - #37 =
INFO  23:30:07,926 - #21 2
INFO  23:30:07,927 - #40 ;
INFO  23:30:07,927 - #20 character
INFO  23:30:07,927 - #38 ++
INFO  23:30:07,927 - #40 ;
INFO  23:30:07,927 - #20 boolean
INFO  23:30:07,927 - #39 --
INFO  23:30:07,928 - #40 ;
INFO  23:30:07,928 - #20 fun
INFO  23:30:07,928 - #43 (
INFO  23:30:07,928 - #21 1
INFO  23:30:07,928 - #41 ,
INFO  23:30:07,929 - #21 2
INFO  23:30:07,929 - #44 )
INFO  23:30:07,930 - #40 ;
INFO  23:30:07,930 - #48 }
INFO  23:30:07,930 - #48 }
INFO  23:30:07,931 - 

================SINTAKSNO STABLO====================


INFO  23:30:07,933 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementSingle(
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   a
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           1
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementSingle]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorCharConst(
                                         a
                                        ) [FactorCharConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               num
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorBoolConst(
                                       true
                                      ) [FactorBoolConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             character
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     1
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           character
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorBoolConst(
                                   true
                                  ) [FactorBoolConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         boolean
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       boolean
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorCharConst(
                               a
                              ) [FactorCharConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     cnst
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             2
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorIncrement(
                  DesignatorSimple(
                   character
                  ) [DesignatorSimple]
                ) [DesignatorIncrement]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorDecrement(
                DesignatorSimple(
                 boolean
                ) [DesignatorSimple]
              ) [DesignatorDecrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorMethodCall0(
              DesignatorSimple(
               fun
              ) [DesignatorSimple]
              ActParsMulti(
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         1
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       2
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [ActParsMulti]
            ) [DesignatorMethodCall0]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  23:30:07,933 - 

================SEMANTICKA OBRADA====================


ERROR 23:30:07,944 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  23:30:07,945 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  23:30:07,945 - Deklarisana konstanta 'cnst' na liniji 3
INFO  23:30:07,945 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 23:30:07,945 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  23:30:07,946 - Deklarisana promenljiva 'b' na liniji 10
ERROR 23:30:07,946 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  23:30:07,946 - Deklarisana promenljiva 'num' na liniji 11
INFO  23:30:07,946 - Deklarisana promenljiva 'character' na liniji 11
INFO  23:30:07,946 - Deklarisana promenljiva 'boolean' na liniji 11
INFO  23:30:07,946 - Deklarisan niz 'niz' na liniji 12
ERROR 23:30:07,946 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 14
ERROR 23:30:07,946 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 23:30:07,946 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 23:30:07,946 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 23:30:07,946 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 23:30:07,946 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 23:30:07,946 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 23:30:07,946 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 25
ERROR 23:30:07,946 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 28
ERROR 23:30:07,946 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 29
INFO  23:30:07,946 - Pronadjen poziv funkcije 'fun' na liniji 31
INFO  23:30:07,947 - ===================================
INFO  23:34:19,758 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:34:19,807 - #2 program
INFO  23:34:19,807 - #20 MJProgram
INFO  23:34:19,807 - #20 abc
INFO  23:34:19,808 - #20 a
INFO  23:34:19,808 - #40 ;
INFO  23:34:19,808 - #7 const
INFO  23:34:19,809 - #20 int
INFO  23:34:19,809 - #20 cnst
INFO  23:34:19,809 - #37 =
INFO  23:34:19,809 - #21 1
INFO  23:34:19,809 - #40 ;
INFO  23:34:19,810 - #47 {
INFO  23:34:19,810 - #20 int
INFO  23:34:19,810 - #20 fun
INFO  23:34:19,810 - #43 (
INFO  23:34:19,810 - #20 int
INFO  23:34:19,810 - #20 x
INFO  23:34:19,811 - #44 )
INFO  23:34:19,811 - #47 {
INFO  23:34:19,811 - #48 }
INFO  23:34:19,811 - #16 void
INFO  23:34:19,811 - #20 main
INFO  23:34:19,811 - #43 (
INFO  23:34:19,812 - #44 )
INFO  23:34:19,812 - #20 int
INFO  23:34:19,812 - #20 b
INFO  23:34:19,812 - #40 ;
INFO  23:34:19,812 - #20 char
INFO  23:34:19,813 - #20 b
INFO  23:34:19,813 - #40 ;
INFO  23:34:19,813 - #20 int
INFO  23:34:19,813 - #20 num
INFO  23:34:19,813 - #40 ;
INFO  23:34:19,813 - #20 char
INFO  23:34:19,814 - #20 character
INFO  23:34:19,814 - #40 ;
INFO  23:34:19,814 - #20 bool
INFO  23:34:19,814 - #20 boolean
INFO  23:34:19,814 - #40 ;
INFO  23:34:19,814 - #20 int
INFO  23:34:19,814 - #20 niz
INFO  23:34:19,814 - #45 [
INFO  23:34:19,814 - #46 ]
INFO  23:34:19,814 - #40 ;
INFO  23:34:19,815 - #47 {
INFO  23:34:19,815 - #20 a
INFO  23:34:19,815 - #37 =
INFO  23:34:19,815 - #21 1
INFO  23:34:19,815 - #40 ;
INFO  23:34:19,816 - #20 num
INFO  23:34:19,816 - #37 =
INFO  23:34:19,816 - #22 a
INFO  23:34:19,816 - #40 ;
INFO  23:34:19,816 - #20 num
INFO  23:34:19,816 - #37 =
INFO  23:34:19,816 - #23 true
INFO  23:34:19,817 - #40 ;
INFO  23:34:19,817 - #20 character
INFO  23:34:19,817 - #37 =
INFO  23:34:19,817 - #21 1
INFO  23:34:19,817 - #40 ;
INFO  23:34:19,817 - #20 character
INFO  23:34:19,817 - #37 =
INFO  23:34:19,817 - #23 true
INFO  23:34:19,817 - #40 ;
INFO  23:34:19,818 - #20 boolean
INFO  23:34:19,818 - #37 =
INFO  23:34:19,818 - #21 1
INFO  23:34:19,818 - #40 ;
INFO  23:34:19,818 - #20 boolean
INFO  23:34:19,818 - #37 =
INFO  23:34:19,818 - #22 a
INFO  23:34:19,818 - #40 ;
INFO  23:34:19,818 - #20 cnst
INFO  23:34:19,818 - #37 =
INFO  23:34:19,818 - #21 2
INFO  23:34:19,818 - #40 ;
INFO  23:34:19,818 - #20 character
INFO  23:34:19,818 - #38 ++
INFO  23:34:19,819 - #40 ;
INFO  23:34:19,819 - #20 boolean
INFO  23:34:19,819 - #39 --
INFO  23:34:19,819 - #40 ;
INFO  23:34:19,819 - #20 fun
INFO  23:34:19,819 - #43 (
INFO  23:34:19,819 - #21 1
INFO  23:34:19,820 - #41 ,
INFO  23:34:19,820 - #21 2
INFO  23:34:19,820 - #44 )
INFO  23:34:19,820 - #40 ;
INFO  23:34:19,820 - #20 num
INFO  23:34:19,820 - #37 =
INFO  23:34:19,820 - #25 -
INFO  23:34:19,821 - #21 3
INFO  23:34:19,821 - #40 ;
INFO  23:34:19,821 - #48 }
INFO  23:34:19,821 - #48 }
INFO  23:34:19,822 - 

================SINTAKSNO STABLO====================


INFO  23:34:19,824 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementSingle(
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     a
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             1
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementSingle]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   num
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorCharConst(
                                           a
                                          ) [FactorCharConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorBoolConst(
                                         true
                                        ) [FactorBoolConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               character
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             character
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorBoolConst(
                                     true
                                    ) [FactorBoolConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           boolean
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   1
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         boolean
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorCharConst(
                                 a
                                ) [FactorCharConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       cnst
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     character
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorDecrement(
                  DesignatorSimple(
                   boolean
                  ) [DesignatorSimple]
                ) [DesignatorDecrement]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 fun
                ) [DesignatorSimple]
                ActParsMulti(
                  ActParsSingle(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [ActParsSingle]
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsMulti]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               num
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprNegSingle(
                    TermSingle(
                      FactorNumConst(
                       3
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprNegSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  23:34:19,824 - 

================SEMANTICKA OBRADA====================


ERROR 23:34:19,835 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  23:34:19,835 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  23:34:19,835 - Deklarisana konstanta 'cnst' na liniji 3
INFO  23:34:19,835 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 23:34:19,835 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  23:34:19,836 - Deklarisana promenljiva 'b' na liniji 10
ERROR 23:34:19,836 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  23:34:19,836 - Deklarisana promenljiva 'num' na liniji 11
INFO  23:34:19,836 - Deklarisana promenljiva 'character' na liniji 11
INFO  23:34:19,836 - Deklarisana promenljiva 'boolean' na liniji 11
INFO  23:34:19,836 - Deklarisan niz 'niz' na liniji 12
ERROR 23:34:19,836 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 14
ERROR 23:34:19,836 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 23:34:19,836 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 23:34:19,836 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 23:34:19,836 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 23:34:19,836 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 23:34:19,836 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 23:34:19,836 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 25
ERROR 23:34:19,836 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 28
ERROR 23:34:19,836 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 29
INFO  23:34:19,837 - Pronadjen poziv funkcije 'fun' na liniji 31
INFO  23:34:19,837 - ===================================
INFO  23:34:26,999 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:34:27,047 - #2 program
INFO  23:34:27,047 - #20 MJProgram
INFO  23:34:27,047 - #20 abc
INFO  23:34:27,048 - #20 a
INFO  23:34:27,048 - #40 ;
INFO  23:34:27,048 - #7 const
INFO  23:34:27,049 - #20 int
INFO  23:34:27,049 - #20 cnst
INFO  23:34:27,049 - #37 =
INFO  23:34:27,049 - #21 1
INFO  23:34:27,049 - #40 ;
INFO  23:34:27,050 - #47 {
INFO  23:34:27,050 - #20 int
INFO  23:34:27,050 - #20 fun
INFO  23:34:27,050 - #43 (
INFO  23:34:27,050 - #20 int
INFO  23:34:27,050 - #20 x
INFO  23:34:27,050 - #44 )
INFO  23:34:27,050 - #47 {
INFO  23:34:27,050 - #48 }
INFO  23:34:27,051 - #16 void
INFO  23:34:27,051 - #20 main
INFO  23:34:27,051 - #43 (
INFO  23:34:27,051 - #44 )
INFO  23:34:27,051 - #20 int
INFO  23:34:27,051 - #20 b
INFO  23:34:27,051 - #40 ;
INFO  23:34:27,051 - #20 char
INFO  23:34:27,052 - #20 b
INFO  23:34:27,052 - #40 ;
INFO  23:34:27,052 - #20 int
INFO  23:34:27,052 - #20 num
INFO  23:34:27,052 - #40 ;
INFO  23:34:27,052 - #20 char
INFO  23:34:27,052 - #20 character
INFO  23:34:27,052 - #40 ;
INFO  23:34:27,052 - #20 bool
INFO  23:34:27,052 - #20 boolean
INFO  23:34:27,053 - #40 ;
INFO  23:34:27,053 - #20 int
INFO  23:34:27,053 - #20 niz
INFO  23:34:27,053 - #45 [
INFO  23:34:27,053 - #46 ]
INFO  23:34:27,053 - #40 ;
INFO  23:34:27,053 - #47 {
INFO  23:34:27,053 - #20 a
INFO  23:34:27,053 - #37 =
INFO  23:34:27,053 - #21 1
INFO  23:34:27,053 - #40 ;
INFO  23:34:27,054 - #20 num
INFO  23:34:27,055 - #37 =
INFO  23:34:27,055 - #22 a
INFO  23:34:27,055 - #40 ;
INFO  23:34:27,055 - #20 num
INFO  23:34:27,055 - #37 =
INFO  23:34:27,055 - #23 true
INFO  23:34:27,055 - #40 ;
INFO  23:34:27,055 - #20 character
INFO  23:34:27,055 - #37 =
INFO  23:34:27,056 - #21 1
INFO  23:34:27,056 - #40 ;
INFO  23:34:27,056 - #20 character
INFO  23:34:27,056 - #37 =
INFO  23:34:27,056 - #23 true
INFO  23:34:27,056 - #40 ;
INFO  23:34:27,056 - #20 boolean
INFO  23:34:27,057 - #37 =
INFO  23:34:27,057 - #21 1
INFO  23:34:27,057 - #40 ;
INFO  23:34:27,057 - #20 boolean
INFO  23:34:27,057 - #37 =
INFO  23:34:27,057 - #22 a
INFO  23:34:27,057 - #40 ;
INFO  23:34:27,057 - #20 cnst
INFO  23:34:27,057 - #37 =
INFO  23:34:27,057 - #21 2
INFO  23:34:27,058 - #40 ;
INFO  23:34:27,058 - #20 character
INFO  23:34:27,058 - #38 ++
INFO  23:34:27,058 - #40 ;
INFO  23:34:27,058 - #20 boolean
INFO  23:34:27,058 - #39 --
INFO  23:34:27,058 - #40 ;
INFO  23:34:27,059 - #20 fun
INFO  23:34:27,059 - #43 (
INFO  23:34:27,059 - #21 1
INFO  23:34:27,059 - #41 ,
INFO  23:34:27,060 - #21 2
INFO  23:34:27,060 - #44 )
INFO  23:34:27,062 - #40 ;
INFO  23:34:27,062 - #20 num
INFO  23:34:27,062 - #37 =
INFO  23:34:27,062 - #25 -
INFO  23:34:27,062 - #22 a
INFO  23:34:27,062 - #40 ;
INFO  23:34:27,062 - #48 }
INFO  23:34:27,063 - #48 }
INFO  23:34:27,064 - 

================SINTAKSNO STABLO====================


INFO  23:34:27,065 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementSingle(
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     a
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             1
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementSingle]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   num
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorCharConst(
                                           a
                                          ) [FactorCharConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorBoolConst(
                                         true
                                        ) [FactorBoolConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               character
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             character
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorBoolConst(
                                     true
                                    ) [FactorBoolConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           boolean
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   1
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         boolean
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorCharConst(
                                 a
                                ) [FactorCharConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       cnst
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     character
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorDecrement(
                  DesignatorSimple(
                   boolean
                  ) [DesignatorSimple]
                ) [DesignatorDecrement]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 fun
                ) [DesignatorSimple]
                ActParsMulti(
                  ActParsSingle(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [ActParsSingle]
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsMulti]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               num
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprNegSingle(
                    TermSingle(
                      FactorCharConst(
                       a
                      ) [FactorCharConst]
                    ) [TermSingle]
                  ) [ExprNegSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  23:34:27,066 - 

================SEMANTICKA OBRADA====================


ERROR 23:34:27,076 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  23:34:27,077 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  23:34:27,077 - Deklarisana konstanta 'cnst' na liniji 3
INFO  23:34:27,077 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 23:34:27,077 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  23:34:27,077 - Deklarisana promenljiva 'b' na liniji 10
ERROR 23:34:27,077 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  23:34:27,077 - Deklarisana promenljiva 'num' na liniji 11
INFO  23:34:27,078 - Deklarisana promenljiva 'character' na liniji 11
INFO  23:34:27,078 - Deklarisana promenljiva 'boolean' na liniji 11
INFO  23:34:27,078 - Deklarisan niz 'niz' na liniji 12
ERROR 23:34:27,078 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 14
ERROR 23:34:27,078 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 23:34:27,078 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 23:34:27,078 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 23:34:27,078 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 23:34:27,078 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 23:34:27,078 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 23:34:27,078 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 25
ERROR 23:34:27,078 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 28
ERROR 23:34:27,078 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 29
INFO  23:34:27,079 - Pronadjen poziv funkcije 'fun' na liniji 31
ERROR 23:34:27,079 - Semanticka greska - tip mora da bude int na liniji 33
ERROR 23:34:27,079 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 33
INFO  23:34:27,080 - ===================================
INFO  23:34:36,111 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:34:36,156 - #2 program
INFO  23:34:36,156 - #20 MJProgram
INFO  23:34:36,156 - #20 abc
INFO  23:34:36,156 - #20 a
INFO  23:34:36,157 - #40 ;
INFO  23:34:36,157 - #7 const
INFO  23:34:36,157 - #20 int
INFO  23:34:36,157 - #20 cnst
INFO  23:34:36,157 - #37 =
INFO  23:34:36,157 - #21 1
INFO  23:34:36,158 - #40 ;
INFO  23:34:36,158 - #47 {
INFO  23:34:36,159 - #20 int
INFO  23:34:36,159 - #20 fun
INFO  23:34:36,159 - #43 (
INFO  23:34:36,159 - #20 int
INFO  23:34:36,159 - #20 x
INFO  23:34:36,159 - #44 )
INFO  23:34:36,159 - #47 {
INFO  23:34:36,159 - #48 }
INFO  23:34:36,159 - #16 void
INFO  23:34:36,160 - #20 main
INFO  23:34:36,160 - #43 (
INFO  23:34:36,160 - #44 )
INFO  23:34:36,160 - #20 int
INFO  23:34:36,160 - #20 b
INFO  23:34:36,160 - #40 ;
INFO  23:34:36,160 - #20 char
INFO  23:34:36,161 - #20 b
INFO  23:34:36,161 - #40 ;
INFO  23:34:36,161 - #20 int
INFO  23:34:36,161 - #20 num
INFO  23:34:36,161 - #40 ;
INFO  23:34:36,161 - #20 char
INFO  23:34:36,161 - #20 character
INFO  23:34:36,161 - #40 ;
INFO  23:34:36,162 - #20 bool
INFO  23:34:36,162 - #20 boolean
INFO  23:34:36,162 - #40 ;
INFO  23:34:36,162 - #20 int
INFO  23:34:36,162 - #20 niz
INFO  23:34:36,162 - #45 [
INFO  23:34:36,162 - #46 ]
INFO  23:34:36,162 - #40 ;
INFO  23:34:36,162 - #47 {
INFO  23:34:36,162 - #20 a
INFO  23:34:36,162 - #37 =
INFO  23:34:36,163 - #21 1
INFO  23:34:36,163 - #40 ;
INFO  23:34:36,163 - #20 num
INFO  23:34:36,164 - #37 =
INFO  23:34:36,164 - #22 a
INFO  23:34:36,164 - #40 ;
INFO  23:34:36,164 - #20 num
INFO  23:34:36,164 - #37 =
INFO  23:34:36,164 - #23 true
INFO  23:34:36,164 - #40 ;
INFO  23:34:36,164 - #20 character
INFO  23:34:36,164 - #37 =
INFO  23:34:36,164 - #21 1
INFO  23:34:36,164 - #40 ;
INFO  23:34:36,165 - #20 character
INFO  23:34:36,165 - #37 =
INFO  23:34:36,165 - #23 true
INFO  23:34:36,165 - #40 ;
INFO  23:34:36,165 - #20 boolean
INFO  23:34:36,165 - #37 =
INFO  23:34:36,165 - #21 1
INFO  23:34:36,165 - #40 ;
INFO  23:34:36,165 - #20 boolean
INFO  23:34:36,165 - #37 =
INFO  23:34:36,165 - #22 a
INFO  23:34:36,165 - #40 ;
INFO  23:34:36,165 - #20 cnst
INFO  23:34:36,166 - #37 =
INFO  23:34:36,166 - #21 2
INFO  23:34:36,166 - #40 ;
INFO  23:34:36,166 - #20 character
INFO  23:34:36,166 - #38 ++
INFO  23:34:36,166 - #40 ;
INFO  23:34:36,166 - #20 boolean
INFO  23:34:36,166 - #39 --
INFO  23:34:36,166 - #40 ;
INFO  23:34:36,166 - #20 fun
INFO  23:34:36,166 - #43 (
INFO  23:34:36,167 - #21 1
INFO  23:34:36,167 - #41 ,
INFO  23:34:36,167 - #21 2
INFO  23:34:36,167 - #44 )
INFO  23:34:36,167 - #40 ;
INFO  23:34:36,167 - #20 character
INFO  23:34:36,167 - #37 =
INFO  23:34:36,168 - #25 -
INFO  23:34:36,168 - #22 a
INFO  23:34:36,168 - #40 ;
INFO  23:34:36,168 - #48 }
INFO  23:34:36,168 - #48 }
INFO  23:34:36,169 - 

================SINTAKSNO STABLO====================


INFO  23:34:36,170 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementSingle(
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     a
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             1
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementSingle]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   num
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorCharConst(
                                           a
                                          ) [FactorCharConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 num
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorBoolConst(
                                         true
                                        ) [FactorBoolConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               character
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             character
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorBoolConst(
                                     true
                                    ) [FactorBoolConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           boolean
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   1
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         boolean
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorCharConst(
                                 a
                                ) [FactorCharConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       cnst
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     character
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorDecrement(
                  DesignatorSimple(
                   boolean
                  ) [DesignatorSimple]
                ) [DesignatorDecrement]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorMethodCall0(
                DesignatorSimple(
                 fun
                ) [DesignatorSimple]
                ActParsMulti(
                  ActParsSingle(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [ActParsSingle]
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsMulti]
              ) [DesignatorMethodCall0]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               character
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprNegSingle(
                    TermSingle(
                      FactorCharConst(
                       a
                      ) [FactorCharConst]
                    ) [TermSingle]
                  ) [ExprNegSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  23:34:36,171 - 

================SEMANTICKA OBRADA====================


ERROR 23:34:36,183 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  23:34:36,183 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  23:34:36,183 - Deklarisana konstanta 'cnst' na liniji 3
INFO  23:34:36,183 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 23:34:36,184 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  23:34:36,184 - Deklarisana promenljiva 'b' na liniji 10
ERROR 23:34:36,184 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  23:34:36,184 - Deklarisana promenljiva 'num' na liniji 11
INFO  23:34:36,184 - Deklarisana promenljiva 'character' na liniji 11
INFO  23:34:36,184 - Deklarisana promenljiva 'boolean' na liniji 11
INFO  23:34:36,184 - Deklarisan niz 'niz' na liniji 12
ERROR 23:34:36,184 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 14
ERROR 23:34:36,184 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 23:34:36,184 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 23:34:36,184 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 23:34:36,184 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 23:34:36,184 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 23:34:36,184 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 23:34:36,184 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 25
ERROR 23:34:36,185 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 28
ERROR 23:34:36,185 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 29
INFO  23:34:36,185 - Pronadjen poziv funkcije 'fun' na liniji 31
ERROR 23:34:36,185 - Semanticka greska - tip mora da bude int na liniji 33
INFO  23:34:36,186 - ===================================
INFO  23:37:58,163 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:37:58,213 - #2 program
INFO  23:37:58,213 - #20 MJProgram
INFO  23:37:58,213 - #20 abc
INFO  23:37:58,214 - #20 a
INFO  23:37:58,214 - #40 ;
INFO  23:37:58,214 - #7 const
INFO  23:37:58,215 - #20 int
INFO  23:37:58,215 - #20 cnst
INFO  23:37:58,215 - #37 =
INFO  23:37:58,215 - #21 1
INFO  23:37:58,215 - #40 ;
INFO  23:37:58,216 - #47 {
INFO  23:37:58,216 - #20 int
INFO  23:37:58,216 - #20 fun
INFO  23:37:58,216 - #43 (
INFO  23:37:58,216 - #20 int
INFO  23:37:58,216 - #20 x
INFO  23:37:58,217 - #44 )
INFO  23:37:58,217 - #47 {
INFO  23:37:58,217 - #48 }
INFO  23:37:58,217 - #16 void
INFO  23:37:58,217 - #20 main
INFO  23:37:58,217 - #43 (
INFO  23:37:58,217 - #44 )
INFO  23:37:58,218 - #20 int
INFO  23:37:58,218 - #20 b
INFO  23:37:58,218 - #40 ;
INFO  23:37:58,218 - #20 char
INFO  23:37:58,218 - #20 b
INFO  23:37:58,218 - #40 ;
INFO  23:37:58,219 - #20 int
INFO  23:37:58,219 - #20 num
INFO  23:37:58,219 - #40 ;
INFO  23:37:58,219 - #20 char
INFO  23:37:58,219 - #20 character
INFO  23:37:58,219 - #40 ;
INFO  23:37:58,219 - #20 bool
INFO  23:37:58,219 - #20 boolean
INFO  23:37:58,219 - #40 ;
INFO  23:37:58,219 - #20 int
INFO  23:37:58,219 - #20 niz
INFO  23:37:58,219 - #45 [
INFO  23:37:58,220 - #46 ]
INFO  23:37:58,220 - #40 ;
INFO  23:37:58,220 - #47 {
INFO  23:37:58,220 - #20 a
INFO  23:37:58,220 - #37 =
INFO  23:37:58,220 - #21 1
INFO  23:37:58,220 - #40 ;
INFO  23:37:58,221 - #20 num
INFO  23:37:58,221 - #37 =
INFO  23:37:58,221 - #22 a
INFO  23:37:58,221 - #40 ;
INFO  23:37:58,221 - #20 num
INFO  23:37:58,221 - #37 =
INFO  23:37:58,221 - #23 true
INFO  23:37:58,221 - #40 ;
INFO  23:37:58,221 - #20 character
INFO  23:37:58,221 - #37 =
INFO  23:37:58,221 - #21 1
INFO  23:37:58,221 - #40 ;
INFO  23:37:58,222 - #20 character
INFO  23:37:58,222 - #37 =
INFO  23:37:58,222 - #23 true
INFO  23:37:58,222 - #40 ;
INFO  23:37:58,222 - #20 boolean
INFO  23:37:58,222 - #37 =
INFO  23:37:58,222 - #21 1
INFO  23:37:58,223 - #40 ;
INFO  23:37:58,223 - #20 boolean
INFO  23:37:58,223 - #37 =
INFO  23:37:58,223 - #22 a
INFO  23:37:58,223 - #40 ;
INFO  23:37:58,223 - #20 cnst
INFO  23:37:58,223 - #37 =
INFO  23:37:58,223 - #21 2
INFO  23:37:58,223 - #40 ;
INFO  23:37:58,223 - #20 character
INFO  23:37:58,224 - #38 ++
INFO  23:37:58,224 - #40 ;
INFO  23:37:58,224 - #20 boolean
INFO  23:37:58,224 - #39 --
INFO  23:37:58,224 - #40 ;
INFO  23:37:58,224 - #20 fun
INFO  23:37:58,225 - #43 (
INFO  23:37:58,225 - #21 1
INFO  23:37:58,225 - #41 ,
INFO  23:37:58,225 - #21 2
INFO  23:37:58,225 - #44 )
INFO  23:37:58,226 - #40 ;
INFO  23:37:58,226 - #20 character
INFO  23:37:58,226 - #37 =
INFO  23:37:58,227 - #25 -
INFO  23:37:58,227 - #22 a
INFO  23:37:58,227 - #40 ;
INFO  23:37:58,227 - #20 a
INFO  23:37:58,227 - #45 [
INFO  23:37:58,227 - #22 a
INFO  23:37:58,227 - #46 ]
INFO  23:37:58,227 - #37 =
INFO  23:37:58,227 - #21 1
INFO  23:37:58,227 - #40 ;
INFO  23:37:58,228 - #20 a
INFO  23:37:58,228 - #45 [
INFO  23:37:58,228 - #21 1
INFO  23:37:58,228 - #46 ]
INFO  23:37:58,228 - #37 =
INFO  23:37:58,228 - #21 1
INFO  23:37:58,228 - #40 ;
INFO  23:37:58,228 - #48 }
INFO  23:37:58,228 - #48 }
INFO  23:37:58,230 - 

================SINTAKSNO STABLO====================


INFO  23:37:58,230 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementSingle(
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         a
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementSingle]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       num
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorCharConst(
                                               a
                                              ) [FactorCharConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorBoolConst(
                                             true
                                            ) [FactorBoolConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   character
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           1
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 character
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorBoolConst(
                                         true
                                        ) [FactorBoolConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               boolean
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             boolean
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorCharConst(
                                     a
                                    ) [FactorCharConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           cnst
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   2
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorIncrement(
                        DesignatorSimple(
                         character
                        ) [DesignatorSimple]
                      ) [DesignatorIncrement]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorDecrement(
                      DesignatorSimple(
                       boolean
                      ) [DesignatorSimple]
                    ) [DesignatorDecrement]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorMethodCall0(
                    DesignatorSimple(
                     fun
                    ) [DesignatorSimple]
                    ActParsMulti(
                      ActParsSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [ActParsSingle]
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             2
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [ActParsMulti]
                  ) [DesignatorMethodCall0]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   character
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprNegSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprNegSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorArray(
                 a
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [DesignatorArray]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         1
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorArray(
               a
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       1
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [DesignatorArray]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       1
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  23:37:58,231 - 

================SEMANTICKA OBRADA====================


ERROR 23:37:58,241 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  23:37:58,242 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  23:37:58,242 - Deklarisana konstanta 'cnst' na liniji 3
INFO  23:37:58,242 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 23:37:58,242 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  23:37:58,242 - Deklarisana promenljiva 'b' na liniji 10
ERROR 23:37:58,242 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  23:37:58,242 - Deklarisana promenljiva 'num' na liniji 11
INFO  23:37:58,242 - Deklarisana promenljiva 'character' na liniji 11
INFO  23:37:58,242 - Deklarisana promenljiva 'boolean' na liniji 11
INFO  23:37:58,242 - Deklarisan niz 'niz' na liniji 12
ERROR 23:37:58,242 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 14
ERROR 23:37:58,243 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 23:37:58,243 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 23:37:58,243 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 23:37:58,243 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 23:37:58,243 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 23:37:58,243 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 23:37:58,243 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 25
ERROR 23:37:58,243 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 28
ERROR 23:37:58,243 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 29
INFO  23:37:58,243 - Pronadjen poziv funkcije 'fun' na liniji 31
ERROR 23:37:58,243 - Semanticka greska - tip mora da bude int na liniji 34
ERROR 23:37:58,243 - Semanticka greska - nevalidan pristup elementu niza na liniji 36
INFO  23:37:58,243 - Pristup elementu niza 'a' na liniji 36
ERROR 23:37:58,243 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 36
ERROR 23:37:58,243 - Semanticka greska - 'a' nije niz na liniji 37
INFO  23:37:58,244 - Pristup elementu niza 'a' na liniji 37
ERROR 23:37:58,244 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 37
INFO  23:37:58,244 - ===================================
INFO  23:38:16,327 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:38:16,373 - #2 program
INFO  23:38:16,373 - #20 MJProgram
INFO  23:38:16,373 - #20 abc
INFO  23:38:16,374 - #20 a
INFO  23:38:16,374 - #40 ;
INFO  23:38:16,375 - #7 const
INFO  23:38:16,375 - #20 int
INFO  23:38:16,375 - #20 cnst
INFO  23:38:16,375 - #37 =
INFO  23:38:16,375 - #21 1
INFO  23:38:16,375 - #40 ;
INFO  23:38:16,376 - #47 {
INFO  23:38:16,376 - #20 int
INFO  23:38:16,376 - #20 fun
INFO  23:38:16,376 - #43 (
INFO  23:38:16,376 - #20 int
INFO  23:38:16,376 - #20 x
INFO  23:38:16,376 - #44 )
INFO  23:38:16,377 - #47 {
INFO  23:38:16,377 - #48 }
INFO  23:38:16,377 - #16 void
INFO  23:38:16,377 - #20 main
INFO  23:38:16,377 - #43 (
INFO  23:38:16,377 - #44 )
INFO  23:38:16,377 - #20 int
INFO  23:38:16,378 - #20 b
INFO  23:38:16,378 - #40 ;
INFO  23:38:16,378 - #20 char
INFO  23:38:16,378 - #20 b
INFO  23:38:16,378 - #40 ;
INFO  23:38:16,378 - #20 int
INFO  23:38:16,379 - #20 num
INFO  23:38:16,379 - #40 ;
INFO  23:38:16,379 - #20 char
INFO  23:38:16,379 - #20 character
INFO  23:38:16,379 - #40 ;
INFO  23:38:16,379 - #20 bool
INFO  23:38:16,379 - #20 boolean
INFO  23:38:16,379 - #40 ;
INFO  23:38:16,379 - #20 int
INFO  23:38:16,379 - #20 niz
INFO  23:38:16,379 - #45 [
INFO  23:38:16,379 - #46 ]
INFO  23:38:16,379 - #40 ;
INFO  23:38:16,380 - #47 {
INFO  23:38:16,380 - #20 a
INFO  23:38:16,380 - #37 =
INFO  23:38:16,380 - #21 1
INFO  23:38:16,380 - #40 ;
INFO  23:38:16,381 - #20 num
INFO  23:38:16,381 - #37 =
INFO  23:38:16,381 - #22 a
INFO  23:38:16,381 - #40 ;
INFO  23:38:16,381 - #20 num
INFO  23:38:16,381 - #37 =
INFO  23:38:16,381 - #23 true
INFO  23:38:16,381 - #40 ;
INFO  23:38:16,381 - #20 character
INFO  23:38:16,382 - #37 =
INFO  23:38:16,382 - #21 1
INFO  23:38:16,382 - #40 ;
INFO  23:38:16,382 - #20 character
INFO  23:38:16,382 - #37 =
INFO  23:38:16,382 - #23 true
INFO  23:38:16,382 - #40 ;
INFO  23:38:16,382 - #20 boolean
INFO  23:38:16,382 - #37 =
INFO  23:38:16,382 - #21 1
INFO  23:38:16,382 - #40 ;
INFO  23:38:16,382 - #20 boolean
INFO  23:38:16,382 - #37 =
INFO  23:38:16,383 - #22 a
INFO  23:38:16,383 - #40 ;
INFO  23:38:16,383 - #20 cnst
INFO  23:38:16,383 - #37 =
INFO  23:38:16,383 - #21 2
INFO  23:38:16,383 - #40 ;
INFO  23:38:16,383 - #20 character
INFO  23:38:16,383 - #38 ++
INFO  23:38:16,383 - #40 ;
INFO  23:38:16,383 - #20 boolean
INFO  23:38:16,383 - #39 --
INFO  23:38:16,384 - #40 ;
INFO  23:38:16,384 - #20 fun
INFO  23:38:16,384 - #43 (
INFO  23:38:16,384 - #21 1
INFO  23:38:16,384 - #41 ,
INFO  23:38:16,384 - #21 2
INFO  23:38:16,385 - #44 )
INFO  23:38:16,386 - #40 ;
INFO  23:38:16,386 - #20 character
INFO  23:38:16,386 - #37 =
INFO  23:38:16,386 - #25 -
INFO  23:38:16,386 - #22 a
INFO  23:38:16,387 - #40 ;
INFO  23:38:16,387 - #20 niz
INFO  23:38:16,387 - #45 [
INFO  23:38:16,387 - #22 a
INFO  23:38:16,387 - #46 ]
INFO  23:38:16,387 - #37 =
INFO  23:38:16,388 - #21 1
INFO  23:38:16,388 - #40 ;
INFO  23:38:16,388 - #20 niz
INFO  23:38:16,388 - #45 [
INFO  23:38:16,388 - #21 1
INFO  23:38:16,388 - #46 ]
INFO  23:38:16,388 - #37 =
INFO  23:38:16,388 - #21 1
INFO  23:38:16,388 - #40 ;
INFO  23:38:16,388 - #48 }
INFO  23:38:16,388 - #48 }
INFO  23:38:16,390 - 

================SINTAKSNO STABLO====================


INFO  23:38:16,392 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementSingle(
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         a
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementSingle]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       num
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorCharConst(
                                               a
                                              ) [FactorCharConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorBoolConst(
                                             true
                                            ) [FactorBoolConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   character
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           1
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 character
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorBoolConst(
                                         true
                                        ) [FactorBoolConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               boolean
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             boolean
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorCharConst(
                                     a
                                    ) [FactorCharConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           cnst
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   2
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorIncrement(
                        DesignatorSimple(
                         character
                        ) [DesignatorSimple]
                      ) [DesignatorIncrement]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorDecrement(
                      DesignatorSimple(
                       boolean
                      ) [DesignatorSimple]
                    ) [DesignatorDecrement]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorMethodCall0(
                    DesignatorSimple(
                     fun
                    ) [DesignatorSimple]
                    ActParsMulti(
                      ActParsSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [ActParsSingle]
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             2
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [ActParsMulti]
                  ) [DesignatorMethodCall0]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   character
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprNegSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprNegSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorArray(
                 niz
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorCharConst(
                         a
                        ) [FactorCharConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [DesignatorArray]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         1
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorArray(
               niz
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       1
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [DesignatorArray]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       1
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  23:38:16,393 - 

================SEMANTICKA OBRADA====================


ERROR 23:38:16,403 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  23:38:16,404 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  23:38:16,404 - Deklarisana konstanta 'cnst' na liniji 3
INFO  23:38:16,404 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 23:38:16,404 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  23:38:16,404 - Deklarisana promenljiva 'b' na liniji 10
ERROR 23:38:16,404 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  23:38:16,404 - Deklarisana promenljiva 'num' na liniji 11
INFO  23:38:16,404 - Deklarisana promenljiva 'character' na liniji 11
INFO  23:38:16,404 - Deklarisana promenljiva 'boolean' na liniji 11
INFO  23:38:16,405 - Deklarisan niz 'niz' na liniji 12
ERROR 23:38:16,405 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 14
ERROR 23:38:16,405 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 23:38:16,405 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 23:38:16,405 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 23:38:16,405 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 23:38:16,405 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 23:38:16,405 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 23:38:16,405 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 25
ERROR 23:38:16,405 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 28
ERROR 23:38:16,405 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 29
INFO  23:38:16,405 - Pronadjen poziv funkcije 'fun' na liniji 31
ERROR 23:38:16,406 - Semanticka greska - tip mora da bude int na liniji 34
ERROR 23:38:16,406 - Semanticka greska - nevalidan pristup elementu niza na liniji 36
INFO  23:38:16,406 - Pristup elementu niza 'niz' na liniji 36
INFO  23:38:16,406 - Pristup elementu niza 'niz' na liniji 37
INFO  23:38:16,406 - ===================================
INFO  23:39:42,711 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:39:42,761 - #2 program
INFO  23:39:42,762 - #20 MJProgram
INFO  23:39:42,762 - #20 abc
INFO  23:39:42,762 - #20 a
INFO  23:39:42,763 - #40 ;
INFO  23:39:42,763 - #7 const
INFO  23:39:42,763 - #20 int
INFO  23:39:42,763 - #20 cnst
INFO  23:39:42,763 - #37 =
INFO  23:39:42,763 - #21 1
INFO  23:39:42,763 - #40 ;
INFO  23:39:42,764 - #47 {
INFO  23:39:42,764 - #20 int
INFO  23:39:42,764 - #20 fun
INFO  23:39:42,764 - #43 (
INFO  23:39:42,764 - #20 int
INFO  23:39:42,764 - #20 x
INFO  23:39:42,764 - #44 )
INFO  23:39:42,765 - #47 {
INFO  23:39:42,765 - #48 }
INFO  23:39:42,765 - #16 void
INFO  23:39:42,765 - #20 main
INFO  23:39:42,765 - #43 (
INFO  23:39:42,765 - #44 )
INFO  23:39:42,765 - #20 int
INFO  23:39:42,765 - #20 b
INFO  23:39:42,765 - #40 ;
INFO  23:39:42,765 - #20 char
INFO  23:39:42,765 - #20 b
INFO  23:39:42,765 - #40 ;
INFO  23:39:42,765 - #20 int
INFO  23:39:42,766 - #20 num
INFO  23:39:42,766 - #40 ;
INFO  23:39:42,766 - #20 char
INFO  23:39:42,766 - #20 character
INFO  23:39:42,766 - #40 ;
INFO  23:39:42,766 - #20 bool
INFO  23:39:42,766 - #20 boolean
INFO  23:39:42,766 - #40 ;
INFO  23:39:42,766 - #20 int
INFO  23:39:42,767 - #20 niz
INFO  23:39:42,767 - #45 [
INFO  23:39:42,767 - #46 ]
INFO  23:39:42,767 - #40 ;
INFO  23:39:42,767 - #47 {
INFO  23:39:42,767 - #20 a
INFO  23:39:42,767 - #37 =
INFO  23:39:42,767 - #21 1
INFO  23:39:42,767 - #40 ;
INFO  23:39:42,768 - #20 num
INFO  23:39:42,769 - #37 =
INFO  23:39:42,769 - #22 a
INFO  23:39:42,769 - #40 ;
INFO  23:39:42,769 - #20 num
INFO  23:39:42,769 - #37 =
INFO  23:39:42,769 - #23 true
INFO  23:39:42,769 - #40 ;
INFO  23:39:42,769 - #20 character
INFO  23:39:42,769 - #37 =
INFO  23:39:42,769 - #21 1
INFO  23:39:42,769 - #40 ;
INFO  23:39:42,769 - #20 character
INFO  23:39:42,770 - #37 =
INFO  23:39:42,770 - #23 true
INFO  23:39:42,770 - #40 ;
INFO  23:39:42,770 - #20 boolean
INFO  23:39:42,770 - #37 =
INFO  23:39:42,770 - #21 1
INFO  23:39:42,770 - #40 ;
INFO  23:39:42,771 - #20 boolean
INFO  23:39:42,771 - #37 =
INFO  23:39:42,771 - #22 a
INFO  23:39:42,771 - #40 ;
INFO  23:39:42,771 - #20 cnst
INFO  23:39:42,771 - #37 =
INFO  23:39:42,771 - #21 2
INFO  23:39:42,771 - #40 ;
INFO  23:39:42,771 - #20 character
INFO  23:39:42,771 - #38 ++
INFO  23:39:42,772 - #40 ;
INFO  23:39:42,772 - #20 boolean
INFO  23:39:42,772 - #39 --
INFO  23:39:42,772 - #40 ;
INFO  23:39:42,772 - #20 fun
INFO  23:39:42,773 - #43 (
INFO  23:39:42,773 - #21 1
INFO  23:39:42,773 - #41 ,
INFO  23:39:42,774 - #21 2
INFO  23:39:42,774 - #44 )
INFO  23:39:42,774 - #40 ;
INFO  23:39:42,775 - #20 character
INFO  23:39:42,775 - #37 =
INFO  23:39:42,775 - #25 -
INFO  23:39:42,776 - #22 a
INFO  23:39:42,776 - #40 ;
INFO  23:39:42,776 - #20 niz
INFO  23:39:42,776 - #37 =
INFO  23:39:42,776 - #12 new
INFO  23:39:42,776 - #20 int
INFO  23:39:42,776 - #45 [
INFO  23:39:42,776 - #21 3
INFO  23:39:42,776 - #46 ]
INFO  23:39:42,776 - #40 ;
INFO  23:39:42,776 - #20 niz
INFO  23:39:42,777 - #37 =
INFO  23:39:42,777 - #12 new
INFO  23:39:42,777 - #20 int
INFO  23:39:42,777 - #45 [
INFO  23:39:42,777 - #22 a
INFO  23:39:42,777 - #46 ]
INFO  23:39:42,777 - #40 ;
INFO  23:39:42,777 - #48 }
INFO  23:39:42,777 - #48 }
INFO  23:39:42,778 - 

================SINTAKSNO STABLO====================


INFO  23:39:42,780 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementSingle(
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         a
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementSingle]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       num
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorCharConst(
                                               a
                                              ) [FactorCharConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorBoolConst(
                                             true
                                            ) [FactorBoolConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   character
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           1
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 character
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorBoolConst(
                                         true
                                        ) [FactorBoolConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               boolean
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             boolean
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorCharConst(
                                     a
                                    ) [FactorCharConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           cnst
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   2
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorIncrement(
                        DesignatorSimple(
                         character
                        ) [DesignatorSimple]
                      ) [DesignatorIncrement]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorDecrement(
                      DesignatorSimple(
                       boolean
                      ) [DesignatorSimple]
                    ) [DesignatorDecrement]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorMethodCall0(
                    DesignatorSimple(
                     fun
                    ) [DesignatorSimple]
                    ActParsMulti(
                      ActParsSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [ActParsSingle]
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             2
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [ActParsMulti]
                  ) [DesignatorMethodCall0]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   character
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprNegSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprNegSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 niz
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNewArray(
                          Type(
                           int
                          ) [Type]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 3
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [FactorNewArray]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               niz
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNewArray(
                        Type(
                         int
                        ) [Type]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorCharConst(
                               a
                              ) [FactorCharConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [FactorNewArray]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  23:39:42,781 - 

================SEMANTICKA OBRADA====================


ERROR 23:39:42,792 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  23:39:42,792 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  23:39:42,792 - Deklarisana konstanta 'cnst' na liniji 3
INFO  23:39:42,792 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 23:39:42,793 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  23:39:42,793 - Deklarisana promenljiva 'b' na liniji 10
ERROR 23:39:42,793 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  23:39:42,793 - Deklarisana promenljiva 'num' na liniji 11
INFO  23:39:42,793 - Deklarisana promenljiva 'character' na liniji 11
INFO  23:39:42,793 - Deklarisana promenljiva 'boolean' na liniji 11
INFO  23:39:42,793 - Deklarisan niz 'niz' na liniji 12
ERROR 23:39:42,793 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 14
ERROR 23:39:42,793 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 23:39:42,793 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 23:39:42,793 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 23:39:42,794 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 23:39:42,794 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 23:39:42,794 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 23:39:42,794 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 25
ERROR 23:39:42,794 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 28
ERROR 23:39:42,794 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 29
INFO  23:39:42,794 - Pronadjen poziv funkcije 'fun' na liniji 31
ERROR 23:39:42,794 - Semanticka greska - tip mora da bude int na liniji 34
ERROR 23:39:42,794 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 37
INFO  23:40:40,414 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  23:40:40,461 - #2 program
INFO  23:40:40,461 - #20 MJProgram
INFO  23:40:40,461 - #20 abc
INFO  23:40:40,462 - #20 a
INFO  23:40:40,463 - #40 ;
INFO  23:40:40,463 - #7 const
INFO  23:40:40,463 - #20 int
INFO  23:40:40,463 - #20 cnst
INFO  23:40:40,463 - #37 =
INFO  23:40:40,463 - #21 1
INFO  23:40:40,463 - #40 ;
INFO  23:40:40,464 - #47 {
INFO  23:40:40,464 - #20 int
INFO  23:40:40,464 - #20 fun
INFO  23:40:40,464 - #43 (
INFO  23:40:40,464 - #20 int
INFO  23:40:40,464 - #20 x
INFO  23:40:40,465 - #44 )
INFO  23:40:40,465 - #47 {
INFO  23:40:40,465 - #48 }
INFO  23:40:40,465 - #16 void
INFO  23:40:40,465 - #20 main
INFO  23:40:40,465 - #43 (
INFO  23:40:40,465 - #44 )
INFO  23:40:40,465 - #20 int
INFO  23:40:40,466 - #20 b
INFO  23:40:40,466 - #40 ;
INFO  23:40:40,466 - #20 char
INFO  23:40:40,466 - #20 b
INFO  23:40:40,466 - #40 ;
INFO  23:40:40,466 - #20 int
INFO  23:40:40,466 - #20 num
INFO  23:40:40,466 - #40 ;
INFO  23:40:40,467 - #20 char
INFO  23:40:40,467 - #20 character
INFO  23:40:40,467 - #40 ;
INFO  23:40:40,467 - #20 bool
INFO  23:40:40,467 - #20 boolean
INFO  23:40:40,467 - #40 ;
INFO  23:40:40,467 - #20 int
INFO  23:40:40,467 - #20 niz
INFO  23:40:40,468 - #45 [
INFO  23:40:40,468 - #46 ]
INFO  23:40:40,468 - #40 ;
INFO  23:40:40,468 - #47 {
INFO  23:40:40,468 - #20 a
INFO  23:40:40,468 - #37 =
INFO  23:40:40,469 - #21 1
INFO  23:40:40,469 - #40 ;
INFO  23:40:40,470 - #20 num
INFO  23:40:40,470 - #37 =
INFO  23:40:40,470 - #22 a
INFO  23:40:40,471 - #40 ;
INFO  23:40:40,471 - #20 num
INFO  23:40:40,471 - #37 =
INFO  23:40:40,471 - #23 true
INFO  23:40:40,471 - #40 ;
INFO  23:40:40,471 - #20 character
INFO  23:40:40,471 - #37 =
INFO  23:40:40,472 - #21 1
INFO  23:40:40,472 - #40 ;
INFO  23:40:40,472 - #20 character
INFO  23:40:40,472 - #37 =
INFO  23:40:40,472 - #23 true
INFO  23:40:40,472 - #40 ;
INFO  23:40:40,472 - #20 boolean
INFO  23:40:40,473 - #37 =
INFO  23:40:40,473 - #21 1
INFO  23:40:40,473 - #40 ;
INFO  23:40:40,473 - #20 boolean
INFO  23:40:40,473 - #37 =
INFO  23:40:40,473 - #22 a
INFO  23:40:40,473 - #40 ;
INFO  23:40:40,473 - #20 cnst
INFO  23:40:40,473 - #37 =
INFO  23:40:40,473 - #21 2
INFO  23:40:40,473 - #40 ;
INFO  23:40:40,474 - #20 character
INFO  23:40:40,474 - #38 ++
INFO  23:40:40,474 - #40 ;
INFO  23:40:40,474 - #20 boolean
INFO  23:40:40,474 - #39 --
INFO  23:40:40,474 - #40 ;
INFO  23:40:40,474 - #20 fun
INFO  23:40:40,474 - #43 (
INFO  23:40:40,474 - #21 1
INFO  23:40:40,474 - #41 ,
INFO  23:40:40,475 - #21 2
INFO  23:40:40,475 - #44 )
INFO  23:40:40,475 - #40 ;
INFO  23:40:40,475 - #20 character
INFO  23:40:40,475 - #37 =
INFO  23:40:40,475 - #25 -
INFO  23:40:40,476 - #22 a
INFO  23:40:40,476 - #40 ;
INFO  23:40:40,476 - #20 niz
INFO  23:40:40,476 - #37 =
INFO  23:40:40,476 - #12 new
INFO  23:40:40,476 - #20 int
INFO  23:40:40,476 - #45 [
INFO  23:40:40,476 - #21 3
INFO  23:40:40,476 - #46 ]
INFO  23:40:40,476 - #40 ;
INFO  23:40:40,477 - #20 niz
INFO  23:40:40,477 - #37 =
INFO  23:40:40,477 - #12 new
INFO  23:40:40,477 - #20 int
INFO  23:40:40,477 - #45 [
INFO  23:40:40,477 - #22 a
INFO  23:40:40,477 - #46 ]
INFO  23:40:40,477 - #40 ;
INFO  23:40:40,477 - #48 }
INFO  23:40:40,477 - #48 }
INFO  23:40:40,479 - 

================SINTAKSNO STABLO====================


INFO  23:40:40,481 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           abc
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             a
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartConstDeclaration(
      ConstDeclaration(
        Type(
         int
        ) [Type]
        ConstSingle(
          ConstPart(
           cnst
            NumConst(
             1
            ) [NumConst]
          ) [ConstPart]
        ) [ConstSingle]
      ) [ConstDeclaration]
    ) [PartConstDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType3(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
        ) [MethodType3]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclMulti(
            VarDeclMulti(
              VarDeclMulti(
                VarDeclMulti(
                  VarDeclSingle(
                    VarDeclaration(
                      Type(
                       int
                      ) [Type]
                      VarSingle(
                        VarNormal(
                         b
                        ) [VarNormal]
                      ) [VarSingle]
                    ) [VarDeclaration]
                  ) [VarDeclSingle]
                  VarDeclaration(
                    Type(
                     char
                    ) [Type]
                    VarSingle(
                      VarNormal(
                       b
                      ) [VarNormal]
                    ) [VarSingle]
                  ) [VarDeclaration]
                ) [VarDeclMulti]
                VarDeclaration(
                  Type(
                   int
                  ) [Type]
                  VarSingle(
                    VarNormal(
                     num
                    ) [VarNormal]
                  ) [VarSingle]
                ) [VarDeclaration]
              ) [VarDeclMulti]
              VarDeclaration(
                Type(
                 char
                ) [Type]
                VarSingle(
                  VarNormal(
                   character
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclMulti]
            VarDeclaration(
              Type(
               bool
              ) [Type]
              VarSingle(
                VarNormal(
                 boolean
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarArray(
               niz
              ) [VarArray]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementSingle(
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         a
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementSingle]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       num
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorCharConst(
                                               a
                                              ) [FactorCharConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorSimple(
                                     num
                                    ) [DesignatorSimple]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorBoolConst(
                                             true
                                            ) [FactorBoolConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   character
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           1
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorSimple(
                                 character
                                ) [DesignatorSimple]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorBoolConst(
                                         true
                                        ) [FactorBoolConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtDesign(
                            DesignatorAssignment(
                              DesignatorSimple(
                               boolean
                              ) [DesignatorSimple]
                              AssignmentExpr(
                                ExprOne(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       1
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [AssignmentExpr]
                            ) [DesignatorAssignment]
                          ) [StmtDesign]
                        ) [StatementMulti]
                        StmtDesign(
                          DesignatorAssignment(
                            DesignatorSimple(
                             boolean
                            ) [DesignatorSimple]
                            AssignmentExpr(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorCharConst(
                                     a
                                    ) [FactorCharConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [AssignmentExpr]
                          ) [DesignatorAssignment]
                        ) [StmtDesign]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           cnst
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   2
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtDesign(
                      DesignatorIncrement(
                        DesignatorSimple(
                         character
                        ) [DesignatorSimple]
                      ) [DesignatorIncrement]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorDecrement(
                      DesignatorSimple(
                       boolean
                      ) [DesignatorSimple]
                    ) [DesignatorDecrement]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorMethodCall0(
                    DesignatorSimple(
                     fun
                    ) [DesignatorSimple]
                    ActParsMulti(
                      ActParsSingle(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               1
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [ActParsSingle]
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             2
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [ActParsMulti]
                  ) [DesignatorMethodCall0]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   character
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprNegSingle(
                        TermSingle(
                          FactorCharConst(
                           a
                          ) [FactorCharConst]
                        ) [TermSingle]
                      ) [ExprNegSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 niz
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNewArray(
                          Type(
                           int
                          ) [Type]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 3
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [FactorNewArray]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               niz
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNewArray(
                        Type(
                         int
                        ) [Type]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorCharConst(
                               a
                              ) [FactorCharConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [FactorNewArray]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  23:40:40,481 - 

================SEMANTICKA OBRADA====================


ERROR 23:40:40,491 - Semanticka greska - nije pronadjen tip 'abc' u tabeli simbola!
INFO  23:40:40,491 - Deklarisana globalna promenljiva 'a' na liniji 2
INFO  23:40:40,491 - Deklarisana konstanta 'cnst' na liniji 3
INFO  23:40:40,491 - Formalni parametar funkcije fun: 'x' na liniji 5
ERROR 23:40:40,491 - Semanticka greska - metoda 'fun' treba da ima povratnu vrednost!
INFO  23:40:40,491 - Deklarisana promenljiva 'b' na liniji 10
ERROR 23:40:40,491 - Semanticka greska - 'b' je vec deklarisano na liniji 10
INFO  23:40:40,492 - Deklarisana promenljiva 'num' na liniji 11
INFO  23:40:40,492 - Deklarisana promenljiva 'character' na liniji 11
INFO  23:40:40,492 - Deklarisana promenljiva 'boolean' na liniji 11
INFO  23:40:40,492 - Deklarisan niz 'niz' na liniji 12
ERROR 23:40:40,492 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 14
ERROR 23:40:40,492 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 17
ERROR 23:40:40,492 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 18
ERROR 23:40:40,492 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 19
ERROR 23:40:40,492 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 20
ERROR 23:40:40,492 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 21
ERROR 23:40:40,492 - Semanticka greska - nekompatibilni tipovi za dodelu vrednosti na liniji 22
ERROR 23:40:40,493 - Semanticka greska - vrednost moze da se dodeli samo promenljivoj, elementu niza ili polju objekta na liniji 25
ERROR 23:40:40,493 - Semanticka greska - tip za inkrement moze biti jedino int na liniji 28
ERROR 23:40:40,493 - Semanticka greska - tip za dekrement moze biti jedino int na liniji 29
INFO  23:40:40,493 - Pronadjen poziv funkcije 'fun' na liniji 31
ERROR 23:40:40,493 - Semanticka greska - tip mora da bude int na liniji 34
ERROR 23:40:40,493 - Semanticka greska - tip za alociranje niza moze biti jedino int na liniji 37
INFO  23:40:40,494 - ===================================
