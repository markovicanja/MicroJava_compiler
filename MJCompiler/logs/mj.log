INFO  09:42:20,949 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:42:21,018 - #2 program
INFO  09:42:21,018 - #20 test301
INFO  09:42:21,018 - #20 int
INFO  09:42:21,034 - #20 a
INFO  09:42:21,034 - #40 ;
INFO  09:42:21,034 - #47 {
INFO  09:42:21,034 - #20 int
INFO  09:42:21,034 - #20 fun
INFO  09:42:21,034 - #43 (
INFO  09:42:21,034 - #20 int
INFO  09:42:21,034 - #20 x
INFO  09:42:21,034 - #41 ,
INFO  09:42:21,034 - #20 int
INFO  09:42:21,034 - #20 y
INFO  09:42:21,034 - #44 )
INFO  09:42:21,034 - #47 {
INFO  09:42:21,034 - #15 return
INFO  09:42:21,034 - #20 x
INFO  09:42:21,034 - #24 +
INFO  09:42:21,034 - #20 y
INFO  09:42:21,034 - #40 ;
INFO  09:42:21,034 - #48 }
INFO  09:42:21,034 - #16 void
INFO  09:42:21,034 - #20 main
INFO  09:42:21,034 - #43 (
INFO  09:42:21,034 - #44 )
INFO  09:42:21,034 - #47 {
INFO  09:42:21,034 - #20 a
INFO  09:42:21,034 - #37 =
INFO  09:42:21,034 - #20 fun
INFO  09:42:21,034 - #43 (
INFO  09:42:21,034 - #21 2
INFO  09:42:21,034 - #24 +
INFO  09:42:21,034 - #21 3
INFO  09:42:21,034 - #41 ,
INFO  09:42:21,034 - #21 3
INFO  09:42:21,034 - #26 *
INFO  09:42:21,034 - #21 10
INFO  09:42:21,034 - #44 )
INFO  09:42:21,034 - #40 ;
INFO  09:42:21,034 - #13 print
INFO  09:42:21,034 - #43 (
INFO  09:42:21,034 - #20 a
INFO  09:42:21,034 - #44 )
INFO  09:42:21,034 - #40 ;
INFO  09:42:21,034 - #48 }
INFO  09:42:21,034 - #48 }
INFO  09:42:21,034 - 

================SINTAKSNO STABLO====================


INFO  09:42:21,034 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             a
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 a
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     a
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  09:42:21,049 - 

================SEMANTICKA OBRADA====================


INFO  09:42:21,056 - Deklarisana globalna promenljiva 'a' na liniji 4
INFO  09:42:21,056 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  09:42:21,056 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  09:42:21,056 - Pronadjen poziv funkcije 'fun' na liniji 12
INFO  09:42:21,056 - ===================================
INFO  09:42:21,056 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  09:42:21,071 - Parsiranje uspesno zavrseno!
INFO  09:42:43,129 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:42:43,176 - #2 program
INFO  09:42:43,176 - #20 test301
INFO  09:42:43,176 - #20 int
INFO  09:42:43,176 - #20 x
INFO  09:42:43,176 - #40 ;
INFO  09:42:43,176 - #47 {
INFO  09:42:43,176 - #20 int
INFO  09:42:43,176 - #20 fun
INFO  09:42:43,176 - #43 (
INFO  09:42:43,176 - #20 int
INFO  09:42:43,176 - #20 x
INFO  09:42:43,176 - #41 ,
INFO  09:42:43,176 - #20 int
INFO  09:42:43,176 - #20 y
INFO  09:42:43,176 - #44 )
INFO  09:42:43,176 - #47 {
INFO  09:42:43,176 - #15 return
INFO  09:42:43,176 - #20 x
INFO  09:42:43,176 - #24 +
INFO  09:42:43,176 - #20 y
INFO  09:42:43,176 - #40 ;
INFO  09:42:43,176 - #48 }
INFO  09:42:43,176 - #16 void
INFO  09:42:43,176 - #20 main
INFO  09:42:43,176 - #43 (
INFO  09:42:43,176 - #44 )
INFO  09:42:43,176 - #47 {
INFO  09:42:43,176 - #20 x
INFO  09:42:43,176 - #37 =
INFO  09:42:43,176 - #20 fun
INFO  09:42:43,176 - #43 (
INFO  09:42:43,176 - #21 2
INFO  09:42:43,176 - #24 +
INFO  09:42:43,176 - #21 3
INFO  09:42:43,176 - #41 ,
INFO  09:42:43,176 - #21 3
INFO  09:42:43,176 - #26 *
INFO  09:42:43,176 - #21 10
INFO  09:42:43,176 - #44 )
INFO  09:42:43,176 - #40 ;
INFO  09:42:43,176 - #13 print
INFO  09:42:43,176 - #43 (
INFO  09:42:43,176 - #20 x
INFO  09:42:43,176 - #44 )
INFO  09:42:43,176 - #40 ;
INFO  09:42:43,176 - #48 }
INFO  09:42:43,176 - #48 }
INFO  09:42:43,176 - 

================SINTAKSNO STABLO====================


INFO  09:42:43,176 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             x
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  09:42:43,176 - 

================SEMANTICKA OBRADA====================


INFO  09:42:43,192 - Deklarisana globalna promenljiva 'x' na liniji 4
ERROR 09:42:43,192 - Semanticka greska - 'x' vec postoji na liniji 6
INFO  09:42:43,192 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  09:42:43,192 - Pronadjen poziv funkcije 'fun' na liniji 12
ERROR 09:42:43,192 - Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 12
INFO  09:42:43,207 - ===================================
ERROR 09:42:43,207 - Parsiranje nije uspesno zavrseno!
INFO  09:45:09,392 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:45:09,461 - #2 program
INFO  09:45:09,461 - #20 test301
INFO  09:45:09,461 - #20 int
INFO  09:45:09,461 - #20 x
INFO  09:45:09,461 - #40 ;
INFO  09:45:09,461 - #47 {
INFO  09:45:09,461 - #20 int
INFO  09:45:09,461 - #20 fun
INFO  09:45:09,461 - #43 (
INFO  09:45:09,461 - #20 int
INFO  09:45:09,461 - #20 x
INFO  09:45:09,461 - #41 ,
INFO  09:45:09,461 - #20 int
INFO  09:45:09,461 - #20 y
INFO  09:45:09,461 - #44 )
INFO  09:45:09,461 - #47 {
INFO  09:45:09,461 - #15 return
INFO  09:45:09,461 - #20 x
INFO  09:45:09,461 - #24 +
INFO  09:45:09,461 - #20 y
INFO  09:45:09,461 - #40 ;
INFO  09:45:09,461 - #48 }
INFO  09:45:09,461 - #16 void
INFO  09:45:09,461 - #20 main
INFO  09:45:09,461 - #43 (
INFO  09:45:09,461 - #44 )
INFO  09:45:09,461 - #47 {
INFO  09:45:09,461 - #20 x
INFO  09:45:09,461 - #37 =
INFO  09:45:09,477 - #20 fun
INFO  09:45:09,477 - #43 (
INFO  09:45:09,477 - #21 2
INFO  09:45:09,477 - #24 +
INFO  09:45:09,477 - #21 3
INFO  09:45:09,477 - #41 ,
INFO  09:45:09,477 - #21 3
INFO  09:45:09,477 - #26 *
INFO  09:45:09,477 - #21 10
INFO  09:45:09,477 - #44 )
INFO  09:45:09,477 - #40 ;
INFO  09:45:09,477 - #13 print
INFO  09:45:09,477 - #43 (
INFO  09:45:09,477 - #20 x
INFO  09:45:09,477 - #44 )
INFO  09:45:09,477 - #40 ;
INFO  09:45:09,477 - #48 }
INFO  09:45:09,477 - #48 }
INFO  09:45:09,477 - 

================SINTAKSNO STABLO====================


INFO  09:45:09,477 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             x
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  09:45:09,477 - 

================SEMANTICKA OBRADA====================


INFO  09:45:09,493 - Deklarisana globalna promenljiva 'x' na liniji 4
ERROR 09:45:09,493 - Semanticka greska - 'x' vec postoji na liniji 6
INFO  09:45:09,493 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  09:45:09,493 - Pronadjen poziv funkcije 'fun' na liniji 12
ERROR 09:45:09,493 - Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 12
INFO  09:45:09,493 - ===================================
ERROR 09:45:09,493 - Parsiranje nije uspesno zavrseno!
INFO  09:45:32,707 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:45:32,754 - #2 program
INFO  09:45:32,754 - #20 test301
INFO  09:45:32,754 - #20 int
INFO  09:45:32,754 - #20 x
INFO  09:45:32,754 - #40 ;
INFO  09:45:32,770 - #47 {
INFO  09:45:32,770 - #20 int
INFO  09:45:32,770 - #20 fun
INFO  09:45:32,770 - #43 (
INFO  09:45:32,770 - #20 int
INFO  09:45:32,770 - #20 x
INFO  09:45:32,770 - #41 ,
INFO  09:45:32,770 - #20 int
INFO  09:45:32,770 - #20 y
INFO  09:45:32,770 - #44 )
INFO  09:45:32,770 - #47 {
INFO  09:45:32,770 - #15 return
INFO  09:45:32,770 - #20 x
INFO  09:45:32,770 - #24 +
INFO  09:45:32,770 - #20 y
INFO  09:45:32,770 - #40 ;
INFO  09:45:32,770 - #48 }
INFO  09:45:32,770 - #16 void
INFO  09:45:32,770 - #20 main
INFO  09:45:32,770 - #43 (
INFO  09:45:32,770 - #44 )
INFO  09:45:32,770 - #47 {
INFO  09:45:32,770 - #20 x
INFO  09:45:32,770 - #37 =
INFO  09:45:32,770 - #20 fun
INFO  09:45:32,770 - #43 (
INFO  09:45:32,770 - #21 2
INFO  09:45:32,770 - #24 +
INFO  09:45:32,770 - #21 3
INFO  09:45:32,770 - #41 ,
INFO  09:45:32,770 - #21 3
INFO  09:45:32,770 - #26 *
INFO  09:45:32,770 - #21 10
INFO  09:45:32,770 - #44 )
INFO  09:45:32,770 - #40 ;
INFO  09:45:32,770 - #13 print
INFO  09:45:32,770 - #43 (
INFO  09:45:32,770 - #20 x
INFO  09:45:32,770 - #44 )
INFO  09:45:32,770 - #40 ;
INFO  09:45:32,770 - #48 }
INFO  09:45:32,776 - #48 }
INFO  09:45:32,776 - 

================SINTAKSNO STABLO====================


INFO  09:45:32,776 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             x
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  09:45:32,776 - 

================SEMANTICKA OBRADA====================


INFO  09:45:32,776 - Deklarisana globalna promenljiva 'x' na liniji 4
ERROR 09:45:32,776 - AAASemanticka greska - 'x' vec postoji na liniji 6
INFO  09:45:32,776 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  09:45:32,776 - Pronadjen poziv funkcije 'fun' na liniji 12
ERROR 09:45:32,776 - Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 12
INFO  09:45:32,776 - ===================================
ERROR 09:45:32,776 - Parsiranje nije uspesno zavrseno!
INFO  09:46:30,175 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:46:30,255 - #2 program
INFO  09:46:30,255 - #20 test301
INFO  09:46:30,255 - #20 int
INFO  09:46:30,255 - #20 x
INFO  09:46:30,255 - #40 ;
INFO  09:46:30,255 - #47 {
INFO  09:46:30,255 - #20 int
INFO  09:46:30,255 - #20 fun
INFO  09:46:30,255 - #43 (
INFO  09:46:30,255 - #20 int
INFO  09:46:30,255 - #20 x
INFO  09:46:30,255 - #41 ,
INFO  09:46:30,255 - #20 int
INFO  09:46:30,255 - #20 y
INFO  09:46:30,255 - #44 )
INFO  09:46:30,255 - #47 {
INFO  09:46:30,255 - #15 return
INFO  09:46:30,255 - #20 x
INFO  09:46:30,255 - #24 +
INFO  09:46:30,255 - #20 y
INFO  09:46:30,255 - #40 ;
INFO  09:46:30,255 - #48 }
INFO  09:46:30,255 - #16 void
INFO  09:46:30,255 - #20 main
INFO  09:46:30,255 - #43 (
INFO  09:46:30,255 - #44 )
INFO  09:46:30,255 - #47 {
INFO  09:46:30,255 - #20 x
INFO  09:46:30,255 - #37 =
INFO  09:46:30,255 - #20 fun
INFO  09:46:30,255 - #43 (
INFO  09:46:30,255 - #21 2
INFO  09:46:30,255 - #24 +
INFO  09:46:30,255 - #21 3
INFO  09:46:30,255 - #41 ,
INFO  09:46:30,255 - #21 3
INFO  09:46:30,255 - #26 *
INFO  09:46:30,255 - #21 10
INFO  09:46:30,255 - #44 )
INFO  09:46:30,255 - #40 ;
INFO  09:46:30,255 - #13 print
INFO  09:46:30,255 - #43 (
INFO  09:46:30,270 - #20 x
INFO  09:46:30,270 - #44 )
INFO  09:46:30,270 - #40 ;
INFO  09:46:30,270 - #48 }
INFO  09:46:30,270 - #48 }
INFO  09:46:30,270 - 

================SINTAKSNO STABLO====================


INFO  09:46:30,270 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             x
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  09:46:30,270 - 

================SEMANTICKA OBRADA====================


INFO  09:46:30,286 - Deklarisana globalna promenljiva 'x' na liniji 4
ERROR 09:46:30,292 - Def level '0 curr level0 na liniji 6
ERROR 09:46:30,292 - AAASemanticka greska - 'x' vec postoji na liniji 6
ERROR 09:46:30,292 - Def level '-1 curr level0 na liniji 6
INFO  09:46:30,292 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  09:46:30,292 - Pronadjen poziv funkcije 'fun' na liniji 12
ERROR 09:46:30,292 - Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 12
INFO  09:46:30,292 - ===================================
ERROR 09:46:30,292 - Parsiranje nije uspesno zavrseno!
INFO  09:47:14,820 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:47:14,858 - #2 program
INFO  09:47:14,858 - #20 test301
INFO  09:47:14,858 - #20 int
INFO  09:47:14,858 - #20 x
INFO  09:47:14,858 - #40 ;
INFO  09:47:14,873 - #47 {
INFO  09:47:14,873 - #20 int
INFO  09:47:14,873 - #20 fun
INFO  09:47:14,873 - #43 (
INFO  09:47:14,873 - #20 int
INFO  09:47:14,873 - #20 x
INFO  09:47:14,873 - #41 ,
INFO  09:47:14,873 - #20 int
INFO  09:47:14,873 - #20 y
INFO  09:47:14,873 - #44 )
INFO  09:47:14,873 - #47 {
INFO  09:47:14,873 - #15 return
INFO  09:47:14,873 - #20 x
INFO  09:47:14,873 - #24 +
INFO  09:47:14,873 - #20 y
INFO  09:47:14,873 - #40 ;
INFO  09:47:14,873 - #48 }
INFO  09:47:14,873 - #16 void
INFO  09:47:14,873 - #20 main
INFO  09:47:14,873 - #43 (
INFO  09:47:14,873 - #44 )
INFO  09:47:14,873 - #47 {
INFO  09:47:14,873 - #20 x
INFO  09:47:14,873 - #37 =
INFO  09:47:14,873 - #20 fun
INFO  09:47:14,873 - #43 (
INFO  09:47:14,873 - #21 2
INFO  09:47:14,873 - #24 +
INFO  09:47:14,873 - #21 3
INFO  09:47:14,873 - #41 ,
INFO  09:47:14,873 - #21 3
INFO  09:47:14,873 - #26 *
INFO  09:47:14,873 - #21 10
INFO  09:47:14,873 - #44 )
INFO  09:47:14,873 - #40 ;
INFO  09:47:14,873 - #13 print
INFO  09:47:14,873 - #43 (
INFO  09:47:14,873 - #20 x
INFO  09:47:14,873 - #44 )
INFO  09:47:14,873 - #40 ;
INFO  09:47:14,873 - #48 }
INFO  09:47:14,873 - #48 }
INFO  09:47:14,873 - 

================SINTAKSNO STABLO====================


INFO  09:47:14,873 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             x
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  09:47:14,889 - 

================SEMANTICKA OBRADA====================


INFO  09:47:14,905 - Deklarisana globalna promenljiva 'x' na liniji 4
ERROR 09:47:14,905 - Def level '0 curr level0 na liniji 6
INFO  09:47:14,905 - Formalni parametar funkcije fun: 'x' na liniji 6
ERROR 09:47:14,905 - Def level '-1 curr level1 na liniji 6
INFO  09:47:14,905 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  09:47:14,905 - Pronadjen poziv funkcije 'fun' na liniji 12
INFO  09:47:14,905 - ===================================
ERROR 09:47:14,905 - Parsiranje nije uspesno zavrseno!
INFO  10:01:35,484 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:01:35,527 - #2 program
INFO  10:01:35,527 - #20 test301
INFO  10:01:35,543 - #20 int
INFO  10:01:35,543 - #20 x
INFO  10:01:35,543 - #40 ;
INFO  10:01:35,543 - #47 {
INFO  10:01:35,543 - #20 int
INFO  10:01:35,543 - #20 fun
INFO  10:01:35,543 - #43 (
INFO  10:01:35,543 - #20 int
INFO  10:01:35,543 - #20 x
INFO  10:01:35,543 - #41 ,
INFO  10:01:35,543 - #20 int
INFO  10:01:35,543 - #20 y
INFO  10:01:35,543 - #44 )
INFO  10:01:35,543 - #47 {
INFO  10:01:35,543 - #15 return
INFO  10:01:35,543 - #20 x
INFO  10:01:35,543 - #24 +
INFO  10:01:35,543 - #20 y
INFO  10:01:35,543 - #40 ;
INFO  10:01:35,543 - #48 }
INFO  10:01:35,543 - #16 void
INFO  10:01:35,543 - #20 main
INFO  10:01:35,543 - #43 (
INFO  10:01:35,543 - #44 )
INFO  10:01:35,543 - #47 {
INFO  10:01:35,543 - #20 x
INFO  10:01:35,543 - #37 =
INFO  10:01:35,543 - #20 fun
INFO  10:01:35,543 - #43 (
INFO  10:01:35,543 - #21 2
INFO  10:01:35,543 - #24 +
INFO  10:01:35,543 - #21 3
INFO  10:01:35,543 - #41 ,
INFO  10:01:35,543 - #21 3
INFO  10:01:35,543 - #26 *
INFO  10:01:35,543 - #21 10
INFO  10:01:35,543 - #44 )
INFO  10:01:35,543 - #40 ;
INFO  10:01:35,543 - #13 print
INFO  10:01:35,543 - #43 (
INFO  10:01:35,543 - #20 x
INFO  10:01:35,543 - #44 )
INFO  10:01:35,543 - #40 ;
INFO  10:01:35,543 - #48 }
INFO  10:01:35,543 - #48 }
INFO  10:01:35,543 - 

================SINTAKSNO STABLO====================


INFO  10:01:35,543 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             x
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:01:35,543 - 

================SEMANTICKA OBRADA====================


INFO  10:01:35,558 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:01:35,558 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:01:35,558 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:01:35,558 - Pronadjen poziv funkcije 'fun' na liniji 12
INFO  10:01:35,558 - ===================================
INFO  10:01:35,558 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:01:35,558 - Parsiranje uspesno zavrseno!
INFO  10:02:58,331 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:02:58,384 - #2 program
INFO  10:02:58,384 - #20 test301
INFO  10:02:58,384 - #20 int
INFO  10:02:58,384 - #20 x
INFO  10:02:58,384 - #40 ;
INFO  10:02:58,384 - #47 {
INFO  10:02:58,384 - #20 int
INFO  10:02:58,384 - #20 fun
INFO  10:02:58,384 - #43 (
INFO  10:02:58,384 - #20 int
INFO  10:02:58,384 - #20 x
INFO  10:02:58,384 - #41 ,
INFO  10:02:58,384 - #20 int
INFO  10:02:58,384 - #20 x
INFO  10:02:58,384 - #44 )
INFO  10:02:58,384 - #47 {
INFO  10:02:58,384 - #15 return
INFO  10:02:58,384 - #20 x
INFO  10:02:58,384 - #24 +
INFO  10:02:58,384 - #20 x
INFO  10:02:58,384 - #40 ;
INFO  10:02:58,384 - #48 }
INFO  10:02:58,384 - #16 void
INFO  10:02:58,384 - #20 main
INFO  10:02:58,384 - #43 (
INFO  10:02:58,384 - #44 )
INFO  10:02:58,384 - #47 {
INFO  10:02:58,384 - #20 x
INFO  10:02:58,384 - #37 =
INFO  10:02:58,384 - #20 fun
INFO  10:02:58,384 - #43 (
INFO  10:02:58,384 - #21 2
INFO  10:02:58,384 - #24 +
INFO  10:02:58,384 - #21 3
INFO  10:02:58,384 - #41 ,
INFO  10:02:58,384 - #21 3
INFO  10:02:58,384 - #26 *
INFO  10:02:58,384 - #21 10
INFO  10:02:58,384 - #44 )
INFO  10:02:58,384 - #40 ;
INFO  10:02:58,384 - #13 print
INFO  10:02:58,384 - #43 (
INFO  10:02:58,384 - #20 x
INFO  10:02:58,384 - #44 )
INFO  10:02:58,384 - #40 ;
INFO  10:02:58,384 - #48 }
INFO  10:02:58,384 - #48 }
INFO  10:02:58,384 - 

================SINTAKSNO STABLO====================


INFO  10:02:58,384 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             x
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:02:58,384 - 

================SEMANTICKA OBRADA====================


INFO  10:02:58,400 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:02:58,400 - Formalni parametar funkcije fun: 'x' na liniji 6
ERROR 10:02:58,400 - Semanticka greska - 'x' vec postoji na liniji 6
INFO  10:02:58,400 - Pronadjen poziv funkcije 'fun' na liniji 12
ERROR 10:02:58,400 - Semanticka greska - argumenti funkcije nisu odgovarajuci na liniji 12
INFO  10:02:58,400 - ===================================
ERROR 10:02:58,400 - Parsiranje nije uspesno zavrseno!
INFO  10:03:09,311 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:03:09,380 - #2 program
INFO  10:03:09,380 - #20 test301
INFO  10:03:09,380 - #20 int
INFO  10:03:09,380 - #20 x
INFO  10:03:09,380 - #40 ;
INFO  10:03:09,380 - #47 {
INFO  10:03:09,380 - #20 int
INFO  10:03:09,380 - #20 fun
INFO  10:03:09,380 - #43 (
INFO  10:03:09,380 - #20 int
INFO  10:03:09,380 - #20 x
INFO  10:03:09,380 - #41 ,
INFO  10:03:09,380 - #20 int
INFO  10:03:09,380 - #20 y
INFO  10:03:09,380 - #44 )
INFO  10:03:09,380 - #47 {
INFO  10:03:09,380 - #15 return
INFO  10:03:09,380 - #20 x
INFO  10:03:09,380 - #24 +
INFO  10:03:09,380 - #20 y
INFO  10:03:09,380 - #40 ;
INFO  10:03:09,380 - #48 }
INFO  10:03:09,380 - #16 void
INFO  10:03:09,380 - #20 main
INFO  10:03:09,380 - #43 (
INFO  10:03:09,380 - #44 )
INFO  10:03:09,380 - #47 {
INFO  10:03:09,380 - #20 x
INFO  10:03:09,380 - #37 =
INFO  10:03:09,380 - #20 fun
INFO  10:03:09,380 - #43 (
INFO  10:03:09,380 - #21 2
INFO  10:03:09,380 - #24 +
INFO  10:03:09,380 - #21 3
INFO  10:03:09,380 - #41 ,
INFO  10:03:09,380 - #21 3
INFO  10:03:09,380 - #26 *
INFO  10:03:09,380 - #21 10
INFO  10:03:09,380 - #44 )
INFO  10:03:09,380 - #40 ;
INFO  10:03:09,380 - #13 print
INFO  10:03:09,380 - #43 (
INFO  10:03:09,380 - #20 x
INFO  10:03:09,380 - #44 )
INFO  10:03:09,380 - #40 ;
INFO  10:03:09,380 - #48 }
INFO  10:03:09,380 - #48 }
INFO  10:03:09,380 - 

================SINTAKSNO STABLO====================


INFO  10:03:09,380 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             x
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:03:09,380 - 

================SEMANTICKA OBRADA====================


INFO  10:03:09,396 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:03:09,396 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:03:09,396 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:03:09,396 - Pronadjen poziv funkcije 'fun' na liniji 12
INFO  10:03:09,396 - ===================================
INFO  10:03:09,412 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:03:09,412 - Parsiranje uspesno zavrseno!
INFO  10:04:13,298 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:04:13,351 - #2 program
INFO  10:04:13,351 - #20 test301
INFO  10:04:13,351 - #20 int
INFO  10:04:13,351 - #20 x
INFO  10:04:13,351 - #40 ;
INFO  10:04:13,351 - #47 {
INFO  10:04:13,351 - #20 int
INFO  10:04:13,351 - #20 fun
INFO  10:04:13,351 - #43 (
INFO  10:04:13,351 - #20 int
INFO  10:04:13,351 - #20 x
INFO  10:04:13,351 - #41 ,
INFO  10:04:13,351 - #20 int
INFO  10:04:13,351 - #20 y
INFO  10:04:13,351 - #44 )
INFO  10:04:13,351 - #47 {
INFO  10:04:13,351 - #15 return
INFO  10:04:13,351 - #20 x
INFO  10:04:13,351 - #24 +
INFO  10:04:13,351 - #20 y
INFO  10:04:13,351 - #40 ;
INFO  10:04:13,351 - #48 }
INFO  10:04:13,351 - #20 int
INFO  10:04:13,351 - #20 funx
INFO  10:04:13,351 - #43 (
INFO  10:04:13,351 - #20 int
INFO  10:04:13,351 - #20 x
INFO  10:04:13,351 - #41 ,
INFO  10:04:13,351 - #20 int
INFO  10:04:13,351 - #20 y
INFO  10:04:13,351 - #44 )
INFO  10:04:13,351 - #47 {
INFO  10:04:13,351 - #15 return
INFO  10:04:13,351 - #20 x
INFO  10:04:13,351 - #24 +
INFO  10:04:13,351 - #20 y
INFO  10:04:13,351 - #40 ;
INFO  10:04:13,351 - #48 }
INFO  10:04:13,351 - #16 void
INFO  10:04:13,351 - #20 main
INFO  10:04:13,351 - #43 (
INFO  10:04:13,351 - #44 )
INFO  10:04:13,351 - #47 {
INFO  10:04:13,351 - #20 x
INFO  10:04:13,351 - #37 =
INFO  10:04:13,351 - #20 fun
INFO  10:04:13,351 - #43 (
INFO  10:04:13,351 - #21 2
INFO  10:04:13,351 - #24 +
INFO  10:04:13,351 - #21 3
INFO  10:04:13,351 - #41 ,
INFO  10:04:13,351 - #21 3
INFO  10:04:13,351 - #26 *
INFO  10:04:13,351 - #21 10
INFO  10:04:13,351 - #44 )
INFO  10:04:13,351 - #40 ;
INFO  10:04:13,351 - #13 print
INFO  10:04:13,351 - #43 (
INFO  10:04:13,351 - #20 x
INFO  10:04:13,351 - #44 )
INFO  10:04:13,351 - #40 ;
INFO  10:04:13,351 - #48 }
INFO  10:04:13,351 - #48 }
INFO  10:04:13,351 - 

================SINTAKSNO STABLO====================


INFO  10:04:13,367 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             x
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType2(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType2]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:04:13,367 - 

================SEMANTICKA OBRADA====================


INFO  10:04:13,367 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:04:13,382 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:04:13,382 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:04:13,382 - Formalni parametar funkcije funx: 'x' na liniji 10
INFO  10:04:13,382 - Formalni parametar funkcije funx: 'y' na liniji 10
INFO  10:04:13,382 - Pronadjen poziv funkcije 'fun' na liniji 16
INFO  10:04:13,382 - ===================================
INFO  10:04:13,382 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:04:13,382 - Parsiranje uspesno zavrseno!
INFO  10:04:43,958 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:04:44,006 - #2 program
INFO  10:04:44,006 - #20 test301
INFO  10:04:44,006 - #20 int
INFO  10:04:44,006 - #20 x
INFO  10:04:44,006 - #40 ;
INFO  10:04:44,006 - #47 {
INFO  10:04:44,006 - #20 int
INFO  10:04:44,006 - #20 fun
INFO  10:04:44,006 - #43 (
INFO  10:04:44,006 - #20 int
INFO  10:04:44,006 - #20 x
INFO  10:04:44,006 - #41 ,
INFO  10:04:44,006 - #20 int
INFO  10:04:44,006 - #20 y
INFO  10:04:44,006 - #44 )
INFO  10:04:44,006 - #47 {
INFO  10:04:44,006 - #15 return
INFO  10:04:44,006 - #20 x
INFO  10:04:44,006 - #24 +
INFO  10:04:44,006 - #20 y
INFO  10:04:44,006 - #40 ;
INFO  10:04:44,006 - #48 }
INFO  10:04:44,006 - #20 int
INFO  10:04:44,006 - #20 funx
INFO  10:04:44,006 - #43 (
INFO  10:04:44,006 - #20 int
INFO  10:04:44,006 - #20 x
INFO  10:04:44,006 - #41 ,
INFO  10:04:44,006 - #20 int
INFO  10:04:44,006 - #20 y
INFO  10:04:44,006 - #41 ,
INFO  10:04:44,006 - #20 int
INFO  10:04:44,006 - #20 y
INFO  10:04:44,006 - #44 )
INFO  10:04:44,006 - #47 {
INFO  10:04:44,006 - #15 return
INFO  10:04:44,006 - #20 x
INFO  10:04:44,006 - #24 +
INFO  10:04:44,006 - #20 y
INFO  10:04:44,006 - #40 ;
INFO  10:04:44,006 - #48 }
INFO  10:04:44,006 - #16 void
INFO  10:04:44,006 - #20 main
INFO  10:04:44,006 - #43 (
INFO  10:04:44,006 - #44 )
INFO  10:04:44,006 - #47 {
INFO  10:04:44,006 - #20 x
INFO  10:04:44,006 - #37 =
INFO  10:04:44,006 - #20 fun
INFO  10:04:44,006 - #43 (
INFO  10:04:44,006 - #21 2
INFO  10:04:44,006 - #24 +
INFO  10:04:44,006 - #21 3
INFO  10:04:44,006 - #41 ,
INFO  10:04:44,006 - #21 3
INFO  10:04:44,006 - #26 *
INFO  10:04:44,006 - #21 10
INFO  10:04:44,006 - #44 )
INFO  10:04:44,006 - #40 ;
INFO  10:04:44,006 - #13 print
INFO  10:04:44,006 - #43 (
INFO  10:04:44,006 - #20 x
INFO  10:04:44,006 - #44 )
INFO  10:04:44,006 - #40 ;
INFO  10:04:44,006 - #48 }
INFO  10:04:44,006 - #48 }
INFO  10:04:44,006 - 

================SINTAKSNO STABLO====================


INFO  10:04:44,006 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarNormal(
             x
            ) [VarNormal]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType2(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType2]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamMulti(
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:04:44,006 - 

================SEMANTICKA OBRADA====================


INFO  10:04:44,022 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:04:44,022 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:04:44,022 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:04:44,022 - Formalni parametar funkcije funx: 'x' na liniji 10
INFO  10:04:44,022 - Formalni parametar funkcije funx: 'y' na liniji 10
ERROR 10:04:44,022 - Semanticka greska - 'y' vec postoji na liniji 10
INFO  10:04:44,022 - Pronadjen poziv funkcije 'fun' na liniji 16
INFO  10:04:44,022 - ===================================
ERROR 10:04:44,022 - Parsiranje nije uspesno zavrseno!
INFO  10:05:20,083 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:05:20,137 - #2 program
INFO  10:05:20,137 - #20 test301
INFO  10:05:20,137 - #20 int
INFO  10:05:20,137 - #20 x
INFO  10:05:20,137 - #41 ,
INFO  10:05:20,137 - #20 x
INFO  10:05:20,137 - #45 [
INFO  10:05:20,137 - #46 ]
INFO  10:05:20,137 - #40 ;
INFO  10:05:20,137 - #47 {
INFO  10:05:20,137 - #20 int
INFO  10:05:20,137 - #20 fun
INFO  10:05:20,137 - #43 (
INFO  10:05:20,137 - #20 int
INFO  10:05:20,137 - #20 x
INFO  10:05:20,137 - #41 ,
INFO  10:05:20,137 - #20 int
INFO  10:05:20,137 - #20 y
INFO  10:05:20,137 - #44 )
INFO  10:05:20,137 - #47 {
INFO  10:05:20,137 - #15 return
INFO  10:05:20,137 - #20 x
INFO  10:05:20,137 - #24 +
INFO  10:05:20,137 - #20 y
INFO  10:05:20,137 - #40 ;
INFO  10:05:20,137 - #48 }
INFO  10:05:20,137 - #20 int
INFO  10:05:20,137 - #20 funx
INFO  10:05:20,137 - #43 (
INFO  10:05:20,152 - #20 int
INFO  10:05:20,152 - #20 x
INFO  10:05:20,152 - #41 ,
INFO  10:05:20,152 - #20 int
INFO  10:05:20,152 - #20 y
INFO  10:05:20,152 - #44 )
INFO  10:05:20,152 - #47 {
INFO  10:05:20,152 - #15 return
INFO  10:05:20,152 - #20 x
INFO  10:05:20,152 - #24 +
INFO  10:05:20,152 - #20 y
INFO  10:05:20,152 - #40 ;
INFO  10:05:20,152 - #48 }
INFO  10:05:20,152 - #16 void
INFO  10:05:20,152 - #20 main
INFO  10:05:20,152 - #43 (
INFO  10:05:20,152 - #44 )
INFO  10:05:20,152 - #47 {
INFO  10:05:20,152 - #20 x
INFO  10:05:20,152 - #37 =
INFO  10:05:20,152 - #20 fun
INFO  10:05:20,152 - #43 (
INFO  10:05:20,152 - #21 2
INFO  10:05:20,152 - #24 +
INFO  10:05:20,152 - #21 3
INFO  10:05:20,152 - #41 ,
INFO  10:05:20,152 - #21 3
INFO  10:05:20,152 - #26 *
INFO  10:05:20,152 - #21 10
INFO  10:05:20,152 - #44 )
INFO  10:05:20,152 - #40 ;
INFO  10:05:20,152 - #13 print
INFO  10:05:20,152 - #43 (
INFO  10:05:20,152 - #20 x
INFO  10:05:20,152 - #44 )
INFO  10:05:20,152 - #40 ;
INFO  10:05:20,152 - #48 }
INFO  10:05:20,152 - #48 }
INFO  10:05:20,152 - 

================SINTAKSNO STABLO====================


INFO  10:05:20,152 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             x
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType2(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType2]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:05:20,152 - 

================SEMANTICKA OBRADA====================


ERROR 10:05:20,168 - Semanticka greska - 'x' je vec deklarisano na liniji 4
INFO  10:05:20,168 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:05:20,168 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:05:20,168 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:05:20,168 - Formalni parametar funkcije funx: 'x' na liniji 10
INFO  10:05:20,168 - Formalni parametar funkcije funx: 'y' na liniji 10
INFO  10:05:20,168 - Pronadjen poziv funkcije 'fun' na liniji 16
INFO  10:05:20,168 - ===================================
ERROR 10:05:20,168 - Parsiranje nije uspesno zavrseno!
INFO  10:05:39,770 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:05:39,852 - #2 program
INFO  10:05:39,852 - #20 test301
INFO  10:05:39,852 - #20 int
INFO  10:05:39,852 - #20 x
INFO  10:05:39,852 - #41 ,
INFO  10:05:39,852 - #20 niz
INFO  10:05:39,852 - #45 [
INFO  10:05:39,852 - #46 ]
INFO  10:05:39,852 - #40 ;
INFO  10:05:39,852 - #47 {
INFO  10:05:39,852 - #20 int
INFO  10:05:39,852 - #20 fun
INFO  10:05:39,852 - #43 (
INFO  10:05:39,852 - #20 int
INFO  10:05:39,852 - #20 x
INFO  10:05:39,852 - #41 ,
INFO  10:05:39,860 - #20 int
INFO  10:05:39,860 - #20 y
INFO  10:05:39,860 - #44 )
INFO  10:05:39,860 - #47 {
INFO  10:05:39,860 - #15 return
INFO  10:05:39,860 - #20 x
INFO  10:05:39,862 - #24 +
INFO  10:05:39,862 - #20 y
INFO  10:05:39,862 - #40 ;
INFO  10:05:39,862 - #48 }
INFO  10:05:39,862 - #20 int
INFO  10:05:39,862 - #20 funx
INFO  10:05:39,862 - #43 (
INFO  10:05:39,862 - #20 int
INFO  10:05:39,862 - #20 x
INFO  10:05:39,862 - #41 ,
INFO  10:05:39,862 - #20 int
INFO  10:05:39,862 - #20 y
INFO  10:05:39,862 - #41 ,
INFO  10:05:39,862 - #20 int
INFO  10:05:39,862 - #20 niz
INFO  10:05:39,862 - #45 [
INFO  10:05:39,862 - #46 ]
INFO  10:05:39,862 - #44 )
INFO  10:05:39,862 - #47 {
INFO  10:05:39,862 - #15 return
INFO  10:05:39,862 - #20 x
INFO  10:05:39,862 - #24 +
INFO  10:05:39,862 - #20 y
INFO  10:05:39,862 - #40 ;
INFO  10:05:39,862 - #48 }
INFO  10:05:39,862 - #16 void
INFO  10:05:39,862 - #20 main
INFO  10:05:39,862 - #43 (
INFO  10:05:39,862 - #44 )
INFO  10:05:39,862 - #47 {
INFO  10:05:39,862 - #20 x
INFO  10:05:39,862 - #37 =
INFO  10:05:39,862 - #20 fun
INFO  10:05:39,862 - #43 (
INFO  10:05:39,862 - #21 2
INFO  10:05:39,862 - #24 +
INFO  10:05:39,862 - #21 3
INFO  10:05:39,862 - #41 ,
INFO  10:05:39,862 - #21 3
INFO  10:05:39,862 - #26 *
INFO  10:05:39,862 - #21 10
INFO  10:05:39,862 - #44 )
INFO  10:05:39,862 - #40 ;
INFO  10:05:39,870 - #13 print
INFO  10:05:39,870 - #43 (
INFO  10:05:39,870 - #20 x
INFO  10:05:39,870 - #44 )
INFO  10:05:39,870 - #40 ;
INFO  10:05:39,870 - #48 }
INFO  10:05:39,870 - #48 }
INFO  10:05:39,872 - 

================SINTAKSNO STABLO====================


INFO  10:05:39,872 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType2(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType2]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamMulti(
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            ParamArray(
              Type(
               int
              ) [Type]
             niz
            ) [ParamArray]
          ) [ParamMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:05:39,872 - 

================SEMANTICKA OBRADA====================


INFO  10:05:39,882 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:05:39,882 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:05:39,882 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:05:39,882 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:05:39,890 - Formalni parametar funkcije funx: 'x' na liniji 10
INFO  10:05:39,890 - Formalni parametar funkcije funx: 'y' na liniji 10
INFO  10:05:39,890 - Formalni parametar funkcije funx: 'niz' na liniji 10
INFO  10:05:39,890 - Pronadjen poziv funkcije 'fun' na liniji 16
INFO  10:05:39,890 - ===================================
INFO  10:05:39,890 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:05:39,892 - Parsiranje uspesno zavrseno!
INFO  10:06:42,478 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:06:42,524 - #2 program
INFO  10:06:42,524 - #20 test301
INFO  10:06:42,524 - #20 int
INFO  10:06:42,524 - #20 x
INFO  10:06:42,524 - #41 ,
INFO  10:06:42,524 - #20 niz
INFO  10:06:42,524 - #45 [
INFO  10:06:42,524 - #46 ]
INFO  10:06:42,524 - #40 ;
INFO  10:06:42,524 - #47 {
INFO  10:06:42,524 - #20 int
INFO  10:06:42,524 - #20 fun
INFO  10:06:42,524 - #43 (
INFO  10:06:42,524 - #20 int
INFO  10:06:42,524 - #20 x
INFO  10:06:42,524 - #41 ,
INFO  10:06:42,524 - #20 int
INFO  10:06:42,524 - #20 y
INFO  10:06:42,524 - #44 )
INFO  10:06:42,524 - #20 int
INFO  10:06:42,524 - #20 x
INFO  10:06:42,524 - #40 ;
INFO  10:06:42,524 - #47 {
INFO  10:06:42,524 - #15 return
INFO  10:06:42,524 - #20 x
INFO  10:06:42,524 - #24 +
INFO  10:06:42,524 - #20 y
INFO  10:06:42,524 - #40 ;
INFO  10:06:42,524 - #48 }
INFO  10:06:42,524 - #20 int
INFO  10:06:42,524 - #20 funx
INFO  10:06:42,524 - #43 (
INFO  10:06:42,524 - #20 int
INFO  10:06:42,524 - #20 x
INFO  10:06:42,524 - #41 ,
INFO  10:06:42,524 - #20 int
INFO  10:06:42,524 - #20 y
INFO  10:06:42,524 - #41 ,
INFO  10:06:42,524 - #20 int
INFO  10:06:42,524 - #20 niz
INFO  10:06:42,524 - #45 [
INFO  10:06:42,524 - #46 ]
INFO  10:06:42,524 - #44 )
INFO  10:06:42,524 - #47 {
INFO  10:06:42,524 - #15 return
INFO  10:06:42,524 - #20 x
INFO  10:06:42,524 - #24 +
INFO  10:06:42,524 - #20 y
INFO  10:06:42,524 - #40 ;
INFO  10:06:42,524 - #48 }
INFO  10:06:42,524 - #16 void
INFO  10:06:42,524 - #20 main
INFO  10:06:42,524 - #43 (
INFO  10:06:42,524 - #44 )
INFO  10:06:42,524 - #47 {
INFO  10:06:42,524 - #20 x
INFO  10:06:42,524 - #37 =
INFO  10:06:42,524 - #20 fun
INFO  10:06:42,524 - #43 (
INFO  10:06:42,524 - #21 2
INFO  10:06:42,524 - #24 +
INFO  10:06:42,524 - #21 3
INFO  10:06:42,524 - #41 ,
INFO  10:06:42,540 - #21 3
INFO  10:06:42,540 - #26 *
INFO  10:06:42,540 - #21 10
INFO  10:06:42,540 - #44 )
INFO  10:06:42,540 - #40 ;
INFO  10:06:42,540 - #13 print
INFO  10:06:42,540 - #43 (
INFO  10:06:42,540 - #20 x
INFO  10:06:42,540 - #44 )
INFO  10:06:42,540 - #40 ;
INFO  10:06:42,540 - #48 }
INFO  10:06:42,540 - #48 }
INFO  10:06:42,540 - 

================SINTAKSNO STABLO====================


INFO  10:06:42,540 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   x
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamMulti(
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            ParamArray(
              Type(
               int
              ) [Type]
             niz
            ) [ParamArray]
          ) [ParamMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:06:42,540 - 

================SEMANTICKA OBRADA====================


INFO  10:06:42,556 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:06:42,556 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:06:42,556 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:06:42,556 - Formalni parametar funkcije fun: 'y' na liniji 6
ERROR 10:06:42,556 - Semanticka greska - 'x' je vec deklarisano na liniji 7
INFO  10:06:42,556 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  10:06:42,556 - Formalni parametar funkcije funx: 'y' na liniji 12
INFO  10:06:42,556 - Formalni parametar funkcije funx: 'niz' na liniji 12
INFO  10:06:42,556 - Pronadjen poziv funkcije 'fun' na liniji 18
INFO  10:06:42,556 - ===================================
ERROR 10:06:42,556 - Parsiranje nije uspesno zavrseno!
INFO  10:07:01,841 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:07:01,910 - #2 program
INFO  10:07:01,910 - #20 test301
INFO  10:07:01,910 - #20 int
INFO  10:07:01,910 - #20 x
INFO  10:07:01,910 - #41 ,
INFO  10:07:01,910 - #20 niz
INFO  10:07:01,910 - #45 [
INFO  10:07:01,910 - #46 ]
INFO  10:07:01,910 - #40 ;
INFO  10:07:01,910 - #47 {
INFO  10:07:01,910 - #20 int
INFO  10:07:01,910 - #20 fun
INFO  10:07:01,910 - #43 (
INFO  10:07:01,910 - #20 int
INFO  10:07:01,910 - #20 x
INFO  10:07:01,910 - #41 ,
INFO  10:07:01,910 - #20 int
INFO  10:07:01,910 - #20 y
INFO  10:07:01,910 - #44 )
INFO  10:07:01,910 - #20 int
INFO  10:07:01,910 - #20 niz
INFO  10:07:01,910 - #45 [
INFO  10:07:01,910 - #46 ]
INFO  10:07:01,910 - #40 ;
INFO  10:07:01,910 - #47 {
INFO  10:07:01,910 - #15 return
INFO  10:07:01,910 - #20 x
INFO  10:07:01,910 - #24 +
INFO  10:07:01,910 - #20 y
INFO  10:07:01,910 - #40 ;
INFO  10:07:01,910 - #48 }
INFO  10:07:01,910 - #20 int
INFO  10:07:01,910 - #20 funx
INFO  10:07:01,910 - #43 (
INFO  10:07:01,910 - #20 int
INFO  10:07:01,910 - #20 x
INFO  10:07:01,910 - #41 ,
INFO  10:07:01,910 - #20 int
INFO  10:07:01,910 - #20 y
INFO  10:07:01,910 - #41 ,
INFO  10:07:01,910 - #20 int
INFO  10:07:01,910 - #20 niz
INFO  10:07:01,910 - #45 [
INFO  10:07:01,910 - #46 ]
INFO  10:07:01,910 - #44 )
INFO  10:07:01,910 - #47 {
INFO  10:07:01,910 - #15 return
INFO  10:07:01,910 - #20 x
INFO  10:07:01,910 - #24 +
INFO  10:07:01,925 - #20 y
INFO  10:07:01,925 - #40 ;
INFO  10:07:01,925 - #48 }
INFO  10:07:01,925 - #16 void
INFO  10:07:01,925 - #20 main
INFO  10:07:01,925 - #43 (
INFO  10:07:01,925 - #44 )
INFO  10:07:01,925 - #47 {
INFO  10:07:01,925 - #20 x
INFO  10:07:01,925 - #37 =
INFO  10:07:01,925 - #20 fun
INFO  10:07:01,925 - #43 (
INFO  10:07:01,925 - #21 2
INFO  10:07:01,925 - #24 +
INFO  10:07:01,925 - #21 3
INFO  10:07:01,925 - #41 ,
INFO  10:07:01,925 - #21 3
INFO  10:07:01,925 - #26 *
INFO  10:07:01,925 - #21 10
INFO  10:07:01,925 - #44 )
INFO  10:07:01,925 - #40 ;
INFO  10:07:01,925 - #13 print
INFO  10:07:01,925 - #43 (
INFO  10:07:01,925 - #20 x
INFO  10:07:01,925 - #44 )
INFO  10:07:01,925 - #40 ;
INFO  10:07:01,925 - #48 }
INFO  10:07:01,925 - #48 }
INFO  10:07:01,925 - 

================SINTAKSNO STABLO====================


INFO  10:07:01,925 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamMulti(
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            ParamArray(
              Type(
               int
              ) [Type]
             niz
            ) [ParamArray]
          ) [ParamMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:07:01,925 - 

================SEMANTICKA OBRADA====================


INFO  10:07:01,941 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:07:01,941 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:07:01,941 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:07:01,941 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:07:01,941 - Deklarisan niz 'niz' na liniji 7
INFO  10:07:01,941 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  10:07:01,941 - Formalni parametar funkcije funx: 'y' na liniji 12
INFO  10:07:01,941 - Formalni parametar funkcije funx: 'niz' na liniji 12
INFO  10:07:01,941 - Pronadjen poziv funkcije 'fun' na liniji 18
INFO  10:07:01,941 - ===================================
INFO  10:07:01,941 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:07:01,957 - Parsiranje uspesno zavrseno!
INFO  10:07:34,097 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:07:34,135 - #2 program
INFO  10:07:34,135 - #20 test301
INFO  10:07:34,135 - #20 int
INFO  10:07:34,135 - #20 x
INFO  10:07:34,135 - #41 ,
INFO  10:07:34,135 - #20 niz
INFO  10:07:34,135 - #45 [
INFO  10:07:34,135 - #46 ]
INFO  10:07:34,135 - #40 ;
INFO  10:07:34,135 - #47 {
INFO  10:07:34,150 - #20 int
INFO  10:07:34,150 - #20 fun
INFO  10:07:34,150 - #43 (
INFO  10:07:34,150 - #20 int
INFO  10:07:34,150 - #20 x
INFO  10:07:34,150 - #41 ,
INFO  10:07:34,150 - #20 int
INFO  10:07:34,150 - #20 y
INFO  10:07:34,150 - #44 )
INFO  10:07:34,150 - #20 int
INFO  10:07:34,150 - #20 niz
INFO  10:07:34,150 - #45 [
INFO  10:07:34,150 - #46 ]
INFO  10:07:34,150 - #40 ;
INFO  10:07:34,150 - #47 {
INFO  10:07:34,150 - #15 return
INFO  10:07:34,150 - #20 x
INFO  10:07:34,150 - #24 +
INFO  10:07:34,150 - #20 y
INFO  10:07:34,150 - #40 ;
INFO  10:07:34,150 - #48 }
INFO  10:07:34,150 - #20 int
INFO  10:07:34,150 - #20 funx
INFO  10:07:34,150 - #43 (
INFO  10:07:34,150 - #20 int
INFO  10:07:34,150 - #20 x
INFO  10:07:34,150 - #41 ,
INFO  10:07:34,150 - #20 int
INFO  10:07:34,150 - #20 y
INFO  10:07:34,150 - #41 ,
INFO  10:07:34,150 - #20 int
INFO  10:07:34,150 - #20 niz
INFO  10:07:34,150 - #45 [
INFO  10:07:34,150 - #46 ]
INFO  10:07:34,150 - #44 )
INFO  10:07:34,150 - #47 {
INFO  10:07:34,150 - #15 return
INFO  10:07:34,150 - #20 x
INFO  10:07:34,150 - #24 +
INFO  10:07:34,150 - #20 y
INFO  10:07:34,150 - #40 ;
INFO  10:07:34,150 - #48 }
INFO  10:07:34,150 - #16 void
INFO  10:07:34,150 - #20 main
INFO  10:07:34,150 - #43 (
INFO  10:07:34,150 - #44 )
INFO  10:07:34,150 - #47 {
INFO  10:07:34,150 - #20 x
INFO  10:07:34,150 - #37 =
INFO  10:07:34,150 - #20 fun
INFO  10:07:34,150 - #43 (
INFO  10:07:34,150 - #21 2
INFO  10:07:34,150 - #24 +
INFO  10:07:34,150 - #21 3
INFO  10:07:34,150 - #41 ,
INFO  10:07:34,150 - #21 3
INFO  10:07:34,150 - #26 *
INFO  10:07:34,150 - #21 10
INFO  10:07:34,150 - #44 )
INFO  10:07:34,150 - #40 ;
INFO  10:07:34,150 - #13 print
INFO  10:07:34,150 - #43 (
INFO  10:07:34,150 - #20 x
INFO  10:07:34,150 - #44 )
INFO  10:07:34,150 - #40 ;
INFO  10:07:34,150 - #48 }
INFO  10:07:34,150 - #48 }
INFO  10:07:34,150 - 

================SINTAKSNO STABLO====================


INFO  10:07:34,150 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamMulti(
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            ParamArray(
              Type(
               int
              ) [Type]
             niz
            ) [ParamArray]
          ) [ParamMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:07:34,150 - 

================SEMANTICKA OBRADA====================


INFO  10:07:34,166 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:07:34,166 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:07:34,166 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:07:34,166 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:07:34,166 - Deklarisan niz 'niz' na liniji 7
INFO  10:07:34,166 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  10:07:34,166 - Formalni parametar funkcije funx: 'y' na liniji 12
INFO  10:07:34,166 - Formalni parametar funkcije funx: 'niz' na liniji 12
INFO  10:07:34,166 - Pronadjen poziv funkcije 'fun' na liniji 18
INFO  10:07:34,166 - ===================================
INFO  10:07:34,166 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:07:34,182 - Parsiranje uspesno zavrseno!
INFO  10:07:49,808 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:07:49,848 - #2 program
INFO  10:07:49,848 - #20 test301
INFO  10:07:49,848 - #20 int
INFO  10:07:49,848 - #20 x
INFO  10:07:49,848 - #41 ,
INFO  10:07:49,848 - #20 niz
INFO  10:07:49,848 - #45 [
INFO  10:07:49,848 - #46 ]
INFO  10:07:49,848 - #40 ;
INFO  10:07:49,848 - #47 {
INFO  10:07:49,848 - #20 int
INFO  10:07:49,848 - #20 fun
INFO  10:07:49,848 - #43 (
INFO  10:07:49,848 - #20 int
INFO  10:07:49,848 - #20 x
INFO  10:07:49,848 - #41 ,
INFO  10:07:49,848 - #20 int
INFO  10:07:49,848 - #20 y
INFO  10:07:49,848 - #44 )
INFO  10:07:49,848 - #20 int
INFO  10:07:49,848 - #20 niz
INFO  10:07:49,848 - #45 [
INFO  10:07:49,848 - #46 ]
INFO  10:07:49,848 - #40 ;
INFO  10:07:49,848 - #47 {
INFO  10:07:49,848 - #15 return
INFO  10:07:49,848 - #20 x
INFO  10:07:49,848 - #24 +
INFO  10:07:49,848 - #20 y
INFO  10:07:49,848 - #40 ;
INFO  10:07:49,863 - #48 }
INFO  10:07:49,863 - #20 int
INFO  10:07:49,863 - #20 funx
INFO  10:07:49,863 - #43 (
INFO  10:07:49,863 - #20 int
INFO  10:07:49,863 - #20 x
INFO  10:07:49,863 - #41 ,
INFO  10:07:49,863 - #20 int
INFO  10:07:49,863 - #20 y
INFO  10:07:49,863 - #44 )
INFO  10:07:49,863 - #47 {
INFO  10:07:49,863 - #20 int
INFO  10:07:49,863 - #20 niz
ERROR 10:07:49,863 - 
Sintaksna greska na liniji 13, koloni 5 za simbol "niz"!
INFO  10:07:49,863 - #45 [
INFO  10:07:49,863 - #46 ]
INFO  10:07:49,863 - #15 return
INFO  10:07:49,863 - #20 x
INFO  10:07:49,863 - #24 +
INFO  10:07:49,863 - #20 y
INFO  10:07:49,863 - #40 ;
INFO  10:07:49,863 - #48 }
INFO  10:07:49,863 - #16 void
INFO  10:07:49,863 - #20 main
INFO  10:07:49,863 - #43 (
INFO  10:07:49,863 - #44 )
INFO  10:07:49,863 - #47 {
INFO  10:07:49,863 - #20 x
INFO  10:07:49,863 - #37 =
ERROR 10:07:49,863 - Oporavak od greske u definiciji formalnih parametara funkcije na liniji 13, koloni 5 za simbol "niz"!
INFO  10:07:49,863 - #20 fun
INFO  10:07:49,863 - #43 (
INFO  10:07:49,863 - #21 2
INFO  10:07:49,863 - #24 +
INFO  10:07:49,863 - #21 3
INFO  10:07:49,863 - #41 ,
INFO  10:07:49,863 - #21 3
INFO  10:07:49,863 - #26 *
INFO  10:07:49,863 - #21 10
INFO  10:07:49,863 - #44 )
INFO  10:07:49,863 - #40 ;
INFO  10:07:49,863 - #13 print
INFO  10:07:49,863 - #43 (
INFO  10:07:49,863 - #20 x
INFO  10:07:49,863 - #44 )
INFO  10:07:49,863 - #40 ;
INFO  10:07:49,863 - #48 }
INFO  10:07:49,863 - #48 }
INFO  10:07:49,863 - 

================SINTAKSNO STABLO====================


INFO  10:07:49,863 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodTypeDeclaration(
      MethodType2(
        MethodTypeName(
          Type(
           int
          ) [Type]
         funx
        ) [MethodTypeName]
        ParamSingle(
          ParamError(
          ) [ParamError]
        ) [ParamSingle]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodType2]
    ) [MethodTypeDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:07:49,863 - 

================SEMANTICKA OBRADA====================


INFO  10:07:49,879 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:07:49,879 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:07:49,879 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:07:49,879 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:07:49,879 - Deklarisan niz 'niz' na liniji 7
INFO  10:07:49,879 - Pronadjen poziv funkcije 'fun' na liniji 19
INFO  10:07:49,879 - Semanticka greska - u programu mora postojati metoda 'void main();' na liniji 3
INFO  10:07:49,879 - ===================================
INFO  10:07:49,879 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:07:49,895 - Parsiranje uspesno zavrseno!
INFO  10:08:14,789 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:08:14,842 - #2 program
INFO  10:08:14,842 - #20 test301
INFO  10:08:14,842 - #20 int
INFO  10:08:14,842 - #20 x
INFO  10:08:14,842 - #41 ,
INFO  10:08:14,842 - #20 niz
INFO  10:08:14,842 - #45 [
INFO  10:08:14,842 - #46 ]
INFO  10:08:14,842 - #40 ;
INFO  10:08:14,842 - #47 {
INFO  10:08:14,842 - #20 int
INFO  10:08:14,842 - #20 fun
INFO  10:08:14,842 - #43 (
INFO  10:08:14,842 - #20 int
INFO  10:08:14,842 - #20 x
INFO  10:08:14,842 - #41 ,
INFO  10:08:14,842 - #20 int
INFO  10:08:14,842 - #20 y
INFO  10:08:14,842 - #44 )
INFO  10:08:14,842 - #20 int
INFO  10:08:14,842 - #20 niz
INFO  10:08:14,842 - #45 [
INFO  10:08:14,842 - #46 ]
INFO  10:08:14,842 - #40 ;
INFO  10:08:14,842 - #47 {
INFO  10:08:14,842 - #15 return
INFO  10:08:14,842 - #20 x
INFO  10:08:14,842 - #24 +
INFO  10:08:14,842 - #20 y
INFO  10:08:14,842 - #40 ;
INFO  10:08:14,842 - #48 }
INFO  10:08:14,842 - #20 int
INFO  10:08:14,842 - #20 funx
INFO  10:08:14,842 - #43 (
INFO  10:08:14,842 - #20 int
INFO  10:08:14,842 - #20 x
INFO  10:08:14,842 - #41 ,
INFO  10:08:14,842 - #20 int
INFO  10:08:14,842 - #20 y
INFO  10:08:14,842 - #44 )
INFO  10:08:14,842 - #20 int
INFO  10:08:14,842 - #20 niz
INFO  10:08:14,842 - #45 [
INFO  10:08:14,842 - #46 ]
INFO  10:08:14,842 - #47 {
ERROR 10:08:14,842 - 
Sintaksna greska na liniji 14, koloni 1 za simbol "{"!
INFO  10:08:14,842 - #15 return
INFO  10:08:14,842 - #20 x
INFO  10:08:14,842 - #24 +
INFO  10:08:14,842 - #20 y
INFO  10:08:14,842 - #40 ;
INFO  10:08:14,842 - #48 }
INFO  10:08:14,842 - #16 void
INFO  10:08:14,842 - #20 main
INFO  10:08:14,842 - #43 (
INFO  10:08:14,842 - #44 )
INFO  10:08:14,842 - #47 {
INFO  10:08:14,842 - #20 x
INFO  10:08:14,842 - #37 =
ERROR 10:08:14,842 - Oporavak od greske u definiciji formalnih parametara funkcije na liniji 14, koloni 1 za simbol "{"!
INFO  10:08:14,842 - #20 fun
INFO  10:08:14,842 - #43 (
INFO  10:08:14,842 - #21 2
INFO  10:08:14,842 - #24 +
INFO  10:08:14,858 - #21 3
INFO  10:08:14,858 - #41 ,
INFO  10:08:14,858 - #21 3
INFO  10:08:14,858 - #26 *
INFO  10:08:14,858 - #21 10
INFO  10:08:14,858 - #44 )
INFO  10:08:14,858 - #40 ;
INFO  10:08:14,858 - #13 print
INFO  10:08:14,858 - #43 (
INFO  10:08:14,858 - #20 x
INFO  10:08:14,858 - #44 )
INFO  10:08:14,858 - #40 ;
INFO  10:08:14,858 - #48 }
INFO  10:08:14,858 - #48 }
INFO  10:08:14,858 - 

================SINTAKSNO STABLO====================


INFO  10:08:14,858 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodTypeDeclaration(
      MethodType2(
        MethodTypeName(
          Type(
           int
          ) [Type]
         funx
        ) [MethodTypeName]
        ParamSingle(
          ParamError(
          ) [ParamError]
        ) [ParamSingle]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodType2]
    ) [MethodTypeDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:08:14,858 - 

================SEMANTICKA OBRADA====================


INFO  10:08:14,873 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:08:14,873 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:08:14,873 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:08:14,873 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:08:14,873 - Deklarisan niz 'niz' na liniji 7
INFO  10:08:14,873 - Pronadjen poziv funkcije 'fun' na liniji 20
INFO  10:08:14,873 - Semanticka greska - u programu mora postojati metoda 'void main();' na liniji 3
INFO  10:08:14,873 - ===================================
INFO  10:08:14,873 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:08:14,873 - Parsiranje uspesno zavrseno!
INFO  10:08:40,025 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:08:40,063 - #2 program
INFO  10:08:40,063 - #20 test301
INFO  10:08:40,063 - #20 int
INFO  10:08:40,063 - #20 x
INFO  10:08:40,063 - #41 ,
INFO  10:08:40,063 - #20 niz
INFO  10:08:40,063 - #45 [
INFO  10:08:40,063 - #46 ]
INFO  10:08:40,063 - #40 ;
INFO  10:08:40,063 - #47 {
INFO  10:08:40,063 - #20 int
INFO  10:08:40,063 - #20 fun
INFO  10:08:40,063 - #43 (
INFO  10:08:40,063 - #20 int
INFO  10:08:40,063 - #20 x
INFO  10:08:40,063 - #41 ,
INFO  10:08:40,063 - #20 int
INFO  10:08:40,063 - #20 y
INFO  10:08:40,063 - #44 )
INFO  10:08:40,063 - #20 int
INFO  10:08:40,063 - #20 niz
INFO  10:08:40,063 - #45 [
INFO  10:08:40,063 - #46 ]
INFO  10:08:40,063 - #40 ;
INFO  10:08:40,063 - #47 {
INFO  10:08:40,063 - #15 return
INFO  10:08:40,063 - #20 x
INFO  10:08:40,063 - #24 +
INFO  10:08:40,079 - #20 y
INFO  10:08:40,079 - #40 ;
INFO  10:08:40,079 - #48 }
INFO  10:08:40,079 - #20 int
INFO  10:08:40,079 - #20 funx
INFO  10:08:40,079 - #43 (
INFO  10:08:40,079 - #20 int
INFO  10:08:40,079 - #20 x
INFO  10:08:40,079 - #41 ,
INFO  10:08:40,079 - #20 int
INFO  10:08:40,079 - #20 y
INFO  10:08:40,079 - #44 )
INFO  10:08:40,079 - #20 int
INFO  10:08:40,079 - #20 niz
INFO  10:08:40,079 - #45 [
INFO  10:08:40,079 - #46 ]
INFO  10:08:40,079 - #47 {
ERROR 10:08:40,079 - 
Sintaksna greska na liniji 14, koloni 1 za simbol "{"!
INFO  10:08:40,079 - #15 return
INFO  10:08:40,079 - #20 x
INFO  10:08:40,079 - #24 +
INFO  10:08:40,079 - #20 y
INFO  10:08:40,079 - #40 ;
INFO  10:08:40,079 - #48 }
INFO  10:08:40,079 - #16 void
INFO  10:08:40,079 - #20 main
INFO  10:08:40,079 - #43 (
INFO  10:08:40,079 - #44 )
INFO  10:08:40,079 - #47 {
INFO  10:08:40,079 - #20 x
INFO  10:08:40,079 - #37 =
ERROR 10:08:40,079 - Oporavak od greske u definiciji formalnih parametara funkcije na liniji 14, koloni 1 za simbol "{"!
INFO  10:08:40,079 - #20 fun
INFO  10:08:40,079 - #43 (
INFO  10:08:40,079 - #21 2
INFO  10:08:40,079 - #24 +
INFO  10:08:40,079 - #21 3
INFO  10:08:40,079 - #41 ,
INFO  10:08:40,079 - #21 3
INFO  10:08:40,079 - #26 *
INFO  10:08:40,079 - #21 10
INFO  10:08:40,079 - #44 )
INFO  10:08:40,079 - #40 ;
INFO  10:08:40,079 - #13 print
INFO  10:08:40,079 - #43 (
INFO  10:08:40,079 - #20 x
INFO  10:08:40,079 - #44 )
INFO  10:08:40,079 - #40 ;
INFO  10:08:40,079 - #48 }
INFO  10:08:40,079 - #48 }
INFO  10:08:40,079 - 

================SINTAKSNO STABLO====================


INFO  10:08:40,079 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodTypeDeclaration(
      MethodType2(
        MethodTypeName(
          Type(
           int
          ) [Type]
         funx
        ) [MethodTypeName]
        ParamSingle(
          ParamError(
          ) [ParamError]
        ) [ParamSingle]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodType2]
    ) [MethodTypeDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:08:40,079 - 

================SEMANTICKA OBRADA====================


INFO  10:08:40,094 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:08:40,094 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:08:40,094 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:08:40,094 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:08:40,094 - Deklarisan niz 'niz' na liniji 7
INFO  10:08:40,094 - Pronadjen poziv funkcije 'fun' na liniji 20
INFO  10:08:40,094 - Semanticka greska - u programu mora postojati metoda 'void main();' na liniji 3
INFO  10:08:40,094 - ===================================
INFO  10:08:40,094 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:08:40,110 - Parsiranje uspesno zavrseno!
INFO  10:08:50,652 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:08:50,690 - #2 program
INFO  10:08:50,690 - #20 test301
INFO  10:08:50,690 - #20 int
INFO  10:08:50,690 - #20 x
INFO  10:08:50,690 - #41 ,
INFO  10:08:50,690 - #20 niz
INFO  10:08:50,690 - #45 [
INFO  10:08:50,690 - #46 ]
INFO  10:08:50,690 - #40 ;
INFO  10:08:50,690 - #47 {
INFO  10:08:50,690 - #20 int
INFO  10:08:50,690 - #20 fun
INFO  10:08:50,690 - #43 (
INFO  10:08:50,690 - #20 int
INFO  10:08:50,690 - #20 x
INFO  10:08:50,690 - #41 ,
INFO  10:08:50,690 - #20 int
INFO  10:08:50,690 - #20 y
INFO  10:08:50,690 - #44 )
INFO  10:08:50,690 - #20 int
INFO  10:08:50,690 - #20 niz
INFO  10:08:50,690 - #45 [
INFO  10:08:50,690 - #46 ]
INFO  10:08:50,690 - #40 ;
INFO  10:08:50,690 - #47 {
INFO  10:08:50,690 - #15 return
INFO  10:08:50,690 - #20 x
INFO  10:08:50,690 - #24 +
INFO  10:08:50,690 - #20 y
INFO  10:08:50,690 - #40 ;
INFO  10:08:50,690 - #48 }
INFO  10:08:50,706 - #20 int
INFO  10:08:50,706 - #20 funx
INFO  10:08:50,706 - #43 (
INFO  10:08:50,706 - #20 int
INFO  10:08:50,706 - #20 x
INFO  10:08:50,706 - #41 ,
INFO  10:08:50,706 - #20 int
INFO  10:08:50,706 - #20 y
INFO  10:08:50,706 - #44 )
INFO  10:08:50,706 - #20 int
INFO  10:08:50,706 - #20 niz
INFO  10:08:50,706 - #45 [
INFO  10:08:50,706 - #46 ]
INFO  10:08:50,706 - #47 {
ERROR 10:08:50,706 - 
Sintaksna greska na liniji 14, koloni 1 za simbol "{"!
INFO  10:08:50,706 - #15 return
INFO  10:08:50,706 - #20 x
INFO  10:08:50,706 - #24 +
INFO  10:08:50,706 - #20 y
INFO  10:08:50,706 - #40 ;
INFO  10:08:50,706 - #48 }
INFO  10:08:50,706 - #16 void
INFO  10:08:50,706 - #20 main
INFO  10:08:50,706 - #43 (
INFO  10:08:50,706 - #44 )
INFO  10:08:50,706 - #47 {
INFO  10:08:50,706 - #20 x
INFO  10:08:50,706 - #37 =
ERROR 10:08:50,706 - Oporavak od greske u definiciji formalnih parametara funkcije na liniji 14, koloni 1 za simbol "{"!
INFO  10:08:50,706 - #20 fun
INFO  10:08:50,706 - #43 (
INFO  10:08:50,706 - #21 2
INFO  10:08:50,706 - #24 +
INFO  10:08:50,706 - #21 3
INFO  10:08:50,706 - #41 ,
INFO  10:08:50,706 - #21 3
INFO  10:08:50,706 - #26 *
INFO  10:08:50,706 - #21 10
INFO  10:08:50,706 - #44 )
INFO  10:08:50,706 - #40 ;
INFO  10:08:50,706 - #13 print
INFO  10:08:50,706 - #43 (
INFO  10:08:50,706 - #20 x
INFO  10:08:50,706 - #44 )
INFO  10:08:50,706 - #40 ;
INFO  10:08:50,706 - #48 }
INFO  10:08:50,706 - #48 }
INFO  10:08:50,706 - 

================SINTAKSNO STABLO====================


INFO  10:08:50,706 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodTypeDeclaration(
      MethodType2(
        MethodTypeName(
          Type(
           int
          ) [Type]
         funx
        ) [MethodTypeName]
        ParamSingle(
          ParamError(
          ) [ParamError]
        ) [ParamSingle]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodType2]
    ) [MethodTypeDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:08:50,706 - 

================SEMANTICKA OBRADA====================


INFO  10:08:50,721 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:08:50,721 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:08:50,721 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:08:50,721 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:08:50,721 - Deklarisan niz 'niz' na liniji 7
INFO  10:08:50,721 - Pronadjen poziv funkcije 'fun' na liniji 20
INFO  10:08:50,721 - Semanticka greska - u programu mora postojati metoda 'void main();' na liniji 3
INFO  10:08:50,721 - ===================================
INFO  10:08:50,721 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:08:50,737 - Parsiranje uspesno zavrseno!
INFO  10:10:18,239 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:10:18,293 - #2 program
INFO  10:10:18,293 - #20 test301
INFO  10:10:18,293 - #20 int
INFO  10:10:18,293 - #20 x
INFO  10:10:18,293 - #41 ,
INFO  10:10:18,293 - #20 niz
INFO  10:10:18,293 - #45 [
INFO  10:10:18,293 - #46 ]
INFO  10:10:18,293 - #40 ;
INFO  10:10:18,293 - #47 {
INFO  10:10:18,293 - #20 int
INFO  10:10:18,293 - #20 fun
INFO  10:10:18,293 - #43 (
INFO  10:10:18,293 - #20 int
INFO  10:10:18,293 - #20 x
INFO  10:10:18,293 - #41 ,
INFO  10:10:18,293 - #20 int
INFO  10:10:18,293 - #20 y
INFO  10:10:18,293 - #44 )
INFO  10:10:18,293 - #20 int
INFO  10:10:18,293 - #20 niz
INFO  10:10:18,293 - #45 [
INFO  10:10:18,293 - #46 ]
INFO  10:10:18,293 - #40 ;
INFO  10:10:18,293 - #47 {
INFO  10:10:18,293 - #15 return
INFO  10:10:18,293 - #20 x
INFO  10:10:18,293 - #24 +
INFO  10:10:18,293 - #20 y
INFO  10:10:18,293 - #40 ;
INFO  10:10:18,293 - #48 }
INFO  10:10:18,293 - #20 int
INFO  10:10:18,293 - #20 funx
INFO  10:10:18,293 - #43 (
INFO  10:10:18,293 - #20 int
INFO  10:10:18,293 - #20 x
INFO  10:10:18,293 - #41 ,
INFO  10:10:18,293 - #20 int
INFO  10:10:18,293 - #20 y
INFO  10:10:18,293 - #44 )
INFO  10:10:18,293 - #20 int
INFO  10:10:18,293 - #20 niz
INFO  10:10:18,293 - #45 [
INFO  10:10:18,293 - #46 ]
INFO  10:10:18,293 - #47 {
ERROR 10:10:18,293 - 
Sintaksna greska na liniji 14, koloni 1 za simbol "{"!
INFO  10:10:18,293 - #15 return
INFO  10:10:18,293 - #20 x
INFO  10:10:18,293 - #24 +
INFO  10:10:18,293 - #20 y
INFO  10:10:18,293 - #40 ;
INFO  10:10:18,293 - #48 }
INFO  10:10:18,293 - #16 void
INFO  10:10:18,293 - #20 main
INFO  10:10:18,293 - #43 (
INFO  10:10:18,293 - #44 )
INFO  10:10:18,293 - #47 {
INFO  10:10:18,293 - #20 x
INFO  10:10:18,293 - #37 =
ERROR 10:10:18,293 - Oporavak od greske u definiciji formalnih parametara funkcije na liniji 14, koloni 1 za simbol "{"!
INFO  10:10:18,293 - #20 fun
INFO  10:10:18,293 - #43 (
INFO  10:10:18,293 - #21 2
INFO  10:10:18,293 - #24 +
INFO  10:10:18,293 - #21 3
INFO  10:10:18,293 - #41 ,
INFO  10:10:18,293 - #21 3
INFO  10:10:18,293 - #26 *
INFO  10:10:18,293 - #21 10
INFO  10:10:18,293 - #44 )
INFO  10:10:18,293 - #40 ;
INFO  10:10:18,293 - #13 print
INFO  10:10:18,293 - #43 (
INFO  10:10:18,293 - #20 x
INFO  10:10:18,293 - #44 )
INFO  10:10:18,293 - #40 ;
INFO  10:10:18,293 - #48 }
INFO  10:10:18,293 - #48 }
INFO  10:10:18,293 - 

================SINTAKSNO STABLO====================


INFO  10:10:18,308 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodTypeDeclaration(
      MethodType2(
        MethodTypeName(
          Type(
           int
          ) [Type]
         funx
        ) [MethodTypeName]
        ParamSingle(
          ParamError(
          ) [ParamError]
        ) [ParamSingle]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodType2]
    ) [MethodTypeDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:10:18,308 - 

================SEMANTICKA OBRADA====================


INFO  10:10:18,308 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:10:18,308 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:10:18,308 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:10:18,324 - Formalni parametar funkcije fun: 'y' na liniji 6
ERROR 10:10:18,324 - Semanticka greska - 'niz' je vec deklarisano na liniji 7
INFO  10:10:18,324 - Pronadjen poziv funkcije 'fun' na liniji 20
INFO  10:10:18,324 - Semanticka greska - u programu mora postojati metoda 'void main();' na liniji 3
INFO  10:10:18,324 - ===================================
ERROR 10:10:18,324 - Parsiranje nije uspesno zavrseno!
INFO  10:12:26,366 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:12:26,428 - #2 program
INFO  10:12:26,428 - #20 test301
INFO  10:12:26,428 - #20 int
INFO  10:12:26,428 - #20 x
INFO  10:12:26,428 - #41 ,
INFO  10:12:26,435 - #20 niz
INFO  10:12:26,435 - #45 [
INFO  10:12:26,435 - #46 ]
INFO  10:12:26,435 - #40 ;
INFO  10:12:26,435 - #47 {
INFO  10:12:26,435 - #20 int
INFO  10:12:26,435 - #20 fun
INFO  10:12:26,435 - #43 (
INFO  10:12:26,435 - #20 int
INFO  10:12:26,435 - #20 x
INFO  10:12:26,435 - #41 ,
INFO  10:12:26,435 - #20 int
INFO  10:12:26,435 - #20 y
INFO  10:12:26,435 - #44 )
INFO  10:12:26,435 - #20 int
INFO  10:12:26,435 - #20 niz
INFO  10:12:26,435 - #45 [
INFO  10:12:26,435 - #46 ]
INFO  10:12:26,435 - #40 ;
INFO  10:12:26,435 - #47 {
INFO  10:12:26,435 - #15 return
INFO  10:12:26,435 - #20 x
INFO  10:12:26,435 - #24 +
INFO  10:12:26,435 - #20 y
INFO  10:12:26,435 - #40 ;
INFO  10:12:26,435 - #48 }
INFO  10:12:26,435 - #20 int
INFO  10:12:26,435 - #20 funx
INFO  10:12:26,435 - #43 (
INFO  10:12:26,435 - #20 int
INFO  10:12:26,435 - #20 x
INFO  10:12:26,435 - #41 ,
INFO  10:12:26,435 - #20 int
INFO  10:12:26,435 - #20 y
INFO  10:12:26,435 - #44 )
INFO  10:12:26,435 - #20 int
INFO  10:12:26,435 - #20 niz
INFO  10:12:26,435 - #45 [
INFO  10:12:26,435 - #46 ]
INFO  10:12:26,435 - #47 {
ERROR 10:12:26,435 - 
Sintaksna greska na liniji 14, koloni 1 za simbol "{"!
INFO  10:12:26,435 - #15 return
INFO  10:12:26,435 - #20 x
INFO  10:12:26,435 - #24 +
INFO  10:12:26,435 - #20 y
INFO  10:12:26,435 - #40 ;
INFO  10:12:26,435 - #48 }
INFO  10:12:26,435 - #16 void
INFO  10:12:26,435 - #20 main
INFO  10:12:26,435 - #43 (
INFO  10:12:26,435 - #44 )
INFO  10:12:26,435 - #47 {
INFO  10:12:26,435 - #20 x
INFO  10:12:26,435 - #37 =
ERROR 10:12:26,435 - Oporavak od greske u definiciji formalnih parametara funkcije na liniji 14, koloni 1 za simbol "{"!
INFO  10:12:26,435 - #20 fun
INFO  10:12:26,435 - #43 (
INFO  10:12:26,435 - #21 2
INFO  10:12:26,435 - #24 +
INFO  10:12:26,435 - #21 3
INFO  10:12:26,435 - #41 ,
INFO  10:12:26,435 - #21 3
INFO  10:12:26,435 - #26 *
INFO  10:12:26,435 - #21 10
INFO  10:12:26,435 - #44 )
INFO  10:12:26,435 - #40 ;
INFO  10:12:26,435 - #13 print
INFO  10:12:26,435 - #43 (
INFO  10:12:26,435 - #20 x
INFO  10:12:26,435 - #44 )
INFO  10:12:26,435 - #40 ;
INFO  10:12:26,435 - #48 }
INFO  10:12:26,435 - #48 }
INFO  10:12:26,435 - 

================SINTAKSNO STABLO====================


INFO  10:12:26,435 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodTypeDeclaration(
      MethodType2(
        MethodTypeName(
          Type(
           int
          ) [Type]
         funx
        ) [MethodTypeName]
        ParamSingle(
          ParamError(
          ) [ParamError]
        ) [ParamSingle]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodType2]
    ) [MethodTypeDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:12:26,435 - 

================SEMANTICKA OBRADA====================


INFO  10:12:26,450 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:12:26,450 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:12:26,450 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:12:26,450 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:12:26,450 - Deklarisan niz 'niz' na liniji 7
INFO  10:12:26,450 - Pronadjen poziv funkcije 'fun' na liniji 20
INFO  10:12:26,450 - Semanticka greska - u programu mora postojati metoda 'void main();' na liniji 3
INFO  10:12:26,450 - ===================================
INFO  10:12:26,450 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:12:26,466 - Parsiranje uspesno zavrseno!
INFO  10:16:22,568 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:16:22,615 - #2 program
INFO  10:16:22,615 - #20 test301
INFO  10:16:22,615 - #20 int
INFO  10:16:22,615 - #20 x
INFO  10:16:22,615 - #41 ,
INFO  10:16:22,615 - #20 niz
INFO  10:16:22,615 - #45 [
INFO  10:16:22,615 - #46 ]
INFO  10:16:22,615 - #40 ;
INFO  10:16:22,631 - #47 {
INFO  10:16:22,631 - #20 int
INFO  10:16:22,631 - #20 fun
INFO  10:16:22,631 - #43 (
INFO  10:16:22,631 - #20 int
INFO  10:16:22,631 - #20 x
INFO  10:16:22,631 - #41 ,
INFO  10:16:22,631 - #20 int
INFO  10:16:22,631 - #20 y
INFO  10:16:22,631 - #44 )
INFO  10:16:22,631 - #20 int
INFO  10:16:22,631 - #20 niz
INFO  10:16:22,631 - #45 [
INFO  10:16:22,631 - #46 ]
INFO  10:16:22,631 - #40 ;
INFO  10:16:22,631 - #47 {
INFO  10:16:22,631 - #15 return
INFO  10:16:22,631 - #20 x
INFO  10:16:22,631 - #24 +
INFO  10:16:22,631 - #20 y
INFO  10:16:22,631 - #40 ;
INFO  10:16:22,631 - #48 }
INFO  10:16:22,631 - #20 int
INFO  10:16:22,631 - #20 funx
INFO  10:16:22,631 - #43 (
INFO  10:16:22,631 - #20 int
INFO  10:16:22,631 - #20 x
INFO  10:16:22,631 - #41 ,
INFO  10:16:22,631 - #20 int
INFO  10:16:22,631 - #20 y
INFO  10:16:22,631 - #44 )
INFO  10:16:22,631 - #20 int
INFO  10:16:22,631 - #20 niz
INFO  10:16:22,631 - #45 [
INFO  10:16:22,631 - #46 ]
INFO  10:16:22,631 - #47 {
ERROR 10:16:22,631 - 
Sintaksna greska na liniji 14, koloni 1 za simbol "{"!
INFO  10:16:22,637 - #15 return
INFO  10:16:22,637 - #20 x
INFO  10:16:22,637 - #24 +
INFO  10:16:22,637 - #20 y
INFO  10:16:22,637 - #40 ;
INFO  10:16:22,637 - #48 }
INFO  10:16:22,637 - #16 void
INFO  10:16:22,637 - #20 main
INFO  10:16:22,637 - #43 (
INFO  10:16:22,637 - #44 )
INFO  10:16:22,637 - #47 {
INFO  10:16:22,637 - #20 x
INFO  10:16:22,637 - #37 =
ERROR 10:16:22,637 - Oporavak od greske u definiciji formalnih parametara funkcije na liniji 14, koloni 1 za simbol "{"!
INFO  10:16:22,637 - #20 fun
INFO  10:16:22,637 - #43 (
INFO  10:16:22,637 - #21 2
INFO  10:16:22,637 - #24 +
INFO  10:16:22,637 - #21 3
INFO  10:16:22,637 - #41 ,
INFO  10:16:22,637 - #21 3
INFO  10:16:22,637 - #26 *
INFO  10:16:22,637 - #21 10
INFO  10:16:22,637 - #44 )
INFO  10:16:22,637 - #40 ;
INFO  10:16:22,637 - #13 print
INFO  10:16:22,637 - #43 (
INFO  10:16:22,637 - #20 x
INFO  10:16:22,637 - #44 )
INFO  10:16:22,637 - #40 ;
INFO  10:16:22,637 - #48 }
INFO  10:16:22,637 - #48 }
INFO  10:16:22,637 - 

================SINTAKSNO STABLO====================


INFO  10:16:22,637 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDeclSingle(
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           fun
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDeclSingle]
    MethodTypeDeclaration(
      MethodType2(
        MethodTypeName(
          Type(
           int
          ) [Type]
         funx
        ) [MethodTypeName]
        ParamSingle(
          ParamError(
          ) [ParamError]
        ) [ParamSingle]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodType2]
    ) [MethodTypeDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:16:22,637 - 

================SEMANTICKA OBRADA====================


INFO  10:16:22,658 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:16:22,658 - Deklarisan globalni niz 'niz' na liniji 4
ERROR 10:16:22,659 - AAAx
INFO  10:16:22,662 - Formalni parametar funkcije fun: 'x' na liniji 6
ERROR 10:16:22,662 - AAAy
INFO  10:16:22,662 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:16:22,662 - Deklarisan niz 'niz' na liniji 7
INFO  10:16:22,662 - Pronadjen poziv funkcije 'fun' na liniji 20
INFO  10:16:22,663 - Semanticka greska - u programu mora postojati metoda 'void main();' na liniji 3
INFO  10:16:22,663 - ===================================
ERROR 10:16:22,663 - Parsiranje nije uspesno zavrseno!
INFO  10:16:54,781 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:16:54,827 - #2 program
INFO  10:16:54,827 - #20 test301
INFO  10:16:54,827 - #20 int
INFO  10:16:54,827 - #20 x
INFO  10:16:54,827 - #41 ,
INFO  10:16:54,827 - #20 niz
INFO  10:16:54,827 - #45 [
INFO  10:16:54,827 - #46 ]
INFO  10:16:54,827 - #40 ;
INFO  10:16:54,827 - #47 {
INFO  10:16:54,827 - #20 int
INFO  10:16:54,827 - #20 fun
INFO  10:16:54,827 - #43 (
INFO  10:16:54,827 - #20 int
INFO  10:16:54,827 - #20 x
INFO  10:16:54,827 - #41 ,
INFO  10:16:54,827 - #20 int
INFO  10:16:54,827 - #20 y
INFO  10:16:54,827 - #44 )
INFO  10:16:54,827 - #20 int
INFO  10:16:54,827 - #20 niz
INFO  10:16:54,827 - #45 [
INFO  10:16:54,827 - #46 ]
INFO  10:16:54,827 - #40 ;
INFO  10:16:54,827 - #47 {
INFO  10:16:54,827 - #15 return
INFO  10:16:54,827 - #20 x
INFO  10:16:54,827 - #24 +
INFO  10:16:54,827 - #20 y
INFO  10:16:54,827 - #40 ;
INFO  10:16:54,827 - #48 }
INFO  10:16:54,827 - #20 int
INFO  10:16:54,827 - #20 funx
INFO  10:16:54,827 - #43 (
INFO  10:16:54,827 - #20 int
INFO  10:16:54,827 - #20 x
INFO  10:16:54,827 - #41 ,
INFO  10:16:54,827 - #20 int
INFO  10:16:54,827 - #20 y
INFO  10:16:54,827 - #44 )
INFO  10:16:54,827 - #20 int
INFO  10:16:54,827 - #20 niz
INFO  10:16:54,827 - #45 [
INFO  10:16:54,827 - #46 ]
INFO  10:16:54,827 - #40 ;
INFO  10:16:54,827 - #47 {
INFO  10:16:54,827 - #15 return
INFO  10:16:54,827 - #20 x
INFO  10:16:54,827 - #24 +
INFO  10:16:54,827 - #20 y
INFO  10:16:54,827 - #40 ;
INFO  10:16:54,827 - #48 }
INFO  10:16:54,827 - #16 void
INFO  10:16:54,827 - #20 main
INFO  10:16:54,827 - #43 (
INFO  10:16:54,827 - #44 )
INFO  10:16:54,827 - #47 {
INFO  10:16:54,827 - #20 x
INFO  10:16:54,827 - #37 =
INFO  10:16:54,827 - #20 fun
INFO  10:16:54,827 - #43 (
INFO  10:16:54,827 - #21 2
INFO  10:16:54,827 - #24 +
INFO  10:16:54,827 - #21 3
INFO  10:16:54,827 - #41 ,
INFO  10:16:54,827 - #21 3
INFO  10:16:54,827 - #26 *
INFO  10:16:54,827 - #21 10
INFO  10:16:54,827 - #44 )
INFO  10:16:54,827 - #40 ;
INFO  10:16:54,827 - #13 print
INFO  10:16:54,827 - #43 (
INFO  10:16:54,827 - #20 x
INFO  10:16:54,827 - #44 )
INFO  10:16:54,827 - #40 ;
INFO  10:16:54,827 - #48 }
INFO  10:16:54,827 - #48 }
INFO  10:16:54,827 - 

================SINTAKSNO STABLO====================


INFO  10:16:54,843 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:16:54,843 - 

================SEMANTICKA OBRADA====================


INFO  10:16:54,843 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:16:54,859 - Deklarisan globalni niz 'niz' na liniji 4
ERROR 10:16:54,859 - AAAx
INFO  10:16:54,859 - Formalni parametar funkcije fun: 'x' na liniji 6
ERROR 10:16:54,859 - AAAy
INFO  10:16:54,859 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:16:54,859 - Deklarisan niz 'niz' na liniji 7
ERROR 10:16:54,859 - AAAx
INFO  10:16:54,859 - Formalni parametar funkcije funx: 'x' na liniji 12
ERROR 10:16:54,859 - AAAy
INFO  10:16:54,859 - Formalni parametar funkcije funx: 'y' na liniji 12
INFO  10:16:54,859 - Deklarisan niz 'niz' na liniji 13
INFO  10:16:54,859 - Pronadjen poziv funkcije 'fun' na liniji 20
INFO  10:16:54,859 - ===================================
ERROR 10:16:54,859 - Parsiranje nije uspesno zavrseno!
INFO  10:17:10,955 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:17:11,009 - #2 program
INFO  10:17:11,009 - #20 test301
INFO  10:17:11,009 - #20 int
INFO  10:17:11,009 - #20 x
INFO  10:17:11,009 - #41 ,
INFO  10:17:11,009 - #20 niz
INFO  10:17:11,009 - #45 [
INFO  10:17:11,009 - #46 ]
INFO  10:17:11,009 - #40 ;
INFO  10:17:11,009 - #47 {
INFO  10:17:11,009 - #20 int
INFO  10:17:11,009 - #20 fun
INFO  10:17:11,009 - #43 (
INFO  10:17:11,009 - #20 int
INFO  10:17:11,009 - #20 x
INFO  10:17:11,009 - #41 ,
INFO  10:17:11,009 - #20 int
INFO  10:17:11,009 - #20 y
INFO  10:17:11,009 - #44 )
INFO  10:17:11,009 - #20 int
INFO  10:17:11,009 - #20 niz
INFO  10:17:11,009 - #45 [
INFO  10:17:11,009 - #46 ]
INFO  10:17:11,009 - #40 ;
INFO  10:17:11,009 - #47 {
INFO  10:17:11,009 - #15 return
INFO  10:17:11,009 - #20 x
INFO  10:17:11,009 - #24 +
INFO  10:17:11,009 - #20 y
INFO  10:17:11,009 - #40 ;
INFO  10:17:11,024 - #48 }
INFO  10:17:11,024 - #20 int
INFO  10:17:11,024 - #20 funx
INFO  10:17:11,024 - #43 (
INFO  10:17:11,024 - #20 int
INFO  10:17:11,024 - #20 x
INFO  10:17:11,024 - #41 ,
INFO  10:17:11,024 - #20 int
INFO  10:17:11,024 - #20 y
INFO  10:17:11,024 - #44 )
INFO  10:17:11,024 - #20 int
INFO  10:17:11,024 - #20 niz
INFO  10:17:11,024 - #45 [
INFO  10:17:11,024 - #46 ]
INFO  10:17:11,024 - #40 ;
INFO  10:17:11,024 - #47 {
INFO  10:17:11,024 - #15 return
INFO  10:17:11,024 - #20 x
INFO  10:17:11,024 - #24 +
INFO  10:17:11,024 - #20 y
INFO  10:17:11,024 - #40 ;
INFO  10:17:11,024 - #48 }
INFO  10:17:11,024 - #16 void
INFO  10:17:11,024 - #20 main
INFO  10:17:11,024 - #43 (
INFO  10:17:11,024 - #44 )
INFO  10:17:11,024 - #47 {
INFO  10:17:11,024 - #20 x
INFO  10:17:11,024 - #37 =
INFO  10:17:11,024 - #20 fun
INFO  10:17:11,024 - #43 (
INFO  10:17:11,024 - #21 2
INFO  10:17:11,024 - #24 +
INFO  10:17:11,024 - #21 3
INFO  10:17:11,024 - #41 ,
INFO  10:17:11,024 - #21 3
INFO  10:17:11,024 - #26 *
INFO  10:17:11,024 - #21 10
INFO  10:17:11,024 - #44 )
INFO  10:17:11,024 - #40 ;
INFO  10:17:11,024 - #13 print
INFO  10:17:11,024 - #43 (
INFO  10:17:11,024 - #20 x
INFO  10:17:11,024 - #44 )
INFO  10:17:11,024 - #40 ;
INFO  10:17:11,024 - #48 }
INFO  10:17:11,024 - #48 }
INFO  10:17:11,024 - 

================SINTAKSNO STABLO====================


INFO  10:17:11,024 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:17:11,024 - 

================SEMANTICKA OBRADA====================


INFO  10:17:11,040 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:17:11,040 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:17:11,040 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:17:11,040 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:17:11,040 - Deklarisan niz 'niz' na liniji 7
INFO  10:17:11,040 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  10:17:11,040 - Formalni parametar funkcije funx: 'y' na liniji 12
INFO  10:17:11,040 - Deklarisan niz 'niz' na liniji 13
INFO  10:17:11,040 - Pronadjen poziv funkcije 'fun' na liniji 20
INFO  10:17:11,040 - ===================================
INFO  10:17:11,040 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:17:11,056 - Parsiranje uspesno zavrseno!
INFO  10:18:39,375 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:18:39,423 - #2 program
INFO  10:18:39,423 - #20 test301
INFO  10:18:39,423 - #20 int
INFO  10:18:39,423 - #20 x
INFO  10:18:39,423 - #41 ,
INFO  10:18:39,423 - #20 niz
INFO  10:18:39,423 - #45 [
INFO  10:18:39,423 - #46 ]
INFO  10:18:39,423 - #40 ;
INFO  10:18:39,423 - #47 {
INFO  10:18:39,423 - #20 int
INFO  10:18:39,423 - #20 fun
INFO  10:18:39,423 - #43 (
INFO  10:18:39,423 - #20 int
INFO  10:18:39,423 - #20 x
INFO  10:18:39,423 - #41 ,
INFO  10:18:39,423 - #20 int
INFO  10:18:39,423 - #20 y
INFO  10:18:39,423 - #44 )
INFO  10:18:39,423 - #20 int
INFO  10:18:39,423 - #20 niz
INFO  10:18:39,423 - #45 [
INFO  10:18:39,423 - #46 ]
INFO  10:18:39,423 - #40 ;
INFO  10:18:39,423 - #47 {
INFO  10:18:39,423 - #15 return
INFO  10:18:39,423 - #20 x
INFO  10:18:39,423 - #24 +
INFO  10:18:39,423 - #20 y
INFO  10:18:39,423 - #40 ;
INFO  10:18:39,423 - #48 }
INFO  10:18:39,423 - #20 int
INFO  10:18:39,423 - #20 funx
INFO  10:18:39,423 - #43 (
INFO  10:18:39,423 - #20 int
INFO  10:18:39,423 - #20 x
INFO  10:18:39,423 - #41 ,
INFO  10:18:39,438 - #20 int
INFO  10:18:39,438 - #20 y
INFO  10:18:39,438 - #44 )
INFO  10:18:39,438 - #20 int
INFO  10:18:39,438 - #20 niz
INFO  10:18:39,438 - #45 [
INFO  10:18:39,438 - #46 ]
INFO  10:18:39,438 - #40 ;
INFO  10:18:39,438 - #20 int
INFO  10:18:39,438 - #20 x
INFO  10:18:39,438 - #40 ;
INFO  10:18:39,438 - #47 {
INFO  10:18:39,438 - #15 return
INFO  10:18:39,438 - #20 x
INFO  10:18:39,438 - #24 +
INFO  10:18:39,438 - #20 y
INFO  10:18:39,438 - #40 ;
INFO  10:18:39,438 - #48 }
INFO  10:18:39,438 - #16 void
INFO  10:18:39,438 - #20 main
INFO  10:18:39,438 - #43 (
INFO  10:18:39,438 - #44 )
INFO  10:18:39,438 - #47 {
INFO  10:18:39,438 - #20 x
INFO  10:18:39,438 - #37 =
INFO  10:18:39,438 - #20 fun
INFO  10:18:39,438 - #43 (
INFO  10:18:39,438 - #21 2
INFO  10:18:39,438 - #24 +
INFO  10:18:39,438 - #21 3
INFO  10:18:39,438 - #41 ,
INFO  10:18:39,438 - #21 3
INFO  10:18:39,438 - #26 *
INFO  10:18:39,438 - #21 10
INFO  10:18:39,438 - #44 )
INFO  10:18:39,438 - #40 ;
INFO  10:18:39,438 - #13 print
INFO  10:18:39,438 - #43 (
INFO  10:18:39,438 - #20 x
INFO  10:18:39,438 - #44 )
INFO  10:18:39,438 - #40 ;
INFO  10:18:39,438 - #48 }
INFO  10:18:39,438 - #48 }
INFO  10:18:39,446 - 

================SINTAKSNO STABLO====================


INFO  10:18:39,448 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          VarDeclMulti(
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 x
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:18:39,448 - 

================SEMANTICKA OBRADA====================


INFO  10:18:39,460 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:18:39,463 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:18:39,463 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:18:39,463 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:18:39,463 - Deklarisan niz 'niz' na liniji 7
INFO  10:18:39,463 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  10:18:39,463 - Formalni parametar funkcije funx: 'y' na liniji 12
INFO  10:18:39,463 - Deklarisan niz 'niz' na liniji 13
ERROR 10:18:39,463 - Semanticka greska - 'x' je vec deklarisano na liniji 13
INFO  10:18:39,463 - Pronadjen poziv funkcije 'fun' na liniji 20
INFO  10:18:39,463 - ===================================
ERROR 10:18:39,463 - Parsiranje nije uspesno zavrseno!
INFO  10:19:00,963 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:19:01,009 - #2 program
INFO  10:19:01,009 - #20 test301
INFO  10:19:01,009 - #20 int
INFO  10:19:01,025 - #20 x
INFO  10:19:01,025 - #41 ,
INFO  10:19:01,025 - #20 niz
INFO  10:19:01,025 - #45 [
INFO  10:19:01,025 - #46 ]
INFO  10:19:01,025 - #40 ;
INFO  10:19:01,025 - #47 {
INFO  10:19:01,025 - #20 int
INFO  10:19:01,025 - #20 fun
INFO  10:19:01,025 - #43 (
INFO  10:19:01,025 - #20 int
INFO  10:19:01,025 - #20 x
INFO  10:19:01,025 - #41 ,
INFO  10:19:01,025 - #20 int
INFO  10:19:01,025 - #20 y
INFO  10:19:01,025 - #44 )
INFO  10:19:01,025 - #20 int
INFO  10:19:01,025 - #20 niz
INFO  10:19:01,025 - #45 [
INFO  10:19:01,025 - #46 ]
INFO  10:19:01,025 - #40 ;
INFO  10:19:01,025 - #47 {
INFO  10:19:01,025 - #15 return
INFO  10:19:01,025 - #20 x
INFO  10:19:01,025 - #24 +
INFO  10:19:01,025 - #20 y
INFO  10:19:01,025 - #40 ;
INFO  10:19:01,025 - #48 }
INFO  10:19:01,025 - #20 int
INFO  10:19:01,032 - #20 funx
INFO  10:19:01,032 - #43 (
INFO  10:19:01,032 - #20 int
INFO  10:19:01,032 - #20 x
INFO  10:19:01,032 - #41 ,
INFO  10:19:01,032 - #20 int
INFO  10:19:01,032 - #20 y
INFO  10:19:01,032 - #41 ,
INFO  10:19:01,032 - #20 int
INFO  10:19:01,032 - #20 niz
INFO  10:19:01,032 - #45 [
INFO  10:19:01,032 - #46 ]
INFO  10:19:01,032 - #44 )
INFO  10:19:01,032 - #20 int
INFO  10:19:01,032 - #20 niz
INFO  10:19:01,032 - #45 [
INFO  10:19:01,032 - #46 ]
INFO  10:19:01,032 - #40 ;
INFO  10:19:01,032 - #47 {
INFO  10:19:01,032 - #15 return
INFO  10:19:01,032 - #20 x
INFO  10:19:01,032 - #24 +
INFO  10:19:01,032 - #20 y
INFO  10:19:01,032 - #40 ;
INFO  10:19:01,032 - #48 }
INFO  10:19:01,032 - #16 void
INFO  10:19:01,032 - #20 main
INFO  10:19:01,032 - #43 (
INFO  10:19:01,032 - #44 )
INFO  10:19:01,032 - #47 {
INFO  10:19:01,032 - #20 x
INFO  10:19:01,032 - #37 =
INFO  10:19:01,032 - #20 fun
INFO  10:19:01,032 - #43 (
INFO  10:19:01,032 - #21 2
INFO  10:19:01,032 - #24 +
INFO  10:19:01,032 - #21 3
INFO  10:19:01,032 - #41 ,
INFO  10:19:01,032 - #21 3
INFO  10:19:01,032 - #26 *
INFO  10:19:01,032 - #21 10
INFO  10:19:01,032 - #44 )
INFO  10:19:01,032 - #40 ;
INFO  10:19:01,032 - #13 print
INFO  10:19:01,032 - #43 (
INFO  10:19:01,032 - #20 x
INFO  10:19:01,032 - #44 )
INFO  10:19:01,032 - #40 ;
INFO  10:19:01,032 - #48 }
INFO  10:19:01,032 - #48 }
INFO  10:19:01,032 - 

================SINTAKSNO STABLO====================


INFO  10:19:01,032 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamMulti(
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            ParamArray(
              Type(
               int
              ) [Type]
             niz
            ) [ParamArray]
          ) [ParamMulti]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:19:01,032 - 

================SEMANTICKA OBRADA====================


INFO  10:19:01,047 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:19:01,047 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:19:01,047 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:19:01,047 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:19:01,047 - Deklarisan niz 'niz' na liniji 7
INFO  10:19:01,047 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  10:19:01,047 - Formalni parametar funkcije funx: 'y' na liniji 12
INFO  10:19:01,047 - Formalni parametar funkcije funx: 'niz' na liniji 12
ERROR 10:19:01,047 - Semanticka greska - 'niz' je vec deklarisano na liniji 13
INFO  10:19:01,047 - Pronadjen poziv funkcije 'fun' na liniji 20
INFO  10:19:01,047 - ===================================
ERROR 10:19:01,047 - Parsiranje nije uspesno zavrseno!
INFO  10:20:43,565 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:20:43,612 - #2 program
INFO  10:20:43,612 - #20 test301
INFO  10:20:43,612 - #20 int
INFO  10:20:43,612 - #20 x
INFO  10:20:43,612 - #41 ,
INFO  10:20:43,612 - #20 niz
INFO  10:20:43,612 - #45 [
INFO  10:20:43,612 - #46 ]
INFO  10:20:43,612 - #40 ;
INFO  10:20:43,612 - #47 {
INFO  10:20:43,612 - #20 int
INFO  10:20:43,612 - #20 fun
INFO  10:20:43,612 - #43 (
INFO  10:20:43,612 - #20 int
INFO  10:20:43,612 - #20 x
INFO  10:20:43,612 - #41 ,
INFO  10:20:43,612 - #20 int
INFO  10:20:43,612 - #20 y
INFO  10:20:43,612 - #44 )
INFO  10:20:43,612 - #20 int
INFO  10:20:43,612 - #20 niz
INFO  10:20:43,612 - #45 [
INFO  10:20:43,612 - #46 ]
INFO  10:20:43,612 - #40 ;
INFO  10:20:43,612 - #47 {
INFO  10:20:43,627 - #15 return
INFO  10:20:43,627 - #20 x
INFO  10:20:43,627 - #24 +
INFO  10:20:43,627 - #20 y
INFO  10:20:43,627 - #40 ;
INFO  10:20:43,627 - #48 }
INFO  10:20:43,627 - #20 int
INFO  10:20:43,627 - #20 funx
INFO  10:20:43,627 - #43 (
INFO  10:20:43,627 - #20 int
INFO  10:20:43,627 - #20 x
INFO  10:20:43,627 - #41 ,
INFO  10:20:43,627 - #20 int
INFO  10:20:43,627 - #20 y
INFO  10:20:43,627 - #44 )
INFO  10:20:43,627 - #20 int
INFO  10:20:43,627 - #20 niz
INFO  10:20:43,627 - #45 [
INFO  10:20:43,627 - #46 ]
INFO  10:20:43,627 - #40 ;
INFO  10:20:43,627 - #47 {
INFO  10:20:43,627 - #15 return
INFO  10:20:43,627 - #20 x
INFO  10:20:43,627 - #24 +
INFO  10:20:43,627 - #20 y
INFO  10:20:43,627 - #40 ;
INFO  10:20:43,627 - #48 }
INFO  10:20:43,627 - #16 void
INFO  10:20:43,627 - #20 main
INFO  10:20:43,627 - #43 (
INFO  10:20:43,627 - #44 )
INFO  10:20:43,627 - #47 {
INFO  10:20:43,627 - #20 x
INFO  10:20:43,627 - #37 =
INFO  10:20:43,627 - #20 fun
INFO  10:20:43,627 - #43 (
INFO  10:20:43,627 - #21 2
INFO  10:20:43,627 - #24 +
INFO  10:20:43,627 - #21 3
INFO  10:20:43,627 - #41 ,
INFO  10:20:43,627 - #21 3
INFO  10:20:43,627 - #26 *
INFO  10:20:43,627 - #21 10
INFO  10:20:43,627 - #44 )
INFO  10:20:43,627 - #40 ;
INFO  10:20:43,627 - #13 print
INFO  10:20:43,627 - #43 (
INFO  10:20:43,627 - #20 x
INFO  10:20:43,627 - #44 )
INFO  10:20:43,627 - #40 ;
INFO  10:20:43,627 - #48 }
INFO  10:20:43,627 - #48 }
INFO  10:20:43,627 - 

================SINTAKSNO STABLO====================


INFO  10:20:43,627 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:20:43,627 - 

================SEMANTICKA OBRADA====================


INFO  10:20:43,643 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:20:43,643 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:20:43,643 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:20:43,643 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:20:43,643 - Deklarisan niz 'niz' na liniji 7
INFO  10:20:43,643 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  10:20:43,643 - Formalni parametar funkcije funx: 'y' na liniji 12
INFO  10:20:43,643 - Deklarisan niz 'niz' na liniji 13
INFO  10:20:43,643 - Pronadjen poziv funkcije 'fun' na liniji 20
INFO  10:20:43,643 - ===================================
INFO  10:20:43,643 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:20:43,658 - Parsiranje uspesno zavrseno!
INFO  10:24:32,826 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:24:32,873 - #2 program
INFO  10:24:32,873 - #20 test
INFO  10:24:32,873 - #20 int
INFO  10:24:32,873 - #20 x
INFO  10:24:32,873 - #41 ,
INFO  10:24:32,873 - #20 niz
INFO  10:24:32,873 - #45 [
INFO  10:24:32,873 - #46 ]
INFO  10:24:32,873 - #40 ;
INFO  10:24:32,873 - #47 {
INFO  10:24:32,873 - #20 int
INFO  10:24:32,873 - #20 fun
INFO  10:24:32,873 - #43 (
INFO  10:24:32,873 - #20 int
INFO  10:24:32,873 - #20 x
INFO  10:24:32,873 - #41 ,
INFO  10:24:32,873 - #20 int
INFO  10:24:32,888 - #20 y
INFO  10:24:32,888 - #44 )
INFO  10:24:32,888 - #20 int
INFO  10:24:32,888 - #20 niz
INFO  10:24:32,888 - #45 [
INFO  10:24:32,888 - #46 ]
INFO  10:24:32,888 - #40 ;
INFO  10:24:32,888 - #47 {
INFO  10:24:32,888 - #15 return
INFO  10:24:32,888 - #20 x
INFO  10:24:32,888 - #24 +
INFO  10:24:32,888 - #20 y
INFO  10:24:32,888 - #40 ;
INFO  10:24:32,888 - #48 }
INFO  10:24:32,888 - #20 int
INFO  10:24:32,888 - #20 funx
INFO  10:24:32,888 - #43 (
INFO  10:24:32,888 - #20 int
INFO  10:24:32,888 - #20 x
INFO  10:24:32,888 - #41 ,
INFO  10:24:32,888 - #20 int
INFO  10:24:32,888 - #20 y
INFO  10:24:32,888 - #44 )
INFO  10:24:32,888 - #20 int
INFO  10:24:32,888 - #20 niz
INFO  10:24:32,888 - #45 [
INFO  10:24:32,888 - #46 ]
INFO  10:24:32,888 - #40 ;
INFO  10:24:32,888 - #47 {
INFO  10:24:32,888 - #15 return
INFO  10:24:32,888 - #20 x
INFO  10:24:32,888 - #24 +
INFO  10:24:32,888 - #20 y
INFO  10:24:32,888 - #40 ;
INFO  10:24:32,888 - #48 }
INFO  10:24:32,888 - #16 void
INFO  10:24:32,888 - #20 main
INFO  10:24:32,888 - #43 (
INFO  10:24:32,888 - #44 )
INFO  10:24:32,888 - #47 {
INFO  10:24:32,888 - #20 x
INFO  10:24:32,888 - #37 =
INFO  10:24:32,888 - #20 fun
INFO  10:24:32,888 - #43 (
INFO  10:24:32,888 - #21 2
INFO  10:24:32,888 - #24 +
INFO  10:24:32,888 - #21 3
INFO  10:24:32,888 - #24 +
INFO  10:24:32,888 - #21 1
INFO  10:24:32,888 - #41 ,
INFO  10:24:32,888 - #21 3
INFO  10:24:32,888 - #26 *
INFO  10:24:32,888 - #21 10
INFO  10:24:32,888 - #44 )
INFO  10:24:32,888 - #40 ;
INFO  10:24:32,888 - #13 print
INFO  10:24:32,888 - #43 (
INFO  10:24:32,888 - #20 x
INFO  10:24:32,888 - #44 )
INFO  10:24:32,888 - #40 ;
INFO  10:24:32,888 - #48 }
INFO  10:24:32,888 - #48 }
INFO  10:24:32,888 - 

================SINTAKSNO STABLO====================


INFO  10:24:32,888 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprAddop(
                                  ExprAddop(
                                    ExprSingle(
                                      TermSingle(
                                        FactorNumConst(
                                         2
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                    AddopPlus(
                                    ) [AddopPlus]
                                    TermSingle(
                                      FactorNumConst(
                                       3
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprAddop]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermSingle(
                                    FactorNumConst(
                                     1
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprAddop]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     3
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:24:32,888 - 

================SEMANTICKA OBRADA====================


INFO  10:24:32,911 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:24:32,911 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:24:32,911 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:24:32,911 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:24:32,911 - Deklarisan niz 'niz' na liniji 7
INFO  10:24:32,911 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  10:24:32,911 - Formalni parametar funkcije funx: 'y' na liniji 12
INFO  10:24:32,911 - Deklarisan niz 'niz' na liniji 13
INFO  10:24:32,911 - Pronadjen poziv funkcije 'fun' na liniji 20
INFO  10:24:32,911 - ===================================
INFO  10:24:32,911 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:24:32,911 - Parsiranje uspesno zavrseno!
INFO  10:26:10,916 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:26:10,963 - #2 program
INFO  10:26:10,963 - #20 test
INFO  10:26:10,963 - #20 int
INFO  10:26:10,963 - #20 x
INFO  10:26:10,963 - #41 ,
INFO  10:26:10,963 - #20 niz
INFO  10:26:10,963 - #45 [
INFO  10:26:10,963 - #46 ]
INFO  10:26:10,963 - #40 ;
INFO  10:26:10,963 - #47 {
INFO  10:26:10,963 - #20 int
INFO  10:26:10,963 - #20 fun
INFO  10:26:10,963 - #43 (
INFO  10:26:10,963 - #20 int
INFO  10:26:10,963 - #20 x
INFO  10:26:10,963 - #41 ,
INFO  10:26:10,963 - #20 int
INFO  10:26:10,963 - #20 y
INFO  10:26:10,963 - #44 )
INFO  10:26:10,979 - #20 int
INFO  10:26:10,979 - #20 niz
INFO  10:26:10,979 - #45 [
INFO  10:26:10,979 - #46 ]
INFO  10:26:10,979 - #40 ;
INFO  10:26:10,979 - #47 {
INFO  10:26:10,979 - #15 return
INFO  10:26:10,979 - #20 x
INFO  10:26:10,979 - #24 +
INFO  10:26:10,979 - #20 y
INFO  10:26:10,979 - #40 ;
INFO  10:26:10,979 - #48 }
INFO  10:26:10,979 - #20 int
INFO  10:26:10,979 - #20 funx
INFO  10:26:10,979 - #43 (
INFO  10:26:10,979 - #20 int
INFO  10:26:10,979 - #20 x
INFO  10:26:10,979 - #41 ,
INFO  10:26:10,979 - #20 int
INFO  10:26:10,979 - #20 y
INFO  10:26:10,979 - #44 )
INFO  10:26:10,979 - #20 int
INFO  10:26:10,979 - #20 niz
INFO  10:26:10,979 - #45 [
INFO  10:26:10,979 - #46 ]
INFO  10:26:10,979 - #40 ;
INFO  10:26:10,979 - #47 {
INFO  10:26:10,979 - #15 return
INFO  10:26:10,979 - #20 x
INFO  10:26:10,979 - #24 +
INFO  10:26:10,979 - #20 y
INFO  10:26:10,979 - #40 ;
INFO  10:26:10,979 - #48 }
INFO  10:26:10,979 - #16 void
INFO  10:26:10,979 - #20 main
INFO  10:26:10,979 - #43 (
INFO  10:26:10,979 - #44 )
INFO  10:26:10,979 - #47 {
INFO  10:26:10,979 - #20 x
INFO  10:26:10,979 - #37 =
INFO  10:26:10,979 - #20 fun
INFO  10:26:10,979 - #43 (
INFO  10:26:10,979 - #21 2
INFO  10:26:10,979 - #41 ,
INFO  10:26:10,979 - #21 3
INFO  10:26:10,979 - #44 )
INFO  10:26:10,979 - #40 ;
INFO  10:26:10,979 - #13 print
INFO  10:26:10,979 - #43 (
INFO  10:26:10,979 - #20 x
INFO  10:26:10,979 - #44 )
INFO  10:26:10,979 - #40 ;
INFO  10:26:10,979 - #48 }
INFO  10:26:10,979 - #48 }
INFO  10:26:10,979 - 

================SINTAKSNO STABLO====================


INFO  10:26:10,994 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   3
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:26:10,994 - 

================SEMANTICKA OBRADA====================


INFO  10:26:10,994 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:26:10,994 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:26:11,010 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:26:11,010 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:26:11,010 - Deklarisan niz 'niz' na liniji 7
INFO  10:26:11,010 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  10:26:11,010 - Formalni parametar funkcije funx: 'y' na liniji 12
INFO  10:26:11,010 - Deklarisan niz 'niz' na liniji 13
INFO  10:26:11,010 - Pronadjen poziv funkcije 'fun' na liniji 20
INFO  10:26:11,016 - ===================================
INFO  10:26:11,016 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:26:11,016 - Parsiranje uspesno zavrseno!
INFO  10:27:05,782 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:27:05,828 - #2 program
INFO  10:27:05,828 - #20 test
INFO  10:27:05,828 - #20 int
INFO  10:27:05,828 - #20 x
INFO  10:27:05,828 - #41 ,
INFO  10:27:05,844 - #20 niz
INFO  10:27:05,844 - #45 [
INFO  10:27:05,844 - #46 ]
INFO  10:27:05,844 - #40 ;
INFO  10:27:05,844 - #47 {
INFO  10:27:05,844 - #20 int
INFO  10:27:05,844 - #20 fun
INFO  10:27:05,844 - #43 (
INFO  10:27:05,844 - #20 int
INFO  10:27:05,844 - #20 x
INFO  10:27:05,844 - #41 ,
INFO  10:27:05,844 - #20 int
INFO  10:27:05,844 - #20 y
INFO  10:27:05,844 - #44 )
INFO  10:27:05,844 - #20 int
INFO  10:27:05,844 - #20 niz
INFO  10:27:05,844 - #45 [
INFO  10:27:05,844 - #46 ]
INFO  10:27:05,844 - #40 ;
INFO  10:27:05,844 - #47 {
INFO  10:27:05,844 - #15 return
INFO  10:27:05,844 - #20 x
INFO  10:27:05,844 - #24 +
INFO  10:27:05,844 - #20 y
INFO  10:27:05,851 - #40 ;
INFO  10:27:05,851 - #48 }
INFO  10:27:05,851 - #20 int
INFO  10:27:05,851 - #20 funx
INFO  10:27:05,851 - #43 (
INFO  10:27:05,851 - #20 int
INFO  10:27:05,851 - #20 x
INFO  10:27:05,851 - #41 ,
INFO  10:27:05,851 - #20 int
INFO  10:27:05,851 - #20 y
INFO  10:27:05,851 - #44 )
INFO  10:27:05,851 - #20 int
INFO  10:27:05,851 - #20 niz
INFO  10:27:05,851 - #45 [
INFO  10:27:05,851 - #46 ]
INFO  10:27:05,851 - #40 ;
INFO  10:27:05,851 - #47 {
INFO  10:27:05,851 - #15 return
INFO  10:27:05,851 - #20 x
INFO  10:27:05,851 - #24 +
INFO  10:27:05,851 - #20 y
INFO  10:27:05,851 - #40 ;
INFO  10:27:05,851 - #48 }
INFO  10:27:05,851 - #16 void
INFO  10:27:05,851 - #20 main
INFO  10:27:05,851 - #43 (
INFO  10:27:05,851 - #44 )
INFO  10:27:05,851 - #47 {
INFO  10:27:05,851 - #20 fun
INFO  10:27:05,851 - #43 (
INFO  10:27:05,851 - #21 2
INFO  10:27:05,851 - #41 ,
INFO  10:27:05,851 - #21 3
INFO  10:27:05,851 - #44 )
INFO  10:27:05,851 - #40 ;
INFO  10:27:05,851 - #13 print
INFO  10:27:05,851 - #43 (
INFO  10:27:05,851 - #20 x
INFO  10:27:05,851 - #44 )
INFO  10:27:05,851 - #40 ;
INFO  10:27:05,851 - #48 }
INFO  10:27:05,851 - #48 }
INFO  10:27:05,851 - 

================SINTAKSNO STABLO====================


INFO  10:27:05,851 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorMethodCallParams(
                DesignatorSimple(
                 fun
                ) [DesignatorSimple]
                ActParsMulti(
                  ActParsSingle(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [ActParsSingle]
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         3
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsMulti]
              ) [DesignatorMethodCallParams]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:27:05,851 - 

================SEMANTICKA OBRADA====================


INFO  10:27:05,866 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:27:05,866 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:27:05,866 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:27:05,866 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:27:05,866 - Deklarisan niz 'niz' na liniji 7
INFO  10:27:05,866 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  10:27:05,866 - Formalni parametar funkcije funx: 'y' na liniji 12
INFO  10:27:05,866 - Deklarisan niz 'niz' na liniji 13
INFO  10:27:05,866 - Pronadjen poziv funkcije 'fun' na liniji 20
INFO  10:27:05,866 - ===================================
INFO  10:27:05,866 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:27:05,882 - Parsiranje uspesno zavrseno!
INFO  10:27:27,111 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:27:27,189 - #2 program
INFO  10:27:27,189 - #20 test
INFO  10:27:27,189 - #20 int
INFO  10:27:27,189 - #20 x
INFO  10:27:27,189 - #41 ,
INFO  10:27:27,189 - #20 niz
INFO  10:27:27,189 - #45 [
INFO  10:27:27,189 - #46 ]
INFO  10:27:27,189 - #40 ;
INFO  10:27:27,189 - #47 {
INFO  10:27:27,189 - #20 int
INFO  10:27:27,189 - #20 fun
INFO  10:27:27,189 - #43 (
INFO  10:27:27,189 - #20 int
INFO  10:27:27,189 - #20 x
INFO  10:27:27,189 - #41 ,
INFO  10:27:27,189 - #20 int
INFO  10:27:27,189 - #20 y
INFO  10:27:27,189 - #44 )
INFO  10:27:27,189 - #20 int
INFO  10:27:27,195 - #20 niz
INFO  10:27:27,195 - #45 [
INFO  10:27:27,195 - #46 ]
INFO  10:27:27,195 - #40 ;
INFO  10:27:27,195 - #47 {
INFO  10:27:27,195 - #15 return
INFO  10:27:27,195 - #20 x
INFO  10:27:27,195 - #24 +
INFO  10:27:27,195 - #20 y
INFO  10:27:27,195 - #40 ;
INFO  10:27:27,195 - #48 }
INFO  10:27:27,195 - #20 int
INFO  10:27:27,195 - #20 funx
INFO  10:27:27,195 - #43 (
INFO  10:27:27,195 - #20 int
INFO  10:27:27,195 - #20 x
INFO  10:27:27,195 - #41 ,
INFO  10:27:27,195 - #20 int
INFO  10:27:27,195 - #20 y
INFO  10:27:27,195 - #44 )
INFO  10:27:27,195 - #20 int
INFO  10:27:27,195 - #20 niz
INFO  10:27:27,195 - #45 [
INFO  10:27:27,195 - #46 ]
INFO  10:27:27,195 - #40 ;
INFO  10:27:27,195 - #47 {
INFO  10:27:27,195 - #15 return
INFO  10:27:27,195 - #20 x
INFO  10:27:27,195 - #24 +
INFO  10:27:27,195 - #20 y
INFO  10:27:27,195 - #40 ;
INFO  10:27:27,195 - #48 }
INFO  10:27:27,195 - #16 void
INFO  10:27:27,195 - #20 main
INFO  10:27:27,195 - #43 (
INFO  10:27:27,195 - #44 )
INFO  10:27:27,195 - #47 {
INFO  10:27:27,195 - #20 x
INFO  10:27:27,195 - #37 =
INFO  10:27:27,195 - #20 fun
INFO  10:27:27,195 - #43 (
INFO  10:27:27,195 - #21 2
INFO  10:27:27,195 - #41 ,
INFO  10:27:27,195 - #21 3
INFO  10:27:27,195 - #44 )
INFO  10:27:27,195 - #40 ;
INFO  10:27:27,195 - #13 print
INFO  10:27:27,195 - #43 (
INFO  10:27:27,195 - #20 x
INFO  10:27:27,195 - #44 )
INFO  10:27:27,195 - #40 ;
INFO  10:27:27,195 - #48 }
INFO  10:27:27,195 - #48 }
INFO  10:27:27,195 - 

================SINTAKSNO STABLO====================


INFO  10:27:27,195 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarArray(
                 niz
                ) [VarArray]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   3
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:27:27,195 - 

================SEMANTICKA OBRADA====================


INFO  10:27:27,211 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:27:27,211 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:27:27,227 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:27:27,227 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:27:27,227 - Deklarisan niz 'niz' na liniji 7
INFO  10:27:27,227 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  10:27:27,227 - Formalni parametar funkcije funx: 'y' na liniji 12
INFO  10:27:27,227 - Deklarisan niz 'niz' na liniji 13
INFO  10:27:27,227 - Pronadjen poziv funkcije 'fun' na liniji 20
INFO  10:27:27,227 - ===================================
INFO  10:27:27,227 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:27:27,242 - Parsiranje uspesno zavrseno!
INFO  10:27:39,586 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:27:39,633 - #2 program
INFO  10:27:39,633 - #20 test
INFO  10:27:39,633 - #20 int
INFO  10:27:39,634 - #20 x
INFO  10:27:39,634 - #41 ,
INFO  10:27:39,634 - #20 niz
INFO  10:27:39,634 - #45 [
INFO  10:27:39,634 - #46 ]
INFO  10:27:39,635 - #40 ;
INFO  10:27:39,635 - #47 {
INFO  10:27:39,635 - #20 int
INFO  10:27:39,635 - #20 fun
INFO  10:27:39,635 - #43 (
INFO  10:27:39,635 - #20 int
INFO  10:27:39,635 - #20 x
INFO  10:27:39,635 - #41 ,
INFO  10:27:39,635 - #20 int
INFO  10:27:39,635 - #20 y
INFO  10:27:39,635 - #44 )
INFO  10:27:39,635 - #20 int
INFO  10:27:39,635 - #20 niz
INFO  10:27:39,635 - #45 [
INFO  10:27:39,635 - #46 ]
INFO  10:27:39,635 - #40 ;
INFO  10:27:39,635 - #47 {
INFO  10:27:39,635 - #15 return
INFO  10:27:39,635 - #20 x
INFO  10:27:39,635 - #24 +
INFO  10:27:39,635 - #20 y
INFO  10:27:39,635 - #40 ;
INFO  10:27:39,635 - #48 }
INFO  10:27:39,635 - #20 int
INFO  10:27:39,639 - #20 funx
INFO  10:27:39,639 - #43 (
INFO  10:27:39,639 - #20 int
INFO  10:27:39,639 - #20 x
INFO  10:27:39,639 - #41 ,
INFO  10:27:39,639 - #20 int
INFO  10:27:39,639 - #20 y
INFO  10:27:39,639 - #44 )
INFO  10:27:39,639 - #47 {
INFO  10:27:39,639 - #15 return
INFO  10:27:39,639 - #20 x
INFO  10:27:39,639 - #24 +
INFO  10:27:39,639 - #20 y
INFO  10:27:39,639 - #40 ;
INFO  10:27:39,639 - #48 }
INFO  10:27:39,639 - #16 void
INFO  10:27:39,639 - #20 main
INFO  10:27:39,639 - #43 (
INFO  10:27:39,639 - #44 )
INFO  10:27:39,639 - #47 {
INFO  10:27:39,639 - #20 x
INFO  10:27:39,639 - #37 =
INFO  10:27:39,639 - #20 funx
INFO  10:27:39,639 - #43 (
INFO  10:27:39,639 - #21 2
INFO  10:27:39,639 - #41 ,
INFO  10:27:39,639 - #21 3
INFO  10:27:39,639 - #44 )
INFO  10:27:39,639 - #40 ;
INFO  10:27:39,639 - #13 print
INFO  10:27:39,639 - #43 (
INFO  10:27:39,639 - #20 x
INFO  10:27:39,639 - #44 )
INFO  10:27:39,639 - #40 ;
INFO  10:27:39,639 - #48 }
INFO  10:27:39,639 - #48 }
INFO  10:27:39,639 - 

================SINTAKSNO STABLO====================


INFO  10:27:39,639 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       y
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           funx
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   3
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:27:39,639 - 

================SEMANTICKA OBRADA====================


INFO  10:27:39,654 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:27:39,654 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:27:39,654 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:27:39,654 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:27:39,654 - Deklarisan niz 'niz' na liniji 7
INFO  10:27:39,654 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  10:27:39,654 - Formalni parametar funkcije funx: 'y' na liniji 12
INFO  10:27:39,654 - Pronadjen poziv funkcije 'funx' na liniji 19
INFO  10:27:39,654 - ===================================
INFO  10:27:39,654 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:27:39,654 - Parsiranje uspesno zavrseno!
INFO  10:32:13,083 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:32:13,136 - #2 program
INFO  10:32:13,136 - #20 test
INFO  10:32:13,136 - #20 int
INFO  10:32:13,136 - #20 x
INFO  10:32:13,136 - #41 ,
INFO  10:32:13,136 - #20 niz
INFO  10:32:13,136 - #45 [
INFO  10:32:13,136 - #46 ]
INFO  10:32:13,136 - #40 ;
INFO  10:32:13,136 - #47 {
INFO  10:32:13,136 - #20 int
INFO  10:32:13,136 - #20 fun
INFO  10:32:13,136 - #43 (
INFO  10:32:13,136 - #20 int
INFO  10:32:13,136 - #20 x
INFO  10:32:13,136 - #41 ,
INFO  10:32:13,136 - #20 int
INFO  10:32:13,136 - #20 y
INFO  10:32:13,136 - #44 )
INFO  10:32:13,136 - #20 int
INFO  10:32:13,136 - #20 niz
INFO  10:32:13,136 - #45 [
INFO  10:32:13,136 - #46 ]
INFO  10:32:13,136 - #40 ;
INFO  10:32:13,136 - #47 {
INFO  10:32:13,136 - #15 return
INFO  10:32:13,136 - #20 x
INFO  10:32:13,136 - #24 +
INFO  10:32:13,136 - #20 y
INFO  10:32:13,136 - #40 ;
INFO  10:32:13,136 - #48 }
INFO  10:32:13,136 - #20 int
INFO  10:32:13,136 - #20 funx
INFO  10:32:13,136 - #43 (
INFO  10:32:13,136 - #20 int
INFO  10:32:13,136 - #20 x
INFO  10:32:13,136 - #44 )
INFO  10:32:13,136 - #20 int
INFO  10:32:13,136 - #20 niz
INFO  10:32:13,136 - #45 [
INFO  10:32:13,136 - #46 ]
INFO  10:32:13,136 - #41 ,
INFO  10:32:13,136 - #20 y
INFO  10:32:13,136 - #40 ;
INFO  10:32:13,136 - #47 {
INFO  10:32:13,136 - #15 return
INFO  10:32:13,136 - #20 x
INFO  10:32:13,136 - #24 +
INFO  10:32:13,152 - #20 x
INFO  10:32:13,152 - #40 ;
INFO  10:32:13,152 - #48 }
INFO  10:32:13,152 - #16 void
INFO  10:32:13,152 - #20 main
INFO  10:32:13,152 - #43 (
INFO  10:32:13,152 - #44 )
INFO  10:32:13,152 - #47 {
INFO  10:32:13,152 - #20 x
INFO  10:32:13,152 - #37 =
INFO  10:32:13,152 - #20 funx
INFO  10:32:13,152 - #43 (
INFO  10:32:13,152 - #21 2
INFO  10:32:13,152 - #44 )
INFO  10:32:13,152 - #40 ;
INFO  10:32:13,152 - #13 print
INFO  10:32:13,152 - #43 (
INFO  10:32:13,152 - #20 x
INFO  10:32:13,152 - #44 )
INFO  10:32:13,152 - #40 ;
INFO  10:32:13,152 - #48 }
INFO  10:32:13,152 - #48 }
INFO  10:32:13,152 - 

================SINTAKSNO STABLO====================


INFO  10:32:13,152 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           funx
                          ) [DesignatorSimple]
                          ActParsSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   2
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsSingle]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:32:13,152 - 

================SEMANTICKA OBRADA====================


INFO  10:32:13,168 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:32:13,168 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:32:13,168 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:32:13,168 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:32:13,168 - Deklarisan niz 'niz' na liniji 7
INFO  10:32:13,168 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  10:32:13,168 - Deklarisan niz 'niz' na liniji 13
INFO  10:32:13,168 - Deklarisana promenljiva 'y' na liniji 13
INFO  10:32:13,168 - Pronadjen poziv funkcije 'funx' na liniji 20
INFO  10:32:13,168 - ===================================
INFO  10:32:13,168 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:32:13,168 - Parsiranje uspesno zavrseno!
INFO  10:36:26,470 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:36:26,508 - #2 program
INFO  10:36:26,508 - #20 test
INFO  10:36:26,508 - #20 int
INFO  10:36:26,508 - #20 x
INFO  10:36:26,508 - #41 ,
INFO  10:36:26,508 - #20 niz
INFO  10:36:26,508 - #45 [
INFO  10:36:26,523 - #46 ]
INFO  10:36:26,523 - #40 ;
INFO  10:36:26,523 - #47 {
INFO  10:36:26,523 - #20 int
INFO  10:36:26,523 - #20 fun
INFO  10:36:26,523 - #43 (
INFO  10:36:26,523 - #20 int
INFO  10:36:26,523 - #20 x
INFO  10:36:26,523 - #41 ,
INFO  10:36:26,523 - #20 int
INFO  10:36:26,523 - #20 y
INFO  10:36:26,523 - #44 )
INFO  10:36:26,523 - #20 int
INFO  10:36:26,523 - #20 niz
INFO  10:36:26,523 - #45 [
INFO  10:36:26,523 - #46 ]
INFO  10:36:26,523 - #40 ;
INFO  10:36:26,523 - #47 {
INFO  10:36:26,523 - #15 return
INFO  10:36:26,523 - #20 x
INFO  10:36:26,523 - #24 +
INFO  10:36:26,523 - #20 y
INFO  10:36:26,523 - #40 ;
INFO  10:36:26,523 - #48 }
INFO  10:36:26,523 - #20 int
INFO  10:36:26,523 - #20 funx
INFO  10:36:26,523 - #43 (
INFO  10:36:26,523 - #20 int
INFO  10:36:26,523 - #20 x
INFO  10:36:26,523 - #44 )
INFO  10:36:26,523 - #20 int
INFO  10:36:26,523 - #20 niz
INFO  10:36:26,523 - #45 [
INFO  10:36:26,523 - #46 ]
INFO  10:36:26,523 - #41 ,
INFO  10:36:26,523 - #20 y
INFO  10:36:26,523 - #40 ;
INFO  10:36:26,523 - #47 {
INFO  10:36:26,523 - #15 return
INFO  10:36:26,523 - #20 x
INFO  10:36:26,523 - #24 +
INFO  10:36:26,523 - #20 x
INFO  10:36:26,523 - #40 ;
INFO  10:36:26,523 - #48 }
INFO  10:36:26,523 - #16 void
INFO  10:36:26,523 - #20 main
INFO  10:36:26,523 - #43 (
INFO  10:36:26,523 - #44 )
INFO  10:36:26,523 - #47 {
INFO  10:36:26,523 - #20 x
INFO  10:36:26,523 - #37 =
INFO  10:36:26,523 - #20 funx
INFO  10:36:26,523 - #43 (
INFO  10:36:26,523 - #21 2
INFO  10:36:26,523 - #26 *
INFO  10:36:26,523 - #21 2
INFO  10:36:26,523 - #44 )
INFO  10:36:26,523 - #40 ;
INFO  10:36:26,523 - #13 print
INFO  10:36:26,523 - #43 (
INFO  10:36:26,523 - #20 x
INFO  10:36:26,523 - #44 )
INFO  10:36:26,523 - #40 ;
INFO  10:36:26,523 - #48 }
INFO  10:36:26,523 - #48 }
INFO  10:36:26,523 - 

================SINTAKSNO STABLO====================


INFO  10:36:26,523 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           funx
                          ) [DesignatorSimple]
                          ActParsSingle(
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   2
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsSingle]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:36:26,523 - 

================SEMANTICKA OBRADA====================


INFO  10:36:26,539 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:36:26,539 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:36:26,539 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:36:26,539 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:36:26,539 - Deklarisan niz 'niz' na liniji 7
INFO  10:36:26,539 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  10:36:26,539 - Deklarisan niz 'niz' na liniji 13
INFO  10:36:26,539 - Deklarisana promenljiva 'y' na liniji 13
INFO  10:36:26,539 - Pronadjen poziv funkcije 'funx' na liniji 20
INFO  10:36:26,555 - ===================================
INFO  10:36:26,555 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:36:26,555 - Parsiranje uspesno zavrseno!
INFO  10:36:51,371 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:36:51,455 - #2 program
INFO  10:36:51,455 - #20 test
INFO  10:36:51,455 - #20 int
INFO  10:36:51,455 - #20 x
INFO  10:36:51,455 - #41 ,
INFO  10:36:51,455 - #20 niz
INFO  10:36:51,455 - #45 [
INFO  10:36:51,455 - #46 ]
INFO  10:36:51,455 - #40 ;
INFO  10:36:51,455 - #47 {
INFO  10:36:51,455 - #20 int
INFO  10:36:51,455 - #20 fun
INFO  10:36:51,455 - #43 (
INFO  10:36:51,455 - #20 int
INFO  10:36:51,455 - #20 x
INFO  10:36:51,455 - #41 ,
INFO  10:36:51,455 - #20 int
INFO  10:36:51,455 - #20 y
INFO  10:36:51,455 - #44 )
INFO  10:36:51,455 - #20 int
INFO  10:36:51,455 - #20 niz
INFO  10:36:51,455 - #45 [
INFO  10:36:51,455 - #46 ]
INFO  10:36:51,455 - #40 ;
INFO  10:36:51,455 - #47 {
INFO  10:36:51,455 - #15 return
INFO  10:36:51,455 - #20 x
INFO  10:36:51,455 - #24 +
INFO  10:36:51,455 - #20 y
INFO  10:36:51,455 - #40 ;
INFO  10:36:51,455 - #48 }
INFO  10:36:51,455 - #20 int
INFO  10:36:51,455 - #20 funx
INFO  10:36:51,455 - #43 (
INFO  10:36:51,455 - #20 int
INFO  10:36:51,455 - #20 x
INFO  10:36:51,455 - #44 )
INFO  10:36:51,455 - #20 int
INFO  10:36:51,455 - #20 niz
INFO  10:36:51,455 - #45 [
INFO  10:36:51,455 - #46 ]
INFO  10:36:51,455 - #41 ,
INFO  10:36:51,455 - #20 y
INFO  10:36:51,455 - #40 ;
INFO  10:36:51,455 - #47 {
INFO  10:36:51,455 - #15 return
INFO  10:36:51,455 - #20 x
INFO  10:36:51,455 - #24 +
INFO  10:36:51,455 - #20 x
INFO  10:36:51,455 - #40 ;
INFO  10:36:51,455 - #48 }
INFO  10:36:51,455 - #16 void
INFO  10:36:51,455 - #20 main
INFO  10:36:51,455 - #43 (
INFO  10:36:51,455 - #44 )
INFO  10:36:51,455 - #47 {
INFO  10:36:51,455 - #20 x
INFO  10:36:51,455 - #37 =
INFO  10:36:51,455 - #20 funx
INFO  10:36:51,455 - #43 (
INFO  10:36:51,455 - #21 2
INFO  10:36:51,455 - #26 *
INFO  10:36:51,455 - #21 2
INFO  10:36:51,455 - #44 )
INFO  10:36:51,455 - #40 ;
INFO  10:36:51,455 - #13 print
INFO  10:36:51,455 - #43 (
INFO  10:36:51,455 - #20 x
INFO  10:36:51,455 - #44 )
INFO  10:36:51,455 - #40 ;
INFO  10:36:51,455 - #20 x
INFO  10:36:51,455 - #37 =
INFO  10:36:51,455 - #20 fun
INFO  10:36:51,455 - #43 (
INFO  10:36:51,455 - #21 2
INFO  10:36:51,455 - #26 *
INFO  10:36:51,455 - #21 2
INFO  10:36:51,471 - #41 ,
INFO  10:36:51,471 - #21 2
INFO  10:36:51,471 - #26 *
INFO  10:36:51,471 - #21 10
INFO  10:36:51,471 - #44 )
INFO  10:36:51,471 - #40 ;
INFO  10:36:51,471 - #13 print
INFO  10:36:51,471 - #43 (
INFO  10:36:51,471 - #20 x
INFO  10:36:51,471 - #44 )
INFO  10:36:51,471 - #40 ;
INFO  10:36:51,471 - #48 }
INFO  10:36:51,471 - #48 }
INFO  10:36:51,471 - 

================SINTAKSNO STABLO====================


INFO  10:36:51,471 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FuncCallParams(
                              DesignatorSimple(
                               funx
                              ) [DesignatorSimple]
                              ActParsSingle(
                                ExprOne(
                                  ExprSingle(
                                    TermMulop(
                                      TermSingle(
                                        FactorNumConst(
                                         2
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                      MulopMul(
                                      ) [MulopMul]
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermMulop]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [ActParsSingle]
                            ) [FuncCallParams]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtPrint(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtPrint]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  10:36:51,471 - 

================SEMANTICKA OBRADA====================


INFO  10:36:51,471 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  10:36:51,471 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:36:51,471 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  10:36:51,471 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  10:36:51,471 - Deklarisan niz 'niz' na liniji 7
INFO  10:36:51,471 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  10:36:51,471 - Deklarisan niz 'niz' na liniji 13
INFO  10:36:51,471 - Deklarisana promenljiva 'y' na liniji 13
INFO  10:36:51,471 - Pronadjen poziv funkcije 'funx' na liniji 20
INFO  10:36:51,487 - Pronadjen poziv funkcije 'fun' na liniji 23
INFO  10:36:51,487 - ===================================
INFO  10:36:51,487 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:36:51,493 - Parsiranje uspesno zavrseno!
INFO  11:47:37,450 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  11:47:37,523 - #2 program
INFO  11:47:37,523 - #20 test
INFO  11:47:37,523 - #20 int
INFO  11:47:37,524 - #20 x
INFO  11:47:37,525 - #41 ,
INFO  11:47:37,526 - #20 niz
INFO  11:47:37,526 - #45 [
INFO  11:47:37,526 - #46 ]
INFO  11:47:37,526 - #40 ;
INFO  11:47:37,526 - #47 {
INFO  11:47:37,527 - #20 int
INFO  11:47:37,527 - #20 fun
INFO  11:47:37,527 - #43 (
INFO  11:47:37,527 - #20 int
INFO  11:47:37,527 - #20 x
INFO  11:47:37,528 - #41 ,
INFO  11:47:37,528 - #20 int
INFO  11:47:37,528 - #20 y
INFO  11:47:37,528 - #44 )
INFO  11:47:37,528 - #20 int
INFO  11:47:37,528 - #20 niz
INFO  11:47:37,529 - #45 [
INFO  11:47:37,529 - #46 ]
INFO  11:47:37,530 - #40 ;
INFO  11:47:37,530 - #47 {
INFO  11:47:37,530 - #15 return
INFO  11:47:37,531 - #20 x
INFO  11:47:37,531 - #24 +
INFO  11:47:37,531 - #20 y
INFO  11:47:37,533 - #40 ;
INFO  11:47:37,533 - #48 }
INFO  11:47:37,533 - #20 int
INFO  11:47:37,534 - #20 funx
INFO  11:47:37,534 - #43 (
INFO  11:47:37,534 - #20 int
INFO  11:47:37,534 - #20 x
INFO  11:47:37,534 - #44 )
INFO  11:47:37,534 - #20 int
INFO  11:47:37,534 - #20 niz
INFO  11:47:37,534 - #45 [
INFO  11:47:37,534 - #46 ]
INFO  11:47:37,534 - #41 ,
INFO  11:47:37,535 - #20 y
INFO  11:47:37,535 - #40 ;
INFO  11:47:37,535 - #47 {
INFO  11:47:37,535 - #15 return
INFO  11:47:37,535 - #20 x
INFO  11:47:37,535 - #24 +
INFO  11:47:37,536 - #20 x
INFO  11:47:37,536 - #40 ;
INFO  11:47:37,536 - #48 }
INFO  11:47:37,536 - #16 void
INFO  11:47:37,536 - #20 main
INFO  11:47:37,536 - #43 (
INFO  11:47:37,536 - #44 )
INFO  11:47:37,536 - #47 {
INFO  11:47:37,536 - #20 x
INFO  11:47:37,536 - #37 =
INFO  11:47:37,536 - #20 funx
INFO  11:47:37,537 - #43 (
INFO  11:47:37,537 - #21 2
INFO  11:47:37,537 - #26 *
INFO  11:47:37,537 - #21 2
INFO  11:47:37,539 - #44 )
INFO  11:47:37,539 - #40 ;
INFO  11:47:37,540 - #13 print
INFO  11:47:37,540 - #43 (
INFO  11:47:37,540 - #20 x
INFO  11:47:37,540 - #44 )
INFO  11:47:37,540 - #40 ;
INFO  11:47:37,540 - #20 x
INFO  11:47:37,540 - #37 =
INFO  11:47:37,541 - #20 fun
INFO  11:47:37,541 - #43 (
INFO  11:47:37,541 - #21 2
INFO  11:47:37,541 - #26 *
INFO  11:47:37,541 - #21 2
INFO  11:47:37,541 - #41 ,
INFO  11:47:37,541 - #21 2
INFO  11:47:37,541 - #26 *
INFO  11:47:37,541 - #21 10
INFO  11:47:37,541 - #44 )
INFO  11:47:37,542 - #40 ;
INFO  11:47:37,542 - #13 print
INFO  11:47:37,542 - #43 (
INFO  11:47:37,542 - #20 x
INFO  11:47:37,542 - #44 )
INFO  11:47:37,542 - #40 ;
INFO  11:47:37,542 - #48 }
INFO  11:47:37,542 - #48 }
INFO  11:47:37,544 - 

================SINTAKSNO STABLO====================


INFO  11:47:37,545 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FuncCallParams(
                              DesignatorSimple(
                               funx
                              ) [DesignatorSimple]
                              ActParsSingle(
                                ExprOne(
                                  ExprSingle(
                                    TermMulop(
                                      TermSingle(
                                        FactorNumConst(
                                         2
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                      MulopMul(
                                      ) [MulopMul]
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermMulop]
                                  ) [ExprSingle]
                                ) [ExprOne]
                              ) [ActParsSingle]
                            ) [FuncCallParams]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtPrint(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtPrint]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  11:47:37,546 - 

================SEMANTICKA OBRADA====================


INFO  11:47:37,557 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  11:47:37,557 - Deklarisan globalni niz 'niz' na liniji 4
INFO  11:47:37,558 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  11:47:37,558 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  11:47:37,558 - Deklarisan niz 'niz' na liniji 7
INFO  11:47:37,558 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  11:47:37,558 - Deklarisan niz 'niz' na liniji 13
INFO  11:47:37,558 - Deklarisana promenljiva 'y' na liniji 13
INFO  11:47:37,558 - Pronadjen poziv funkcije 'funx' na liniji 20
INFO  11:47:37,559 - Pronadjen poziv funkcije 'fun' na liniji 23
INFO  11:47:37,559 - ===================================
INFO  11:47:37,559 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  11:47:37,566 - Parsiranje uspesno zavrseno!
INFO  15:37:10,789 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:37:10,943 - #2 program
INFO  15:37:10,943 - #20 test
INFO  15:37:10,943 - #20 int
INFO  15:37:10,943 - #20 x
INFO  15:37:10,943 - #41 ,
INFO  15:37:10,943 - #20 niz
INFO  15:37:10,943 - #45 [
INFO  15:37:10,943 - #46 ]
INFO  15:37:10,943 - #40 ;
INFO  15:37:10,943 - #47 {
INFO  15:37:10,943 - #20 int
INFO  15:37:10,943 - #20 fun
INFO  15:37:10,943 - #43 (
INFO  15:37:10,943 - #20 int
INFO  15:37:10,943 - #20 x
INFO  15:37:10,943 - #41 ,
INFO  15:37:10,943 - #20 int
INFO  15:37:10,943 - #20 y
INFO  15:37:10,943 - #44 )
INFO  15:37:10,943 - #20 int
INFO  15:37:10,943 - #20 niz
INFO  15:37:10,943 - #45 [
INFO  15:37:10,943 - #46 ]
INFO  15:37:10,943 - #40 ;
INFO  15:37:10,943 - #47 {
INFO  15:37:10,943 - #15 return
INFO  15:37:10,943 - #20 x
INFO  15:37:10,943 - #24 +
INFO  15:37:10,943 - #20 y
INFO  15:37:10,959 - #40 ;
INFO  15:37:10,959 - #48 }
INFO  15:37:10,959 - #20 int
INFO  15:37:10,959 - #20 funx
INFO  15:37:10,959 - #43 (
INFO  15:37:10,959 - #20 int
INFO  15:37:10,959 - #20 x
INFO  15:37:10,959 - #44 )
INFO  15:37:10,959 - #20 int
INFO  15:37:10,959 - #20 niz
INFO  15:37:10,959 - #45 [
INFO  15:37:10,959 - #46 ]
INFO  15:37:10,959 - #41 ,
INFO  15:37:10,959 - #20 y
INFO  15:37:10,959 - #40 ;
INFO  15:37:10,959 - #47 {
INFO  15:37:10,959 - #15 return
INFO  15:37:10,959 - #20 x
INFO  15:37:10,959 - #24 +
INFO  15:37:10,959 - #20 x
INFO  15:37:10,959 - #40 ;
INFO  15:37:10,959 - #48 }
INFO  15:37:10,959 - #16 void
INFO  15:37:10,959 - #20 main
INFO  15:37:10,959 - #43 (
INFO  15:37:10,959 - #44 )
INFO  15:37:10,959 - #47 {
INFO  15:37:10,959 - #14 read
INFO  15:37:10,959 - #43 (
INFO  15:37:10,959 - #20 x
INFO  15:37:10,959 - #44 )
INFO  15:37:10,959 - #40 ;
INFO  15:37:10,959 - #13 print
INFO  15:37:10,959 - #43 (
INFO  15:37:10,959 - #20 x
INFO  15:37:10,959 - #44 )
INFO  15:37:10,959 - #40 ;
INFO  15:37:10,959 - #48 }
INFO  15:37:10,959 - #48 }
INFO  15:37:10,959 - 

================SINTAKSNO STABLO====================


INFO  15:37:10,959 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtRead(
              DesignatorSimple(
               x
              ) [DesignatorSimple]
            ) [StmtRead]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  15:37:10,959 - 

================SEMANTICKA OBRADA====================


INFO  15:37:10,974 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  15:37:10,974 - Deklarisan globalni niz 'niz' na liniji 4
INFO  15:37:10,974 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  15:37:10,974 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  15:37:10,974 - Deklarisan niz 'niz' na liniji 7
INFO  15:37:10,974 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  15:37:10,974 - Deklarisan niz 'niz' na liniji 13
INFO  15:37:10,974 - Deklarisana promenljiva 'y' na liniji 13
INFO  15:37:10,974 - ===================================
INFO  15:37:10,990 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  15:37:10,990 - Parsiranje uspesno zavrseno!
INFO  15:38:41,255 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  15:38:41,322 - #2 program
INFO  15:38:41,322 - #20 test
INFO  15:38:41,322 - #20 int
INFO  15:38:41,322 - #20 x
INFO  15:38:41,322 - #41 ,
INFO  15:38:41,322 - #20 niz
INFO  15:38:41,322 - #45 [
INFO  15:38:41,322 - #46 ]
INFO  15:38:41,322 - #40 ;
INFO  15:38:41,322 - #47 {
INFO  15:38:41,322 - #20 int
INFO  15:38:41,322 - #20 fun
INFO  15:38:41,322 - #43 (
INFO  15:38:41,322 - #20 int
INFO  15:38:41,322 - #20 x
INFO  15:38:41,322 - #41 ,
INFO  15:38:41,322 - #20 int
INFO  15:38:41,322 - #20 y
INFO  15:38:41,322 - #44 )
INFO  15:38:41,322 - #20 int
INFO  15:38:41,322 - #20 niz
INFO  15:38:41,322 - #45 [
INFO  15:38:41,322 - #46 ]
INFO  15:38:41,322 - #40 ;
INFO  15:38:41,322 - #47 {
INFO  15:38:41,322 - #15 return
INFO  15:38:41,322 - #20 x
INFO  15:38:41,322 - #24 +
INFO  15:38:41,322 - #20 y
INFO  15:38:41,322 - #40 ;
INFO  15:38:41,322 - #48 }
INFO  15:38:41,322 - #20 int
INFO  15:38:41,322 - #20 funx
INFO  15:38:41,322 - #43 (
INFO  15:38:41,322 - #20 int
INFO  15:38:41,322 - #20 x
INFO  15:38:41,322 - #44 )
INFO  15:38:41,322 - #20 int
INFO  15:38:41,322 - #20 niz
INFO  15:38:41,322 - #45 [
INFO  15:38:41,322 - #46 ]
INFO  15:38:41,322 - #41 ,
INFO  15:38:41,322 - #20 y
INFO  15:38:41,322 - #40 ;
INFO  15:38:41,322 - #47 {
INFO  15:38:41,322 - #15 return
INFO  15:38:41,322 - #20 x
INFO  15:38:41,322 - #24 +
INFO  15:38:41,322 - #20 x
INFO  15:38:41,322 - #40 ;
INFO  15:38:41,322 - #48 }
INFO  15:38:41,322 - #16 void
INFO  15:38:41,322 - #20 main
INFO  15:38:41,322 - #43 (
INFO  15:38:41,322 - #44 )
INFO  15:38:41,322 - #47 {
INFO  15:38:41,322 - #20 x
INFO  15:38:41,322 - #37 =
INFO  15:38:41,322 - #20 fun
INFO  15:38:41,322 - #43 (
INFO  15:38:41,322 - #21 2
INFO  15:38:41,322 - #26 *
INFO  15:38:41,322 - #21 2
INFO  15:38:41,322 - #41 ,
INFO  15:38:41,322 - #21 2
INFO  15:38:41,322 - #26 *
INFO  15:38:41,322 - #21 10
INFO  15:38:41,322 - #44 )
INFO  15:38:41,337 - #40 ;
INFO  15:38:41,337 - #13 print
INFO  15:38:41,337 - #43 (
INFO  15:38:41,337 - #20 x
INFO  15:38:41,337 - #44 )
INFO  15:38:41,337 - #40 ;
INFO  15:38:41,337 - #48 }
INFO  15:38:41,337 - #48 }
INFO  15:38:41,337 - 

================SINTAKSNO STABLO====================


INFO  15:38:41,337 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  15:38:41,337 - 

================SEMANTICKA OBRADA====================


INFO  15:38:41,353 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  15:38:41,353 - Deklarisan globalni niz 'niz' na liniji 4
INFO  15:38:41,353 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  15:38:41,353 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  15:38:41,353 - Deklarisan niz 'niz' na liniji 7
INFO  15:38:41,353 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  15:38:41,353 - Deklarisan niz 'niz' na liniji 13
INFO  15:38:41,353 - Deklarisana promenljiva 'y' na liniji 13
INFO  15:38:41,353 - Pronadjen poziv funkcije 'fun' na liniji 23
INFO  15:38:41,353 - ===================================
INFO  15:38:41,353 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  15:38:41,353 - Parsiranje uspesno zavrseno!
INFO  16:01:57,668 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:01:57,748 - #2 program
INFO  16:01:57,748 - #20 test
INFO  16:01:57,748 - #20 int
INFO  16:01:57,748 - #20 x
INFO  16:01:57,748 - #41 ,
INFO  16:01:57,748 - #20 niz
INFO  16:01:57,748 - #45 [
INFO  16:01:57,748 - #46 ]
INFO  16:01:57,748 - #40 ;
INFO  16:01:57,748 - #47 {
INFO  16:01:57,748 - #20 int
INFO  16:01:57,748 - #20 fun
INFO  16:01:57,748 - #43 (
INFO  16:01:57,748 - #20 int
INFO  16:01:57,748 - #20 x
INFO  16:01:57,748 - #41 ,
INFO  16:01:57,748 - #20 int
INFO  16:01:57,748 - #20 y
INFO  16:01:57,748 - #44 )
INFO  16:01:57,748 - #20 int
INFO  16:01:57,748 - #20 niz
INFO  16:01:57,748 - #45 [
INFO  16:01:57,748 - #46 ]
INFO  16:01:57,748 - #40 ;
INFO  16:01:57,748 - #47 {
INFO  16:01:57,756 - #15 return
INFO  16:01:57,756 - #20 x
INFO  16:01:57,756 - #24 +
INFO  16:01:57,756 - #20 y
INFO  16:01:57,758 - #40 ;
INFO  16:01:57,758 - #48 }
INFO  16:01:57,758 - #20 int
INFO  16:01:57,758 - #20 funx
INFO  16:01:57,758 - #43 (
INFO  16:01:57,758 - #20 int
INFO  16:01:57,758 - #20 x
INFO  16:01:57,758 - #44 )
INFO  16:01:57,758 - #20 int
INFO  16:01:57,758 - #20 niz
INFO  16:01:57,758 - #45 [
INFO  16:01:57,758 - #46 ]
INFO  16:01:57,758 - #41 ,
INFO  16:01:57,758 - #20 y
INFO  16:01:57,758 - #40 ;
INFO  16:01:57,758 - #47 {
INFO  16:01:57,758 - #15 return
INFO  16:01:57,758 - #20 x
INFO  16:01:57,758 - #24 +
INFO  16:01:57,758 - #20 x
INFO  16:01:57,758 - #40 ;
INFO  16:01:57,758 - #48 }
INFO  16:01:57,758 - #16 void
INFO  16:01:57,758 - #20 main
INFO  16:01:57,758 - #43 (
INFO  16:01:57,758 - #44 )
INFO  16:01:57,758 - #47 {
INFO  16:01:57,758 - #20 x
INFO  16:01:57,758 - #37 =
INFO  16:01:57,758 - #20 fun
INFO  16:01:57,758 - #43 (
INFO  16:01:57,758 - #21 2
INFO  16:01:57,758 - #26 *
INFO  16:01:57,758 - #21 2
INFO  16:01:57,758 - #41 ,
INFO  16:01:57,758 - #21 2
INFO  16:01:57,758 - #26 *
INFO  16:01:57,758 - #21 10
INFO  16:01:57,758 - #44 )
INFO  16:01:57,758 - #40 ;
INFO  16:01:57,758 - #13 print
INFO  16:01:57,758 - #43 (
INFO  16:01:57,758 - #20 x
INFO  16:01:57,758 - #44 )
INFO  16:01:57,758 - #40 ;
INFO  16:01:57,758 - #48 }
INFO  16:01:57,766 - #48 }
INFO  16:01:57,766 - 

================SINTAKSNO STABLO====================


INFO  16:01:57,768 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:01:57,768 - 

================SEMANTICKA OBRADA====================


INFO  16:01:57,776 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  16:01:57,776 - Deklarisan globalni niz 'niz' na liniji 4
INFO  16:01:57,776 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  16:01:57,776 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  16:01:57,776 - Deklarisan niz 'niz' na liniji 7
INFO  16:01:57,786 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  16:01:57,786 - Deklarisan niz 'niz' na liniji 13
INFO  16:01:57,786 - Deklarisana promenljiva 'y' na liniji 13
INFO  16:01:57,786 - Pronadjen poziv funkcije 'fun' na liniji 23
INFO  16:01:57,788 - ===================================
INFO  16:01:57,788 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  16:01:57,788 - Parsiranje uspesno zavrseno!
INFO  16:02:05,283 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:02:05,329 - #2 program
INFO  16:02:05,329 - #20 test
INFO  16:02:05,329 - #20 int
INFO  16:02:05,329 - #20 x
INFO  16:02:05,329 - #41 ,
INFO  16:02:05,329 - #20 niz
INFO  16:02:05,329 - #45 [
INFO  16:02:05,329 - #46 ]
INFO  16:02:05,329 - #40 ;
INFO  16:02:05,329 - #47 {
INFO  16:02:05,329 - #20 int
INFO  16:02:05,329 - #20 fun
INFO  16:02:05,329 - #43 (
INFO  16:02:05,329 - #20 int
INFO  16:02:05,329 - #20 x
INFO  16:02:05,329 - #41 ,
INFO  16:02:05,329 - #20 int
INFO  16:02:05,329 - #20 y
INFO  16:02:05,329 - #44 )
INFO  16:02:05,336 - #20 int
INFO  16:02:05,336 - #20 niz
INFO  16:02:05,336 - #45 [
INFO  16:02:05,336 - #46 ]
INFO  16:02:05,336 - #40 ;
INFO  16:02:05,336 - #47 {
INFO  16:02:05,336 - #15 return
INFO  16:02:05,336 - #20 x
INFO  16:02:05,336 - #24 +
INFO  16:02:05,336 - #20 y
INFO  16:02:05,336 - #40 ;
INFO  16:02:05,336 - #48 }
INFO  16:02:05,336 - #20 int
INFO  16:02:05,336 - #20 funx
INFO  16:02:05,336 - #43 (
INFO  16:02:05,336 - #20 int
INFO  16:02:05,336 - #20 x
INFO  16:02:05,336 - #44 )
INFO  16:02:05,336 - #20 int
INFO  16:02:05,336 - #20 niz
INFO  16:02:05,336 - #45 [
INFO  16:02:05,336 - #46 ]
INFO  16:02:05,336 - #41 ,
INFO  16:02:05,336 - #20 y
INFO  16:02:05,336 - #40 ;
INFO  16:02:05,336 - #47 {
INFO  16:02:05,336 - #15 return
INFO  16:02:05,336 - #20 x
INFO  16:02:05,336 - #24 +
INFO  16:02:05,336 - #20 x
INFO  16:02:05,336 - #40 ;
INFO  16:02:05,336 - #48 }
INFO  16:02:05,336 - #16 void
INFO  16:02:05,336 - #20 main
INFO  16:02:05,336 - #43 (
INFO  16:02:05,336 - #44 )
INFO  16:02:05,336 - #47 {
INFO  16:02:05,336 - #20 x
INFO  16:02:05,336 - #37 =
INFO  16:02:05,336 - #20 fun
INFO  16:02:05,336 - #43 (
INFO  16:02:05,336 - #21 2
INFO  16:02:05,336 - #26 *
INFO  16:02:05,336 - #21 2
INFO  16:02:05,336 - #41 ,
INFO  16:02:05,336 - #21 2
INFO  16:02:05,336 - #26 *
INFO  16:02:05,336 - #21 10
INFO  16:02:05,336 - #44 )
INFO  16:02:05,336 - #40 ;
INFO  16:02:05,336 - #13 print
INFO  16:02:05,336 - #43 (
INFO  16:02:05,336 - #20 x
INFO  16:02:05,336 - #44 )
INFO  16:02:05,336 - #40 ;
INFO  16:02:05,336 - #48 }
INFO  16:02:05,336 - #48 }
INFO  16:02:05,336 - 

================SINTAKSNO STABLO====================


INFO  16:02:05,336 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:02:05,336 - 

================SEMANTICKA OBRADA====================


INFO  16:02:05,352 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  16:02:05,352 - Deklarisan globalni niz 'niz' na liniji 4
INFO  16:02:05,352 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  16:02:05,352 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  16:02:05,352 - Deklarisan niz 'niz' na liniji 7
INFO  16:02:05,352 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  16:02:05,352 - Deklarisan niz 'niz' na liniji 13
INFO  16:02:05,352 - Deklarisana promenljiva 'y' na liniji 13
INFO  16:02:05,352 - Pronadjen poziv funkcije 'fun' na liniji 23
INFO  16:02:05,352 - ===================================
INFO  16:02:05,352 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  16:02:05,367 - Parsiranje uspesno zavrseno!
INFO  16:03:02,955 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:03:03,024 - #2 program
INFO  16:03:03,024 - #20 test
INFO  16:03:03,024 - #20 int
INFO  16:03:03,024 - #20 x
INFO  16:03:03,024 - #41 ,
INFO  16:03:03,024 - #20 niz
INFO  16:03:03,024 - #45 [
INFO  16:03:03,024 - #46 ]
INFO  16:03:03,024 - #40 ;
INFO  16:03:03,024 - #47 {
INFO  16:03:03,024 - #20 int
INFO  16:03:03,024 - #20 fun
INFO  16:03:03,024 - #43 (
INFO  16:03:03,024 - #20 int
INFO  16:03:03,024 - #20 x
INFO  16:03:03,024 - #41 ,
INFO  16:03:03,024 - #20 int
INFO  16:03:03,024 - #20 y
INFO  16:03:03,024 - #44 )
INFO  16:03:03,024 - #20 int
INFO  16:03:03,024 - #20 niz
INFO  16:03:03,024 - #45 [
INFO  16:03:03,024 - #46 ]
INFO  16:03:03,024 - #40 ;
INFO  16:03:03,039 - #47 {
INFO  16:03:03,039 - #15 return
INFO  16:03:03,039 - #20 x
INFO  16:03:03,039 - #24 +
INFO  16:03:03,039 - #20 y
INFO  16:03:03,039 - #40 ;
INFO  16:03:03,039 - #48 }
INFO  16:03:03,039 - #20 int
INFO  16:03:03,039 - #20 funx
INFO  16:03:03,039 - #43 (
INFO  16:03:03,039 - #20 int
INFO  16:03:03,039 - #20 x
INFO  16:03:03,039 - #44 )
INFO  16:03:03,039 - #20 int
INFO  16:03:03,039 - #20 niz
INFO  16:03:03,039 - #45 [
INFO  16:03:03,039 - #46 ]
INFO  16:03:03,039 - #41 ,
INFO  16:03:03,039 - #20 y
INFO  16:03:03,039 - #40 ;
INFO  16:03:03,039 - #47 {
INFO  16:03:03,039 - #15 return
INFO  16:03:03,039 - #20 x
INFO  16:03:03,039 - #24 +
INFO  16:03:03,039 - #20 x
INFO  16:03:03,039 - #40 ;
INFO  16:03:03,039 - #48 }
INFO  16:03:03,039 - #16 void
INFO  16:03:03,039 - #20 main
INFO  16:03:03,039 - #43 (
INFO  16:03:03,039 - #44 )
INFO  16:03:03,039 - #47 {
INFO  16:03:03,039 - #20 x
INFO  16:03:03,039 - #37 =
INFO  16:03:03,039 - #20 fun
INFO  16:03:03,039 - #43 (
INFO  16:03:03,039 - #21 2
INFO  16:03:03,039 - #26 *
INFO  16:03:03,039 - #21 2
INFO  16:03:03,039 - #41 ,
INFO  16:03:03,039 - #21 2
INFO  16:03:03,039 - #26 *
INFO  16:03:03,039 - #21 10
INFO  16:03:03,039 - #44 )
INFO  16:03:03,039 - #40 ;
INFO  16:03:03,039 - #13 print
INFO  16:03:03,039 - #43 (
INFO  16:03:03,039 - #20 x
INFO  16:03:03,039 - #44 )
INFO  16:03:03,039 - #40 ;
INFO  16:03:03,039 - #48 }
INFO  16:03:03,039 - #48 }
INFO  16:03:03,039 - 

================SINTAKSNO STABLO====================


INFO  16:03:03,039 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:03:03,039 - 

================SEMANTICKA OBRADA====================


INFO  16:03:03,055 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  16:03:03,055 - Deklarisan globalni niz 'niz' na liniji 4
INFO  16:03:03,055 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  16:03:03,055 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  16:03:03,055 - Deklarisan niz 'niz' na liniji 7
INFO  16:03:03,071 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  16:03:03,071 - Deklarisan niz 'niz' na liniji 13
INFO  16:03:03,071 - Deklarisana promenljiva 'y' na liniji 13
INFO  16:03:03,071 - Pronadjen poziv funkcije 'fun' na liniji 23
INFO  16:03:03,077 - ===================================
INFO  16:03:03,077 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  16:03:03,077 - Parsiranje uspesno zavrseno!
INFO  16:14:13,730 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:14:13,830 - #2 program
INFO  16:14:13,830 - #20 test
INFO  16:14:13,830 - #20 int
INFO  16:14:13,830 - #20 x
INFO  16:14:13,830 - #41 ,
INFO  16:14:13,830 - #20 niz
INFO  16:14:13,830 - #45 [
INFO  16:14:13,830 - #46 ]
INFO  16:14:13,830 - #40 ;
INFO  16:14:13,830 - #47 {
INFO  16:14:13,830 - #20 int
INFO  16:14:13,830 - #20 fun
INFO  16:14:13,830 - #43 (
INFO  16:14:13,830 - #20 int
INFO  16:14:13,830 - #20 x
INFO  16:14:13,830 - #41 ,
INFO  16:14:13,830 - #20 int
INFO  16:14:13,830 - #20 y
INFO  16:14:13,830 - #44 )
INFO  16:14:13,830 - #20 int
INFO  16:14:13,830 - #20 niz
INFO  16:14:13,830 - #45 [
INFO  16:14:13,830 - #46 ]
INFO  16:14:13,830 - #40 ;
INFO  16:14:13,830 - #47 {
INFO  16:14:13,830 - #15 return
INFO  16:14:13,830 - #20 x
INFO  16:14:13,830 - #24 +
INFO  16:14:13,830 - #20 y
INFO  16:14:13,830 - #40 ;
INFO  16:14:13,830 - #48 }
INFO  16:14:13,830 - #20 int
INFO  16:14:13,830 - #20 funx
INFO  16:14:13,830 - #43 (
INFO  16:14:13,830 - #20 int
INFO  16:14:13,830 - #20 x
INFO  16:14:13,830 - #44 )
INFO  16:14:13,830 - #20 int
INFO  16:14:13,830 - #20 niz
INFO  16:14:13,830 - #45 [
INFO  16:14:13,830 - #46 ]
INFO  16:14:13,830 - #41 ,
INFO  16:14:13,830 - #20 y
INFO  16:14:13,830 - #40 ;
INFO  16:14:13,830 - #47 {
INFO  16:14:13,830 - #15 return
INFO  16:14:13,830 - #20 x
INFO  16:14:13,830 - #24 +
INFO  16:14:13,830 - #20 x
INFO  16:14:13,830 - #40 ;
INFO  16:14:13,846 - #48 }
INFO  16:14:13,846 - #16 void
INFO  16:14:13,846 - #20 main
INFO  16:14:13,846 - #43 (
INFO  16:14:13,846 - #44 )
INFO  16:14:13,846 - #47 {
INFO  16:14:13,846 - #20 x
INFO  16:14:13,846 - #37 =
INFO  16:14:13,846 - #20 fun
INFO  16:14:13,846 - #43 (
INFO  16:14:13,846 - #21 2
INFO  16:14:13,846 - #26 *
INFO  16:14:13,846 - #21 2
INFO  16:14:13,846 - #41 ,
INFO  16:14:13,846 - #21 2
INFO  16:14:13,846 - #26 *
INFO  16:14:13,846 - #21 10
INFO  16:14:13,846 - #44 )
INFO  16:14:13,846 - #40 ;
INFO  16:14:13,846 - #13 print
INFO  16:14:13,846 - #43 (
INFO  16:14:13,846 - #20 x
INFO  16:14:13,846 - #44 )
INFO  16:14:13,846 - #40 ;
INFO  16:14:13,846 - #48 }
INFO  16:14:13,846 - #48 }
INFO  16:14:13,846 - 

================SINTAKSNO STABLO====================


INFO  16:14:13,846 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:14:13,846 - 

================SEMANTICKA OBRADA====================


INFO  16:14:13,861 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  16:14:13,861 - Deklarisan globalni niz 'niz' na liniji 4
INFO  16:14:13,861 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  16:14:13,861 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  16:14:13,861 - Deklarisan niz 'niz' na liniji 7
INFO  16:14:13,861 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  16:14:13,861 - Deklarisan niz 'niz' na liniji 13
INFO  16:14:13,861 - Deklarisana promenljiva 'y' na liniji 13
INFO  16:14:13,861 - Pronadjen poziv funkcije 'fun' na liniji 23
INFO  16:14:13,861 - ===================================
INFO  16:14:13,861 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 16:14:13,861 - AAA StmtReturnExpr(
  ExprOne(
    ExprAddop(
      ExprSingle(
        TermSingle(
          FactorDesignator(
            DesignatorSimple(
             x
            ) [DesignatorSimple]
          ) [FactorDesignator]
        ) [TermSingle]
      ) [ExprSingle]
      AddopPlus(
      ) [AddopPlus]
      TermSingle(
        FactorDesignator(
          DesignatorSimple(
           y
          ) [DesignatorSimple]
        ) [FactorDesignator]
      ) [TermSingle]
    ) [ExprAddop]
  ) [ExprOne]
) [StmtReturnExpr]
ERROR 16:14:13,861 - AAA StmtReturnExpr(
  ExprOne(
    ExprAddop(
      ExprSingle(
        TermSingle(
          FactorDesignator(
            DesignatorSimple(
             x
            ) [DesignatorSimple]
          ) [FactorDesignator]
        ) [TermSingle]
      ) [ExprSingle]
      AddopPlus(
      ) [AddopPlus]
      TermSingle(
        FactorDesignator(
          DesignatorSimple(
           x
          ) [DesignatorSimple]
        ) [FactorDesignator]
      ) [TermSingle]
    ) [ExprAddop]
  ) [ExprOne]
) [StmtReturnExpr]
ERROR 16:14:13,861 - AAA ActParsSingle(
  ExprOne(
    ExprSingle(
      TermMulop(
        TermSingle(
          FactorNumConst(
           2
          ) [FactorNumConst]
        ) [TermSingle]
        MulopMul(
        ) [MulopMul]
        FactorNumConst(
         2
        ) [FactorNumConst]
      ) [TermMulop]
    ) [ExprSingle]
  ) [ExprOne]
) [ActParsSingle]
ERROR 16:14:13,861 - AAA ActParsMulti(
  ActParsSingle(
    ExprOne(
      ExprSingle(
        TermMulop(
          TermSingle(
            FactorNumConst(
             2
            ) [FactorNumConst]
          ) [TermSingle]
          MulopMul(
          ) [MulopMul]
          FactorNumConst(
           2
          ) [FactorNumConst]
        ) [TermMulop]
      ) [ExprSingle]
    ) [ExprOne]
  ) [ActParsSingle]
  ExprOne(
    ExprSingle(
      TermMulop(
        TermSingle(
          FactorNumConst(
           2
          ) [FactorNumConst]
        ) [TermSingle]
        MulopMul(
        ) [MulopMul]
        FactorNumConst(
         10
        ) [FactorNumConst]
      ) [TermMulop]
    ) [ExprSingle]
  ) [ExprOne]
) [ActParsMulti]
ERROR 16:14:13,861 - AAA AssignmentExpr(
  ExprOne(
    ExprSingle(
      TermSingle(
        FuncCallParams(
          DesignatorSimple(
           fun
          ) [DesignatorSimple]
          ActParsMulti(
            ActParsSingle(
              ExprOne(
                ExprSingle(
                  TermMulop(
                    TermSingle(
                      FactorNumConst(
                       2
                      ) [FactorNumConst]
                    ) [TermSingle]
                    MulopMul(
                    ) [MulopMul]
                    FactorNumConst(
                     2
                    ) [FactorNumConst]
                  ) [TermMulop]
                ) [ExprSingle]
              ) [ExprOne]
            ) [ActParsSingle]
            ExprOne(
              ExprSingle(
                TermMulop(
                  TermSingle(
                    FactorNumConst(
                     2
                    ) [FactorNumConst]
                  ) [TermSingle]
                  MulopMul(
                  ) [MulopMul]
                  FactorNumConst(
                   10
                  ) [FactorNumConst]
                ) [TermMulop]
              ) [ExprSingle]
            ) [ExprOne]
          ) [ActParsMulti]
        ) [FuncCallParams]
      ) [TermSingle]
    ) [ExprSingle]
  ) [ExprOne]
) [AssignmentExpr]
ERROR 16:14:13,861 - AAA StmtPrint(
  ExprOne(
    ExprSingle(
      TermSingle(
        FactorDesignator(
          DesignatorSimple(
           x
          ) [DesignatorSimple]
        ) [FactorDesignator]
      ) [TermSingle]
    ) [ExprSingle]
  ) [ExprOne]
) [StmtPrint]
INFO  16:14:13,861 - Parsiranje uspesno zavrseno!
INFO  16:15:59,123 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:15:59,170 - #2 program
INFO  16:15:59,170 - #20 test
INFO  16:15:59,170 - #20 int
INFO  16:15:59,170 - #20 x
INFO  16:15:59,170 - #41 ,
INFO  16:15:59,170 - #20 niz
INFO  16:15:59,170 - #45 [
INFO  16:15:59,170 - #46 ]
INFO  16:15:59,170 - #40 ;
INFO  16:15:59,170 - #47 {
INFO  16:15:59,170 - #20 int
INFO  16:15:59,170 - #20 fun
INFO  16:15:59,170 - #43 (
INFO  16:15:59,170 - #20 int
INFO  16:15:59,170 - #20 x
INFO  16:15:59,170 - #41 ,
INFO  16:15:59,170 - #20 int
INFO  16:15:59,170 - #20 y
INFO  16:15:59,170 - #44 )
INFO  16:15:59,170 - #20 int
INFO  16:15:59,170 - #20 niz
INFO  16:15:59,170 - #45 [
INFO  16:15:59,170 - #46 ]
INFO  16:15:59,170 - #40 ;
INFO  16:15:59,170 - #47 {
INFO  16:15:59,185 - #15 return
INFO  16:15:59,185 - #20 x
INFO  16:15:59,185 - #24 +
INFO  16:15:59,185 - #20 y
INFO  16:15:59,187 - #40 ;
INFO  16:15:59,188 - #48 }
INFO  16:15:59,188 - #20 int
INFO  16:15:59,189 - #20 funx
INFO  16:15:59,189 - #43 (
INFO  16:15:59,189 - #20 int
INFO  16:15:59,189 - #20 x
INFO  16:15:59,189 - #44 )
INFO  16:15:59,189 - #20 int
INFO  16:15:59,189 - #20 niz
INFO  16:15:59,189 - #45 [
INFO  16:15:59,189 - #46 ]
INFO  16:15:59,189 - #41 ,
INFO  16:15:59,190 - #20 y
INFO  16:15:59,190 - #40 ;
INFO  16:15:59,190 - #47 {
INFO  16:15:59,190 - #15 return
INFO  16:15:59,190 - #20 x
INFO  16:15:59,190 - #24 +
INFO  16:15:59,190 - #20 x
INFO  16:15:59,190 - #40 ;
INFO  16:15:59,191 - #48 }
INFO  16:15:59,191 - #16 void
INFO  16:15:59,191 - #20 main
INFO  16:15:59,191 - #43 (
INFO  16:15:59,191 - #44 )
INFO  16:15:59,191 - #47 {
INFO  16:15:59,191 - #20 x
INFO  16:15:59,191 - #37 =
INFO  16:15:59,192 - #20 fun
INFO  16:15:59,192 - #43 (
INFO  16:15:59,192 - #21 2
INFO  16:15:59,192 - #26 *
INFO  16:15:59,192 - #21 2
INFO  16:15:59,193 - #41 ,
INFO  16:15:59,193 - #21 2
INFO  16:15:59,193 - #26 *
INFO  16:15:59,193 - #21 10
INFO  16:15:59,193 - #44 )
INFO  16:15:59,194 - #40 ;
INFO  16:15:59,194 - #13 print
INFO  16:15:59,194 - #43 (
INFO  16:15:59,194 - #20 x
INFO  16:15:59,194 - #44 )
INFO  16:15:59,194 - #40 ;
INFO  16:15:59,194 - #48 }
INFO  16:15:59,195 - #48 }
INFO  16:15:59,196 - 

================SINTAKSNO STABLO====================


INFO  16:15:59,197 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:15:59,198 - 

================SEMANTICKA OBRADA====================


INFO  16:15:59,208 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  16:15:59,208 - Deklarisan globalni niz 'niz' na liniji 4
INFO  16:15:59,209 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  16:15:59,209 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  16:15:59,209 - Deklarisan niz 'niz' na liniji 7
INFO  16:15:59,212 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  16:15:59,212 - Deklarisan niz 'niz' na liniji 13
INFO  16:15:59,212 - Deklarisana promenljiva 'y' na liniji 13
INFO  16:15:59,212 - Pronadjen poziv funkcije 'fun' na liniji 23
INFO  16:15:59,213 - ===================================
INFO  16:15:59,213 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  16:15:59,220 - Parsiranje uspesno zavrseno!
INFO  16:16:06,236 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:16:06,281 - #2 program
INFO  16:16:06,281 - #20 test
INFO  16:16:06,281 - #20 int
INFO  16:16:06,282 - #20 x
INFO  16:16:06,282 - #41 ,
INFO  16:16:06,283 - #20 niz
INFO  16:16:06,283 - #45 [
INFO  16:16:06,283 - #46 ]
INFO  16:16:06,283 - #40 ;
INFO  16:16:06,283 - #47 {
INFO  16:16:06,283 - #20 int
INFO  16:16:06,283 - #20 fun
INFO  16:16:06,283 - #43 (
INFO  16:16:06,284 - #20 int
INFO  16:16:06,284 - #20 x
INFO  16:16:06,284 - #41 ,
INFO  16:16:06,284 - #20 int
INFO  16:16:06,284 - #20 y
INFO  16:16:06,284 - #44 )
INFO  16:16:06,284 - #20 int
INFO  16:16:06,284 - #20 niz
INFO  16:16:06,284 - #45 [
INFO  16:16:06,284 - #46 ]
INFO  16:16:06,285 - #40 ;
INFO  16:16:06,285 - #47 {
INFO  16:16:06,286 - #15 return
INFO  16:16:06,286 - #20 x
INFO  16:16:06,286 - #24 +
INFO  16:16:06,287 - #20 y
INFO  16:16:06,287 - #40 ;
INFO  16:16:06,288 - #48 }
INFO  16:16:06,288 - #20 int
INFO  16:16:06,288 - #20 funx
INFO  16:16:06,288 - #43 (
INFO  16:16:06,288 - #20 int
INFO  16:16:06,288 - #20 x
INFO  16:16:06,289 - #44 )
INFO  16:16:06,289 - #20 int
INFO  16:16:06,289 - #20 niz
INFO  16:16:06,289 - #45 [
INFO  16:16:06,289 - #46 ]
INFO  16:16:06,289 - #41 ,
INFO  16:16:06,289 - #20 y
INFO  16:16:06,289 - #40 ;
INFO  16:16:06,289 - #47 {
INFO  16:16:06,290 - #15 return
INFO  16:16:06,290 - #20 x
INFO  16:16:06,290 - #24 +
INFO  16:16:06,290 - #20 x
INFO  16:16:06,290 - #40 ;
INFO  16:16:06,291 - #48 }
INFO  16:16:06,291 - #16 void
INFO  16:16:06,291 - #20 main
INFO  16:16:06,291 - #43 (
INFO  16:16:06,291 - #44 )
INFO  16:16:06,291 - #47 {
INFO  16:16:06,291 - #20 x
INFO  16:16:06,291 - #37 =
INFO  16:16:06,291 - #20 fun
INFO  16:16:06,292 - #43 (
INFO  16:16:06,292 - #21 2
INFO  16:16:06,293 - #26 *
INFO  16:16:06,293 - #21 2
INFO  16:16:06,295 - #41 ,
INFO  16:16:06,296 - #21 2
INFO  16:16:06,296 - #26 *
INFO  16:16:06,296 - #21 10
INFO  16:16:06,296 - #44 )
INFO  16:16:06,296 - #40 ;
INFO  16:16:06,297 - #13 print
INFO  16:16:06,297 - #43 (
INFO  16:16:06,297 - #20 x
INFO  16:16:06,297 - #44 )
INFO  16:16:06,297 - #40 ;
INFO  16:16:06,297 - #48 }
INFO  16:16:06,297 - #48 }
INFO  16:16:06,298 - 

================SINTAKSNO STABLO====================


INFO  16:16:06,299 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:16:06,299 - 

================SEMANTICKA OBRADA====================


INFO  16:16:06,310 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  16:16:06,310 - Deklarisan globalni niz 'niz' na liniji 4
INFO  16:16:06,310 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  16:16:06,311 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  16:16:06,311 - Deklarisan niz 'niz' na liniji 7
INFO  16:16:06,314 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  16:16:06,314 - Deklarisan niz 'niz' na liniji 13
INFO  16:16:06,314 - Deklarisana promenljiva 'y' na liniji 13
INFO  16:16:06,314 - Pronadjen poziv funkcije 'fun' na liniji 23
INFO  16:16:06,315 - ===================================
INFO  16:16:06,315 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  16:16:06,321 - Parsiranje uspesno zavrseno!
INFO  16:17:02,744 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:17:02,800 - #2 program
INFO  16:17:02,800 - #20 test
INFO  16:17:02,800 - #20 int
INFO  16:17:02,800 - #20 x
INFO  16:17:02,800 - #41 ,
INFO  16:17:02,816 - #20 niz
INFO  16:17:02,816 - #45 [
INFO  16:17:02,816 - #46 ]
INFO  16:17:02,816 - #40 ;
INFO  16:17:02,816 - #47 {
INFO  16:17:02,816 - #20 int
INFO  16:17:02,816 - #20 fun
INFO  16:17:02,816 - #43 (
INFO  16:17:02,816 - #20 int
INFO  16:17:02,816 - #20 x
INFO  16:17:02,816 - #41 ,
INFO  16:17:02,816 - #20 int
INFO  16:17:02,816 - #20 y
INFO  16:17:02,816 - #44 )
INFO  16:17:02,816 - #20 int
INFO  16:17:02,816 - #20 niz
INFO  16:17:02,816 - #45 [
INFO  16:17:02,816 - #46 ]
INFO  16:17:02,816 - #40 ;
INFO  16:17:02,816 - #47 {
INFO  16:17:02,816 - #15 return
INFO  16:17:02,816 - #20 x
INFO  16:17:02,816 - #24 +
INFO  16:17:02,816 - #20 y
INFO  16:17:02,816 - #40 ;
INFO  16:17:02,816 - #48 }
INFO  16:17:02,816 - #20 int
INFO  16:17:02,816 - #20 funx
INFO  16:17:02,816 - #43 (
INFO  16:17:02,816 - #20 int
INFO  16:17:02,816 - #20 x
INFO  16:17:02,816 - #44 )
INFO  16:17:02,816 - #20 int
INFO  16:17:02,816 - #20 niz
INFO  16:17:02,816 - #45 [
INFO  16:17:02,816 - #46 ]
INFO  16:17:02,816 - #41 ,
INFO  16:17:02,816 - #20 y
INFO  16:17:02,816 - #40 ;
INFO  16:17:02,816 - #47 {
INFO  16:17:02,816 - #15 return
INFO  16:17:02,816 - #20 x
INFO  16:17:02,816 - #24 +
INFO  16:17:02,816 - #20 x
INFO  16:17:02,816 - #40 ;
INFO  16:17:02,816 - #48 }
INFO  16:17:02,816 - #16 void
INFO  16:17:02,816 - #20 main
INFO  16:17:02,816 - #43 (
INFO  16:17:02,816 - #44 )
INFO  16:17:02,816 - #47 {
INFO  16:17:02,816 - #20 x
INFO  16:17:02,816 - #37 =
INFO  16:17:02,816 - #20 fun
INFO  16:17:02,816 - #43 (
INFO  16:17:02,816 - #21 2
INFO  16:17:02,816 - #26 *
INFO  16:17:02,816 - #21 2
INFO  16:17:02,816 - #41 ,
INFO  16:17:02,816 - #21 2
INFO  16:17:02,816 - #26 *
INFO  16:17:02,816 - #21 10
INFO  16:17:02,816 - #44 )
INFO  16:17:02,816 - #40 ;
INFO  16:17:02,816 - #13 print
INFO  16:17:02,816 - #43 (
INFO  16:17:02,816 - #20 x
INFO  16:17:02,816 - #44 )
INFO  16:17:02,816 - #40 ;
INFO  16:17:02,816 - #48 }
INFO  16:17:02,816 - #48 }
INFO  16:17:02,816 - 

================SINTAKSNO STABLO====================


INFO  16:17:02,832 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:17:02,832 - 

================SEMANTICKA OBRADA====================


INFO  16:17:02,832 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  16:17:02,832 - Deklarisan globalni niz 'niz' na liniji 4
INFO  16:17:02,832 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  16:17:02,832 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  16:17:02,832 - Deklarisan niz 'niz' na liniji 7
INFO  16:17:02,849 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  16:17:02,849 - Deklarisan niz 'niz' na liniji 13
INFO  16:17:02,849 - Deklarisana promenljiva 'y' na liniji 13
INFO  16:17:02,850 - Pronadjen poziv funkcije 'fun' na liniji 23
INFO  16:17:02,851 - ===================================
INFO  16:17:02,851 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  16:17:02,854 - Parsiranje uspesno zavrseno!
INFO  16:20:43,218 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:20:43,286 - #2 program
INFO  16:20:43,287 - #20 test
INFO  16:20:43,287 - #20 int
INFO  16:20:43,305 - #20 x
INFO  16:20:43,306 - #41 ,
INFO  16:20:43,306 - #20 niz
INFO  16:20:43,306 - #45 [
INFO  16:20:43,306 - #46 ]
INFO  16:20:43,306 - #40 ;
INFO  16:20:43,307 - #47 {
INFO  16:20:43,307 - #20 int
INFO  16:20:43,307 - #20 fun
INFO  16:20:43,307 - #43 (
INFO  16:20:43,307 - #20 int
INFO  16:20:43,307 - #20 x
INFO  16:20:43,307 - #41 ,
INFO  16:20:43,308 - #20 int
INFO  16:20:43,308 - #20 y
INFO  16:20:43,308 - #44 )
INFO  16:20:43,308 - #20 int
INFO  16:20:43,308 - #20 niz
INFO  16:20:43,308 - #45 [
INFO  16:20:43,308 - #46 ]
INFO  16:20:43,308 - #40 ;
INFO  16:20:43,309 - #47 {
INFO  16:20:43,309 - #15 return
INFO  16:20:43,309 - #20 x
INFO  16:20:43,309 - #24 +
INFO  16:20:43,310 - #20 y
INFO  16:20:43,311 - #40 ;
INFO  16:20:43,312 - #48 }
INFO  16:20:43,312 - #20 int
INFO  16:20:43,312 - #20 funx
INFO  16:20:43,312 - #43 (
INFO  16:20:43,312 - #20 int
INFO  16:20:43,312 - #20 x
INFO  16:20:43,312 - #44 )
INFO  16:20:43,312 - #20 int
INFO  16:20:43,312 - #20 niz
INFO  16:20:43,313 - #45 [
INFO  16:20:43,313 - #46 ]
INFO  16:20:43,313 - #41 ,
INFO  16:20:43,313 - #20 y
INFO  16:20:43,313 - #40 ;
INFO  16:20:43,313 - #47 {
INFO  16:20:43,313 - #15 return
INFO  16:20:43,313 - #20 x
INFO  16:20:43,313 - #24 +
INFO  16:20:43,313 - #20 x
INFO  16:20:43,313 - #40 ;
INFO  16:20:43,314 - #48 }
INFO  16:20:43,314 - #16 void
INFO  16:20:43,314 - #20 main
INFO  16:20:43,314 - #43 (
INFO  16:20:43,314 - #44 )
INFO  16:20:43,314 - #47 {
INFO  16:20:43,314 - #20 x
INFO  16:20:43,314 - #37 =
INFO  16:20:43,314 - #20 fun
INFO  16:20:43,314 - #43 (
INFO  16:20:43,315 - #21 2
INFO  16:20:43,315 - #26 *
INFO  16:20:43,315 - #21 2
INFO  16:20:43,316 - #41 ,
INFO  16:20:43,316 - #21 2
INFO  16:20:43,316 - #26 *
INFO  16:20:43,316 - #21 10
INFO  16:20:43,317 - #44 )
INFO  16:20:43,317 - #40 ;
INFO  16:20:43,317 - #13 print
INFO  16:20:43,318 - #43 (
INFO  16:20:43,318 - #20 x
INFO  16:20:43,318 - #44 )
INFO  16:20:43,318 - #40 ;
INFO  16:20:43,318 - #48 }
INFO  16:20:43,318 - #48 }
INFO  16:20:43,319 - 

================SINTAKSNO STABLO====================


INFO  16:20:43,321 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:20:43,321 - 

================SEMANTICKA OBRADA====================


INFO  16:20:43,335 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  16:20:43,335 - Deklarisan globalni niz 'niz' na liniji 4
INFO  16:20:43,336 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  16:20:43,336 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  16:20:43,336 - Deklarisan niz 'niz' na liniji 7
INFO  16:20:43,339 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  16:20:43,339 - Deklarisan niz 'niz' na liniji 13
INFO  16:20:43,339 - Deklarisana promenljiva 'y' na liniji 13
INFO  16:20:43,339 - Pronadjen poziv funkcije 'fun' na liniji 23
INFO  16:20:43,339 - ===================================
INFO  16:20:43,339 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  16:20:43,349 - Parsiranje uspesno zavrseno!
INFO  16:20:50,312 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:20:50,589 - #2 program
INFO  16:20:50,591 - #20 test
INFO  16:20:50,591 - #20 int
INFO  16:20:50,593 - #20 x
INFO  16:20:50,593 - #41 ,
INFO  16:20:50,593 - #20 niz
INFO  16:20:50,593 - #45 [
INFO  16:20:50,593 - #46 ]
INFO  16:20:50,593 - #40 ;
INFO  16:20:50,593 - #47 {
INFO  16:20:50,597 - #20 int
INFO  16:20:50,597 - #20 fun
INFO  16:20:50,597 - #43 (
INFO  16:20:50,597 - #20 int
INFO  16:20:50,597 - #20 x
INFO  16:20:50,597 - #41 ,
INFO  16:20:50,599 - #20 int
INFO  16:20:50,599 - #20 y
INFO  16:20:50,599 - #44 )
INFO  16:20:50,599 - #20 int
INFO  16:20:50,599 - #20 niz
INFO  16:20:50,599 - #45 [
INFO  16:20:50,599 - #46 ]
INFO  16:20:50,599 - #40 ;
INFO  16:20:50,599 - #47 {
INFO  16:20:50,599 - #15 return
INFO  16:20:50,599 - #20 x
INFO  16:20:50,599 - #24 +
INFO  16:20:50,599 - #20 y
INFO  16:20:50,599 - #40 ;
INFO  16:20:50,599 - #48 }
INFO  16:20:50,607 - #20 int
INFO  16:20:50,609 - #20 funx
INFO  16:20:50,609 - #43 (
INFO  16:20:50,609 - #20 int
INFO  16:20:50,609 - #20 x
INFO  16:20:50,609 - #44 )
INFO  16:20:50,609 - #20 int
INFO  16:20:50,609 - #20 niz
INFO  16:20:50,609 - #45 [
INFO  16:20:50,609 - #46 ]
INFO  16:20:50,609 - #41 ,
INFO  16:20:50,617 - #20 y
INFO  16:20:50,617 - #40 ;
INFO  16:20:50,617 - #47 {
INFO  16:20:50,617 - #15 return
INFO  16:20:50,617 - #20 x
INFO  16:20:50,617 - #24 +
INFO  16:20:50,619 - #20 x
INFO  16:20:50,619 - #40 ;
INFO  16:20:50,619 - #48 }
INFO  16:20:50,619 - #16 void
INFO  16:20:50,619 - #20 main
INFO  16:20:50,619 - #43 (
INFO  16:20:50,619 - #44 )
INFO  16:20:50,619 - #47 {
INFO  16:20:50,627 - #20 x
INFO  16:20:50,627 - #37 =
INFO  16:20:50,627 - #20 fun
INFO  16:20:50,627 - #43 (
INFO  16:20:50,627 - #21 2
INFO  16:20:50,629 - #26 *
INFO  16:20:50,629 - #21 2
INFO  16:20:50,629 - #41 ,
INFO  16:20:50,629 - #21 2
INFO  16:20:50,629 - #26 *
INFO  16:20:50,629 - #21 10
INFO  16:20:50,629 - #44 )
INFO  16:20:50,629 - #40 ;
INFO  16:20:50,639 - #13 print
INFO  16:20:50,639 - #43 (
INFO  16:20:50,639 - #20 x
INFO  16:20:50,639 - #44 )
INFO  16:20:50,639 - #40 ;
INFO  16:20:50,639 - #48 }
INFO  16:20:50,639 - #48 }
INFO  16:20:50,639 - 

================SINTAKSNO STABLO====================


INFO  16:20:50,649 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:20:50,649 - 

================SEMANTICKA OBRADA====================


INFO  16:20:50,680 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  16:20:50,680 - Deklarisan globalni niz 'niz' na liniji 4
INFO  16:20:50,680 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  16:20:50,680 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  16:20:50,680 - Deklarisan niz 'niz' na liniji 7
INFO  16:20:50,680 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  16:20:50,680 - Deklarisan niz 'niz' na liniji 13
INFO  16:20:50,680 - Deklarisana promenljiva 'y' na liniji 13
INFO  16:20:50,680 - Pronadjen poziv funkcije 'fun' na liniji 23
INFO  16:20:50,690 - ===================================
INFO  16:20:50,690 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  16:20:50,700 - Parsiranje uspesno zavrseno!
INFO  16:21:33,170 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:21:33,220 - #2 program
INFO  16:21:33,220 - #20 test
INFO  16:21:33,220 - #20 int
INFO  16:21:33,222 - #20 x
INFO  16:21:33,224 - #41 ,
INFO  16:21:33,224 - #20 niz
INFO  16:21:33,224 - #45 [
INFO  16:21:33,224 - #46 ]
INFO  16:21:33,224 - #40 ;
INFO  16:21:33,225 - #47 {
INFO  16:21:33,225 - #20 int
INFO  16:21:33,225 - #20 fun
INFO  16:21:33,225 - #43 (
INFO  16:21:33,225 - #20 int
INFO  16:21:33,225 - #20 x
INFO  16:21:33,225 - #41 ,
INFO  16:21:33,226 - #20 int
INFO  16:21:33,226 - #20 y
INFO  16:21:33,226 - #44 )
INFO  16:21:33,226 - #20 int
INFO  16:21:33,226 - #20 niz
INFO  16:21:33,226 - #45 [
INFO  16:21:33,226 - #46 ]
INFO  16:21:33,226 - #40 ;
INFO  16:21:33,226 - #47 {
INFO  16:21:33,227 - #15 return
INFO  16:21:33,227 - #20 x
INFO  16:21:33,227 - #24 +
INFO  16:21:33,227 - #20 y
INFO  16:21:33,228 - #40 ;
INFO  16:21:33,228 - #48 }
INFO  16:21:33,229 - #20 int
INFO  16:21:33,229 - #20 funx
INFO  16:21:33,229 - #43 (
INFO  16:21:33,229 - #20 int
INFO  16:21:33,229 - #20 x
INFO  16:21:33,229 - #44 )
INFO  16:21:33,229 - #20 int
INFO  16:21:33,229 - #20 niz
INFO  16:21:33,229 - #45 [
INFO  16:21:33,229 - #46 ]
INFO  16:21:33,229 - #41 ,
INFO  16:21:33,229 - #20 y
INFO  16:21:33,229 - #40 ;
INFO  16:21:33,230 - #47 {
INFO  16:21:33,230 - #15 return
INFO  16:21:33,230 - #20 x
INFO  16:21:33,230 - #24 +
INFO  16:21:33,230 - #20 x
INFO  16:21:33,230 - #40 ;
INFO  16:21:33,230 - #48 }
INFO  16:21:33,230 - #16 void
INFO  16:21:33,230 - #20 main
INFO  16:21:33,230 - #43 (
INFO  16:21:33,230 - #44 )
INFO  16:21:33,231 - #47 {
INFO  16:21:33,231 - #20 x
INFO  16:21:33,231 - #37 =
INFO  16:21:33,231 - #20 fun
INFO  16:21:33,231 - #43 (
INFO  16:21:33,231 - #21 2
INFO  16:21:33,231 - #26 *
INFO  16:21:33,231 - #21 2
INFO  16:21:33,232 - #41 ,
INFO  16:21:33,233 - #21 2
INFO  16:21:33,233 - #26 *
INFO  16:21:33,233 - #21 10
INFO  16:21:33,233 - #44 )
INFO  16:21:33,233 - #40 ;
INFO  16:21:33,233 - #13 print
INFO  16:21:33,234 - #43 (
INFO  16:21:33,234 - #20 x
INFO  16:21:33,234 - #44 )
INFO  16:21:33,234 - #40 ;
INFO  16:21:33,234 - #48 }
INFO  16:21:33,234 - #48 }
INFO  16:21:33,235 - 

================SINTAKSNO STABLO====================


INFO  16:21:33,236 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:21:33,236 - 

================SEMANTICKA OBRADA====================


INFO  16:21:33,248 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  16:21:33,248 - Deklarisan globalni niz 'niz' na liniji 4
INFO  16:21:33,249 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  16:21:33,249 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  16:21:33,249 - Deklarisan niz 'niz' na liniji 7
INFO  16:21:33,252 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  16:21:33,252 - Deklarisan niz 'niz' na liniji 13
INFO  16:21:33,252 - Deklarisana promenljiva 'y' na liniji 13
INFO  16:21:33,252 - Pronadjen poziv funkcije 'fun' na liniji 23
INFO  16:21:33,253 - ===================================
INFO  16:21:33,253 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  16:21:33,259 - Parsiranje uspesno zavrseno!
INFO  16:29:48,227 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:29:48,273 - #2 program
INFO  16:29:48,273 - #20 test
INFO  16:29:48,273 - #20 int
INFO  16:29:48,274 - #20 x
INFO  16:29:48,274 - #41 ,
INFO  16:29:48,275 - #20 niz
INFO  16:29:48,275 - #45 [
INFO  16:29:48,275 - #46 ]
INFO  16:29:48,275 - #40 ;
INFO  16:29:48,275 - #47 {
INFO  16:29:48,275 - #20 int
INFO  16:29:48,275 - #20 fun
INFO  16:29:48,275 - #43 (
INFO  16:29:48,276 - #20 int
INFO  16:29:48,276 - #20 x
INFO  16:29:48,276 - #41 ,
INFO  16:29:48,276 - #20 int
INFO  16:29:48,276 - #20 y
INFO  16:29:48,276 - #44 )
INFO  16:29:48,276 - #20 int
INFO  16:29:48,277 - #20 niz
INFO  16:29:48,277 - #45 [
INFO  16:29:48,277 - #46 ]
INFO  16:29:48,277 - #40 ;
INFO  16:29:48,277 - #47 {
INFO  16:29:48,277 - #15 return
INFO  16:29:48,278 - #20 x
INFO  16:29:48,278 - #24 +
INFO  16:29:48,278 - #20 y
INFO  16:29:48,279 - #40 ;
INFO  16:29:48,280 - #48 }
INFO  16:29:48,280 - #20 int
INFO  16:29:48,280 - #20 funx
INFO  16:29:48,281 - #43 (
INFO  16:29:48,281 - #20 int
INFO  16:29:48,281 - #20 x
INFO  16:29:48,281 - #44 )
INFO  16:29:48,281 - #20 int
INFO  16:29:48,281 - #20 niz
INFO  16:29:48,281 - #45 [
INFO  16:29:48,281 - #46 ]
INFO  16:29:48,281 - #41 ,
INFO  16:29:48,281 - #20 y
INFO  16:29:48,281 - #40 ;
INFO  16:29:48,281 - #47 {
INFO  16:29:48,281 - #15 return
INFO  16:29:48,282 - #20 x
INFO  16:29:48,282 - #24 +
INFO  16:29:48,282 - #20 x
INFO  16:29:48,282 - #40 ;
INFO  16:29:48,282 - #48 }
INFO  16:29:48,283 - #16 void
INFO  16:29:48,283 - #20 main
INFO  16:29:48,283 - #43 (
INFO  16:29:48,283 - #44 )
INFO  16:29:48,283 - #47 {
INFO  16:29:48,283 - #20 fun
INFO  16:29:48,283 - #43 (
INFO  16:29:48,283 - #21 2
INFO  16:29:48,283 - #26 *
INFO  16:29:48,283 - #21 2
INFO  16:29:48,285 - #41 ,
INFO  16:29:48,285 - #21 2
INFO  16:29:48,285 - #26 *
INFO  16:29:48,286 - #21 10
INFO  16:29:48,286 - #44 )
INFO  16:29:48,286 - #40 ;
INFO  16:29:48,286 - #48 }
INFO  16:29:48,286 - #48 }
INFO  16:29:48,288 - 

================SINTAKSNO STABLO====================


INFO  16:29:48,289 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorMethodCallParams(
              DesignatorSimple(
               fun
              ) [DesignatorSimple]
              ActParsMulti(
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermMulop(
                        TermSingle(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingle]
                        MulopMul(
                        ) [MulopMul]
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermMulop]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
                ExprOne(
                  ExprSingle(
                    TermMulop(
                      TermSingle(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermSingle]
                      MulopMul(
                      ) [MulopMul]
                      FactorNumConst(
                       10
                      ) [FactorNumConst]
                    ) [TermMulop]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [ActParsMulti]
            ) [DesignatorMethodCallParams]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:29:48,289 - 

================SEMANTICKA OBRADA====================


INFO  16:29:48,299 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  16:29:48,299 - Deklarisan globalni niz 'niz' na liniji 4
INFO  16:29:48,300 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  16:29:48,300 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  16:29:48,300 - Deklarisan niz 'niz' na liniji 7
INFO  16:29:48,300 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  16:29:48,300 - Deklarisan niz 'niz' na liniji 13
INFO  16:29:48,300 - Deklarisana promenljiva 'y' na liniji 13
INFO  16:29:48,301 - Pronadjen poziv funkcije 'fun' na liniji 23
INFO  16:29:48,302 - ===================================
INFO  16:29:48,302 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  16:29:48,313 - Parsiranje uspesno zavrseno!
INFO  16:30:38,762 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:30:38,811 - #2 program
INFO  16:30:38,811 - #20 test
INFO  16:30:38,811 - #20 int
INFO  16:30:38,811 - #20 x
INFO  16:30:38,812 - #41 ,
INFO  16:30:38,812 - #20 niz
INFO  16:30:38,812 - #45 [
INFO  16:30:38,812 - #46 ]
INFO  16:30:38,812 - #40 ;
INFO  16:30:38,812 - #47 {
INFO  16:30:38,813 - #20 int
INFO  16:30:38,813 - #20 fun
INFO  16:30:38,813 - #43 (
INFO  16:30:38,813 - #20 int
INFO  16:30:38,813 - #20 x
INFO  16:30:38,813 - #41 ,
INFO  16:30:38,813 - #20 int
INFO  16:30:38,813 - #20 y
INFO  16:30:38,813 - #44 )
INFO  16:30:38,814 - #20 int
INFO  16:30:38,814 - #20 niz
INFO  16:30:38,814 - #45 [
INFO  16:30:38,814 - #46 ]
INFO  16:30:38,814 - #40 ;
INFO  16:30:38,814 - #47 {
INFO  16:30:38,814 - #15 return
INFO  16:30:38,815 - #20 x
INFO  16:30:38,815 - #24 +
INFO  16:30:38,815 - #20 y
INFO  16:30:38,816 - #40 ;
INFO  16:30:38,816 - #48 }
INFO  16:30:38,817 - #20 int
INFO  16:30:38,817 - #20 funx
INFO  16:30:38,817 - #43 (
INFO  16:30:38,817 - #20 int
INFO  16:30:38,817 - #20 x
INFO  16:30:38,817 - #44 )
INFO  16:30:38,817 - #20 int
INFO  16:30:38,817 - #20 niz
INFO  16:30:38,817 - #45 [
INFO  16:30:38,817 - #46 ]
INFO  16:30:38,817 - #41 ,
INFO  16:30:38,817 - #20 y
INFO  16:30:38,817 - #40 ;
INFO  16:30:38,818 - #47 {
INFO  16:30:38,818 - #15 return
INFO  16:30:38,818 - #20 x
INFO  16:30:38,818 - #24 +
INFO  16:30:38,818 - #20 x
INFO  16:30:38,818 - #40 ;
INFO  16:30:38,818 - #48 }
INFO  16:30:38,818 - #16 void
INFO  16:30:38,818 - #20 main
INFO  16:30:38,818 - #43 (
INFO  16:30:38,819 - #44 )
INFO  16:30:38,819 - #47 {
INFO  16:30:38,819 - #20 fun
INFO  16:30:38,819 - #43 (
INFO  16:30:38,819 - #21 2
INFO  16:30:38,819 - #26 *
INFO  16:30:38,819 - #21 2
INFO  16:30:38,820 - #41 ,
INFO  16:30:38,820 - #21 2
INFO  16:30:38,820 - #26 *
INFO  16:30:38,820 - #21 10
INFO  16:30:38,820 - #44 )
INFO  16:30:38,820 - #40 ;
INFO  16:30:38,821 - #48 }
INFO  16:30:38,821 - #48 }
INFO  16:30:38,821 - 

================SINTAKSNO STABLO====================


INFO  16:30:38,822 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorMethodCallParams(
              DesignatorSimple(
               fun
              ) [DesignatorSimple]
              ActParsMulti(
                ActParsSingle(
                  ExprOne(
                    ExprSingle(
                      TermMulop(
                        TermSingle(
                          FactorNumConst(
                           2
                          ) [FactorNumConst]
                        ) [TermSingle]
                        MulopMul(
                        ) [MulopMul]
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermMulop]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [ActParsSingle]
                ExprOne(
                  ExprSingle(
                    TermMulop(
                      TermSingle(
                        FactorNumConst(
                         2
                        ) [FactorNumConst]
                      ) [TermSingle]
                      MulopMul(
                      ) [MulopMul]
                      FactorNumConst(
                       10
                      ) [FactorNumConst]
                    ) [TermMulop]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [ActParsMulti]
            ) [DesignatorMethodCallParams]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:30:38,823 - 

================SEMANTICKA OBRADA====================


INFO  16:30:38,823 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  16:30:38,823 - Deklarisan globalni niz 'niz' na liniji 4
INFO  16:30:38,823 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  16:30:38,823 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  16:30:38,823 - Deklarisan niz 'niz' na liniji 7
INFO  16:30:38,823 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  16:30:38,823 - Deklarisan niz 'niz' na liniji 13
INFO  16:30:38,823 - Deklarisana promenljiva 'y' na liniji 13
INFO  16:30:38,823 - Pronadjen poziv funkcije 'fun' na liniji 23
INFO  16:30:38,823 - ===================================
INFO  16:30:38,823 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  16:30:38,839 - Parsiranje uspesno zavrseno!
INFO  16:31:00,943 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:31:01,005 - #2 program
INFO  16:31:01,005 - #20 test
INFO  16:31:01,005 - #20 int
INFO  16:31:01,005 - #20 x
INFO  16:31:01,005 - #41 ,
INFO  16:31:01,005 - #20 niz
INFO  16:31:01,005 - #45 [
INFO  16:31:01,005 - #46 ]
INFO  16:31:01,005 - #40 ;
INFO  16:31:01,005 - #47 {
INFO  16:31:01,005 - #20 int
INFO  16:31:01,005 - #20 fun
INFO  16:31:01,005 - #43 (
INFO  16:31:01,005 - #20 int
INFO  16:31:01,005 - #20 x
INFO  16:31:01,005 - #41 ,
INFO  16:31:01,005 - #20 int
INFO  16:31:01,005 - #20 y
INFO  16:31:01,005 - #44 )
INFO  16:31:01,005 - #20 int
INFO  16:31:01,005 - #20 niz
INFO  16:31:01,005 - #45 [
INFO  16:31:01,005 - #46 ]
INFO  16:31:01,005 - #40 ;
INFO  16:31:01,005 - #47 {
INFO  16:31:01,005 - #15 return
INFO  16:31:01,005 - #20 x
INFO  16:31:01,005 - #24 +
INFO  16:31:01,005 - #20 y
INFO  16:31:01,005 - #40 ;
INFO  16:31:01,005 - #48 }
INFO  16:31:01,005 - #20 int
INFO  16:31:01,005 - #20 funx
INFO  16:31:01,005 - #43 (
INFO  16:31:01,005 - #20 int
INFO  16:31:01,005 - #20 x
INFO  16:31:01,005 - #44 )
INFO  16:31:01,005 - #20 int
INFO  16:31:01,005 - #20 niz
INFO  16:31:01,005 - #45 [
INFO  16:31:01,005 - #46 ]
INFO  16:31:01,005 - #41 ,
INFO  16:31:01,005 - #20 y
INFO  16:31:01,005 - #40 ;
INFO  16:31:01,005 - #47 {
INFO  16:31:01,005 - #15 return
INFO  16:31:01,005 - #20 x
INFO  16:31:01,005 - #24 +
INFO  16:31:01,005 - #20 x
INFO  16:31:01,005 - #40 ;
INFO  16:31:01,005 - #48 }
INFO  16:31:01,005 - #16 void
INFO  16:31:01,005 - #20 main
INFO  16:31:01,005 - #43 (
INFO  16:31:01,005 - #44 )
INFO  16:31:01,005 - #47 {
INFO  16:31:01,005 - #20 x
INFO  16:31:01,005 - #37 =
INFO  16:31:01,005 - #20 fun
INFO  16:31:01,005 - #43 (
INFO  16:31:01,005 - #21 2
INFO  16:31:01,005 - #26 *
INFO  16:31:01,005 - #21 2
INFO  16:31:01,005 - #41 ,
INFO  16:31:01,005 - #21 2
INFO  16:31:01,005 - #26 *
INFO  16:31:01,021 - #21 10
INFO  16:31:01,021 - #44 )
INFO  16:31:01,021 - #40 ;
INFO  16:31:01,021 - #13 print
INFO  16:31:01,021 - #43 (
INFO  16:31:01,021 - #20 x
INFO  16:31:01,021 - #44 )
INFO  16:31:01,021 - #40 ;
INFO  16:31:01,021 - #48 }
INFO  16:31:01,021 - #48 }
INFO  16:31:01,021 - 

================SINTAKSNO STABLO====================


INFO  16:31:01,021 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:31:01,021 - 

================SEMANTICKA OBRADA====================


INFO  16:31:01,036 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  16:31:01,036 - Deklarisan globalni niz 'niz' na liniji 4
INFO  16:31:01,036 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  16:31:01,036 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  16:31:01,036 - Deklarisan niz 'niz' na liniji 7
INFO  16:31:01,036 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  16:31:01,036 - Deklarisan niz 'niz' na liniji 13
INFO  16:31:01,036 - Deklarisana promenljiva 'y' na liniji 13
INFO  16:31:01,036 - Pronadjen poziv funkcije 'fun' na liniji 23
INFO  16:31:01,036 - ===================================
INFO  16:31:01,036 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  16:31:01,043 - Parsiranje uspesno zavrseno!
INFO  16:46:06,145 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:46:06,212 - #2 program
INFO  16:46:06,212 - #20 test
INFO  16:46:06,213 - #20 int
INFO  16:46:06,213 - #20 x
INFO  16:46:06,214 - #41 ,
INFO  16:46:06,214 - #20 niz
INFO  16:46:06,214 - #45 [
INFO  16:46:06,214 - #46 ]
INFO  16:46:06,214 - #40 ;
INFO  16:46:06,214 - #47 {
INFO  16:46:06,214 - #20 int
INFO  16:46:06,216 - #20 fun
INFO  16:46:06,216 - #43 (
INFO  16:46:06,216 - #20 int
INFO  16:46:06,216 - #20 x
INFO  16:46:06,216 - #41 ,
INFO  16:46:06,216 - #20 int
INFO  16:46:06,216 - #20 y
INFO  16:46:06,216 - #44 )
INFO  16:46:06,216 - #20 int
INFO  16:46:06,216 - #20 niz
INFO  16:46:06,216 - #45 [
INFO  16:46:06,216 - #46 ]
INFO  16:46:06,216 - #40 ;
INFO  16:46:06,216 - #47 {
INFO  16:46:06,217 - #15 return
INFO  16:46:06,217 - #20 x
INFO  16:46:06,217 - #24 +
INFO  16:46:06,217 - #20 y
INFO  16:46:06,218 - #40 ;
INFO  16:46:06,219 - #48 }
INFO  16:46:06,219 - #20 int
INFO  16:46:06,219 - #20 funx
INFO  16:46:06,219 - #43 (
INFO  16:46:06,219 - #20 int
INFO  16:46:06,219 - #20 x
INFO  16:46:06,219 - #44 )
INFO  16:46:06,220 - #20 int
INFO  16:46:06,220 - #20 niz
INFO  16:46:06,220 - #45 [
INFO  16:46:06,220 - #46 ]
INFO  16:46:06,220 - #41 ,
INFO  16:46:06,220 - #20 y
INFO  16:46:06,220 - #40 ;
INFO  16:46:06,220 - #47 {
INFO  16:46:06,220 - #15 return
INFO  16:46:06,220 - #20 x
INFO  16:46:06,220 - #24 +
INFO  16:46:06,220 - #20 x
INFO  16:46:06,220 - #40 ;
INFO  16:46:06,221 - #48 }
INFO  16:46:06,221 - #16 void
INFO  16:46:06,221 - #20 main
INFO  16:46:06,221 - #43 (
INFO  16:46:06,221 - #44 )
INFO  16:46:06,221 - #47 {
INFO  16:46:06,221 - #20 x
INFO  16:46:06,221 - #37 =
INFO  16:46:06,221 - #20 fun
INFO  16:46:06,221 - #43 (
INFO  16:46:06,222 - #21 2
INFO  16:46:06,222 - #26 *
INFO  16:46:06,222 - #21 2
INFO  16:46:06,223 - #41 ,
INFO  16:46:06,223 - #21 2
INFO  16:46:06,223 - #26 *
INFO  16:46:06,223 - #21 10
INFO  16:46:06,224 - #44 )
INFO  16:46:06,224 - #40 ;
INFO  16:46:06,225 - #13 print
INFO  16:46:06,225 - #43 (
INFO  16:46:06,225 - #20 x
INFO  16:46:06,225 - #44 )
INFO  16:46:06,225 - #40 ;
INFO  16:46:06,225 - #48 }
INFO  16:46:06,225 - #48 }
INFO  16:46:06,227 - 

================SINTAKSNO STABLO====================


INFO  16:46:06,227 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:46:06,227 - 

================SEMANTICKA OBRADA====================


INFO  16:46:06,227 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  16:46:06,227 - Deklarisan globalni niz 'niz' na liniji 4
INFO  16:46:06,227 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  16:46:06,227 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  16:46:06,227 - Deklarisan niz 'niz' na liniji 7
INFO  16:46:06,242 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  16:46:06,242 - Deklarisan niz 'niz' na liniji 13
INFO  16:46:06,242 - Deklarisana promenljiva 'y' na liniji 13
INFO  16:46:06,245 - Pronadjen poziv funkcije 'fun' na liniji 23
INFO  16:46:06,245 - ===================================
INFO  16:46:06,245 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  16:46:06,245 - Parsiranje uspesno zavrseno!
INFO  16:48:51,456 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:48:51,510 - #2 program
INFO  16:48:51,510 - #20 test
INFO  16:48:51,510 - #20 int
INFO  16:48:51,510 - #20 x
INFO  16:48:51,510 - #41 ,
INFO  16:48:51,510 - #20 niz
INFO  16:48:51,510 - #45 [
INFO  16:48:51,510 - #46 ]
INFO  16:48:51,510 - #40 ;
INFO  16:48:51,510 - #47 {
INFO  16:48:51,510 - #20 int
INFO  16:48:51,510 - #20 fun
INFO  16:48:51,510 - #43 (
INFO  16:48:51,510 - #20 int
INFO  16:48:51,510 - #20 x
INFO  16:48:51,510 - #41 ,
INFO  16:48:51,510 - #20 int
INFO  16:48:51,510 - #20 y
INFO  16:48:51,510 - #44 )
INFO  16:48:51,510 - #20 int
INFO  16:48:51,510 - #20 niz
INFO  16:48:51,510 - #45 [
INFO  16:48:51,510 - #46 ]
INFO  16:48:51,510 - #40 ;
INFO  16:48:51,510 - #47 {
INFO  16:48:51,510 - #15 return
INFO  16:48:51,510 - #20 x
INFO  16:48:51,510 - #24 +
INFO  16:48:51,510 - #20 y
INFO  16:48:51,525 - #40 ;
INFO  16:48:51,525 - #48 }
INFO  16:48:51,525 - #20 int
INFO  16:48:51,525 - #20 funx
INFO  16:48:51,525 - #43 (
INFO  16:48:51,525 - #20 int
INFO  16:48:51,525 - #20 x
INFO  16:48:51,525 - #41 ,
INFO  16:48:51,525 - #20 int
INFO  16:48:51,525 - #20 y
INFO  16:48:51,525 - #44 )
INFO  16:48:51,525 - #47 {
INFO  16:48:51,525 - #15 return
INFO  16:48:51,525 - #20 x
INFO  16:48:51,525 - #24 +
INFO  16:48:51,525 - #20 x
INFO  16:48:51,525 - #40 ;
INFO  16:48:51,525 - #48 }
INFO  16:48:51,525 - #16 void
INFO  16:48:51,525 - #20 main
INFO  16:48:51,525 - #43 (
INFO  16:48:51,525 - #44 )
INFO  16:48:51,525 - #47 {
INFO  16:48:51,525 - #20 x
INFO  16:48:51,525 - #37 =
INFO  16:48:51,525 - #20 fun
INFO  16:48:51,525 - #43 (
INFO  16:48:51,525 - #21 2
INFO  16:48:51,525 - #26 *
INFO  16:48:51,525 - #21 2
INFO  16:48:51,525 - #41 ,
INFO  16:48:51,525 - #21 2
INFO  16:48:51,525 - #26 *
INFO  16:48:51,525 - #21 10
INFO  16:48:51,525 - #44 )
INFO  16:48:51,525 - #40 ;
INFO  16:48:51,525 - #13 print
INFO  16:48:51,525 - #43 (
INFO  16:48:51,525 - #20 x
INFO  16:48:51,525 - #44 )
INFO  16:48:51,525 - #40 ;
INFO  16:48:51,525 - #48 }
INFO  16:48:51,525 - #48 }
INFO  16:48:51,525 - 

================SINTAKSNO STABLO====================


INFO  16:48:51,525 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:48:51,525 - 

================SEMANTICKA OBRADA====================


INFO  16:48:51,541 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  16:48:51,541 - Deklarisan globalni niz 'niz' na liniji 4
INFO  16:48:51,541 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  16:48:51,541 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  16:48:51,541 - Deklarisan niz 'niz' na liniji 7
INFO  16:48:51,541 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  16:48:51,541 - Formalni parametar funkcije funx: 'y' na liniji 12
INFO  16:48:51,541 - Pronadjen poziv funkcije 'fun' na liniji 22
INFO  16:48:51,541 - ===================================
INFO  16:48:51,541 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  16:48:51,541 - Parsiranje uspesno zavrseno!
INFO  16:50:25,056 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:50:25,093 - #2 program
INFO  16:50:25,093 - #20 test
INFO  16:50:25,093 - #20 int
INFO  16:50:25,093 - #20 x
INFO  16:50:25,093 - #41 ,
INFO  16:50:25,093 - #20 niz
INFO  16:50:25,093 - #45 [
INFO  16:50:25,093 - #46 ]
INFO  16:50:25,093 - #40 ;
INFO  16:50:25,093 - #47 {
INFO  16:50:25,109 - #20 int
INFO  16:50:25,109 - #20 fun
INFO  16:50:25,109 - #43 (
INFO  16:50:25,109 - #20 int
INFO  16:50:25,109 - #20 x
INFO  16:50:25,109 - #41 ,
INFO  16:50:25,109 - #20 int
INFO  16:50:25,109 - #20 y
INFO  16:50:25,109 - #44 )
INFO  16:50:25,109 - #20 int
INFO  16:50:25,109 - #20 niz
INFO  16:50:25,109 - #45 [
INFO  16:50:25,109 - #46 ]
INFO  16:50:25,109 - #40 ;
INFO  16:50:25,109 - #47 {
INFO  16:50:25,109 - #15 return
INFO  16:50:25,109 - #20 x
INFO  16:50:25,109 - #24 +
INFO  16:50:25,109 - #20 y
INFO  16:50:25,109 - #40 ;
INFO  16:50:25,109 - #48 }
INFO  16:50:25,109 - #20 int
INFO  16:50:25,109 - #20 funx
INFO  16:50:25,109 - #43 (
INFO  16:50:25,109 - #20 int
INFO  16:50:25,109 - #20 x
INFO  16:50:25,109 - #41 ,
INFO  16:50:25,109 - #20 int
INFO  16:50:25,109 - #20 y
INFO  16:50:25,109 - #44 )
INFO  16:50:25,109 - #47 {
INFO  16:50:25,109 - #15 return
INFO  16:50:25,109 - #20 x
INFO  16:50:25,109 - #24 +
INFO  16:50:25,109 - #20 x
INFO  16:50:25,109 - #40 ;
INFO  16:50:25,109 - #48 }
INFO  16:50:25,109 - #16 void
INFO  16:50:25,109 - #20 main
INFO  16:50:25,109 - #43 (
INFO  16:50:25,109 - #44 )
INFO  16:50:25,109 - #47 {
INFO  16:50:25,109 - #20 x
INFO  16:50:25,109 - #37 =
INFO  16:50:25,109 - #20 fun
INFO  16:50:25,109 - #43 (
INFO  16:50:25,109 - #21 2
INFO  16:50:25,109 - #26 *
INFO  16:50:25,109 - #21 2
INFO  16:50:25,109 - #41 ,
INFO  16:50:25,109 - #21 2
INFO  16:50:25,109 - #26 *
INFO  16:50:25,109 - #21 10
INFO  16:50:25,109 - #44 )
INFO  16:50:25,109 - #40 ;
INFO  16:50:25,109 - #13 print
INFO  16:50:25,109 - #43 (
INFO  16:50:25,109 - #20 x
INFO  16:50:25,109 - #44 )
INFO  16:50:25,109 - #40 ;
INFO  16:50:25,109 - #48 }
INFO  16:50:25,109 - #48 }
INFO  16:50:25,109 - 

================SINTAKSNO STABLO====================


INFO  16:50:25,109 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType2(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamMulti(
            ParamSingle(
              ParamNormal(
                Type(
                 int
                ) [Type]
               x
              ) [ParamNormal]
            ) [ParamSingle]
            ParamNormal(
              Type(
               int
              ) [Type]
             y
            ) [ParamNormal]
          ) [ParamMulti]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType2]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:50:25,109 - 

================SEMANTICKA OBRADA====================


INFO  16:50:25,125 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  16:50:25,125 - Deklarisan globalni niz 'niz' na liniji 4
INFO  16:50:25,125 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  16:50:25,125 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  16:50:25,125 - Deklarisan niz 'niz' na liniji 7
INFO  16:50:25,125 - Formalni parametar funkcije funx: 'x' na liniji 12
INFO  16:50:25,125 - Formalni parametar funkcije funx: 'y' na liniji 12
INFO  16:50:25,125 - Pronadjen poziv funkcije 'fun' na liniji 22
INFO  16:50:25,125 - ===================================
INFO  16:50:25,125 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 16:50:25,140 - OBJ x
ERROR 16:50:25,140 - OBJ y
ERROR 16:50:25,140 - OBJ niz
ERROR 16:50:25,140 - OBJ x
ERROR 16:50:25,140 - OBJ y
INFO  16:50:25,140 - Parsiranje uspesno zavrseno!
INFO  16:50:56,915 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  16:50:56,961 - #2 program
INFO  16:50:56,961 - #20 test
INFO  16:50:56,961 - #20 int
INFO  16:50:56,961 - #20 x
INFO  16:50:56,961 - #41 ,
INFO  16:50:56,961 - #20 niz
INFO  16:50:56,961 - #45 [
INFO  16:50:56,961 - #46 ]
INFO  16:50:56,961 - #40 ;
INFO  16:50:56,961 - #47 {
INFO  16:50:56,961 - #20 int
INFO  16:50:56,961 - #20 fun
INFO  16:50:56,961 - #43 (
INFO  16:50:56,961 - #20 int
INFO  16:50:56,961 - #20 x
INFO  16:50:56,961 - #41 ,
INFO  16:50:56,961 - #20 int
INFO  16:50:56,961 - #20 y
INFO  16:50:56,961 - #44 )
INFO  16:50:56,961 - #47 {
INFO  16:50:56,961 - #15 return
INFO  16:50:56,961 - #20 x
INFO  16:50:56,961 - #24 +
INFO  16:50:56,961 - #20 y
INFO  16:50:56,961 - #40 ;
INFO  16:50:56,961 - #48 }
INFO  16:50:56,961 - #20 int
INFO  16:50:56,961 - #20 funx
INFO  16:50:56,961 - #43 (
INFO  16:50:56,961 - #20 int
INFO  16:50:56,961 - #20 x
INFO  16:50:56,961 - #44 )
INFO  16:50:56,961 - #20 int
INFO  16:50:56,961 - #20 niz
INFO  16:50:56,961 - #45 [
INFO  16:50:56,961 - #46 ]
INFO  16:50:56,961 - #41 ,
INFO  16:50:56,961 - #20 y
INFO  16:50:56,961 - #40 ;
INFO  16:50:56,961 - #47 {
INFO  16:50:56,961 - #15 return
INFO  16:50:56,961 - #20 x
INFO  16:50:56,961 - #24 +
INFO  16:50:56,961 - #20 x
INFO  16:50:56,961 - #40 ;
INFO  16:50:56,961 - #48 }
INFO  16:50:56,961 - #16 void
INFO  16:50:56,961 - #20 main
INFO  16:50:56,961 - #43 (
INFO  16:50:56,961 - #44 )
INFO  16:50:56,961 - #47 {
INFO  16:50:56,961 - #20 x
INFO  16:50:56,961 - #37 =
INFO  16:50:56,961 - #20 fun
INFO  16:50:56,961 - #43 (
INFO  16:50:56,961 - #21 2
INFO  16:50:56,961 - #26 *
INFO  16:50:56,961 - #21 2
INFO  16:50:56,961 - #41 ,
INFO  16:50:56,961 - #21 2
INFO  16:50:56,961 - #26 *
INFO  16:50:56,961 - #21 10
INFO  16:50:56,961 - #44 )
INFO  16:50:56,961 - #40 ;
INFO  16:50:56,961 - #13 print
INFO  16:50:56,977 - #43 (
INFO  16:50:56,977 - #20 x
INFO  16:50:56,977 - #44 )
INFO  16:50:56,977 - #40 ;
INFO  16:50:56,977 - #48 }
INFO  16:50:56,977 - #48 }
INFO  16:50:56,977 - 

================SINTAKSNO STABLO====================


INFO  16:50:56,977 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType2(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType2]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  16:50:56,977 - 

================SEMANTICKA OBRADA====================


INFO  16:50:56,984 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  16:50:56,984 - Deklarisan globalni niz 'niz' na liniji 4
INFO  16:50:56,984 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  16:50:56,984 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  16:50:56,984 - Formalni parametar funkcije funx: 'x' na liniji 11
INFO  16:50:56,984 - Deklarisan niz 'niz' na liniji 12
INFO  16:50:56,984 - Deklarisana promenljiva 'y' na liniji 12
INFO  16:50:56,984 - Pronadjen poziv funkcije 'fun' na liniji 22
INFO  16:50:56,984 - ===================================
INFO  16:50:56,984 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 16:50:56,999 - OBJ x
ERROR 16:50:56,999 - OBJ y
ERROR 16:50:56,999 - OBJ x
ERROR 16:50:56,999 - OBJ niz
ERROR 16:50:56,999 - OBJ y
INFO  16:50:56,999 - Parsiranje uspesno zavrseno!
INFO  17:04:28,775 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:04:28,806 - #2 program
INFO  17:04:28,822 - #20 test
INFO  17:04:28,822 - #20 int
INFO  17:04:28,822 - #20 x
INFO  17:04:28,822 - #41 ,
INFO  17:04:28,822 - #20 niz
INFO  17:04:28,822 - #45 [
INFO  17:04:28,822 - #46 ]
INFO  17:04:28,822 - #40 ;
INFO  17:04:28,822 - #47 {
INFO  17:04:28,822 - #20 int
INFO  17:04:28,822 - #20 fun
INFO  17:04:28,822 - #43 (
INFO  17:04:28,822 - #20 int
INFO  17:04:28,822 - #20 x
INFO  17:04:28,822 - #41 ,
INFO  17:04:28,822 - #20 int
INFO  17:04:28,822 - #20 y
INFO  17:04:28,822 - #44 )
INFO  17:04:28,822 - #47 {
INFO  17:04:28,822 - #15 return
INFO  17:04:28,822 - #20 x
INFO  17:04:28,822 - #24 +
INFO  17:04:28,822 - #20 y
INFO  17:04:28,822 - #40 ;
INFO  17:04:28,822 - #48 }
INFO  17:04:28,822 - #20 int
INFO  17:04:28,822 - #20 funx
INFO  17:04:28,822 - #43 (
INFO  17:04:28,822 - #20 int
INFO  17:04:28,822 - #20 x
INFO  17:04:28,822 - #44 )
INFO  17:04:28,822 - #20 int
INFO  17:04:28,822 - #20 niz
INFO  17:04:28,822 - #45 [
INFO  17:04:28,822 - #46 ]
INFO  17:04:28,822 - #41 ,
INFO  17:04:28,822 - #20 y
INFO  17:04:28,822 - #40 ;
INFO  17:04:28,822 - #47 {
INFO  17:04:28,822 - #15 return
INFO  17:04:28,822 - #20 x
INFO  17:04:28,822 - #24 +
INFO  17:04:28,822 - #20 x
INFO  17:04:28,822 - #40 ;
INFO  17:04:28,822 - #48 }
INFO  17:04:28,822 - #16 void
INFO  17:04:28,822 - #20 main
INFO  17:04:28,822 - #43 (
INFO  17:04:28,822 - #44 )
INFO  17:04:28,822 - #47 {
INFO  17:04:28,822 - #20 x
INFO  17:04:28,822 - #37 =
INFO  17:04:28,822 - #20 fun
INFO  17:04:28,822 - #43 (
INFO  17:04:28,822 - #21 2
INFO  17:04:28,822 - #26 *
INFO  17:04:28,822 - #21 2
INFO  17:04:28,822 - #41 ,
INFO  17:04:28,822 - #21 2
INFO  17:04:28,822 - #26 *
INFO  17:04:28,822 - #21 10
INFO  17:04:28,822 - #44 )
INFO  17:04:28,822 - #40 ;
INFO  17:04:28,822 - #13 print
INFO  17:04:28,822 - #43 (
INFO  17:04:28,822 - #20 x
INFO  17:04:28,822 - #44 )
INFO  17:04:28,822 - #40 ;
INFO  17:04:28,822 - #48 }
INFO  17:04:28,822 - #48 }
INFO  17:04:28,822 - 

================SINTAKSNO STABLO====================


INFO  17:04:28,822 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType2(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType2]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  17:04:28,822 - 

================SEMANTICKA OBRADA====================


INFO  17:04:28,844 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  17:04:28,844 - Deklarisan globalni niz 'niz' na liniji 4
INFO  17:04:28,844 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  17:04:28,844 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  17:04:28,844 - Formalni parametar funkcije funx: 'x' na liniji 11
INFO  17:04:28,844 - Deklarisan niz 'niz' na liniji 12
INFO  17:04:28,844 - Deklarisana promenljiva 'y' na liniji 12
INFO  17:04:28,844 - Pronadjen poziv funkcije 'fun' na liniji 22
INFO  17:04:28,844 - ===================================
INFO  17:04:28,844 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  17:04:28,844 - Parsiranje uspesno zavrseno!
INFO  17:04:53,818 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:04:53,871 - #2 program
INFO  17:04:53,871 - #20 test
INFO  17:04:53,871 - #20 int
INFO  17:04:53,871 - #20 x
INFO  17:04:53,871 - #41 ,
INFO  17:04:53,871 - #20 niz
INFO  17:04:53,871 - #45 [
INFO  17:04:53,871 - #46 ]
INFO  17:04:53,871 - #40 ;
INFO  17:04:53,871 - #47 {
INFO  17:04:53,871 - #20 int
INFO  17:04:53,871 - #20 fun
INFO  17:04:53,871 - #43 (
INFO  17:04:53,871 - #20 int
INFO  17:04:53,871 - #20 x
INFO  17:04:53,871 - #41 ,
INFO  17:04:53,871 - #20 int
INFO  17:04:53,871 - #20 y
INFO  17:04:53,871 - #44 )
INFO  17:04:53,871 - #47 {
INFO  17:04:53,871 - #15 return
INFO  17:04:53,871 - #20 x
INFO  17:04:53,871 - #24 +
INFO  17:04:53,871 - #20 y
INFO  17:04:53,871 - #40 ;
INFO  17:04:53,871 - #48 }
INFO  17:04:53,871 - #20 int
INFO  17:04:53,871 - #20 funx
INFO  17:04:53,871 - #43 (
INFO  17:04:53,871 - #20 int
INFO  17:04:53,871 - #20 x
INFO  17:04:53,871 - #44 )
INFO  17:04:53,871 - #20 int
INFO  17:04:53,871 - #20 niz
INFO  17:04:53,871 - #45 [
INFO  17:04:53,871 - #46 ]
INFO  17:04:53,871 - #41 ,
INFO  17:04:53,871 - #20 y
INFO  17:04:53,871 - #40 ;
INFO  17:04:53,871 - #47 {
INFO  17:04:53,871 - #15 return
INFO  17:04:53,871 - #20 x
INFO  17:04:53,871 - #24 +
INFO  17:04:53,871 - #20 x
INFO  17:04:53,871 - #40 ;
INFO  17:04:53,871 - #48 }
INFO  17:04:53,871 - #16 void
INFO  17:04:53,887 - #20 main
INFO  17:04:53,887 - #43 (
INFO  17:04:53,887 - #44 )
INFO  17:04:53,887 - #47 {
INFO  17:04:53,887 - #20 x
INFO  17:04:53,887 - #37 =
INFO  17:04:53,887 - #20 fun
INFO  17:04:53,887 - #43 (
INFO  17:04:53,887 - #21 2
INFO  17:04:53,887 - #26 *
INFO  17:04:53,887 - #21 2
INFO  17:04:53,887 - #41 ,
INFO  17:04:53,887 - #21 2
INFO  17:04:53,887 - #26 *
INFO  17:04:53,887 - #21 10
INFO  17:04:53,887 - #44 )
INFO  17:04:53,887 - #40 ;
INFO  17:04:53,887 - #13 print
INFO  17:04:53,887 - #43 (
INFO  17:04:53,887 - #20 x
INFO  17:04:53,887 - #44 )
INFO  17:04:53,887 - #40 ;
INFO  17:04:53,887 - #48 }
INFO  17:04:53,887 - #48 }
INFO  17:04:53,887 - 

================SINTAKSNO STABLO====================


INFO  17:04:53,887 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType2(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType2]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  17:04:53,887 - 

================SEMANTICKA OBRADA====================


INFO  17:04:53,902 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  17:04:53,902 - Deklarisan globalni niz 'niz' na liniji 4
INFO  17:04:53,902 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  17:04:53,902 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  17:04:53,902 - Formalni parametar funkcije funx: 'x' na liniji 11
INFO  17:04:53,902 - Deklarisan niz 'niz' na liniji 12
INFO  17:04:53,902 - Deklarisana promenljiva 'y' na liniji 12
INFO  17:04:53,902 - Pronadjen poziv funkcije 'fun' na liniji 22
INFO  17:04:53,902 - ===================================
INFO  17:04:53,902 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  17:04:53,902 - Parsiranje uspesno zavrseno!
INFO  17:09:05,031 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:09:05,116 - #2 program
INFO  17:09:05,116 - #20 test
INFO  17:09:05,116 - #20 int
INFO  17:09:05,116 - #20 x
INFO  17:09:05,116 - #41 ,
INFO  17:09:05,116 - #20 niz
INFO  17:09:05,116 - #45 [
INFO  17:09:05,116 - #46 ]
INFO  17:09:05,116 - #40 ;
INFO  17:09:05,116 - #47 {
INFO  17:09:05,116 - #20 int
INFO  17:09:05,116 - #20 fun
INFO  17:09:05,116 - #43 (
INFO  17:09:05,116 - #20 int
INFO  17:09:05,116 - #20 x
INFO  17:09:05,116 - #41 ,
INFO  17:09:05,116 - #20 int
INFO  17:09:05,116 - #20 y
INFO  17:09:05,116 - #44 )
INFO  17:09:05,116 - #47 {
INFO  17:09:05,116 - #15 return
INFO  17:09:05,116 - #20 x
INFO  17:09:05,116 - #24 +
INFO  17:09:05,131 - #20 y
INFO  17:09:05,131 - #40 ;
INFO  17:09:05,131 - #48 }
INFO  17:09:05,131 - #20 int
INFO  17:09:05,131 - #20 funx
INFO  17:09:05,131 - #43 (
INFO  17:09:05,131 - #20 int
INFO  17:09:05,131 - #20 x
INFO  17:09:05,131 - #44 )
INFO  17:09:05,131 - #20 int
INFO  17:09:05,131 - #20 niz
INFO  17:09:05,131 - #45 [
INFO  17:09:05,131 - #46 ]
INFO  17:09:05,131 - #41 ,
INFO  17:09:05,131 - #20 y
INFO  17:09:05,131 - #40 ;
INFO  17:09:05,131 - #47 {
INFO  17:09:05,131 - #15 return
INFO  17:09:05,131 - #20 x
INFO  17:09:05,131 - #24 +
INFO  17:09:05,131 - #20 x
INFO  17:09:05,131 - #40 ;
INFO  17:09:05,131 - #48 }
INFO  17:09:05,131 - #16 void
INFO  17:09:05,131 - #20 main
INFO  17:09:05,131 - #43 (
INFO  17:09:05,131 - #44 )
INFO  17:09:05,131 - #47 {
INFO  17:09:05,131 - #20 x
INFO  17:09:05,131 - #37 =
INFO  17:09:05,131 - #20 fun
INFO  17:09:05,131 - #43 (
INFO  17:09:05,131 - #21 2
INFO  17:09:05,131 - #26 *
INFO  17:09:05,131 - #21 2
INFO  17:09:05,131 - #41 ,
INFO  17:09:05,131 - #21 2
INFO  17:09:05,131 - #26 *
INFO  17:09:05,131 - #21 10
INFO  17:09:05,131 - #44 )
INFO  17:09:05,131 - #40 ;
INFO  17:09:05,131 - #13 print
INFO  17:09:05,131 - #43 (
INFO  17:09:05,131 - #20 x
INFO  17:09:05,131 - #44 )
INFO  17:09:05,131 - #40 ;
INFO  17:09:05,131 - #48 }
INFO  17:09:05,131 - #48 }
INFO  17:09:05,131 - 

================SINTAKSNO STABLO====================


INFO  17:09:05,131 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType2(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType2]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  17:09:05,131 - 

================SEMANTICKA OBRADA====================


INFO  17:09:05,147 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  17:09:05,147 - Deklarisan globalni niz 'niz' na liniji 4
INFO  17:09:05,147 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  17:09:05,147 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  17:09:05,147 - Formalni parametar funkcije funx: 'x' na liniji 11
INFO  17:09:05,147 - Deklarisan niz 'niz' na liniji 12
INFO  17:09:05,147 - Deklarisana promenljiva 'y' na liniji 12
INFO  17:09:05,147 - Pronadjen poziv funkcije 'fun' na liniji 22
INFO  17:09:05,147 - ===================================
INFO  17:09:05,147 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  17:09:05,163 - Parsiranje uspesno zavrseno!
INFO  17:09:23,499 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:09:23,588 - #2 program
INFO  17:09:23,588 - #20 test
INFO  17:09:23,588 - #20 int
INFO  17:09:23,590 - #20 x
INFO  17:09:23,590 - #41 ,
INFO  17:09:23,590 - #20 niz
INFO  17:09:23,590 - #45 [
INFO  17:09:23,590 - #46 ]
INFO  17:09:23,590 - #40 ;
INFO  17:09:23,590 - #47 {
INFO  17:09:23,590 - #20 int
INFO  17:09:23,590 - #20 fun
INFO  17:09:23,590 - #43 (
INFO  17:09:23,590 - #20 int
INFO  17:09:23,590 - #20 x
INFO  17:09:23,590 - #41 ,
INFO  17:09:23,590 - #20 int
INFO  17:09:23,590 - #20 y
INFO  17:09:23,590 - #44 )
INFO  17:09:23,590 - #47 {
INFO  17:09:23,590 - #15 return
INFO  17:09:23,590 - #20 x
INFO  17:09:23,590 - #24 +
INFO  17:09:23,590 - #20 y
INFO  17:09:23,590 - #40 ;
INFO  17:09:23,598 - #48 }
INFO  17:09:23,598 - #20 int
INFO  17:09:23,598 - #20 funx
INFO  17:09:23,598 - #43 (
INFO  17:09:23,598 - #20 int
INFO  17:09:23,598 - #20 x
INFO  17:09:23,598 - #44 )
INFO  17:09:23,598 - #20 int
INFO  17:09:23,600 - #20 niz
INFO  17:09:23,600 - #45 [
INFO  17:09:23,600 - #46 ]
INFO  17:09:23,600 - #41 ,
INFO  17:09:23,600 - #20 y
INFO  17:09:23,600 - #40 ;
INFO  17:09:23,600 - #47 {
INFO  17:09:23,600 - #15 return
INFO  17:09:23,600 - #20 x
INFO  17:09:23,600 - #24 +
INFO  17:09:23,600 - #20 x
INFO  17:09:23,600 - #40 ;
INFO  17:09:23,600 - #48 }
INFO  17:09:23,600 - #16 void
INFO  17:09:23,600 - #20 main
INFO  17:09:23,600 - #43 (
INFO  17:09:23,600 - #44 )
INFO  17:09:23,600 - #47 {
INFO  17:09:23,600 - #20 x
INFO  17:09:23,600 - #37 =
INFO  17:09:23,600 - #20 fun
INFO  17:09:23,600 - #43 (
INFO  17:09:23,600 - #21 2
INFO  17:09:23,600 - #26 *
INFO  17:09:23,600 - #21 2
INFO  17:09:23,600 - #41 ,
INFO  17:09:23,600 - #21 2
INFO  17:09:23,600 - #26 *
INFO  17:09:23,608 - #21 10
INFO  17:09:23,608 - #44 )
INFO  17:09:23,610 - #40 ;
INFO  17:09:23,610 - #13 print
INFO  17:09:23,610 - #43 (
INFO  17:09:23,610 - #20 x
INFO  17:09:23,610 - #44 )
INFO  17:09:23,610 - #40 ;
INFO  17:09:23,610 - #48 }
INFO  17:09:23,610 - #48 }
INFO  17:09:23,610 - 

================SINTAKSNO STABLO====================


INFO  17:09:23,620 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType2(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType2]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  17:09:23,620 - 

================SEMANTICKA OBRADA====================


INFO  17:09:23,640 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  17:09:23,640 - Deklarisan globalni niz 'niz' na liniji 4
INFO  17:09:23,640 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  17:09:23,640 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  17:09:23,640 - Formalni parametar funkcije funx: 'x' na liniji 11
INFO  17:09:23,640 - Deklarisan niz 'niz' na liniji 12
INFO  17:09:23,640 - Deklarisana promenljiva 'y' na liniji 12
INFO  17:09:23,640 - Pronadjen poziv funkcije 'fun' na liniji 22
INFO  17:09:23,640 - ===================================
INFO  17:09:23,640 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  17:09:23,660 - Parsiranje uspesno zavrseno!
INFO  17:09:27,554 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:09:27,623 - #2 program
INFO  17:09:27,623 - #20 test
INFO  17:09:27,623 - #20 int
INFO  17:09:27,623 - #20 x
INFO  17:09:27,623 - #41 ,
INFO  17:09:27,639 - #20 niz
INFO  17:09:27,639 - #45 [
INFO  17:09:27,639 - #46 ]
INFO  17:09:27,639 - #40 ;
INFO  17:09:27,639 - #47 {
INFO  17:09:27,639 - #20 int
INFO  17:09:27,639 - #20 fun
INFO  17:09:27,639 - #43 (
INFO  17:09:27,639 - #20 int
INFO  17:09:27,639 - #20 x
INFO  17:09:27,639 - #41 ,
INFO  17:09:27,639 - #20 int
INFO  17:09:27,639 - #20 y
INFO  17:09:27,639 - #44 )
INFO  17:09:27,639 - #47 {
INFO  17:09:27,639 - #15 return
INFO  17:09:27,639 - #20 x
INFO  17:09:27,639 - #24 +
INFO  17:09:27,639 - #20 y
INFO  17:09:27,639 - #40 ;
INFO  17:09:27,639 - #48 }
INFO  17:09:27,639 - #20 int
INFO  17:09:27,639 - #20 funx
INFO  17:09:27,639 - #43 (
INFO  17:09:27,639 - #20 int
INFO  17:09:27,639 - #20 x
INFO  17:09:27,639 - #44 )
INFO  17:09:27,639 - #20 int
INFO  17:09:27,639 - #20 niz
INFO  17:09:27,639 - #45 [
INFO  17:09:27,639 - #46 ]
INFO  17:09:27,639 - #41 ,
INFO  17:09:27,639 - #20 y
INFO  17:09:27,639 - #40 ;
INFO  17:09:27,639 - #47 {
INFO  17:09:27,639 - #15 return
INFO  17:09:27,639 - #20 x
INFO  17:09:27,639 - #24 +
INFO  17:09:27,639 - #20 x
INFO  17:09:27,639 - #40 ;
INFO  17:09:27,639 - #48 }
INFO  17:09:27,639 - #16 void
INFO  17:09:27,639 - #20 main
INFO  17:09:27,639 - #43 (
INFO  17:09:27,639 - #44 )
INFO  17:09:27,639 - #47 {
INFO  17:09:27,639 - #20 x
INFO  17:09:27,639 - #37 =
INFO  17:09:27,639 - #20 fun
INFO  17:09:27,639 - #43 (
INFO  17:09:27,639 - #21 2
INFO  17:09:27,639 - #26 *
INFO  17:09:27,639 - #21 2
INFO  17:09:27,639 - #41 ,
INFO  17:09:27,639 - #21 2
INFO  17:09:27,639 - #26 *
INFO  17:09:27,639 - #21 10
INFO  17:09:27,639 - #44 )
INFO  17:09:27,639 - #40 ;
INFO  17:09:27,639 - #13 print
INFO  17:09:27,639 - #43 (
INFO  17:09:27,639 - #20 x
INFO  17:09:27,639 - #44 )
INFO  17:09:27,639 - #40 ;
INFO  17:09:27,639 - #48 }
INFO  17:09:27,639 - #48 }
INFO  17:09:27,655 - 

================SINTAKSNO STABLO====================


INFO  17:09:27,655 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType2(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType2]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  17:09:27,655 - 

================SEMANTICKA OBRADA====================


INFO  17:09:27,661 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  17:09:27,661 - Deklarisan globalni niz 'niz' na liniji 4
INFO  17:09:27,661 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  17:09:27,661 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  17:09:27,661 - Formalni parametar funkcije funx: 'x' na liniji 11
INFO  17:09:27,661 - Deklarisan niz 'niz' na liniji 12
INFO  17:09:27,661 - Deklarisana promenljiva 'y' na liniji 12
INFO  17:09:27,661 - Pronadjen poziv funkcije 'fun' na liniji 22
INFO  17:09:27,661 - ===================================
INFO  17:09:27,661 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  17:09:27,677 - Parsiranje uspesno zavrseno!
INFO  17:10:24,357 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:10:24,397 - #2 program
INFO  17:10:24,397 - #20 test
INFO  17:10:24,397 - #20 int
INFO  17:10:24,397 - #20 x
INFO  17:10:24,412 - #41 ,
INFO  17:10:24,412 - #20 niz
INFO  17:10:24,412 - #45 [
INFO  17:10:24,412 - #46 ]
INFO  17:10:24,412 - #40 ;
INFO  17:10:24,412 - #47 {
INFO  17:10:24,412 - #20 int
INFO  17:10:24,412 - #20 fun
INFO  17:10:24,412 - #43 (
INFO  17:10:24,412 - #20 int
INFO  17:10:24,412 - #20 a
INFO  17:10:24,412 - #41 ,
INFO  17:10:24,412 - #20 int
INFO  17:10:24,412 - #20 b
INFO  17:10:24,412 - #44 )
INFO  17:10:24,412 - #47 {
INFO  17:10:24,412 - #15 return
INFO  17:10:24,412 - #20 a
INFO  17:10:24,412 - #24 +
INFO  17:10:24,412 - #20 b
INFO  17:10:24,412 - #40 ;
INFO  17:10:24,412 - #48 }
INFO  17:10:24,412 - #20 int
INFO  17:10:24,412 - #20 funx
INFO  17:10:24,412 - #43 (
INFO  17:10:24,412 - #20 int
INFO  17:10:24,412 - #20 x
INFO  17:10:24,412 - #44 )
INFO  17:10:24,412 - #20 int
INFO  17:10:24,412 - #20 niz
INFO  17:10:24,412 - #45 [
INFO  17:10:24,412 - #46 ]
INFO  17:10:24,412 - #41 ,
INFO  17:10:24,412 - #20 y
INFO  17:10:24,412 - #40 ;
INFO  17:10:24,412 - #47 {
INFO  17:10:24,412 - #15 return
INFO  17:10:24,412 - #20 x
INFO  17:10:24,412 - #24 +
INFO  17:10:24,412 - #20 x
INFO  17:10:24,412 - #40 ;
INFO  17:10:24,412 - #48 }
INFO  17:10:24,412 - #16 void
INFO  17:10:24,412 - #20 main
INFO  17:10:24,412 - #43 (
INFO  17:10:24,412 - #44 )
INFO  17:10:24,412 - #47 {
INFO  17:10:24,412 - #20 x
INFO  17:10:24,412 - #37 =
INFO  17:10:24,412 - #20 fun
INFO  17:10:24,412 - #43 (
INFO  17:10:24,412 - #21 2
INFO  17:10:24,412 - #26 *
INFO  17:10:24,412 - #21 2
INFO  17:10:24,412 - #41 ,
INFO  17:10:24,412 - #21 2
INFO  17:10:24,412 - #26 *
INFO  17:10:24,412 - #21 10
INFO  17:10:24,412 - #44 )
INFO  17:10:24,412 - #40 ;
INFO  17:10:24,412 - #13 print
INFO  17:10:24,412 - #43 (
INFO  17:10:24,412 - #20 x
INFO  17:10:24,412 - #44 )
INFO  17:10:24,412 - #40 ;
INFO  17:10:24,412 - #48 }
INFO  17:10:24,412 - #48 }
INFO  17:10:24,412 - 

================SINTAKSNO STABLO====================


INFO  17:10:24,412 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType2(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 a
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               b
              ) [ParamNormal]
            ) [ParamMulti]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           a
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         b
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType2]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   10
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  17:10:24,412 - 

================SEMANTICKA OBRADA====================


INFO  17:10:24,428 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  17:10:24,428 - Deklarisan globalni niz 'niz' na liniji 4
INFO  17:10:24,428 - Formalni parametar funkcije fun: 'a' na liniji 6
INFO  17:10:24,428 - Formalni parametar funkcije fun: 'b' na liniji 6
INFO  17:10:24,428 - Formalni parametar funkcije funx: 'x' na liniji 11
INFO  17:10:24,428 - Deklarisan niz 'niz' na liniji 12
INFO  17:10:24,428 - Deklarisana promenljiva 'y' na liniji 12
INFO  17:10:24,428 - Pronadjen poziv funkcije 'fun' na liniji 22
INFO  17:10:24,428 - ===================================
INFO  17:10:24,428 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  17:10:24,444 - Parsiranje uspesno zavrseno!
INFO  17:12:42,303 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:12:42,347 - #2 program
INFO  17:12:42,347 - #20 test
INFO  17:12:42,347 - #20 int
INFO  17:12:42,347 - #20 x
INFO  17:12:42,347 - #41 ,
INFO  17:12:42,347 - #20 niz
INFO  17:12:42,347 - #45 [
INFO  17:12:42,347 - #46 ]
INFO  17:12:42,347 - #40 ;
INFO  17:12:42,347 - #47 {
INFO  17:12:42,347 - #20 int
INFO  17:12:42,347 - #20 fun
INFO  17:12:42,347 - #43 (
INFO  17:12:42,347 - #20 int
INFO  17:12:42,347 - #20 x
INFO  17:12:42,347 - #41 ,
INFO  17:12:42,347 - #20 int
INFO  17:12:42,347 - #20 y
INFO  17:12:42,347 - #44 )
INFO  17:12:42,347 - #47 {
INFO  17:12:42,347 - #15 return
INFO  17:12:42,347 - #20 x
INFO  17:12:42,347 - #24 +
INFO  17:12:42,347 - #20 y
INFO  17:12:42,362 - #40 ;
INFO  17:12:42,362 - #48 }
INFO  17:12:42,362 - #20 int
INFO  17:12:42,362 - #20 funx
INFO  17:12:42,362 - #43 (
INFO  17:12:42,362 - #20 int
INFO  17:12:42,362 - #20 x
INFO  17:12:42,362 - #44 )
INFO  17:12:42,362 - #20 int
INFO  17:12:42,362 - #20 niz
INFO  17:12:42,362 - #45 [
INFO  17:12:42,362 - #46 ]
INFO  17:12:42,362 - #41 ,
INFO  17:12:42,362 - #20 y
INFO  17:12:42,362 - #40 ;
INFO  17:12:42,362 - #47 {
INFO  17:12:42,362 - #15 return
INFO  17:12:42,362 - #20 x
INFO  17:12:42,362 - #24 +
INFO  17:12:42,362 - #20 x
INFO  17:12:42,362 - #40 ;
INFO  17:12:42,362 - #48 }
INFO  17:12:42,362 - #16 void
INFO  17:12:42,362 - #20 main
INFO  17:12:42,362 - #43 (
INFO  17:12:42,362 - #44 )
INFO  17:12:42,362 - #47 {
INFO  17:12:42,362 - #20 x
INFO  17:12:42,362 - #37 =
INFO  17:12:42,362 - #20 fun
INFO  17:12:42,362 - #43 (
INFO  17:12:42,362 - #21 2
INFO  17:12:42,362 - #26 *
INFO  17:12:42,362 - #21 2
INFO  17:12:42,362 - #41 ,
INFO  17:12:42,362 - #21 2
INFO  17:12:42,362 - #26 *
INFO  17:12:42,362 - #21 1
INFO  17:12:42,362 - #44 )
INFO  17:12:42,362 - #40 ;
INFO  17:12:42,362 - #13 print
INFO  17:12:42,362 - #43 (
INFO  17:12:42,362 - #20 x
INFO  17:12:42,362 - #44 )
INFO  17:12:42,362 - #40 ;
INFO  17:12:42,362 - #48 }
INFO  17:12:42,362 - #48 }
INFO  17:12:42,362 - 

================SINTAKSNO STABLO====================


INFO  17:12:42,362 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType2(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType2]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   1
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  17:12:42,362 - 

================SEMANTICKA OBRADA====================


INFO  17:12:42,378 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  17:12:42,378 - Deklarisan globalni niz 'niz' na liniji 4
INFO  17:12:42,378 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  17:12:42,378 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  17:12:42,378 - Formalni parametar funkcije funx: 'x' na liniji 11
INFO  17:12:42,378 - Deklarisan niz 'niz' na liniji 12
INFO  17:12:42,378 - Deklarisana promenljiva 'y' na liniji 12
INFO  17:12:42,378 - Pronadjen poziv funkcije 'fun' na liniji 22
INFO  17:12:42,378 - ===================================
INFO  17:12:42,378 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  17:12:42,393 - Parsiranje uspesno zavrseno!
INFO  17:16:58,652 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:16:58,697 - #2 program
INFO  17:16:58,697 - #20 test
INFO  17:16:58,697 - #20 int
INFO  17:16:58,698 - #20 x
INFO  17:16:58,698 - #41 ,
INFO  17:16:58,699 - #20 niz
INFO  17:16:58,699 - #45 [
INFO  17:16:58,699 - #46 ]
INFO  17:16:58,699 - #40 ;
INFO  17:16:58,699 - #47 {
INFO  17:16:58,699 - #20 int
INFO  17:16:58,699 - #20 fun
INFO  17:16:58,700 - #43 (
INFO  17:16:58,700 - #20 int
INFO  17:16:58,700 - #20 x
INFO  17:16:58,700 - #41 ,
INFO  17:16:58,700 - #20 int
INFO  17:16:58,700 - #20 y
INFO  17:16:58,700 - #44 )
INFO  17:16:58,700 - #47 {
INFO  17:16:58,700 - #15 return
INFO  17:16:58,700 - #20 x
INFO  17:16:58,700 - #24 +
INFO  17:16:58,701 - #20 y
INFO  17:16:58,702 - #40 ;
INFO  17:16:58,702 - #48 }
INFO  17:16:58,703 - #20 int
INFO  17:16:58,703 - #20 funx
INFO  17:16:58,703 - #43 (
INFO  17:16:58,703 - #20 int
INFO  17:16:58,703 - #20 x
INFO  17:16:58,703 - #44 )
INFO  17:16:58,703 - #20 int
INFO  17:16:58,703 - #20 niz
INFO  17:16:58,703 - #45 [
INFO  17:16:58,703 - #46 ]
INFO  17:16:58,703 - #41 ,
INFO  17:16:58,703 - #20 y
INFO  17:16:58,703 - #40 ;
INFO  17:16:58,704 - #47 {
INFO  17:16:58,704 - #15 return
INFO  17:16:58,704 - #20 x
INFO  17:16:58,704 - #24 +
INFO  17:16:58,704 - #20 x
INFO  17:16:58,704 - #40 ;
INFO  17:16:58,704 - #48 }
INFO  17:16:58,704 - #16 void
INFO  17:16:58,704 - #20 main
INFO  17:16:58,705 - #43 (
INFO  17:16:58,705 - #44 )
INFO  17:16:58,705 - #47 {
INFO  17:16:58,705 - #20 x
INFO  17:16:58,705 - #37 =
INFO  17:16:58,705 - #20 fun
INFO  17:16:58,705 - #43 (
INFO  17:16:58,705 - #21 2
INFO  17:16:58,705 - #26 *
INFO  17:16:58,705 - #21 2
INFO  17:16:58,706 - #41 ,
INFO  17:16:58,706 - #21 2
INFO  17:16:58,706 - #26 *
INFO  17:16:58,706 - #21 1
INFO  17:16:58,706 - #44 )
INFO  17:16:58,707 - #40 ;
INFO  17:16:58,707 - #13 print
INFO  17:16:58,707 - #43 (
INFO  17:16:58,707 - #20 x
INFO  17:16:58,707 - #44 )
INFO  17:16:58,707 - #40 ;
INFO  17:16:58,707 - #48 }
INFO  17:16:58,707 - #48 }
INFO  17:16:58,708 - 

================SINTAKSNO STABLO====================


INFO  17:16:58,709 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType2(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType2]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   1
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  17:16:58,711 - 

================SEMANTICKA OBRADA====================


INFO  17:16:58,726 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  17:16:58,726 - Deklarisan globalni niz 'niz' na liniji 4
INFO  17:16:58,727 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  17:16:58,727 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  17:16:58,728 - Formalni parametar funkcije funx: 'x' na liniji 11
INFO  17:16:58,728 - Deklarisan niz 'niz' na liniji 12
INFO  17:16:58,728 - Deklarisana promenljiva 'y' na liniji 12
INFO  17:16:58,729 - Pronadjen poziv funkcije 'fun' na liniji 22
INFO  17:16:58,730 - ===================================
INFO  17:16:58,730 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  17:16:58,739 - Parsiranje uspesno zavrseno!
INFO  17:17:38,099 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:17:38,218 - #2 program
INFO  17:17:38,221 - #20 test
INFO  17:17:38,222 - #20 int
INFO  17:17:38,225 - #20 x
INFO  17:17:38,226 - #41 ,
INFO  17:17:38,226 - #20 niz
INFO  17:17:38,226 - #45 [
INFO  17:17:38,226 - #46 ]
INFO  17:17:38,227 - #40 ;
INFO  17:17:38,227 - #47 {
INFO  17:17:38,228 - #20 int
INFO  17:17:38,228 - #20 fun
INFO  17:17:38,229 - #43 (
INFO  17:17:38,229 - #20 int
INFO  17:17:38,229 - #20 x
INFO  17:17:38,229 - #41 ,
INFO  17:17:38,230 - #20 int
INFO  17:17:38,230 - #20 y
INFO  17:17:38,230 - #44 )
INFO  17:17:38,231 - #47 {
INFO  17:17:38,233 - #15 return
INFO  17:17:38,233 - #20 x
INFO  17:17:38,233 - #24 +
INFO  17:17:38,236 - #20 y
INFO  17:17:38,237 - #40 ;
INFO  17:17:38,238 - #48 }
INFO  17:17:38,238 - #20 int
INFO  17:17:38,239 - #20 funx
INFO  17:17:38,240 - #43 (
INFO  17:17:38,240 - #20 int
INFO  17:17:38,240 - #20 x
INFO  17:17:38,240 - #44 )
INFO  17:17:38,240 - #20 int
INFO  17:17:38,240 - #20 niz
INFO  17:17:38,240 - #45 [
INFO  17:17:38,240 - #46 ]
INFO  17:17:38,241 - #41 ,
INFO  17:17:38,241 - #20 y
INFO  17:17:38,241 - #40 ;
INFO  17:17:38,241 - #47 {
INFO  17:17:38,241 - #15 return
INFO  17:17:38,242 - #20 x
INFO  17:17:38,243 - #24 +
INFO  17:17:38,243 - #20 x
INFO  17:17:38,243 - #40 ;
INFO  17:17:38,243 - #48 }
INFO  17:17:38,243 - #16 void
INFO  17:17:38,244 - #20 main
INFO  17:17:38,244 - #43 (
INFO  17:17:38,244 - #44 )
INFO  17:17:38,245 - #47 {
INFO  17:17:38,245 - #20 x
INFO  17:17:38,245 - #37 =
INFO  17:17:38,245 - #20 fun
INFO  17:17:38,245 - #43 (
INFO  17:17:38,245 - #21 2
INFO  17:17:38,245 - #26 *
INFO  17:17:38,246 - #21 2
INFO  17:17:38,247 - #41 ,
INFO  17:17:38,247 - #21 2
INFO  17:17:38,247 - #26 *
INFO  17:17:38,247 - #21 1
INFO  17:17:38,248 - #44 )
INFO  17:17:38,251 - #40 ;
INFO  17:17:38,251 - #13 print
INFO  17:17:38,252 - #43 (
INFO  17:17:38,252 - #20 x
INFO  17:17:38,252 - #44 )
INFO  17:17:38,252 - #40 ;
INFO  17:17:38,252 - #48 }
INFO  17:17:38,252 - #48 }
INFO  17:17:38,254 - 

================SINTAKSNO STABLO====================


INFO  17:17:38,257 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType2(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType2]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   1
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  17:17:38,257 - 

================SEMANTICKA OBRADA====================


INFO  17:17:38,276 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  17:17:38,276 - Deklarisan globalni niz 'niz' na liniji 4
INFO  17:17:38,277 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  17:17:38,277 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  17:17:38,277 - Formalni parametar funkcije funx: 'x' na liniji 11
INFO  17:17:38,277 - Deklarisan niz 'niz' na liniji 12
INFO  17:17:38,277 - Deklarisana promenljiva 'y' na liniji 12
INFO  17:17:38,277 - Pronadjen poziv funkcije 'fun' na liniji 22
INFO  17:17:38,279 - ===================================
INFO  17:17:38,279 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  17:17:38,291 - Parsiranje uspesno zavrseno!
INFO  17:21:45,846 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:21:45,897 - #2 program
INFO  17:21:45,897 - #20 test
INFO  17:21:45,897 - #20 int
INFO  17:21:45,898 - #20 x
INFO  17:21:45,899 - #41 ,
INFO  17:21:45,899 - #20 niz
INFO  17:21:45,899 - #45 [
INFO  17:21:45,899 - #46 ]
INFO  17:21:45,899 - #40 ;
INFO  17:21:45,899 - #47 {
INFO  17:21:45,899 - #20 int
INFO  17:21:45,899 - #20 fun
INFO  17:21:45,900 - #43 (
INFO  17:21:45,900 - #20 int
INFO  17:21:45,900 - #20 x
INFO  17:21:45,900 - #41 ,
INFO  17:21:45,900 - #20 int
INFO  17:21:45,900 - #20 y
INFO  17:21:45,900 - #44 )
INFO  17:21:45,901 - #47 {
INFO  17:21:45,901 - #15 return
INFO  17:21:45,901 - #20 x
INFO  17:21:45,901 - #24 +
INFO  17:21:45,901 - #20 y
INFO  17:21:45,902 - #40 ;
INFO  17:21:45,902 - #48 }
INFO  17:21:45,903 - #20 int
INFO  17:21:45,903 - #20 funx
INFO  17:21:45,903 - #43 (
INFO  17:21:45,903 - #20 int
INFO  17:21:45,903 - #20 x
INFO  17:21:45,903 - #44 )
INFO  17:21:45,903 - #20 int
INFO  17:21:45,904 - #20 niz
INFO  17:21:45,904 - #45 [
INFO  17:21:45,904 - #46 ]
INFO  17:21:45,904 - #41 ,
INFO  17:21:45,904 - #20 y
INFO  17:21:45,904 - #40 ;
INFO  17:21:45,904 - #47 {
INFO  17:21:45,904 - #15 return
INFO  17:21:45,904 - #20 x
INFO  17:21:45,904 - #24 +
INFO  17:21:45,904 - #20 x
INFO  17:21:45,904 - #40 ;
INFO  17:21:45,904 - #48 }
INFO  17:21:45,905 - #16 void
INFO  17:21:45,905 - #20 main
INFO  17:21:45,905 - #43 (
INFO  17:21:45,905 - #44 )
INFO  17:21:45,905 - #47 {
INFO  17:21:45,905 - #20 x
INFO  17:21:45,905 - #37 =
INFO  17:21:45,905 - #20 fun
INFO  17:21:45,905 - #43 (
INFO  17:21:45,905 - #21 2
INFO  17:21:45,905 - #26 *
INFO  17:21:45,906 - #21 2
INFO  17:21:45,906 - #41 ,
INFO  17:21:45,907 - #21 2
INFO  17:21:45,907 - #26 *
INFO  17:21:45,907 - #21 1
INFO  17:21:45,907 - #44 )
INFO  17:21:45,908 - #40 ;
INFO  17:21:45,908 - #13 print
INFO  17:21:45,909 - #43 (
INFO  17:21:45,909 - #20 x
INFO  17:21:45,909 - #44 )
INFO  17:21:45,909 - #40 ;
INFO  17:21:45,909 - #48 }
INFO  17:21:45,909 - #48 }
INFO  17:21:45,910 - 

================SINTAKSNO STABLO====================


INFO  17:21:45,911 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclEps(
    ) [ProgramDeclEps]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarMulti(
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               x
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarMulti]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDeclSingle(
        MethodTypeDeclaration(
          MethodType2(
            MethodTypeName(
              Type(
               int
              ) [Type]
             fun
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 x
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               y
              ) [ParamNormal]
            ) [ParamMulti]
            StatementSingle(
              StmtReturnExpr(
                ExprOne(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           x
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         y
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementSingle]
          ) [MethodType2]
        ) [MethodTypeDeclaration]
      ) [MethodDeclSingle]
      MethodTypeDeclaration(
        MethodType0(
          MethodTypeName(
            Type(
             int
            ) [Type]
           funx
          ) [MethodTypeName]
          ParamSingle(
            ParamNormal(
              Type(
               int
              ) [Type]
             x
            ) [ParamNormal]
          ) [ParamSingle]
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarArray(
                   niz
                  ) [VarArray]
                ) [VarSingle]
                VarNormal(
                 y
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          StatementSingle(
            StmtReturnExpr(
              ExprOne(
                ExprAddop(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         x
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                  AddopPlus(
                  ) [AddopPlus]
                  TermSingle(
                    FactorDesignator(
                      DesignatorSimple(
                       x
                      ) [DesignatorSimple]
                    ) [FactorDesignator]
                  ) [TermSingle]
                ) [ExprAddop]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementSingle]
        ) [MethodType0]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementSingle(
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 x
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           fun
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermMulop(
                                    TermSingle(
                                      FactorNumConst(
                                       2
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermMulop]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermMulop(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                  MulopMul(
                                  ) [MulopMul]
                                  FactorNumConst(
                                   1
                                  ) [FactorNumConst]
                                ) [TermMulop]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementSingle]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     x
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  17:21:45,911 - 

================SEMANTICKA OBRADA====================


INFO  17:21:45,922 - Deklarisana globalna promenljiva 'x' na liniji 4
INFO  17:21:45,922 - Deklarisan globalni niz 'niz' na liniji 4
INFO  17:21:45,922 - Formalni parametar funkcije fun: 'x' na liniji 6
INFO  17:21:45,922 - Formalni parametar funkcije fun: 'y' na liniji 6
INFO  17:21:45,922 - Formalni parametar funkcije funx: 'x' na liniji 11
INFO  17:21:45,922 - Deklarisan niz 'niz' na liniji 12
INFO  17:21:45,923 - Deklarisana promenljiva 'y' na liniji 12
INFO  17:21:45,923 - Pronadjen poziv funkcije 'fun' na liniji 22
INFO  17:21:45,925 - ===================================
INFO  17:21:45,925 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  17:21:45,934 - Parsiranje uspesno zavrseno!
INFO  17:24:07,677 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:24:07,725 - #2 program
INFO  17:24:07,725 - #20 test301
INFO  17:24:07,725 - #7 const
INFO  17:24:07,726 - #20 int
INFO  17:24:07,726 - #20 nula
INFO  17:24:07,726 - #37 =
INFO  17:24:07,727 - #21 0
INFO  17:24:07,727 - #40 ;
INFO  17:24:07,727 - #7 const
INFO  17:24:07,728 - #20 int
INFO  17:24:07,728 - #20 jedan
INFO  17:24:07,728 - #37 =
INFO  17:24:07,728 - #21 1
INFO  17:24:07,728 - #40 ;
INFO  17:24:07,728 - #7 const
INFO  17:24:07,728 - #20 int
INFO  17:24:07,728 - #20 pet
INFO  17:24:07,728 - #37 =
INFO  17:24:07,728 - #21 5
INFO  17:24:07,728 - #40 ;
INFO  17:24:07,728 - #20 int
INFO  17:24:07,729 - #20 niz
INFO  17:24:07,729 - #45 [
INFO  17:24:07,729 - #46 ]
INFO  17:24:07,729 - #40 ;
INFO  17:24:07,729 - #20 char
INFO  17:24:07,730 - #20 nizch
INFO  17:24:07,730 - #45 [
INFO  17:24:07,730 - #46 ]
INFO  17:24:07,730 - #40 ;
INFO  17:24:07,730 - #47 {
INFO  17:24:07,730 - #16 void
INFO  17:24:07,730 - #20 main
INFO  17:24:07,730 - #43 (
INFO  17:24:07,730 - #44 )
INFO  17:24:07,731 - #20 int
INFO  17:24:07,731 - #20 bodovi
INFO  17:24:07,731 - #40 ;
INFO  17:24:07,731 - #20 bool
INFO  17:24:07,731 - #20 bt
INFO  17:24:07,731 - #40 ;
INFO  17:24:07,731 - #47 {
INFO  17:24:07,731 - #20 bodovi
INFO  17:24:07,732 - #37 =
INFO  17:24:07,732 - #21 0
INFO  17:24:07,732 - #40 ;
INFO  17:24:07,732 - #20 bodovi
INFO  17:24:07,733 - #38 ++
INFO  17:24:07,733 - #40 ;
INFO  17:24:07,733 - #20 bodovi
INFO  17:24:07,733 - #37 =
INFO  17:24:07,733 - #20 bodovi
INFO  17:24:07,733 - #24 +
INFO  17:24:07,733 - #20 jedan
INFO  17:24:07,734 - #40 ;
INFO  17:24:07,734 - #20 bodovi
INFO  17:24:07,734 - #37 =
INFO  17:24:07,734 - #20 bodovi
INFO  17:24:07,734 - #26 *
INFO  17:24:07,735 - #20 pet
INFO  17:24:07,735 - #40 ;
INFO  17:24:07,735 - #20 bodovi
INFO  17:24:07,736 - #39 --
INFO  17:24:07,736 - #40 ;
INFO  17:24:07,736 - #13 print
INFO  17:24:07,736 - #43 (
INFO  17:24:07,736 - #20 bodovi
INFO  17:24:07,736 - #44 )
INFO  17:24:07,736 - #40 ;
INFO  17:24:07,736 - #20 niz
INFO  17:24:07,736 - #37 =
INFO  17:24:07,736 - #12 new
INFO  17:24:07,736 - #20 int
INFO  17:24:07,736 - #45 [
INFO  17:24:07,737 - #21 3
INFO  17:24:07,737 - #46 ]
INFO  17:24:07,737 - #40 ;
INFO  17:24:07,737 - #20 niz
INFO  17:24:07,737 - #45 [
INFO  17:24:07,737 - #20 nula
INFO  17:24:07,737 - #46 ]
INFO  17:24:07,737 - #37 =
INFO  17:24:07,737 - #20 jedan
INFO  17:24:07,737 - #40 ;
INFO  17:24:07,738 - #20 niz
INFO  17:24:07,738 - #45 [
INFO  17:24:07,738 - #21 1
INFO  17:24:07,738 - #46 ]
INFO  17:24:07,738 - #37 =
INFO  17:24:07,738 - #21 2
INFO  17:24:07,739 - #40 ;
INFO  17:24:07,739 - #20 niz
INFO  17:24:07,739 - #45 [
INFO  17:24:07,739 - #20 niz
INFO  17:24:07,739 - #45 [
INFO  17:24:07,739 - #20 jedan
INFO  17:24:07,740 - #46 ]
INFO  17:24:07,740 - #46 ]
INFO  17:24:07,740 - #37 =
INFO  17:24:07,740 - #20 niz
INFO  17:24:07,740 - #45 [
INFO  17:24:07,740 - #20 niz
INFO  17:24:07,740 - #45 [
INFO  17:24:07,740 - #21 0
INFO  17:24:07,740 - #46 ]
INFO  17:24:07,740 - #46 ]
INFO  17:24:07,740 - #26 *
INFO  17:24:07,740 - #21 3
INFO  17:24:07,740 - #40 ;
INFO  17:24:07,740 - #20 bodovi
INFO  17:24:07,740 - #37 =
INFO  17:24:07,740 - #20 niz
INFO  17:24:07,740 - #45 [
INFO  17:24:07,740 - #21 2
INFO  17:24:07,741 - #46 ]
INFO  17:24:07,741 - #27 /
INFO  17:24:07,741 - #20 niz
INFO  17:24:07,741 - #45 [
INFO  17:24:07,741 - #21 0
INFO  17:24:07,741 - #46 ]
INFO  17:24:07,741 - #40 ;
INFO  17:24:07,741 - #13 print
INFO  17:24:07,741 - #43 (
INFO  17:24:07,741 - #20 bodovi
INFO  17:24:07,741 - #44 )
INFO  17:24:07,741 - #40 ;
INFO  17:24:07,742 - #13 print
INFO  17:24:07,742 - #43 (
INFO  17:24:07,742 - #20 niz
INFO  17:24:07,742 - #45 [
INFO  17:24:07,742 - #21 2
INFO  17:24:07,742 - #46 ]
INFO  17:24:07,742 - #44 )
INFO  17:24:07,742 - #40 ;
INFO  17:24:07,742 - #20 nizch
INFO  17:24:07,742 - #37 =
INFO  17:24:07,742 - #12 new
INFO  17:24:07,742 - #20 char
INFO  17:24:07,742 - #45 [
INFO  17:24:07,742 - #21 3
INFO  17:24:07,742 - #46 ]
INFO  17:24:07,742 - #40 ;
INFO  17:24:07,742 - #20 nizch
INFO  17:24:07,742 - #45 [
INFO  17:24:07,742 - #21 0
INFO  17:24:07,742 - #46 ]
INFO  17:24:07,742 - #37 =
INFO  17:24:07,742 - #22 a
INFO  17:24:07,742 - #40 ;
INFO  17:24:07,742 - #20 nizch
INFO  17:24:07,743 - #45 [
INFO  17:24:07,743 - #20 jedan
INFO  17:24:07,743 - #46 ]
INFO  17:24:07,743 - #37 =
INFO  17:24:07,743 - #22 b
INFO  17:24:07,743 - #40 ;
INFO  17:24:07,743 - #20 nizch
INFO  17:24:07,743 - #45 [
INFO  17:24:07,743 - #20 pet
INFO  17:24:07,743 - #25 -
INFO  17:24:07,743 - #21 3
INFO  17:24:07,744 - #46 ]
INFO  17:24:07,744 - #37 =
INFO  17:24:07,744 - #22 c
INFO  17:24:07,744 - #40 ;
INFO  17:24:07,744 - #13 print
INFO  17:24:07,744 - #43 (
INFO  17:24:07,744 - #20 nizch
INFO  17:24:07,744 - #45 [
INFO  17:24:07,744 - #21 1
INFO  17:24:07,744 - #46 ]
INFO  17:24:07,744 - #44 )
INFO  17:24:07,744 - #40 ;
INFO  17:24:07,744 - #13 print
INFO  17:24:07,744 - #43 (
INFO  17:24:07,744 - #20 nizch
INFO  17:24:07,744 - #45 [
INFO  17:24:07,744 - #20 jedan
INFO  17:24:07,745 - #26 *
INFO  17:24:07,745 - #21 2
INFO  17:24:07,745 - #46 ]
INFO  17:24:07,745 - #44 )
INFO  17:24:07,745 - #40 ;
INFO  17:24:07,745 - #20 bodovi
INFO  17:24:07,745 - #37 =
INFO  17:24:07,745 - #20 bodovi
INFO  17:24:07,745 - #24 +
INFO  17:24:07,745 - #43 (
INFO  17:24:07,745 - #20 pet
INFO  17:24:07,745 - #26 *
INFO  17:24:07,745 - #20 jedan
INFO  17:24:07,745 - #25 -
INFO  17:24:07,745 - #21 1
INFO  17:24:07,745 - #44 )
INFO  17:24:07,745 - #26 *
INFO  17:24:07,746 - #20 bodovi
INFO  17:24:07,746 - #25 -
INFO  17:24:07,746 - #43 (
INFO  17:24:07,746 - #21 3
INFO  17:24:07,746 - #28 %
INFO  17:24:07,746 - #21 2
INFO  17:24:07,746 - #24 +
INFO  17:24:07,746 - #21 3
INFO  17:24:07,746 - #26 *
INFO  17:24:07,747 - #21 2
INFO  17:24:07,747 - #25 -
INFO  17:24:07,747 - #21 3
INFO  17:24:07,747 - #44 )
INFO  17:24:07,747 - #40 ;
INFO  17:24:07,747 - #13 print
INFO  17:24:07,747 - #43 (
INFO  17:24:07,747 - #20 bodovi
INFO  17:24:07,747 - #44 )
INFO  17:24:07,749 - #40 ;
INFO  17:24:07,749 - #14 read
INFO  17:24:07,749 - #43 (
INFO  17:24:07,749 - #20 bodovi
INFO  17:24:07,749 - #44 )
INFO  17:24:07,749 - #40 ;
INFO  17:24:07,749 - #20 bt
INFO  17:24:07,750 - #37 =
INFO  17:24:07,750 - #23 true
INFO  17:24:07,750 - #40 ;
INFO  17:24:07,750 - #13 print
INFO  17:24:07,750 - #43 (
INFO  17:24:07,750 - #20 bt
INFO  17:24:07,750 - #49 ?
INFO  17:24:07,750 - #20 bodovi
INFO  17:24:07,750 - #50 :
INFO  17:24:07,750 - #20 bodovi
INFO  17:24:07,750 - #24 +
INFO  17:24:07,750 - #21 10
INFO  17:24:07,750 - #44 )
INFO  17:24:07,750 - #40 ;
INFO  17:24:07,750 - #13 print
INFO  17:24:07,751 - #43 (
INFO  17:24:07,751 - #23 false
INFO  17:24:07,751 - #49 ?
INFO  17:24:07,751 - #20 bodovi
INFO  17:24:07,751 - #24 +
INFO  17:24:07,751 - #21 20
INFO  17:24:07,751 - #50 :
INFO  17:24:07,751 - #20 bodovi
INFO  17:24:07,751 - #24 +
INFO  17:24:07,751 - #21 30
INFO  17:24:07,751 - #44 )
INFO  17:24:07,751 - #40 ;
INFO  17:24:07,751 - #13 print
INFO  17:24:07,751 - #43 (
INFO  17:24:07,751 - #23 true
INFO  17:24:07,753 - #49 ?
INFO  17:24:07,753 - #22 +
INFO  17:24:07,753 - #50 :
INFO  17:24:07,753 - #22 -
INFO  17:24:07,753 - #44 )
INFO  17:24:07,753 - #40 ;
INFO  17:24:07,753 - #48 }
INFO  17:24:07,753 - #48 }
INFO  17:24:07,754 - 

================SINTAKSNO STABLO====================


INFO  17:24:07,760 - Program(
  ProgName(
   test301
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclMulti(
          ProgramDeclMulti(
            ProgramDeclEps(
            ) [ProgramDeclEps]
            PartConstDeclaration(
              ConstDeclaration(
                Type(
                 int
                ) [Type]
                ConstSingle(
                  ConstPart(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstPart]
                ) [ConstSingle]
              ) [ConstDeclaration]
            ) [PartConstDeclaration]
          ) [ProgramDeclMulti]
          PartConstDeclaration(
            ConstDeclaration(
              Type(
               int
              ) [Type]
              ConstSingle(
                ConstPart(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [ConstPart]
              ) [ConstSingle]
            ) [ConstDeclaration]
          ) [PartConstDeclaration]
        ) [ProgramDeclMulti]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarArray(
               niz
              ) [VarArray]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         char
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             nizch
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 bodovi
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            VarSingle(
              VarNormal(
               bt
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementMulti(
                                                  StatementMulti(
                                                    StatementMulti(
                                                      StatementMulti(
                                                        StatementMulti(
                                                          StatementSingle(
                                                            StmtDesign(
                                                              DesignatorAssignment(
                                                                DesignatorSimple(
                                                                 bodovi
                                                                ) [DesignatorSimple]
                                                                AssignmentExpr(
                                                                  ExprOne(
                                                                    ExprSingle(
                                                                      TermSingle(
                                                                        FactorNumConst(
                                                                         0
                                                                        ) [FactorNumConst]
                                                                      ) [TermSingle]
                                                                    ) [ExprSingle]
                                                                  ) [ExprOne]
                                                                ) [AssignmentExpr]
                                                              ) [DesignatorAssignment]
                                                            ) [StmtDesign]
                                                          ) [StatementSingle]
                                                          StmtDesign(
                                                            DesignatorIncrement(
                                                              DesignatorSimple(
                                                               bodovi
                                                              ) [DesignatorSimple]
                                                            ) [DesignatorIncrement]
                                                          ) [StmtDesign]
                                                        ) [StatementMulti]
                                                        StmtDesign(
                                                          DesignatorAssignment(
                                                            DesignatorSimple(
                                                             bodovi
                                                            ) [DesignatorSimple]
                                                            AssignmentExpr(
                                                              ExprOne(
                                                                ExprAddop(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorDesignator(
                                                                        DesignatorSimple(
                                                                         bodovi
                                                                        ) [DesignatorSimple]
                                                                      ) [FactorDesignator]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                  AddopPlus(
                                                                  ) [AddopPlus]
                                                                  TermSingle(
                                                                    FactorDesignator(
                                                                      DesignatorSimple(
                                                                       jedan
                                                                      ) [DesignatorSimple]
                                                                    ) [FactorDesignator]
                                                                  ) [TermSingle]
                                                                ) [ExprAddop]
                                                              ) [ExprOne]
                                                            ) [AssignmentExpr]
                                                          ) [DesignatorAssignment]
                                                        ) [StmtDesign]
                                                      ) [StatementMulti]
                                                      StmtDesign(
                                                        DesignatorAssignment(
                                                          DesignatorSimple(
                                                           bodovi
                                                          ) [DesignatorSimple]
                                                          AssignmentExpr(
                                                            ExprOne(
                                                              ExprSingle(
                                                                TermMulop(
                                                                  TermSingle(
                                                                    FactorDesignator(
                                                                      DesignatorSimple(
                                                                       bodovi
                                                                      ) [DesignatorSimple]
                                                                    ) [FactorDesignator]
                                                                  ) [TermSingle]
                                                                  MulopMul(
                                                                  ) [MulopMul]
                                                                  FactorDesignator(
                                                                    DesignatorSimple(
                                                                     pet
                                                                    ) [DesignatorSimple]
                                                                  ) [FactorDesignator]
                                                                ) [TermMulop]
                                                              ) [ExprSingle]
                                                            ) [ExprOne]
                                                          ) [AssignmentExpr]
                                                        ) [DesignatorAssignment]
                                                      ) [StmtDesign]
                                                    ) [StatementMulti]
                                                    StmtDesign(
                                                      DesignatorDecrement(
                                                        DesignatorSimple(
                                                         bodovi
                                                        ) [DesignatorSimple]
                                                      ) [DesignatorDecrement]
                                                    ) [StmtDesign]
                                                  ) [StatementMulti]
                                                  StmtPrint(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorDesignator(
                                                            DesignatorSimple(
                                                             bodovi
                                                            ) [DesignatorSimple]
                                                          ) [FactorDesignator]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [StmtPrint]
                                                ) [StatementMulti]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     niz
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNewArray(
                                                              Type(
                                                               int
                                                              ) [Type]
                                                              ExprOne(
                                                                ExprSingle(
                                                                  TermSingle(
                                                                    FactorNumConst(
                                                                     3
                                                                    ) [FactorNumConst]
                                                                  ) [TermSingle]
                                                                ) [ExprSingle]
                                                              ) [ExprOne]
                                                            ) [FactorNewArray]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDesign(
                                                DesignatorAssignment(
                                                  DesignatorArray(
                                                   niz
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorDesignator(
                                                            DesignatorSimple(
                                                             nula
                                                            ) [DesignatorSimple]
                                                          ) [FactorDesignator]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [DesignatorArray]
                                                  AssignmentExpr(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorDesignator(
                                                            DesignatorSimple(
                                                             jedan
                                                            ) [DesignatorSimple]
                                                          ) [FactorDesignator]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [AssignmentExpr]
                                                ) [DesignatorAssignment]
                                              ) [StmtDesign]
                                            ) [StatementMulti]
                                            StmtDesign(
                                              DesignatorAssignment(
                                                DesignatorArray(
                                                 niz
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [DesignatorArray]
                                                AssignmentExpr(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         2
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [AssignmentExpr]
                                              ) [DesignatorAssignment]
                                            ) [StmtDesign]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorArray(
                                               niz
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorArray(
                                                         niz
                                                          ExprOne(
                                                            ExprSingle(
                                                              TermSingle(
                                                                FactorDesignator(
                                                                  DesignatorSimple(
                                                                   jedan
                                                                  ) [DesignatorSimple]
                                                                ) [FactorDesignator]
                                                              ) [TermSingle]
                                                            ) [ExprSingle]
                                                          ) [ExprOne]
                                                        ) [DesignatorArray]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [DesignatorArray]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermMulop(
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorArray(
                                                           niz
                                                            ExprOne(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorDesignator(
                                                                    DesignatorArray(
                                                                     niz
                                                                      ExprOne(
                                                                        ExprSingle(
                                                                          TermSingle(
                                                                            FactorNumConst(
                                                                             0
                                                                            ) [FactorNumConst]
                                                                          ) [TermSingle]
                                                                        ) [ExprSingle]
                                                                      ) [ExprOne]
                                                                    ) [DesignatorArray]
                                                                  ) [FactorDesignator]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [ExprOne]
                                                          ) [DesignatorArray]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                      MulopMul(
                                                      ) [MulopMul]
                                                      FactorNumConst(
                                                       3
                                                      ) [FactorNumConst]
                                                    ) [TermMulop]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorSimple(
                                             bodovi
                                            ) [DesignatorSimple]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermMulop(
                                                    TermSingle(
                                                      FactorDesignator(
                                                        DesignatorArray(
                                                         niz
                                                          ExprOne(
                                                            ExprSingle(
                                                              TermSingle(
                                                                FactorNumConst(
                                                                 2
                                                                ) [FactorNumConst]
                                                              ) [TermSingle]
                                                            ) [ExprSingle]
                                                          ) [ExprOne]
                                                        ) [DesignatorArray]
                                                      ) [FactorDesignator]
                                                    ) [TermSingle]
                                                    MulopDiv(
                                                    ) [MulopDiv]
                                                    FactorDesignator(
                                                      DesignatorArray(
                                                       niz
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               0
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [DesignatorArray]
                                                    ) [FactorDesignator]
                                                  ) [TermMulop]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtPrint(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorDesignator(
                                                DesignatorSimple(
                                                 bodovi
                                                ) [DesignatorSimple]
                                              ) [FactorDesignator]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [StmtPrint]
                                    ) [StatementMulti]
                                    StmtPrint(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorDesignator(
                                              DesignatorArray(
                                               niz
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       2
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [DesignatorArray]
                                            ) [FactorDesignator]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [StmtPrint]
                                  ) [StatementMulti]
                                  StmtDesign(
                                    DesignatorAssignment(
                                      DesignatorSimple(
                                       nizch
                                      ) [DesignatorSimple]
                                      AssignmentExpr(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNewArray(
                                                Type(
                                                 char
                                                ) [Type]
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNumConst(
                                                       3
                                                      ) [FactorNumConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [FactorNewArray]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [AssignmentExpr]
                                    ) [DesignatorAssignment]
                                  ) [StmtDesign]
                                ) [StatementMulti]
                                StmtDesign(
                                  DesignatorAssignment(
                                    DesignatorArray(
                                     nizch
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             0
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [DesignatorArray]
                                    AssignmentExpr(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorCharConst(
                                             a
                                            ) [FactorCharConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [AssignmentExpr]
                                  ) [DesignatorAssignment]
                                ) [StmtDesign]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorArray(
                                   nizch
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorSimple(
                                             jedan
                                            ) [DesignatorSimple]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [DesignatorArray]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorCharConst(
                                           b
                                          ) [FactorCharConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDesign(
                              DesignatorAssignment(
                                DesignatorArray(
                                 nizch
                                  ExprOne(
                                    ExprAddop(
                                      ExprSingle(
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorSimple(
                                             pet
                                            ) [DesignatorSimple]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                      AddopMinus(
                                      ) [AddopMinus]
                                      TermSingle(
                                        FactorNumConst(
                                         3
                                        ) [FactorNumConst]
                                      ) [TermSingle]
                                    ) [ExprAddop]
                                  ) [ExprOne]
                                ) [DesignatorArray]
                                AssignmentExpr(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorCharConst(
                                         c
                                        ) [FactorCharConst]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [AssignmentExpr]
                              ) [DesignatorAssignment]
                            ) [StmtDesign]
                          ) [StatementMulti]
                          StmtPrint(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorArray(
                                     nizch
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             1
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [DesignatorArray]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [StmtPrint]
                        ) [StatementMulti]
                        StmtPrint(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorArray(
                                   nizch
                                    ExprOne(
                                      ExprSingle(
                                        TermMulop(
                                          TermSingle(
                                            FactorDesignator(
                                              DesignatorSimple(
                                               jedan
                                              ) [DesignatorSimple]
                                            ) [FactorDesignator]
                                          ) [TermSingle]
                                          MulopMul(
                                          ) [MulopMul]
                                          FactorNumConst(
                                           2
                                          ) [FactorNumConst]
                                        ) [TermMulop]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [DesignatorArray]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [StmtPrint]
                      ) [StatementMulti]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           bodovi
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprAddop(
                                ExprAddop(
                                  ExprSingle(
                                    TermSingle(
                                      FactorDesignator(
                                        DesignatorSimple(
                                         bodovi
                                        ) [DesignatorSimple]
                                      ) [FactorDesignator]
                                    ) [TermSingle]
                                  ) [ExprSingle]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  TermMulop(
                                    TermSingle(
                                      FactorExpr(
                                        ExprOne(
                                          ExprAddop(
                                            ExprSingle(
                                              TermMulop(
                                                TermSingle(
                                                  FactorDesignator(
                                                    DesignatorSimple(
                                                     pet
                                                    ) [DesignatorSimple]
                                                  ) [FactorDesignator]
                                                ) [TermSingle]
                                                MulopMul(
                                                ) [MulopMul]
                                                FactorDesignator(
                                                  DesignatorSimple(
                                                   jedan
                                                  ) [DesignatorSimple]
                                                ) [FactorDesignator]
                                              ) [TermMulop]
                                            ) [ExprSingle]
                                            AddopMinus(
                                            ) [AddopMinus]
                                            TermSingle(
                                              FactorNumConst(
                                               1
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprAddop]
                                        ) [ExprOne]
                                      ) [FactorExpr]
                                    ) [TermSingle]
                                    MulopMul(
                                    ) [MulopMul]
                                    FactorDesignator(
                                      DesignatorSimple(
                                       bodovi
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermMulop]
                                ) [ExprAddop]
                                AddopMinus(
                                ) [AddopMinus]
                                TermSingle(
                                  FactorExpr(
                                    ExprOne(
                                      ExprAddop(
                                        ExprAddop(
                                          ExprSingle(
                                            TermMulop(
                                              TermSingle(
                                                FactorNumConst(
                                                 3
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                              MulopMod(
                                              ) [MulopMod]
                                              FactorNumConst(
                                               2
                                              ) [FactorNumConst]
                                            ) [TermMulop]
                                          ) [ExprSingle]
                                          AddopPlus(
                                          ) [AddopPlus]
                                          TermMulop(
                                            TermSingle(
                                              FactorNumConst(
                                               3
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                            MulopMul(
                                            ) [MulopMul]
                                            FactorNumConst(
                                             2
                                            ) [FactorNumConst]
                                          ) [TermMulop]
                                        ) [ExprAddop]
                                        AddopMinus(
                                        ) [AddopMinus]
                                        TermSingle(
                                          FactorNumConst(
                                           3
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprAddop]
                                    ) [ExprOne]
                                  ) [FactorExpr]
                                ) [TermSingle]
                              ) [ExprAddop]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementMulti]
                    StmtPrint(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               bodovi
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [StmtPrint]
                  ) [StatementMulti]
                  StmtRead(
                    DesignatorSimple(
                     bodovi
                    ) [DesignatorSimple]
                  ) [StmtRead]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     bt
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorBoolConst(
                             true
                            ) [FactorBoolConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtPrint(
                ExprTernary(
                  TernaryCond(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           bt
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [TernaryCond]
                  TerExpr1(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           bodovi
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [TerExpr1]
                  TerExpr2(
                    ExprAddop(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             bodovi
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                      AddopPlus(
                      ) [AddopPlus]
                      TermSingle(
                        FactorNumConst(
                         10
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprAddop]
                  ) [TerExpr2]
                ) [ExprTernary]
              ) [StmtPrint]
            ) [StatementMulti]
            StmtPrint(
              ExprTernary(
                TernaryCond(
                  ExprSingle(
                    TermSingle(
                      FactorBoolConst(
                       false
                      ) [FactorBoolConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [TernaryCond]
                TerExpr1(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           bodovi
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorNumConst(
                       20
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [TerExpr1]
                TerExpr2(
                  ExprAddop(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           bodovi
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                    AddopPlus(
                    ) [AddopPlus]
                    TermSingle(
                      FactorNumConst(
                       30
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprAddop]
                ) [TerExpr2]
              ) [ExprTernary]
            ) [StmtPrint]
          ) [StatementMulti]
          StmtPrint(
            ExprTernary(
              TernaryCond(
                ExprSingle(
                  TermSingle(
                    FactorBoolConst(
                     true
                    ) [FactorBoolConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TernaryCond]
              TerExpr1(
                ExprSingle(
                  TermSingle(
                    FactorCharConst(
                     +
                    ) [FactorCharConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TerExpr1]
              TerExpr2(
                ExprSingle(
                  TermSingle(
                    FactorCharConst(
                     -
                    ) [FactorCharConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TerExpr2]
            ) [ExprTernary]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  17:24:07,762 - 

================SEMANTICKA OBRADA====================


INFO  17:24:07,773 - Deklarisana konstanta 'nula' na liniji 5
INFO  17:24:07,773 - Deklarisana konstanta 'jedan' na liniji 6
INFO  17:24:07,774 - Deklarisana konstanta 'pet' na liniji 7
INFO  17:24:07,774 - Deklarisan globalni niz 'niz' na liniji 9
INFO  17:24:07,774 - Deklarisan globalni niz 'nizch' na liniji 10
INFO  17:24:07,774 - Deklarisana promenljiva 'bodovi' na liniji 14
INFO  17:24:07,774 - Deklarisana promenljiva 'bt' na liniji 15
INFO  17:24:07,774 - Pristup elementu niza 'niz' na liniji 26
INFO  17:24:07,774 - Pristup elementu niza 'niz' na liniji 27
INFO  17:24:07,774 - Pristup elementu niza 'niz' na liniji 28
INFO  17:24:07,774 - Pristup elementu niza 'niz' na liniji 28
INFO  17:24:07,774 - Pristup elementu niza 'niz' na liniji 28
INFO  17:24:07,774 - Pristup elementu niza 'niz' na liniji 28
INFO  17:24:07,774 - Pristup elementu niza 'niz' na liniji 29
INFO  17:24:07,775 - Pristup elementu niza 'niz' na liniji 29
INFO  17:24:07,775 - Pristup elementu niza 'niz' na liniji 31
INFO  17:24:07,775 - Pristup elementu niza 'nizch' na liniji 35
INFO  17:24:07,775 - Pristup elementu niza 'nizch' na liniji 36
INFO  17:24:07,775 - Pristup elementu niza 'nizch' na liniji 37
INFO  17:24:07,775 - Pristup elementu niza 'nizch' na liniji 38
INFO  17:24:07,775 - Pristup elementu niza 'nizch' na liniji 39
INFO  17:24:07,776 - ===================================
INFO  17:24:07,776 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  17:24:07,782 - Parsiranje uspesno zavrseno!
INFO  17:44:57,244 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  17:44:57,293 - #2 program
INFO  17:44:57,293 - #20 test302
INFO  17:44:57,293 - #7 const
INFO  17:44:57,294 - #20 int
INFO  17:44:57,294 - #20 jedan
INFO  17:44:57,294 - #37 =
INFO  17:44:57,295 - #21 1
INFO  17:44:57,295 - #40 ;
INFO  17:44:57,295 - #20 int
INFO  17:44:57,296 - #20 i
INFO  17:44:57,296 - #40 ;
INFO  17:44:57,296 - #20 bool
INFO  17:44:57,296 - #20 ibool
INFO  17:44:57,296 - #40 ;
INFO  17:44:57,296 - #20 int
INFO  17:44:57,296 - #20 niz
INFO  17:44:57,296 - #45 [
INFO  17:44:57,297 - #46 ]
INFO  17:44:57,297 - #40 ;
INFO  17:44:57,297 - #47 {
INFO  17:44:57,297 - #20 int
INFO  17:44:57,297 - #20 sum
INFO  17:44:57,297 - #43 (
INFO  17:44:57,297 - #20 int
INFO  17:44:57,297 - #20 z
INFO  17:44:57,297 - #41 ,
INFO  17:44:57,298 - #20 int
INFO  17:44:57,298 - #20 d
INFO  17:44:57,298 - #44 )
INFO  17:44:57,298 - #47 {
INFO  17:44:57,298 - #15 return
INFO  17:44:57,298 - #20 z
INFO  17:44:57,298 - #24 +
INFO  17:44:57,299 - #20 d
INFO  17:44:57,299 - #40 ;
INFO  17:44:57,300 - #48 }
INFO  17:44:57,300 - #20 int
INFO  17:44:57,300 - #20 inkrement
INFO  17:44:57,300 - #43 (
INFO  17:44:57,300 - #20 int
INFO  17:44:57,300 - #20 a
INFO  17:44:57,300 - #41 ,
INFO  17:44:57,300 - #20 int
INFO  17:44:57,300 - #20 inc
INFO  17:44:57,301 - #44 )
INFO  17:44:57,301 - #20 int
INFO  17:44:57,301 - #20 pom
INFO  17:44:57,301 - #40 ;
INFO  17:44:57,301 - #47 {
INFO  17:44:57,301 - #8 if
INFO  17:44:57,302 - #43 (
INFO  17:44:57,303 - #20 inc
INFO  17:44:57,303 - #29 ==
INFO  17:44:57,303 - #20 jedan
INFO  17:44:57,304 - #44 )
INFO  17:44:57,304 - #20 pom
INFO  17:44:57,304 - #37 =
INFO  17:44:57,304 - #21 1
INFO  17:44:57,305 - #40 ;
INFO  17:44:57,305 - #6 else
INFO  17:44:57,305 - #8 if
INFO  17:44:57,305 - #43 (
INFO  17:44:57,305 - #20 inc
INFO  17:44:57,306 - #29 ==
INFO  17:44:57,306 - #21 2
INFO  17:44:57,306 - #44 )
INFO  17:44:57,306 - #20 pom
INFO  17:44:57,306 - #37 =
INFO  17:44:57,306 - #20 a
INFO  17:44:57,306 - #40 ;
INFO  17:44:57,306 - #15 return
INFO  17:44:57,306 - #20 sum
INFO  17:44:57,306 - #43 (
INFO  17:44:57,307 - #20 a
INFO  17:44:57,307 - #41 ,
INFO  17:44:57,307 - #20 pom
INFO  17:44:57,307 - #44 )
INFO  17:44:57,307 - #40 ;
INFO  17:44:57,307 - #48 }
INFO  17:44:57,307 - #20 bool
INFO  17:44:57,308 - #20 verify
INFO  17:44:57,308 - #43 (
INFO  17:44:57,308 - #44 )
INFO  17:44:57,308 - #47 {
INFO  17:44:57,308 - #13 print
INFO  17:44:57,308 - #43 (
INFO  17:44:57,308 - #22 v
INFO  17:44:57,308 - #44 )
INFO  17:44:57,308 - #40 ;
INFO  17:44:57,308 - #15 return
INFO  17:44:57,309 - #23 false
INFO  17:44:57,309 - #40 ;
INFO  17:44:57,309 - #48 }
INFO  17:44:57,309 - #16 void
INFO  17:44:57,309 - #20 main
INFO  17:44:57,309 - #43 (
INFO  17:44:57,309 - #44 )
INFO  17:44:57,309 - #47 {
INFO  17:44:57,309 - #8 if
INFO  17:44:57,310 - #43 (
INFO  17:44:57,310 - #21 1
INFO  17:44:57,310 - #30 !=
INFO  17:44:57,310 - #21 1
INFO  17:44:57,310 - #44 )
INFO  17:44:57,310 - #13 print
INFO  17:44:57,310 - #43 (
INFO  17:44:57,311 - #25 -
INFO  17:44:57,311 - #21 6
INFO  17:44:57,311 - #44 )
INFO  17:44:57,311 - #40 ;
INFO  17:44:57,311 - #6 else
INFO  17:44:57,311 - #13 print
INFO  17:44:57,311 - #43 (
INFO  17:44:57,311 - #21 0
INFO  17:44:57,311 - #44 )
INFO  17:44:57,311 - #40 ;
INFO  17:44:57,311 - #20 ibool
INFO  17:44:57,311 - #37 =
INFO  17:44:57,311 - #23 false
INFO  17:44:57,311 - #40 ;
INFO  17:44:57,312 - #20 i
INFO  17:44:57,312 - #37 =
INFO  17:44:57,312 - #21 0
INFO  17:44:57,312 - #40 ;
INFO  17:44:57,312 - #10 do
INFO  17:44:57,312 - #47 {
INFO  17:44:57,313 - #8 if
INFO  17:44:57,313 - #43 (
INFO  17:44:57,313 - #20 i
INFO  17:44:57,313 - #29 ==
INFO  17:44:57,313 - #21 2
INFO  17:44:57,314 - #44 )
INFO  17:44:57,314 - #20 ibool
INFO  17:44:57,314 - #37 =
INFO  17:44:57,314 - #23 true
INFO  17:44:57,314 - #40 ;
INFO  17:44:57,314 - #20 i
INFO  17:44:57,314 - #38 ++
INFO  17:44:57,314 - #40 ;
INFO  17:44:57,314 - #48 }
INFO  17:44:57,314 - #11 while
INFO  17:44:57,314 - #43 (
INFO  17:44:57,314 - #20 i
INFO  17:44:57,314 - #33 <
INFO  17:44:57,314 - #21 5
INFO  17:44:57,315 - #44 )
INFO  17:44:57,315 - #40 ;
INFO  17:44:57,315 - #8 if
INFO  17:44:57,315 - #43 (
INFO  17:44:57,318 - #20 ibool
INFO  17:44:57,319 - #44 )
INFO  17:44:57,319 - #8 if
INFO  17:44:57,319 - #43 (
INFO  17:44:57,319 - #20 i
INFO  17:44:57,319 - #29 ==
INFO  17:44:57,319 - #21 5
INFO  17:44:57,319 - #44 )
INFO  17:44:57,319 - #13 print
INFO  17:44:57,319 - #43 (
INFO  17:44:57,319 - #21 1
INFO  17:44:57,319 - #44 )
INFO  17:44:57,319 - #40 ;
INFO  17:44:57,319 - #6 else
INFO  17:44:57,319 - #13 print
INFO  17:44:57,320 - #43 (
INFO  17:44:57,320 - #25 -
INFO  17:44:57,320 - #21 1
INFO  17:44:57,320 - #44 )
INFO  17:44:57,320 - #40 ;
INFO  17:44:57,320 - #20 niz
INFO  17:44:57,320 - #37 =
INFO  17:44:57,320 - #12 new
INFO  17:44:57,320 - #20 int
INFO  17:44:57,320 - #45 [
INFO  17:44:57,320 - #21 3
INFO  17:44:57,320 - #46 ]
INFO  17:44:57,320 - #40 ;
INFO  17:44:57,320 - #20 niz
INFO  17:44:57,320 - #45 [
INFO  17:44:57,321 - #21 0
INFO  17:44:57,321 - #46 ]
INFO  17:44:57,321 - #37 =
INFO  17:44:57,321 - #21 1
INFO  17:44:57,321 - #40 ;
INFO  17:44:57,321 - #20 niz
INFO  17:44:57,321 - #45 [
INFO  17:44:57,321 - #21 1
INFO  17:44:57,321 - #46 ]
INFO  17:44:57,321 - #37 =
INFO  17:44:57,321 - #21 2
INFO  17:44:57,321 - #40 ;
INFO  17:44:57,321 - #20 niz
INFO  17:44:57,321 - #45 [
INFO  17:44:57,321 - #21 2
INFO  17:44:57,321 - #46 ]
INFO  17:44:57,322 - #37 =
INFO  17:44:57,322 - #20 sum
INFO  17:44:57,322 - #43 (
INFO  17:44:57,322 - #20 niz
INFO  17:44:57,322 - #45 [
INFO  17:44:57,322 - #21 1
INFO  17:44:57,322 - #46 ]
INFO  17:44:57,322 - #41 ,
INFO  17:44:57,322 - #20 niz
INFO  17:44:57,322 - #45 [
INFO  17:44:57,322 - #21 0
INFO  17:44:57,322 - #46 ]
INFO  17:44:57,322 - #44 )
INFO  17:44:57,322 - #24 +
INFO  17:44:57,322 - #21 1
INFO  17:44:57,322 - #40 ;
INFO  17:44:57,322 - #8 if
INFO  17:44:57,322 - #43 (
INFO  17:44:57,322 - #20 verify
INFO  17:44:57,322 - #43 (
INFO  17:44:57,322 - #44 )
INFO  17:44:57,322 - #36 ||
INFO  17:44:57,322 - #20 niz
INFO  17:44:57,322 - #45 [
INFO  17:44:57,322 - #21 2
INFO  17:44:57,323 - #46 ]
INFO  17:44:57,323 - #29 ==
INFO  17:44:57,323 - #21 4
INFO  17:44:57,323 - #44 )
INFO  17:44:57,323 - #13 print
INFO  17:44:57,323 - #43 (
INFO  17:44:57,323 - #20 ord
INFO  17:44:57,323 - #43 (
INFO  17:44:57,323 - #22 A
INFO  17:44:57,323 - #44 )
INFO  17:44:57,323 - #44 )
INFO  17:44:57,323 - #40 ;
INFO  17:44:57,323 - #6 else
INFO  17:44:57,323 - #13 print
INFO  17:44:57,323 - #43 (
INFO  17:44:57,323 - #20 ord
INFO  17:44:57,323 - #43 (
INFO  17:44:57,323 - #22 a
INFO  17:44:57,323 - #44 )
INFO  17:44:57,323 - #44 )
INFO  17:44:57,323 - #40 ;
INFO  17:44:57,323 - #13 print
INFO  17:44:57,324 - #43 (
INFO  17:44:57,324 - #20 eol
INFO  17:44:57,324 - #44 )
INFO  17:44:57,324 - #40 ;
INFO  17:44:57,324 - #20 i
INFO  17:44:57,324 - #37 =
INFO  17:44:57,324 - #21 0
INFO  17:44:57,324 - #40 ;
INFO  17:44:57,324 - #10 do
INFO  17:44:57,324 - #47 {
INFO  17:44:57,324 - #8 if
INFO  17:44:57,324 - #43 (
INFO  17:44:57,324 - #20 i
INFO  17:44:57,324 - #29 ==
INFO  17:44:57,324 - #21 3
INFO  17:44:57,324 - #44 )
INFO  17:44:57,324 - #47 {
INFO  17:44:57,324 - #20 i
INFO  17:44:57,324 - #38 ++
INFO  17:44:57,324 - #40 ;
INFO  17:44:57,324 - #18 continue
INFO  17:44:57,324 - #40 ;
INFO  17:44:57,324 - #48 }
INFO  17:44:57,325 - #8 if
INFO  17:44:57,325 - #43 (
INFO  17:44:57,325 - #20 i
INFO  17:44:57,325 - #29 ==
INFO  17:44:57,325 - #21 4
INFO  17:44:57,325 - #44 )
INFO  17:44:57,325 - #3 break
INFO  17:44:57,325 - #40 ;
INFO  17:44:57,325 - #20 i
INFO  17:44:57,326 - #37 =
INFO  17:44:57,326 - #20 inkrement
INFO  17:44:57,326 - #43 (
INFO  17:44:57,326 - #20 i
INFO  17:44:57,326 - #41 ,
INFO  17:44:57,326 - #21 1
INFO  17:44:57,326 - #44 )
INFO  17:44:57,326 - #40 ;
INFO  17:44:57,326 - #48 }
INFO  17:44:57,327 - #11 while
INFO  17:44:57,327 - #43 (
INFO  17:44:57,327 - #20 i
INFO  17:44:57,327 - #33 <
INFO  17:44:57,327 - #21 10
INFO  17:44:57,327 - #44 )
INFO  17:44:57,327 - #40 ;
INFO  17:44:57,327 - #8 if
INFO  17:44:57,327 - #43 (
INFO  17:44:57,327 - #20 i
INFO  17:44:57,327 - #29 ==
INFO  17:44:57,327 - #21 3
INFO  17:44:57,327 - #35 &&
INFO  17:44:57,327 - #20 verify
INFO  17:44:57,327 - #43 (
INFO  17:44:57,327 - #44 )
INFO  17:44:57,327 - #44 )
INFO  17:44:57,327 - #13 print
INFO  17:44:57,328 - #43 (
INFO  17:44:57,328 - #25 -
INFO  17:44:57,328 - #21 4
INFO  17:44:57,328 - #44 )
INFO  17:44:57,328 - #40 ;
INFO  17:44:57,328 - #6 else
INFO  17:44:57,328 - #13 print
INFO  17:44:57,328 - #43 (
INFO  17:44:57,328 - #21 4
INFO  17:44:57,328 - #44 )
INFO  17:44:57,328 - #40 ;
INFO  17:44:57,328 - #14 read
INFO  17:44:57,328 - #43 (
INFO  17:44:57,328 - #20 niz
INFO  17:44:57,328 - #45 [
INFO  17:44:57,328 - #21 0
INFO  17:44:57,328 - #46 ]
INFO  17:44:57,329 - #44 )
INFO  17:44:57,329 - #40 ;
INFO  17:44:57,329 - #14 read
INFO  17:44:57,329 - #43 (
INFO  17:44:57,329 - #20 niz
INFO  17:44:57,329 - #45 [
INFO  17:44:57,329 - #21 1
INFO  17:44:57,329 - #46 ]
INFO  17:44:57,329 - #44 )
INFO  17:44:57,329 - #40 ;
INFO  17:44:57,329 - #14 read
INFO  17:44:57,329 - #43 (
INFO  17:44:57,329 - #20 niz
INFO  17:44:57,330 - #45 [
INFO  17:44:57,330 - #21 2
INFO  17:44:57,330 - #46 ]
INFO  17:44:57,330 - #44 )
INFO  17:44:57,330 - #40 ;
INFO  17:44:57,330 - #13 print
INFO  17:44:57,330 - #43 (
INFO  17:44:57,330 - #20 eol
INFO  17:44:57,330 - #44 )
INFO  17:44:57,330 - #40 ;
INFO  17:44:57,330 - #13 print
INFO  17:44:57,330 - #43 (
INFO  17:44:57,330 - #20 sum
INFO  17:44:57,330 - #43 (
INFO  17:44:57,330 - #20 sum
INFO  17:44:57,330 - #43 (
INFO  17:44:57,330 - #20 niz
INFO  17:44:57,330 - #45 [
INFO  17:44:57,331 - #21 0
INFO  17:44:57,331 - #46 ]
INFO  17:44:57,331 - #41 ,
INFO  17:44:57,331 - #20 niz
INFO  17:44:57,331 - #45 [
INFO  17:44:57,331 - #21 1
INFO  17:44:57,331 - #46 ]
INFO  17:44:57,331 - #44 )
INFO  17:44:57,331 - #41 ,
INFO  17:44:57,331 - #20 niz
INFO  17:44:57,331 - #45 [
INFO  17:44:57,331 - #21 2
INFO  17:44:57,331 - #46 ]
INFO  17:44:57,331 - #44 )
INFO  17:44:57,331 - #44 )
INFO  17:44:57,331 - #40 ;
INFO  17:44:57,331 - #13 print
INFO  17:44:57,331 - #43 (
INFO  17:44:57,332 - #20 eol
INFO  17:44:57,332 - #44 )
INFO  17:44:57,332 - #40 ;
INFO  17:44:57,332 - #13 print
INFO  17:44:57,332 - #43 (
INFO  17:44:57,332 - #20 inkrement
INFO  17:44:57,332 - #43 (
INFO  17:44:57,332 - #20 niz
INFO  17:44:57,332 - #45 [
INFO  17:44:57,332 - #21 2
INFO  17:44:57,332 - #46 ]
INFO  17:44:57,332 - #41 ,
INFO  17:44:57,332 - #21 2
INFO  17:44:57,332 - #44 )
INFO  17:44:57,332 - #44 )
INFO  17:44:57,332 - #40 ;
INFO  17:44:57,332 - #13 print
INFO  17:44:57,332 - #43 (
INFO  17:44:57,333 - #20 verify
INFO  17:44:57,333 - #43 (
INFO  17:44:57,333 - #44 )
INFO  17:44:57,333 - #49 ?
INFO  17:44:57,333 - #22 t
INFO  17:44:57,333 - #50 :
INFO  17:44:57,333 - #22 f
INFO  17:44:57,333 - #44 )
INFO  17:44:57,333 - #40 ;
INFO  17:44:57,333 - #48 }
INFO  17:44:57,334 - #48 }
INFO  17:44:57,334 - 

================SINTAKSNO STABLO====================


INFO  17:44:57,342 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclMulti(
          ProgramDeclEps(
          ) [ProgramDeclEps]
          PartConstDeclaration(
            ConstDeclaration(
              Type(
               int
              ) [Type]
              ConstSingle(
                ConstPart(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [ConstPart]
              ) [ConstSingle]
            ) [ConstDeclaration]
          ) [PartConstDeclaration]
        ) [ProgramDeclMulti]
        PartVarDeclaration(
          GlobalVarDeclaration(
            Type(
             int
            ) [Type]
            GlobalVarSingle(
              GlobalVar(
                VarNormal(
                 i
                ) [VarNormal]
              ) [GlobalVar]
            ) [GlobalVarSingle]
          ) [GlobalVarDeclaration]
        ) [PartVarDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           bool
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               ibool
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDecMulti(
        MethodDeclSingle(
          MethodTypeDeclaration(
            MethodType2(
              MethodTypeName(
                Type(
                 int
                ) [Type]
               sum
              ) [MethodTypeName]
              ParamMulti(
                ParamSingle(
                  ParamNormal(
                    Type(
                     int
                    ) [Type]
                   z
                  ) [ParamNormal]
                ) [ParamSingle]
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 d
                ) [ParamNormal]
              ) [ParamMulti]
              StatementSingle(
                StmtReturnExpr(
                  ExprOne(
                    ExprAddop(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             z
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                      AddopPlus(
                      ) [AddopPlus]
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           d
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprAddop]
                  ) [ExprOne]
                ) [StmtReturnExpr]
              ) [StatementSingle]
            ) [MethodType2]
          ) [MethodTypeDeclaration]
        ) [MethodDeclSingle]
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             inkrement
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 a
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               inc
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   pom
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementMulti(
              StatementSingle(
                StmtIfElse(
                  IfKeyword(
                  ) [IfKeyword]
                  StmtIfBody(
                    IfCond(
                      CondSingle(
                        CondTermSingle(
                          CondFactRelop(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     inc
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                            RelopEQ(
                            ) [RelopEQ]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     jedan
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactRelop]
                        ) [CondTermSingle]
                      ) [CondSingle]
                    ) [IfCond]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         pom
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StmtIfBody]
                  StmtIf(
                    IfKeyword(
                    ) [IfKeyword]
                    StmtIfBody(
                      IfCond(
                        CondSingle(
                          CondTermSingle(
                            CondFactRelop(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       inc
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                              RelopEQ(
                              ) [RelopEQ]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [CondFactRelop]
                          ) [CondTermSingle]
                        ) [CondSingle]
                      ) [IfCond]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           pom
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     a
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StmtIfBody]
                  ) [StmtIf]
                ) [StmtIfElse]
              ) [StatementSingle]
              StmtReturnExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FuncCallParams(
                        DesignatorSimple(
                         sum
                        ) [DesignatorSimple]
                        ActParsMulti(
                          ActParsSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     a
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsSingle]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   pom
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [ActParsMulti]
                      ) [FuncCallParams]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementMulti]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDecMulti]
      MethodTypeDeclaration(
        MethodType6(
          MethodTypeName(
            Type(
             bool
            ) [Type]
           verify
          ) [MethodTypeName]
          StatementMulti(
            StatementSingle(
              StmtPrint(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorCharConst(
                       v
                      ) [FactorCharConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtPrint]
            ) [StatementSingle]
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorBoolConst(
                     false
                    ) [FactorBoolConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementMulti]
        ) [MethodType6]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementMulti(
                                                  StatementSingle(
                                                    StmtIfElse(
                                                      IfKeyword(
                                                      ) [IfKeyword]
                                                      StmtIfBody(
                                                        IfCond(
                                                          CondSingle(
                                                            CondTermSingle(
                                                              CondFactRelop(
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       1
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                                RelopNE(
                                                                ) [RelopNE]
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       1
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                              ) [CondFactRelop]
                                                            ) [CondTermSingle]
                                                          ) [CondSingle]
                                                        ) [IfCond]
                                                        StmtPrint(
                                                          ExprOne(
                                                            ExprNeg(
                                                              TermSingle(
                                                                FactorNumConst(
                                                                 6
                                                                ) [FactorNumConst]
                                                              ) [TermSingle]
                                                            ) [ExprNeg]
                                                          ) [ExprOne]
                                                        ) [StmtPrint]
                                                      ) [StmtIfBody]
                                                      StmtPrint(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               0
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [StmtPrint]
                                                    ) [StmtIfElse]
                                                  ) [StatementSingle]
                                                  StmtDesign(
                                                    DesignatorAssignment(
                                                      DesignatorSimple(
                                                       ibool
                                                      ) [DesignatorSimple]
                                                      AssignmentExpr(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorBoolConst(
                                                               false
                                                              ) [FactorBoolConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [AssignmentExpr]
                                                    ) [DesignatorAssignment]
                                                  ) [StmtDesign]
                                                ) [StatementMulti]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     i
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             0
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDoWhile(
                                                DoKeyword(
                                                ) [DoKeyword]
                                                StmtWhileBody(
                                                  Stmt(
                                                    StatementMulti(
                                                      StatementSingle(
                                                        StmtIf(
                                                          IfKeyword(
                                                          ) [IfKeyword]
                                                          StmtIfBody(
                                                            IfCond(
                                                              CondSingle(
                                                                CondTermSingle(
                                                                  CondFactRelop(
                                                                    ExprOne(
                                                                      ExprSingle(
                                                                        TermSingle(
                                                                          FactorDesignator(
                                                                            DesignatorSimple(
                                                                             i
                                                                            ) [DesignatorSimple]
                                                                          ) [FactorDesignator]
                                                                        ) [TermSingle]
                                                                      ) [ExprSingle]
                                                                    ) [ExprOne]
                                                                    RelopEQ(
                                                                    ) [RelopEQ]
                                                                    ExprOne(
                                                                      ExprSingle(
                                                                        TermSingle(
                                                                          FactorNumConst(
                                                                           2
                                                                          ) [FactorNumConst]
                                                                        ) [TermSingle]
                                                                      ) [ExprSingle]
                                                                    ) [ExprOne]
                                                                  ) [CondFactRelop]
                                                                ) [CondTermSingle]
                                                              ) [CondSingle]
                                                            ) [IfCond]
                                                            StmtDesign(
                                                              DesignatorAssignment(
                                                                DesignatorSimple(
                                                                 ibool
                                                                ) [DesignatorSimple]
                                                                AssignmentExpr(
                                                                  ExprOne(
                                                                    ExprSingle(
                                                                      TermSingle(
                                                                        FactorBoolConst(
                                                                         true
                                                                        ) [FactorBoolConst]
                                                                      ) [TermSingle]
                                                                    ) [ExprSingle]
                                                                  ) [ExprOne]
                                                                ) [AssignmentExpr]
                                                              ) [DesignatorAssignment]
                                                            ) [StmtDesign]
                                                          ) [StmtIfBody]
                                                        ) [StmtIf]
                                                      ) [StatementSingle]
                                                      StmtDesign(
                                                        DesignatorIncrement(
                                                          DesignatorSimple(
                                                           i
                                                          ) [DesignatorSimple]
                                                        ) [DesignatorIncrement]
                                                      ) [StmtDesign]
                                                    ) [StatementMulti]
                                                  ) [Stmt]
                                                ) [StmtWhileBody]
                                                CondSingle(
                                                  CondTermSingle(
                                                    CondFactRelop(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorDesignator(
                                                              DesignatorSimple(
                                                               i
                                                              ) [DesignatorSimple]
                                                            ) [FactorDesignator]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                      RelopLT(
                                                      ) [RelopLT]
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             5
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [CondFactRelop]
                                                  ) [CondTermSingle]
                                                ) [CondSingle]
                                              ) [StmtDoWhile]
                                            ) [StatementMulti]
                                            StmtIf(
                                              IfKeyword(
                                              ) [IfKeyword]
                                              StmtIfBody(
                                                IfCond(
                                                  CondSingle(
                                                    CondTermSingle(
                                                      CondFactSingle(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorDesignator(
                                                                DesignatorSimple(
                                                                 ibool
                                                                ) [DesignatorSimple]
                                                              ) [FactorDesignator]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [CondFactSingle]
                                                    ) [CondTermSingle]
                                                  ) [CondSingle]
                                                ) [IfCond]
                                                StmtIfElse(
                                                  IfKeyword(
                                                  ) [IfKeyword]
                                                  StmtIfBody(
                                                    IfCond(
                                                      CondSingle(
                                                        CondTermSingle(
                                                          CondFactRelop(
                                                            ExprOne(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorDesignator(
                                                                    DesignatorSimple(
                                                                     i
                                                                    ) [DesignatorSimple]
                                                                  ) [FactorDesignator]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [ExprOne]
                                                            RelopEQ(
                                                            ) [RelopEQ]
                                                            ExprOne(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorNumConst(
                                                                   5
                                                                  ) [FactorNumConst]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [ExprOne]
                                                          ) [CondFactRelop]
                                                        ) [CondTermSingle]
                                                      ) [CondSingle]
                                                    ) [IfCond]
                                                    StmtPrint(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             1
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [StmtPrint]
                                                  ) [StmtIfBody]
                                                  StmtPrint(
                                                    ExprOne(
                                                      ExprNeg(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           1
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprNeg]
                                                    ) [ExprOne]
                                                  ) [StmtPrint]
                                                ) [StmtIfElse]
                                              ) [StmtIfBody]
                                            ) [StmtIf]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               niz
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNewArray(
                                                        Type(
                                                         int
                                                        ) [Type]
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               3
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [FactorNewArray]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorArray(
                                             niz
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     0
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [DesignatorArray]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     1
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorArray(
                                           niz
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   1
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [DesignatorArray]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   2
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorArray(
                                         niz
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 2
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [DesignatorArray]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprAddop(
                                              ExprSingle(
                                                TermSingle(
                                                  FuncCallParams(
                                                    DesignatorSimple(
                                                     sum
                                                    ) [DesignatorSimple]
                                                    ActParsMulti(
                                                      ActParsSingle(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorDesignator(
                                                                DesignatorArray(
                                                                 niz
                                                                  ExprOne(
                                                                    ExprSingle(
                                                                      TermSingle(
                                                                        FactorNumConst(
                                                                         1
                                                                        ) [FactorNumConst]
                                                                      ) [TermSingle]
                                                                    ) [ExprSingle]
                                                                  ) [ExprOne]
                                                                ) [DesignatorArray]
                                                              ) [FactorDesignator]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [ActParsSingle]
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorDesignator(
                                                              DesignatorArray(
                                                               niz
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       0
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                              ) [DesignatorArray]
                                                            ) [FactorDesignator]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [ActParsMulti]
                                                  ) [FuncCallParams]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                              AddopPlus(
                                              ) [AddopPlus]
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprAddop]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtIfElse(
                                    IfKeyword(
                                    ) [IfKeyword]
                                    StmtIfBody(
                                      IfCond(
                                        CondOr(
                                          CondSingle(
                                            CondTermSingle(
                                              CondFactSingle(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FuncCall(
                                                        DesignatorSimple(
                                                         verify
                                                        ) [DesignatorSimple]
                                                      ) [FuncCall]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [CondFactSingle]
                                            ) [CondTermSingle]
                                          ) [CondSingle]
                                          CondTermSingle(
                                            CondFactRelop(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorDesignator(
                                                      DesignatorArray(
                                                       niz
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               2
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [DesignatorArray]
                                                    ) [FactorDesignator]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                              RelopEQ(
                                              ) [RelopEQ]
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     4
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [CondFactRelop]
                                          ) [CondTermSingle]
                                        ) [CondOr]
                                      ) [IfCond]
                                      StmtPrint(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FuncCallParams(
                                                DesignatorSimple(
                                                 ord
                                                ) [DesignatorSimple]
                                                ActParsSingle(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorCharConst(
                                                         A
                                                        ) [FactorCharConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [ActParsSingle]
                                              ) [FuncCallParams]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [StmtPrint]
                                    ) [StmtIfBody]
                                    StmtPrint(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FuncCallParams(
                                              DesignatorSimple(
                                               ord
                                              ) [DesignatorSimple]
                                              ActParsSingle(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorCharConst(
                                                       a
                                                      ) [FactorCharConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [ActParsSingle]
                                            ) [FuncCallParams]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [StmtPrint]
                                  ) [StmtIfElse]
                                ) [StatementMulti]
                                StmtPrint(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorSimple(
                                           eol
                                          ) [DesignatorSimple]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [StmtPrint]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   i
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           0
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDoWhile(
                              DoKeyword(
                              ) [DoKeyword]
                              StmtWhileBody(
                                Stmt(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementSingle(
                                        StmtIf(
                                          IfKeyword(
                                          ) [IfKeyword]
                                          StmtIfBody(
                                            IfCond(
                                              CondSingle(
                                                CondTermSingle(
                                                  CondFactRelop(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorDesignator(
                                                            DesignatorSimple(
                                                             i
                                                            ) [DesignatorSimple]
                                                          ) [FactorDesignator]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                    RelopEQ(
                                                    ) [RelopEQ]
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           3
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [CondFactRelop]
                                                ) [CondTermSingle]
                                              ) [CondSingle]
                                            ) [IfCond]
                                            Stmt(
                                              StatementMulti(
                                                StatementSingle(
                                                  StmtDesign(
                                                    DesignatorIncrement(
                                                      DesignatorSimple(
                                                       i
                                                      ) [DesignatorSimple]
                                                    ) [DesignatorIncrement]
                                                  ) [StmtDesign]
                                                ) [StatementSingle]
                                                StmtContinue(
                                                ) [StmtContinue]
                                              ) [StatementMulti]
                                            ) [Stmt]
                                          ) [StmtIfBody]
                                        ) [StmtIf]
                                      ) [StatementSingle]
                                      StmtIf(
                                        IfKeyword(
                                        ) [IfKeyword]
                                        StmtIfBody(
                                          IfCond(
                                            CondSingle(
                                              CondTermSingle(
                                                CondFactRelop(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorSimple(
                                                           i
                                                          ) [DesignatorSimple]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                  RelopEQ(
                                                  ) [RelopEQ]
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         4
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [CondFactRelop]
                                              ) [CondTermSingle]
                                            ) [CondSingle]
                                          ) [IfCond]
                                          StmtBreak(
                                          ) [StmtBreak]
                                        ) [StmtIfBody]
                                      ) [StmtIf]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         i
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FuncCallParams(
                                                  DesignatorSimple(
                                                   inkrement
                                                  ) [DesignatorSimple]
                                                  ActParsMulti(
                                                    ActParsSingle(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorDesignator(
                                                              DesignatorSimple(
                                                               i
                                                              ) [DesignatorSimple]
                                                            ) [FactorDesignator]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [ActParsSingle]
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           1
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [ActParsMulti]
                                                ) [FuncCallParams]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                ) [Stmt]
                              ) [StmtWhileBody]
                              CondSingle(
                                CondTermSingle(
                                  CondFactRelop(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorSimple(
                                             i
                                            ) [DesignatorSimple]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                    RelopLT(
                                    ) [RelopLT]
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           10
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [CondFactRelop]
                                ) [CondTermSingle]
                              ) [CondSingle]
                            ) [StmtDoWhile]
                          ) [StatementMulti]
                          StmtIfElse(
                            IfKeyword(
                            ) [IfKeyword]
                            StmtIfBody(
                              IfCond(
                                CondSingle(
                                  CondTermAnd(
                                    CondTermSingle(
                                      CondFactRelop(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorDesignator(
                                                DesignatorSimple(
                                                 i
                                                ) [DesignatorSimple]
                                              ) [FactorDesignator]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                        RelopEQ(
                                        ) [RelopEQ]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               3
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [CondFactRelop]
                                    ) [CondTermSingle]
                                    CondFactSingle(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FuncCall(
                                              DesignatorSimple(
                                               verify
                                              ) [DesignatorSimple]
                                            ) [FuncCall]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [CondFactSingle]
                                  ) [CondTermAnd]
                                ) [CondSingle]
                              ) [IfCond]
                              StmtPrint(
                                ExprOne(
                                  ExprNeg(
                                    TermSingle(
                                      FactorNumConst(
                                       4
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprNeg]
                                ) [ExprOne]
                              ) [StmtPrint]
                            ) [StmtIfBody]
                            StmtPrint(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     4
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [StmtPrint]
                          ) [StmtIfElse]
                        ) [StatementMulti]
                        StmtRead(
                          DesignatorArray(
                           niz
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   0
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [DesignatorArray]
                        ) [StmtRead]
                      ) [StatementMulti]
                      StmtRead(
                        DesignatorArray(
                         niz
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [DesignatorArray]
                      ) [StmtRead]
                    ) [StatementMulti]
                    StmtRead(
                      DesignatorArray(
                       niz
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [DesignatorArray]
                    ) [StmtRead]
                  ) [StatementMulti]
                  StmtPrint(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             eol
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [StmtPrint]
                ) [StatementMulti]
                StmtPrint(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           sum
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FuncCallParams(
                                      DesignatorSimple(
                                       sum
                                      ) [DesignatorSimple]
                                      ActParsMulti(
                                        ActParsSingle(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorDesignator(
                                                  DesignatorArray(
                                                   niz
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           0
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [DesignatorArray]
                                                ) [FactorDesignator]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [ActParsSingle]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorDesignator(
                                                DesignatorArray(
                                                 niz
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [DesignatorArray]
                                              ) [FactorDesignator]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [ActParsMulti]
                                    ) [FuncCallParams]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorArray(
                                     niz
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             2
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [DesignatorArray]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [StmtPrint]
              ) [StatementMulti]
              StmtPrint(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         eol
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtPrint]
            ) [StatementMulti]
            StmtPrint(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FuncCallParams(
                      DesignatorSimple(
                       inkrement
                      ) [DesignatorSimple]
                      ActParsMulti(
                        ActParsSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorArray(
                                   niz
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           2
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [DesignatorArray]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [ActParsSingle]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [ActParsMulti]
                    ) [FuncCallParams]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtPrint]
          ) [StatementMulti]
          StmtPrint(
            ExprTernary(
              TernaryCond(
                ExprSingle(
                  TermSingle(
                    FuncCall(
                      DesignatorSimple(
                       verify
                      ) [DesignatorSimple]
                    ) [FuncCall]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TernaryCond]
              TerExpr1(
                ExprSingle(
                  TermSingle(
                    FactorCharConst(
                     t
                    ) [FactorCharConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TerExpr1]
              TerExpr2(
                ExprSingle(
                  TermSingle(
                    FactorCharConst(
                     f
                    ) [FactorCharConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TerExpr2]
            ) [ExprTernary]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  17:44:57,346 - 

================SEMANTICKA OBRADA====================


INFO  17:44:57,356 - Deklarisana konstanta 'jedan' na liniji 5
INFO  17:44:57,357 - Deklarisana globalna promenljiva 'i' na liniji 7
INFO  17:44:57,357 - Deklarisana globalna promenljiva 'ibool' na liniji 8
INFO  17:44:57,357 - Deklarisan globalni niz 'niz' na liniji 10
INFO  17:44:57,357 - Formalni parametar funkcije sum: 'z' na liniji 14
INFO  17:44:57,357 - Formalni parametar funkcije sum: 'd' na liniji 14
INFO  17:44:57,357 - Formalni parametar funkcije inkrement: 'a' na liniji 19
INFO  17:44:57,358 - Formalni parametar funkcije inkrement: 'inc' na liniji 19
INFO  17:44:57,358 - Deklarisana promenljiva 'pom' na liniji 20
INFO  17:44:57,358 - Pronadjen poziv funkcije 'sum' na liniji 25
INFO  17:44:57,359 - Pristup elementu niza 'niz' na liniji 50
INFO  17:44:57,359 - Pristup elementu niza 'niz' na liniji 51
INFO  17:44:57,359 - Pristup elementu niza 'niz' na liniji 52
INFO  17:44:57,359 - Pristup elementu niza 'niz' na liniji 52
INFO  17:44:57,359 - Pristup elementu niza 'niz' na liniji 52
INFO  17:44:57,359 - Pronadjen poziv funkcije 'sum' na liniji 52
INFO  17:44:57,359 - Pronadjen poziv funkcije 'verify' na liniji 53
INFO  17:44:57,359 - Pristup elementu niza 'niz' na liniji 53
INFO  17:44:57,359 - Pronadjen poziv funkcije 'ord' na liniji 53
INFO  17:44:57,359 - Pronadjen poziv funkcije 'ord' na liniji 54
INFO  17:44:57,360 - Pronadjen poziv funkcije 'inkrement' na liniji 65
INFO  17:44:57,360 - Pronadjen poziv funkcije 'verify' na liniji 68
INFO  17:44:57,360 - Pristup elementu niza 'niz' na liniji 71
INFO  17:44:57,360 - Pristup elementu niza 'niz' na liniji 72
INFO  17:44:57,360 - Pristup elementu niza 'niz' na liniji 73
INFO  17:44:57,360 - Pristup elementu niza 'niz' na liniji 76
INFO  17:44:57,360 - Pristup elementu niza 'niz' na liniji 76
INFO  17:44:57,360 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  17:44:57,360 - Pristup elementu niza 'niz' na liniji 76
INFO  17:44:57,360 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  17:44:57,360 - Pristup elementu niza 'niz' na liniji 79
INFO  17:44:57,360 - Pronadjen poziv funkcije 'inkrement' na liniji 79
INFO  17:44:57,360 - Pronadjen poziv funkcije 'verify' na liniji 81
INFO  17:44:57,362 - ===================================
INFO  17:44:57,362 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  17:44:57,373 - Parsiranje uspesno zavrseno!
INFO  20:45:54,555 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:45:54,602 - #2 program
INFO  20:45:54,602 - #20 test302
INFO  20:45:54,602 - #7 const
INFO  20:45:54,602 - #20 int
INFO  20:45:54,602 - #20 jedan
INFO  20:45:54,602 - #37 =
INFO  20:45:54,602 - #21 1
INFO  20:45:54,602 - #40 ;
INFO  20:45:54,602 - #20 int
INFO  20:45:54,602 - #20 i
INFO  20:45:54,602 - #40 ;
INFO  20:45:54,602 - #20 bool
INFO  20:45:54,618 - #20 ibool
INFO  20:45:54,618 - #40 ;
INFO  20:45:54,618 - #20 int
INFO  20:45:54,618 - #20 niz
INFO  20:45:54,618 - #45 [
INFO  20:45:54,618 - #46 ]
INFO  20:45:54,618 - #40 ;
INFO  20:45:54,618 - #47 {
INFO  20:45:54,618 - #20 int
INFO  20:45:54,618 - #20 sum
INFO  20:45:54,618 - #43 (
INFO  20:45:54,618 - #20 int
INFO  20:45:54,618 - #20 z
INFO  20:45:54,618 - #41 ,
INFO  20:45:54,618 - #20 int
INFO  20:45:54,618 - #20 d
INFO  20:45:54,618 - #44 )
INFO  20:45:54,618 - #47 {
INFO  20:45:54,618 - #15 return
INFO  20:45:54,618 - #20 z
INFO  20:45:54,618 - #24 +
INFO  20:45:54,618 - #20 d
INFO  20:45:54,618 - #40 ;
INFO  20:45:54,618 - #48 }
INFO  20:45:54,618 - #20 int
INFO  20:45:54,618 - #20 inkrement
INFO  20:45:54,618 - #43 (
INFO  20:45:54,618 - #20 int
INFO  20:45:54,618 - #20 a
INFO  20:45:54,618 - #41 ,
INFO  20:45:54,618 - #20 int
INFO  20:45:54,618 - #20 inc
INFO  20:45:54,618 - #44 )
INFO  20:45:54,618 - #20 int
INFO  20:45:54,618 - #20 pom
INFO  20:45:54,618 - #40 ;
INFO  20:45:54,618 - #47 {
INFO  20:45:54,618 - #8 if
INFO  20:45:54,618 - #43 (
INFO  20:45:54,618 - #20 inc
INFO  20:45:54,618 - #29 ==
INFO  20:45:54,618 - #20 jedan
INFO  20:45:54,618 - #44 )
INFO  20:45:54,618 - #20 pom
INFO  20:45:54,618 - #37 =
INFO  20:45:54,618 - #21 1
INFO  20:45:54,618 - #40 ;
INFO  20:45:54,618 - #6 else
INFO  20:45:54,618 - #8 if
INFO  20:45:54,618 - #43 (
INFO  20:45:54,618 - #20 inc
INFO  20:45:54,618 - #29 ==
INFO  20:45:54,618 - #21 2
INFO  20:45:54,618 - #44 )
INFO  20:45:54,618 - #20 pom
INFO  20:45:54,618 - #37 =
INFO  20:45:54,618 - #20 a
INFO  20:45:54,618 - #40 ;
INFO  20:45:54,618 - #15 return
INFO  20:45:54,618 - #20 sum
INFO  20:45:54,618 - #43 (
INFO  20:45:54,618 - #20 a
INFO  20:45:54,618 - #41 ,
INFO  20:45:54,618 - #20 pom
INFO  20:45:54,618 - #44 )
INFO  20:45:54,618 - #40 ;
INFO  20:45:54,618 - #48 }
INFO  20:45:54,618 - #20 bool
INFO  20:45:54,618 - #20 verify
INFO  20:45:54,618 - #43 (
INFO  20:45:54,618 - #44 )
INFO  20:45:54,618 - #47 {
INFO  20:45:54,618 - #13 print
INFO  20:45:54,618 - #43 (
INFO  20:45:54,618 - #22 v
INFO  20:45:54,618 - #44 )
INFO  20:45:54,618 - #40 ;
INFO  20:45:54,618 - #15 return
INFO  20:45:54,618 - #23 false
INFO  20:45:54,618 - #40 ;
INFO  20:45:54,618 - #48 }
INFO  20:45:54,618 - #16 void
INFO  20:45:54,618 - #20 main
INFO  20:45:54,618 - #43 (
INFO  20:45:54,618 - #44 )
INFO  20:45:54,618 - #47 {
INFO  20:45:54,618 - #8 if
INFO  20:45:54,618 - #43 (
INFO  20:45:54,618 - #21 1
INFO  20:45:54,618 - #30 !=
INFO  20:45:54,618 - #21 1
INFO  20:45:54,618 - #44 )
INFO  20:45:54,618 - #13 print
INFO  20:45:54,618 - #43 (
INFO  20:45:54,618 - #25 -
INFO  20:45:54,618 - #21 6
INFO  20:45:54,618 - #44 )
INFO  20:45:54,618 - #40 ;
INFO  20:45:54,618 - #6 else
INFO  20:45:54,618 - #13 print
INFO  20:45:54,618 - #43 (
INFO  20:45:54,618 - #21 0
INFO  20:45:54,618 - #44 )
INFO  20:45:54,618 - #40 ;
INFO  20:45:54,618 - #20 ibool
INFO  20:45:54,618 - #37 =
INFO  20:45:54,618 - #23 false
INFO  20:45:54,618 - #40 ;
INFO  20:45:54,618 - #20 i
INFO  20:45:54,618 - #37 =
INFO  20:45:54,634 - #21 0
INFO  20:45:54,634 - #40 ;
INFO  20:45:54,634 - #10 do
INFO  20:45:54,634 - #47 {
INFO  20:45:54,634 - #8 if
INFO  20:45:54,634 - #43 (
INFO  20:45:54,634 - #20 i
INFO  20:45:54,634 - #29 ==
INFO  20:45:54,634 - #21 2
INFO  20:45:54,634 - #44 )
INFO  20:45:54,634 - #20 ibool
INFO  20:45:54,634 - #37 =
INFO  20:45:54,634 - #23 true
INFO  20:45:54,634 - #40 ;
INFO  20:45:54,634 - #20 i
INFO  20:45:54,634 - #38 ++
INFO  20:45:54,634 - #40 ;
INFO  20:45:54,634 - #48 }
INFO  20:45:54,634 - #11 while
INFO  20:45:54,634 - #43 (
INFO  20:45:54,634 - #20 i
INFO  20:45:54,634 - #33 <
INFO  20:45:54,634 - #21 5
INFO  20:45:54,634 - #44 )
INFO  20:45:54,634 - #40 ;
INFO  20:45:54,634 - #8 if
INFO  20:45:54,634 - #43 (
INFO  20:45:54,634 - #20 ibool
INFO  20:45:54,634 - #44 )
INFO  20:45:54,634 - #8 if
INFO  20:45:54,634 - #43 (
INFO  20:45:54,634 - #20 i
INFO  20:45:54,634 - #29 ==
INFO  20:45:54,634 - #21 5
INFO  20:45:54,634 - #44 )
INFO  20:45:54,634 - #13 print
INFO  20:45:54,634 - #43 (
INFO  20:45:54,634 - #21 1
INFO  20:45:54,634 - #44 )
INFO  20:45:54,634 - #40 ;
INFO  20:45:54,634 - #6 else
INFO  20:45:54,634 - #13 print
INFO  20:45:54,634 - #43 (
INFO  20:45:54,634 - #25 -
INFO  20:45:54,634 - #21 1
INFO  20:45:54,634 - #44 )
INFO  20:45:54,634 - #40 ;
INFO  20:45:54,634 - #20 niz
INFO  20:45:54,634 - #37 =
INFO  20:45:54,634 - #12 new
INFO  20:45:54,634 - #20 int
INFO  20:45:54,634 - #45 [
INFO  20:45:54,634 - #21 3
INFO  20:45:54,634 - #46 ]
INFO  20:45:54,634 - #40 ;
INFO  20:45:54,634 - #20 niz
INFO  20:45:54,634 - #45 [
INFO  20:45:54,634 - #21 0
INFO  20:45:54,634 - #46 ]
INFO  20:45:54,634 - #37 =
INFO  20:45:54,634 - #21 1
INFO  20:45:54,634 - #40 ;
INFO  20:45:54,634 - #20 niz
INFO  20:45:54,634 - #45 [
INFO  20:45:54,634 - #21 1
INFO  20:45:54,634 - #46 ]
INFO  20:45:54,634 - #37 =
INFO  20:45:54,634 - #21 2
INFO  20:45:54,634 - #40 ;
INFO  20:45:54,634 - #20 niz
INFO  20:45:54,634 - #45 [
INFO  20:45:54,634 - #21 2
INFO  20:45:54,634 - #46 ]
INFO  20:45:54,634 - #37 =
INFO  20:45:54,634 - #20 sum
INFO  20:45:54,634 - #43 (
INFO  20:45:54,634 - #20 niz
INFO  20:45:54,634 - #45 [
INFO  20:45:54,634 - #21 1
INFO  20:45:54,634 - #46 ]
INFO  20:45:54,634 - #41 ,
INFO  20:45:54,634 - #20 niz
INFO  20:45:54,634 - #45 [
INFO  20:45:54,634 - #21 0
INFO  20:45:54,634 - #46 ]
INFO  20:45:54,634 - #44 )
INFO  20:45:54,634 - #24 +
INFO  20:45:54,634 - #21 1
INFO  20:45:54,634 - #40 ;
INFO  20:45:54,634 - #8 if
INFO  20:45:54,634 - #43 (
INFO  20:45:54,634 - #20 verify
INFO  20:45:54,634 - #43 (
INFO  20:45:54,634 - #44 )
INFO  20:45:54,634 - #36 ||
INFO  20:45:54,634 - #20 niz
INFO  20:45:54,634 - #45 [
INFO  20:45:54,634 - #21 2
INFO  20:45:54,634 - #46 ]
INFO  20:45:54,634 - #29 ==
INFO  20:45:54,634 - #21 4
INFO  20:45:54,634 - #44 )
INFO  20:45:54,634 - #13 print
INFO  20:45:54,634 - #43 (
INFO  20:45:54,634 - #20 ord
INFO  20:45:54,634 - #43 (
INFO  20:45:54,634 - #22 A
INFO  20:45:54,634 - #44 )
INFO  20:45:54,634 - #44 )
INFO  20:45:54,634 - #40 ;
INFO  20:45:54,634 - #6 else
INFO  20:45:54,634 - #13 print
INFO  20:45:54,634 - #43 (
INFO  20:45:54,634 - #20 ord
INFO  20:45:54,634 - #43 (
INFO  20:45:54,634 - #22 a
INFO  20:45:54,634 - #44 )
INFO  20:45:54,634 - #44 )
INFO  20:45:54,634 - #40 ;
INFO  20:45:54,634 - #13 print
INFO  20:45:54,634 - #43 (
INFO  20:45:54,634 - #20 eol
INFO  20:45:54,634 - #44 )
INFO  20:45:54,634 - #40 ;
INFO  20:45:54,634 - #20 i
INFO  20:45:54,634 - #37 =
INFO  20:45:54,634 - #21 0
INFO  20:45:54,634 - #40 ;
INFO  20:45:54,634 - #10 do
INFO  20:45:54,634 - #47 {
INFO  20:45:54,634 - #8 if
INFO  20:45:54,634 - #43 (
INFO  20:45:54,634 - #20 i
INFO  20:45:54,634 - #29 ==
INFO  20:45:54,634 - #21 3
INFO  20:45:54,634 - #44 )
INFO  20:45:54,634 - #47 {
INFO  20:45:54,634 - #20 i
INFO  20:45:54,634 - #38 ++
INFO  20:45:54,634 - #40 ;
INFO  20:45:54,634 - #18 continue
INFO  20:45:54,634 - #40 ;
INFO  20:45:54,634 - #48 }
INFO  20:45:54,634 - #8 if
INFO  20:45:54,634 - #43 (
INFO  20:45:54,634 - #20 i
INFO  20:45:54,634 - #29 ==
INFO  20:45:54,634 - #21 4
INFO  20:45:54,634 - #44 )
INFO  20:45:54,634 - #3 break
INFO  20:45:54,634 - #40 ;
INFO  20:45:54,634 - #20 i
INFO  20:45:54,634 - #37 =
INFO  20:45:54,634 - #20 inkrement
INFO  20:45:54,634 - #43 (
INFO  20:45:54,634 - #20 i
INFO  20:45:54,634 - #41 ,
INFO  20:45:54,634 - #21 1
INFO  20:45:54,634 - #44 )
INFO  20:45:54,634 - #40 ;
INFO  20:45:54,634 - #48 }
INFO  20:45:54,634 - #11 while
INFO  20:45:54,634 - #43 (
INFO  20:45:54,634 - #20 i
INFO  20:45:54,634 - #33 <
INFO  20:45:54,634 - #21 10
INFO  20:45:54,634 - #44 )
INFO  20:45:54,634 - #40 ;
INFO  20:45:54,634 - #8 if
INFO  20:45:54,634 - #43 (
INFO  20:45:54,634 - #20 i
INFO  20:45:54,634 - #29 ==
INFO  20:45:54,634 - #21 3
INFO  20:45:54,634 - #35 &&
INFO  20:45:54,649 - #20 verify
INFO  20:45:54,649 - #43 (
INFO  20:45:54,649 - #44 )
INFO  20:45:54,649 - #44 )
INFO  20:45:54,649 - #13 print
INFO  20:45:54,649 - #43 (
INFO  20:45:54,649 - #25 -
INFO  20:45:54,649 - #21 4
INFO  20:45:54,649 - #44 )
INFO  20:45:54,649 - #40 ;
INFO  20:45:54,649 - #6 else
INFO  20:45:54,649 - #13 print
INFO  20:45:54,649 - #43 (
INFO  20:45:54,649 - #21 4
INFO  20:45:54,649 - #44 )
INFO  20:45:54,649 - #40 ;
INFO  20:45:54,649 - #14 read
INFO  20:45:54,649 - #43 (
INFO  20:45:54,649 - #20 niz
INFO  20:45:54,649 - #45 [
INFO  20:45:54,649 - #21 0
INFO  20:45:54,649 - #46 ]
INFO  20:45:54,649 - #44 )
INFO  20:45:54,649 - #40 ;
INFO  20:45:54,649 - #14 read
INFO  20:45:54,649 - #43 (
INFO  20:45:54,649 - #20 niz
INFO  20:45:54,649 - #45 [
INFO  20:45:54,649 - #21 1
INFO  20:45:54,649 - #46 ]
INFO  20:45:54,649 - #44 )
INFO  20:45:54,649 - #40 ;
INFO  20:45:54,649 - #14 read
INFO  20:45:54,649 - #43 (
INFO  20:45:54,649 - #20 niz
INFO  20:45:54,649 - #45 [
INFO  20:45:54,649 - #21 2
INFO  20:45:54,649 - #46 ]
INFO  20:45:54,649 - #44 )
INFO  20:45:54,649 - #40 ;
INFO  20:45:54,649 - #13 print
INFO  20:45:54,649 - #43 (
INFO  20:45:54,649 - #20 eol
INFO  20:45:54,649 - #44 )
INFO  20:45:54,649 - #40 ;
INFO  20:45:54,649 - #13 print
INFO  20:45:54,649 - #43 (
INFO  20:45:54,649 - #20 sum
INFO  20:45:54,649 - #43 (
INFO  20:45:54,649 - #20 sum
INFO  20:45:54,649 - #43 (
INFO  20:45:54,649 - #20 niz
INFO  20:45:54,649 - #45 [
INFO  20:45:54,649 - #21 0
INFO  20:45:54,649 - #46 ]
INFO  20:45:54,649 - #41 ,
INFO  20:45:54,649 - #20 niz
INFO  20:45:54,649 - #45 [
INFO  20:45:54,649 - #21 1
INFO  20:45:54,649 - #46 ]
INFO  20:45:54,649 - #44 )
INFO  20:45:54,649 - #41 ,
INFO  20:45:54,649 - #20 niz
INFO  20:45:54,649 - #45 [
INFO  20:45:54,649 - #21 2
INFO  20:45:54,649 - #46 ]
INFO  20:45:54,649 - #44 )
INFO  20:45:54,649 - #44 )
INFO  20:45:54,649 - #40 ;
INFO  20:45:54,649 - #13 print
INFO  20:45:54,649 - #43 (
INFO  20:45:54,649 - #20 eol
INFO  20:45:54,649 - #44 )
INFO  20:45:54,649 - #40 ;
INFO  20:45:54,649 - #13 print
INFO  20:45:54,649 - #43 (
INFO  20:45:54,649 - #20 inkrement
INFO  20:45:54,649 - #43 (
INFO  20:45:54,649 - #20 niz
INFO  20:45:54,649 - #45 [
INFO  20:45:54,649 - #21 2
INFO  20:45:54,649 - #46 ]
INFO  20:45:54,649 - #41 ,
INFO  20:45:54,649 - #21 2
INFO  20:45:54,649 - #44 )
INFO  20:45:54,649 - #44 )
INFO  20:45:54,649 - #40 ;
INFO  20:45:54,649 - #13 print
INFO  20:45:54,649 - #43 (
INFO  20:45:54,649 - #20 verify
INFO  20:45:54,649 - #43 (
INFO  20:45:54,649 - #44 )
INFO  20:45:54,649 - #49 ?
INFO  20:45:54,649 - #22 t
INFO  20:45:54,649 - #50 :
INFO  20:45:54,649 - #22 f
INFO  20:45:54,649 - #44 )
INFO  20:45:54,649 - #40 ;
INFO  20:45:54,649 - #48 }
INFO  20:45:54,649 - #48 }
INFO  20:45:54,656 - 

================SINTAKSNO STABLO====================


INFO  20:45:54,656 - Program(
  ProgName(
   test302
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclMulti(
          ProgramDeclEps(
          ) [ProgramDeclEps]
          PartConstDeclaration(
            ConstDeclaration(
              Type(
               int
              ) [Type]
              ConstSingle(
                ConstPart(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [ConstPart]
              ) [ConstSingle]
            ) [ConstDeclaration]
          ) [PartConstDeclaration]
        ) [ProgramDeclMulti]
        PartVarDeclaration(
          GlobalVarDeclaration(
            Type(
             int
            ) [Type]
            GlobalVarSingle(
              GlobalVar(
                VarNormal(
                 i
                ) [VarNormal]
              ) [GlobalVar]
            ) [GlobalVarSingle]
          ) [GlobalVarDeclaration]
        ) [PartVarDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           bool
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               ibool
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDecMulti(
    MethodDecMulti(
      MethodDecMulti(
        MethodDeclSingle(
          MethodTypeDeclaration(
            MethodType2(
              MethodTypeName(
                Type(
                 int
                ) [Type]
               sum
              ) [MethodTypeName]
              ParamMulti(
                ParamSingle(
                  ParamNormal(
                    Type(
                     int
                    ) [Type]
                   z
                  ) [ParamNormal]
                ) [ParamSingle]
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 d
                ) [ParamNormal]
              ) [ParamMulti]
              StatementSingle(
                StmtReturnExpr(
                  ExprOne(
                    ExprAddop(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             z
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                      AddopPlus(
                      ) [AddopPlus]
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           d
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprAddop]
                  ) [ExprOne]
                ) [StmtReturnExpr]
              ) [StatementSingle]
            ) [MethodType2]
          ) [MethodTypeDeclaration]
        ) [MethodDeclSingle]
        MethodTypeDeclaration(
          MethodType0(
            MethodTypeName(
              Type(
               int
              ) [Type]
             inkrement
            ) [MethodTypeName]
            ParamMulti(
              ParamSingle(
                ParamNormal(
                  Type(
                   int
                  ) [Type]
                 a
                ) [ParamNormal]
              ) [ParamSingle]
              ParamNormal(
                Type(
                 int
                ) [Type]
               inc
              ) [ParamNormal]
            ) [ParamMulti]
            VarDeclSingle(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                VarSingle(
                  VarNormal(
                   pom
                  ) [VarNormal]
                ) [VarSingle]
              ) [VarDeclaration]
            ) [VarDeclSingle]
            StatementMulti(
              StatementSingle(
                StmtIfElse(
                  IfKeyword(
                  ) [IfKeyword]
                  StmtIfBody(
                    IfCond(
                      CondSingle(
                        CondTermSingle(
                          CondFactRelop(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     inc
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                            RelopEQ(
                            ) [RelopEQ]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     jedan
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [CondFactRelop]
                        ) [CondTermSingle]
                      ) [CondSingle]
                    ) [IfCond]
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         pom
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StmtIfBody]
                  StmtIf(
                    IfKeyword(
                    ) [IfKeyword]
                    StmtIfBody(
                      IfCond(
                        CondSingle(
                          CondTermSingle(
                            CondFactRelop(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       inc
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                              RelopEQ(
                              ) [RelopEQ]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     2
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [CondFactRelop]
                          ) [CondTermSingle]
                        ) [CondSingle]
                      ) [IfCond]
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           pom
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     a
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StmtIfBody]
                  ) [StmtIf]
                ) [StmtIfElse]
              ) [StatementSingle]
              StmtReturnExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FuncCallParams(
                        DesignatorSimple(
                         sum
                        ) [DesignatorSimple]
                        ActParsMulti(
                          ActParsSingle(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     a
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsSingle]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   pom
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [ActParsMulti]
                      ) [FuncCallParams]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtReturnExpr]
            ) [StatementMulti]
          ) [MethodType0]
        ) [MethodTypeDeclaration]
      ) [MethodDecMulti]
      MethodTypeDeclaration(
        MethodType6(
          MethodTypeName(
            Type(
             bool
            ) [Type]
           verify
          ) [MethodTypeName]
          StatementMulti(
            StatementSingle(
              StmtPrint(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorCharConst(
                       v
                      ) [FactorCharConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtPrint]
            ) [StatementSingle]
            StmtReturnExpr(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FactorBoolConst(
                     false
                    ) [FactorBoolConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtReturnExpr]
          ) [StatementMulti]
        ) [MethodType6]
      ) [MethodTypeDeclaration]
    ) [MethodDecMulti]
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementMulti(
                      StatementMulti(
                        StatementMulti(
                          StatementMulti(
                            StatementMulti(
                              StatementMulti(
                                StatementMulti(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementMulti(
                                        StatementMulti(
                                          StatementMulti(
                                            StatementMulti(
                                              StatementMulti(
                                                StatementMulti(
                                                  StatementSingle(
                                                    StmtIfElse(
                                                      IfKeyword(
                                                      ) [IfKeyword]
                                                      StmtIfBody(
                                                        IfCond(
                                                          CondSingle(
                                                            CondTermSingle(
                                                              CondFactRelop(
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       1
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                                RelopNE(
                                                                ) [RelopNE]
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       1
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                              ) [CondFactRelop]
                                                            ) [CondTermSingle]
                                                          ) [CondSingle]
                                                        ) [IfCond]
                                                        StmtPrint(
                                                          ExprOne(
                                                            ExprNeg(
                                                              TermSingle(
                                                                FactorNumConst(
                                                                 6
                                                                ) [FactorNumConst]
                                                              ) [TermSingle]
                                                            ) [ExprNeg]
                                                          ) [ExprOne]
                                                        ) [StmtPrint]
                                                      ) [StmtIfBody]
                                                      StmtPrint(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               0
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [StmtPrint]
                                                    ) [StmtIfElse]
                                                  ) [StatementSingle]
                                                  StmtDesign(
                                                    DesignatorAssignment(
                                                      DesignatorSimple(
                                                       ibool
                                                      ) [DesignatorSimple]
                                                      AssignmentExpr(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorBoolConst(
                                                               false
                                                              ) [FactorBoolConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [AssignmentExpr]
                                                    ) [DesignatorAssignment]
                                                  ) [StmtDesign]
                                                ) [StatementMulti]
                                                StmtDesign(
                                                  DesignatorAssignment(
                                                    DesignatorSimple(
                                                     i
                                                    ) [DesignatorSimple]
                                                    AssignmentExpr(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             0
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [AssignmentExpr]
                                                  ) [DesignatorAssignment]
                                                ) [StmtDesign]
                                              ) [StatementMulti]
                                              StmtDoWhile(
                                                DoKeyword(
                                                ) [DoKeyword]
                                                StmtWhileBody(
                                                  Stmt(
                                                    StatementMulti(
                                                      StatementSingle(
                                                        StmtIf(
                                                          IfKeyword(
                                                          ) [IfKeyword]
                                                          StmtIfBody(
                                                            IfCond(
                                                              CondSingle(
                                                                CondTermSingle(
                                                                  CondFactRelop(
                                                                    ExprOne(
                                                                      ExprSingle(
                                                                        TermSingle(
                                                                          FactorDesignator(
                                                                            DesignatorSimple(
                                                                             i
                                                                            ) [DesignatorSimple]
                                                                          ) [FactorDesignator]
                                                                        ) [TermSingle]
                                                                      ) [ExprSingle]
                                                                    ) [ExprOne]
                                                                    RelopEQ(
                                                                    ) [RelopEQ]
                                                                    ExprOne(
                                                                      ExprSingle(
                                                                        TermSingle(
                                                                          FactorNumConst(
                                                                           2
                                                                          ) [FactorNumConst]
                                                                        ) [TermSingle]
                                                                      ) [ExprSingle]
                                                                    ) [ExprOne]
                                                                  ) [CondFactRelop]
                                                                ) [CondTermSingle]
                                                              ) [CondSingle]
                                                            ) [IfCond]
                                                            StmtDesign(
                                                              DesignatorAssignment(
                                                                DesignatorSimple(
                                                                 ibool
                                                                ) [DesignatorSimple]
                                                                AssignmentExpr(
                                                                  ExprOne(
                                                                    ExprSingle(
                                                                      TermSingle(
                                                                        FactorBoolConst(
                                                                         true
                                                                        ) [FactorBoolConst]
                                                                      ) [TermSingle]
                                                                    ) [ExprSingle]
                                                                  ) [ExprOne]
                                                                ) [AssignmentExpr]
                                                              ) [DesignatorAssignment]
                                                            ) [StmtDesign]
                                                          ) [StmtIfBody]
                                                        ) [StmtIf]
                                                      ) [StatementSingle]
                                                      StmtDesign(
                                                        DesignatorIncrement(
                                                          DesignatorSimple(
                                                           i
                                                          ) [DesignatorSimple]
                                                        ) [DesignatorIncrement]
                                                      ) [StmtDesign]
                                                    ) [StatementMulti]
                                                  ) [Stmt]
                                                ) [StmtWhileBody]
                                                CondSingle(
                                                  CondTermSingle(
                                                    CondFactRelop(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorDesignator(
                                                              DesignatorSimple(
                                                               i
                                                              ) [DesignatorSimple]
                                                            ) [FactorDesignator]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                      RelopLT(
                                                      ) [RelopLT]
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             5
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [CondFactRelop]
                                                  ) [CondTermSingle]
                                                ) [CondSingle]
                                              ) [StmtDoWhile]
                                            ) [StatementMulti]
                                            StmtIf(
                                              IfKeyword(
                                              ) [IfKeyword]
                                              StmtIfBody(
                                                IfCond(
                                                  CondSingle(
                                                    CondTermSingle(
                                                      CondFactSingle(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorDesignator(
                                                                DesignatorSimple(
                                                                 ibool
                                                                ) [DesignatorSimple]
                                                              ) [FactorDesignator]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [CondFactSingle]
                                                    ) [CondTermSingle]
                                                  ) [CondSingle]
                                                ) [IfCond]
                                                StmtIfElse(
                                                  IfKeyword(
                                                  ) [IfKeyword]
                                                  StmtIfBody(
                                                    IfCond(
                                                      CondSingle(
                                                        CondTermSingle(
                                                          CondFactRelop(
                                                            ExprOne(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorDesignator(
                                                                    DesignatorSimple(
                                                                     i
                                                                    ) [DesignatorSimple]
                                                                  ) [FactorDesignator]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [ExprOne]
                                                            RelopEQ(
                                                            ) [RelopEQ]
                                                            ExprOne(
                                                              ExprSingle(
                                                                TermSingle(
                                                                  FactorNumConst(
                                                                   5
                                                                  ) [FactorNumConst]
                                                                ) [TermSingle]
                                                              ) [ExprSingle]
                                                            ) [ExprOne]
                                                          ) [CondFactRelop]
                                                        ) [CondTermSingle]
                                                      ) [CondSingle]
                                                    ) [IfCond]
                                                    StmtPrint(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorNumConst(
                                                             1
                                                            ) [FactorNumConst]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [StmtPrint]
                                                  ) [StmtIfBody]
                                                  StmtPrint(
                                                    ExprOne(
                                                      ExprNeg(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           1
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprNeg]
                                                    ) [ExprOne]
                                                  ) [StmtPrint]
                                                ) [StmtIfElse]
                                              ) [StmtIfBody]
                                            ) [StmtIf]
                                          ) [StatementMulti]
                                          StmtDesign(
                                            DesignatorAssignment(
                                              DesignatorSimple(
                                               niz
                                              ) [DesignatorSimple]
                                              AssignmentExpr(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorNewArray(
                                                        Type(
                                                         int
                                                        ) [Type]
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               3
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [FactorNewArray]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [AssignmentExpr]
                                            ) [DesignatorAssignment]
                                          ) [StmtDesign]
                                        ) [StatementMulti]
                                        StmtDesign(
                                          DesignatorAssignment(
                                            DesignatorArray(
                                             niz
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     0
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [DesignatorArray]
                                            AssignmentExpr(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     1
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [AssignmentExpr]
                                          ) [DesignatorAssignment]
                                        ) [StmtDesign]
                                      ) [StatementMulti]
                                      StmtDesign(
                                        DesignatorAssignment(
                                          DesignatorArray(
                                           niz
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   1
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [DesignatorArray]
                                          AssignmentExpr(
                                            ExprOne(
                                              ExprSingle(
                                                TermSingle(
                                                  FactorNumConst(
                                                   2
                                                  ) [FactorNumConst]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                            ) [ExprOne]
                                          ) [AssignmentExpr]
                                        ) [DesignatorAssignment]
                                      ) [StmtDesign]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorArray(
                                         niz
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorNumConst(
                                                 2
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [DesignatorArray]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprAddop(
                                              ExprSingle(
                                                TermSingle(
                                                  FuncCallParams(
                                                    DesignatorSimple(
                                                     sum
                                                    ) [DesignatorSimple]
                                                    ActParsMulti(
                                                      ActParsSingle(
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorDesignator(
                                                                DesignatorArray(
                                                                 niz
                                                                  ExprOne(
                                                                    ExprSingle(
                                                                      TermSingle(
                                                                        FactorNumConst(
                                                                         1
                                                                        ) [FactorNumConst]
                                                                      ) [TermSingle]
                                                                    ) [ExprSingle]
                                                                  ) [ExprOne]
                                                                ) [DesignatorArray]
                                                              ) [FactorDesignator]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [ActParsSingle]
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorDesignator(
                                                              DesignatorArray(
                                                               niz
                                                                ExprOne(
                                                                  ExprSingle(
                                                                    TermSingle(
                                                                      FactorNumConst(
                                                                       0
                                                                      ) [FactorNumConst]
                                                                    ) [TermSingle]
                                                                  ) [ExprSingle]
                                                                ) [ExprOne]
                                                              ) [DesignatorArray]
                                                            ) [FactorDesignator]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [ActParsMulti]
                                                  ) [FuncCallParams]
                                                ) [TermSingle]
                                              ) [ExprSingle]
                                              AddopPlus(
                                              ) [AddopPlus]
                                              TermSingle(
                                                FactorNumConst(
                                                 1
                                                ) [FactorNumConst]
                                              ) [TermSingle]
                                            ) [ExprAddop]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                  StmtIfElse(
                                    IfKeyword(
                                    ) [IfKeyword]
                                    StmtIfBody(
                                      IfCond(
                                        CondOr(
                                          CondSingle(
                                            CondTermSingle(
                                              CondFactSingle(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FuncCall(
                                                        DesignatorSimple(
                                                         verify
                                                        ) [DesignatorSimple]
                                                      ) [FuncCall]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [CondFactSingle]
                                            ) [CondTermSingle]
                                          ) [CondSingle]
                                          CondTermSingle(
                                            CondFactRelop(
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorDesignator(
                                                      DesignatorArray(
                                                       niz
                                                        ExprOne(
                                                          ExprSingle(
                                                            TermSingle(
                                                              FactorNumConst(
                                                               2
                                                              ) [FactorNumConst]
                                                            ) [TermSingle]
                                                          ) [ExprSingle]
                                                        ) [ExprOne]
                                                      ) [DesignatorArray]
                                                    ) [FactorDesignator]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                              RelopEQ(
                                              ) [RelopEQ]
                                              ExprOne(
                                                ExprSingle(
                                                  TermSingle(
                                                    FactorNumConst(
                                                     4
                                                    ) [FactorNumConst]
                                                  ) [TermSingle]
                                                ) [ExprSingle]
                                              ) [ExprOne]
                                            ) [CondFactRelop]
                                          ) [CondTermSingle]
                                        ) [CondOr]
                                      ) [IfCond]
                                      StmtPrint(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FuncCallParams(
                                                DesignatorSimple(
                                                 ord
                                                ) [DesignatorSimple]
                                                ActParsSingle(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorCharConst(
                                                         A
                                                        ) [FactorCharConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [ActParsSingle]
                                              ) [FuncCallParams]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [StmtPrint]
                                    ) [StmtIfBody]
                                    StmtPrint(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FuncCallParams(
                                              DesignatorSimple(
                                               ord
                                              ) [DesignatorSimple]
                                              ActParsSingle(
                                                ExprOne(
                                                  ExprSingle(
                                                    TermSingle(
                                                      FactorCharConst(
                                                       a
                                                      ) [FactorCharConst]
                                                    ) [TermSingle]
                                                  ) [ExprSingle]
                                                ) [ExprOne]
                                              ) [ActParsSingle]
                                            ) [FuncCallParams]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [StmtPrint]
                                  ) [StmtIfElse]
                                ) [StatementMulti]
                                StmtPrint(
                                  ExprOne(
                                    ExprSingle(
                                      TermSingle(
                                        FactorDesignator(
                                          DesignatorSimple(
                                           eol
                                          ) [DesignatorSimple]
                                        ) [FactorDesignator]
                                      ) [TermSingle]
                                    ) [ExprSingle]
                                  ) [ExprOne]
                                ) [StmtPrint]
                              ) [StatementMulti]
                              StmtDesign(
                                DesignatorAssignment(
                                  DesignatorSimple(
                                   i
                                  ) [DesignatorSimple]
                                  AssignmentExpr(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           0
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [AssignmentExpr]
                                ) [DesignatorAssignment]
                              ) [StmtDesign]
                            ) [StatementMulti]
                            StmtDoWhile(
                              DoKeyword(
                              ) [DoKeyword]
                              StmtWhileBody(
                                Stmt(
                                  StatementMulti(
                                    StatementMulti(
                                      StatementSingle(
                                        StmtIf(
                                          IfKeyword(
                                          ) [IfKeyword]
                                          StmtIfBody(
                                            IfCond(
                                              CondSingle(
                                                CondTermSingle(
                                                  CondFactRelop(
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorDesignator(
                                                            DesignatorSimple(
                                                             i
                                                            ) [DesignatorSimple]
                                                          ) [FactorDesignator]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                    RelopEQ(
                                                    ) [RelopEQ]
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           3
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [CondFactRelop]
                                                ) [CondTermSingle]
                                              ) [CondSingle]
                                            ) [IfCond]
                                            Stmt(
                                              StatementMulti(
                                                StatementSingle(
                                                  StmtDesign(
                                                    DesignatorIncrement(
                                                      DesignatorSimple(
                                                       i
                                                      ) [DesignatorSimple]
                                                    ) [DesignatorIncrement]
                                                  ) [StmtDesign]
                                                ) [StatementSingle]
                                                StmtContinue(
                                                ) [StmtContinue]
                                              ) [StatementMulti]
                                            ) [Stmt]
                                          ) [StmtIfBody]
                                        ) [StmtIf]
                                      ) [StatementSingle]
                                      StmtIf(
                                        IfKeyword(
                                        ) [IfKeyword]
                                        StmtIfBody(
                                          IfCond(
                                            CondSingle(
                                              CondTermSingle(
                                                CondFactRelop(
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorDesignator(
                                                          DesignatorSimple(
                                                           i
                                                          ) [DesignatorSimple]
                                                        ) [FactorDesignator]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                  RelopEQ(
                                                  ) [RelopEQ]
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         4
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [CondFactRelop]
                                              ) [CondTermSingle]
                                            ) [CondSingle]
                                          ) [IfCond]
                                          StmtBreak(
                                          ) [StmtBreak]
                                        ) [StmtIfBody]
                                      ) [StmtIf]
                                    ) [StatementMulti]
                                    StmtDesign(
                                      DesignatorAssignment(
                                        DesignatorSimple(
                                         i
                                        ) [DesignatorSimple]
                                        AssignmentExpr(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FuncCallParams(
                                                  DesignatorSimple(
                                                   inkrement
                                                  ) [DesignatorSimple]
                                                  ActParsMulti(
                                                    ActParsSingle(
                                                      ExprOne(
                                                        ExprSingle(
                                                          TermSingle(
                                                            FactorDesignator(
                                                              DesignatorSimple(
                                                               i
                                                              ) [DesignatorSimple]
                                                            ) [FactorDesignator]
                                                          ) [TermSingle]
                                                        ) [ExprSingle]
                                                      ) [ExprOne]
                                                    ) [ActParsSingle]
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           1
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [ActParsMulti]
                                                ) [FuncCallParams]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [AssignmentExpr]
                                      ) [DesignatorAssignment]
                                    ) [StmtDesign]
                                  ) [StatementMulti]
                                ) [Stmt]
                              ) [StmtWhileBody]
                              CondSingle(
                                CondTermSingle(
                                  CondFactRelop(
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorDesignator(
                                            DesignatorSimple(
                                             i
                                            ) [DesignatorSimple]
                                          ) [FactorDesignator]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                    RelopLT(
                                    ) [RelopLT]
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           10
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [CondFactRelop]
                                ) [CondTermSingle]
                              ) [CondSingle]
                            ) [StmtDoWhile]
                          ) [StatementMulti]
                          StmtIfElse(
                            IfKeyword(
                            ) [IfKeyword]
                            StmtIfBody(
                              IfCond(
                                CondSingle(
                                  CondTermAnd(
                                    CondTermSingle(
                                      CondFactRelop(
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorDesignator(
                                                DesignatorSimple(
                                                 i
                                                ) [DesignatorSimple]
                                              ) [FactorDesignator]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                        RelopEQ(
                                        ) [RelopEQ]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorNumConst(
                                               3
                                              ) [FactorNumConst]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [CondFactRelop]
                                    ) [CondTermSingle]
                                    CondFactSingle(
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FuncCall(
                                              DesignatorSimple(
                                               verify
                                              ) [DesignatorSimple]
                                            ) [FuncCall]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [CondFactSingle]
                                  ) [CondTermAnd]
                                ) [CondSingle]
                              ) [IfCond]
                              StmtPrint(
                                ExprOne(
                                  ExprNeg(
                                    TermSingle(
                                      FactorNumConst(
                                       4
                                      ) [FactorNumConst]
                                    ) [TermSingle]
                                  ) [ExprNeg]
                                ) [ExprOne]
                              ) [StmtPrint]
                            ) [StmtIfBody]
                            StmtPrint(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorNumConst(
                                     4
                                    ) [FactorNumConst]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [StmtPrint]
                          ) [StmtIfElse]
                        ) [StatementMulti]
                        StmtRead(
                          DesignatorArray(
                           niz
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   0
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [DesignatorArray]
                        ) [StmtRead]
                      ) [StatementMulti]
                      StmtRead(
                        DesignatorArray(
                         niz
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 1
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [DesignatorArray]
                      ) [StmtRead]
                    ) [StatementMulti]
                    StmtRead(
                      DesignatorArray(
                       niz
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [DesignatorArray]
                    ) [StmtRead]
                  ) [StatementMulti]
                  StmtPrint(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             eol
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [StmtPrint]
                ) [StatementMulti]
                StmtPrint(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FuncCallParams(
                          DesignatorSimple(
                           sum
                          ) [DesignatorSimple]
                          ActParsMulti(
                            ActParsSingle(
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FuncCallParams(
                                      DesignatorSimple(
                                       sum
                                      ) [DesignatorSimple]
                                      ActParsMulti(
                                        ActParsSingle(
                                          ExprOne(
                                            ExprSingle(
                                              TermSingle(
                                                FactorDesignator(
                                                  DesignatorArray(
                                                   niz
                                                    ExprOne(
                                                      ExprSingle(
                                                        TermSingle(
                                                          FactorNumConst(
                                                           0
                                                          ) [FactorNumConst]
                                                        ) [TermSingle]
                                                      ) [ExprSingle]
                                                    ) [ExprOne]
                                                  ) [DesignatorArray]
                                                ) [FactorDesignator]
                                              ) [TermSingle]
                                            ) [ExprSingle]
                                          ) [ExprOne]
                                        ) [ActParsSingle]
                                        ExprOne(
                                          ExprSingle(
                                            TermSingle(
                                              FactorDesignator(
                                                DesignatorArray(
                                                 niz
                                                  ExprOne(
                                                    ExprSingle(
                                                      TermSingle(
                                                        FactorNumConst(
                                                         1
                                                        ) [FactorNumConst]
                                                      ) [TermSingle]
                                                    ) [ExprSingle]
                                                  ) [ExprOne]
                                                ) [DesignatorArray]
                                              ) [FactorDesignator]
                                            ) [TermSingle]
                                          ) [ExprSingle]
                                        ) [ExprOne]
                                      ) [ActParsMulti]
                                    ) [FuncCallParams]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [ActParsSingle]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorArray(
                                     niz
                                      ExprOne(
                                        ExprSingle(
                                          TermSingle(
                                            FactorNumConst(
                                             2
                                            ) [FactorNumConst]
                                          ) [TermSingle]
                                        ) [ExprSingle]
                                      ) [ExprOne]
                                    ) [DesignatorArray]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [ActParsMulti]
                        ) [FuncCallParams]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [StmtPrint]
              ) [StatementMulti]
              StmtPrint(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         eol
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtPrint]
            ) [StatementMulti]
            StmtPrint(
              ExprOne(
                ExprSingle(
                  TermSingle(
                    FuncCallParams(
                      DesignatorSimple(
                       inkrement
                      ) [DesignatorSimple]
                      ActParsMulti(
                        ActParsSingle(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorArray(
                                   niz
                                    ExprOne(
                                      ExprSingle(
                                        TermSingle(
                                          FactorNumConst(
                                           2
                                          ) [FactorNumConst]
                                        ) [TermSingle]
                                      ) [ExprSingle]
                                    ) [ExprOne]
                                  ) [DesignatorArray]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [ActParsSingle]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorNumConst(
                               2
                              ) [FactorNumConst]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [ActParsMulti]
                    ) [FuncCallParams]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [ExprOne]
            ) [StmtPrint]
          ) [StatementMulti]
          StmtPrint(
            ExprTernary(
              TernaryCond(
                ExprSingle(
                  TermSingle(
                    FuncCall(
                      DesignatorSimple(
                       verify
                      ) [DesignatorSimple]
                    ) [FuncCall]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TernaryCond]
              TerExpr1(
                ExprSingle(
                  TermSingle(
                    FactorCharConst(
                     t
                    ) [FactorCharConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TerExpr1]
              TerExpr2(
                ExprSingle(
                  TermSingle(
                    FactorCharConst(
                     f
                    ) [FactorCharConst]
                  ) [TermSingle]
                ) [ExprSingle]
              ) [TerExpr2]
            ) [ExprTernary]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDecMulti]
) [Program]
INFO  20:45:54,671 - 

================SEMANTICKA OBRADA====================


INFO  20:45:54,687 - Deklarisana konstanta 'jedan' na liniji 5
INFO  20:45:54,687 - Deklarisana globalna promenljiva 'i' na liniji 7
INFO  20:45:54,687 - Deklarisana globalna promenljiva 'ibool' na liniji 8
INFO  20:45:54,687 - Deklarisan globalni niz 'niz' na liniji 10
INFO  20:45:54,687 - Formalni parametar funkcije sum: 'z' na liniji 14
INFO  20:45:54,687 - Formalni parametar funkcije sum: 'd' na liniji 14
INFO  20:45:54,687 - Formalni parametar funkcije inkrement: 'a' na liniji 19
INFO  20:45:54,687 - Formalni parametar funkcije inkrement: 'inc' na liniji 19
INFO  20:45:54,687 - Deklarisana promenljiva 'pom' na liniji 20
INFO  20:45:54,687 - Pronadjen poziv funkcije 'sum' na liniji 25
INFO  20:45:54,687 - Pristup elementu niza 'niz' na liniji 50
INFO  20:45:54,687 - Pristup elementu niza 'niz' na liniji 51
INFO  20:45:54,687 - Pristup elementu niza 'niz' na liniji 52
INFO  20:45:54,687 - Pristup elementu niza 'niz' na liniji 52
INFO  20:45:54,687 - Pristup elementu niza 'niz' na liniji 52
INFO  20:45:54,687 - Pronadjen poziv funkcije 'sum' na liniji 52
INFO  20:45:54,687 - Pronadjen poziv funkcije 'verify' na liniji 53
INFO  20:45:54,687 - Pristup elementu niza 'niz' na liniji 53
INFO  20:45:54,687 - Pronadjen poziv funkcije 'ord' na liniji 53
INFO  20:45:54,687 - Pronadjen poziv funkcije 'ord' na liniji 54
INFO  20:45:54,687 - Pronadjen poziv funkcije 'inkrement' na liniji 65
INFO  20:45:54,687 - Pronadjen poziv funkcije 'verify' na liniji 68
INFO  20:45:54,687 - Pristup elementu niza 'niz' na liniji 71
INFO  20:45:54,687 - Pristup elementu niza 'niz' na liniji 72
INFO  20:45:54,687 - Pristup elementu niza 'niz' na liniji 73
INFO  20:45:54,687 - Pristup elementu niza 'niz' na liniji 76
INFO  20:45:54,687 - Pristup elementu niza 'niz' na liniji 76
INFO  20:45:54,687 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  20:45:54,687 - Pristup elementu niza 'niz' na liniji 76
INFO  20:45:54,687 - Pronadjen poziv funkcije 'sum' na liniji 76
INFO  20:45:54,687 - Pristup elementu niza 'niz' na liniji 79
INFO  20:45:54,687 - Pronadjen poziv funkcije 'inkrement' na liniji 79
INFO  20:45:54,687 - Pronadjen poziv funkcije 'verify' na liniji 81
INFO  20:45:54,687 - ===================================
INFO  20:45:54,687 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  20:45:54,687 - Parsiranje uspesno zavrseno!
