INFO  09:59:51,563 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  09:59:51,610 - #2 program
INFO  09:59:51,610 - #20 test
INFO  09:59:51,610 - #7 const
INFO  09:59:51,611 - #20 int
INFO  09:59:51,611 - #20 N
INFO  09:59:51,612 - #37 =
INFO  09:59:51,612 - #21 2
INFO  09:59:51,612 - #40 ;
INFO  09:59:51,613 - #20 int
INFO  09:59:51,613 - #20 g
INFO  09:59:51,613 - #40 ;
INFO  09:59:51,614 - #20 int
INFO  09:59:51,614 - #20 niz
INFO  09:59:51,614 - #45 [
INFO  09:59:51,614 - #46 ]
INFO  09:59:51,614 - #40 ;
INFO  09:59:51,614 - #47 {
INFO  09:59:51,614 - #16 void
INFO  09:59:51,614 - #20 main
INFO  09:59:51,614 - #43 (
INFO  09:59:51,615 - #44 )
INFO  09:59:51,615 - #47 {
INFO  09:59:51,615 - #20 g
INFO  09:59:51,615 - #37 =
INFO  09:59:51,615 - #20 N
INFO  09:59:51,615 - #40 ;
INFO  09:59:51,615 - #13 print
INFO  09:59:51,616 - #43 (
INFO  09:59:51,616 - #20 g
INFO  09:59:51,616 - #44 )
INFO  09:59:51,616 - #40 ;
INFO  09:59:51,616 - #20 g
INFO  09:59:51,616 - #38 ++
INFO  09:59:51,616 - #40 ;
INFO  09:59:51,616 - #14 read
INFO  09:59:51,616 - #43 (
INFO  09:59:51,616 - #20 g
INFO  09:59:51,617 - #44 )
INFO  09:59:51,617 - #40 ;
INFO  09:59:51,617 - #20 niz
INFO  09:59:51,617 - #37 =
INFO  09:59:51,617 - #12 new
INFO  09:59:51,617 - #20 int
INFO  09:59:51,617 - #45 [
INFO  09:59:51,617 - #20 N
INFO  09:59:51,617 - #46 ]
INFO  09:59:51,617 - #40 ;
INFO  09:59:51,617 - #20 niz
INFO  09:59:51,618 - #45 [
INFO  09:59:51,618 - #21 0
INFO  09:59:51,618 - #46 ]
INFO  09:59:51,618 - #37 =
INFO  09:59:51,618 - #21 1
INFO  09:59:51,618 - #40 ;
INFO  09:59:51,618 - #48 }
INFO  09:59:51,618 - #48 }
INFO  09:59:51,619 - 

================SINTAKSNO STABLO====================


INFO  09:59:51,620 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         g
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   N
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                  StmtPrint(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [StmtPrint]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtRead(
                DesignatorSimple(
                 g
                ) [DesignatorSimple]
              ) [StmtRead]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 niz
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNewArray(
                          Type(
                           int
                          ) [Type]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   N
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [FactorNewArray]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorArray(
               niz
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       0
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [DesignatorArray]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       1
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  09:59:51,621 - 

================SEMANTICKA OBRADA====================


INFO  09:59:51,635 - Deklarisana konstanta 'N' na liniji 2
INFO  09:59:51,635 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  09:59:51,635 - Deklarisan globalni niz 'niz' na liniji 4
INFO  09:59:51,636 - Pristup elementu niza 'niz' na liniji 14
INFO  09:59:51,637 - ===================================
INFO  09:59:51,637 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  09:59:51,643 - Parsiranje uspesno zavrseno!
INFO  10:03:08,231 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:03:08,296 - #2 program
INFO  10:03:08,296 - #20 test
INFO  10:03:08,296 - #7 const
INFO  10:03:08,298 - #20 int
INFO  10:03:08,298 - #20 N
INFO  10:03:08,299 - #37 =
INFO  10:03:08,299 - #21 2
INFO  10:03:08,299 - #40 ;
INFO  10:03:08,299 - #20 int
INFO  10:03:08,300 - #20 g
INFO  10:03:08,300 - #40 ;
INFO  10:03:08,300 - #20 int
INFO  10:03:08,301 - #20 niz
INFO  10:03:08,301 - #45 [
INFO  10:03:08,301 - #46 ]
INFO  10:03:08,301 - #40 ;
INFO  10:03:08,301 - #47 {
INFO  10:03:08,301 - #16 void
INFO  10:03:08,302 - #20 main
INFO  10:03:08,302 - #43 (
INFO  10:03:08,302 - #44 )
INFO  10:03:08,302 - #47 {
INFO  10:03:08,302 - #20 g
INFO  10:03:08,302 - #37 =
INFO  10:03:08,302 - #20 N
INFO  10:03:08,302 - #40 ;
INFO  10:03:08,303 - #13 print
INFO  10:03:08,304 - #43 (
INFO  10:03:08,304 - #20 g
INFO  10:03:08,304 - #44 )
INFO  10:03:08,304 - #40 ;
INFO  10:03:08,304 - #20 g
INFO  10:03:08,305 - #38 ++
INFO  10:03:08,305 - #40 ;
INFO  10:03:08,305 - #14 read
INFO  10:03:08,305 - #43 (
INFO  10:03:08,305 - #20 g
INFO  10:03:08,305 - #44 )
INFO  10:03:08,306 - #40 ;
INFO  10:03:08,306 - #20 niz
INFO  10:03:08,307 - #37 =
INFO  10:03:08,307 - #12 new
INFO  10:03:08,307 - #20 int
INFO  10:03:08,307 - #45 [
INFO  10:03:08,307 - #20 N
INFO  10:03:08,307 - #46 ]
INFO  10:03:08,307 - #40 ;
INFO  10:03:08,307 - #48 }
INFO  10:03:08,308 - #48 }
INFO  10:03:08,309 - 

================SINTAKSNO STABLO====================


INFO  10:03:08,310 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtPrint(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           g
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [StmtPrint]
              ) [StatementMulti]
              StmtDesign(
                DesignatorIncrement(
                  DesignatorSimple(
                   g
                  ) [DesignatorSimple]
                ) [DesignatorIncrement]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtRead(
              DesignatorSimple(
               g
              ) [DesignatorSimple]
            ) [StmtRead]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               niz
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNewArray(
                        Type(
                         int
                        ) [Type]
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [FactorNewArray]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:03:08,313 - 

================SEMANTICKA OBRADA====================


INFO  10:03:08,325 - Deklarisana konstanta 'N' na liniji 2
INFO  10:03:08,325 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  10:03:08,325 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:03:08,327 - ===================================
INFO  10:03:08,327 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:03:08,333 - Parsiranje uspesno zavrseno!
INFO  10:03:25,895 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:03:25,964 - #2 program
INFO  10:03:25,964 - #20 test
INFO  10:03:25,964 - #7 const
INFO  10:03:25,966 - #20 int
INFO  10:03:25,966 - #20 N
INFO  10:03:25,966 - #37 =
INFO  10:03:25,966 - #21 2
INFO  10:03:25,966 - #40 ;
INFO  10:03:25,967 - #20 int
INFO  10:03:25,968 - #20 g
INFO  10:03:25,968 - #40 ;
INFO  10:03:25,968 - #20 int
INFO  10:03:25,968 - #20 niz
INFO  10:03:25,968 - #45 [
INFO  10:03:25,969 - #46 ]
INFO  10:03:25,969 - #40 ;
INFO  10:03:25,969 - #47 {
INFO  10:03:25,969 - #16 void
INFO  10:03:25,969 - #20 main
INFO  10:03:25,969 - #43 (
INFO  10:03:25,970 - #44 )
INFO  10:03:25,970 - #47 {
INFO  10:03:25,970 - #20 g
INFO  10:03:25,970 - #37 =
INFO  10:03:25,971 - #20 N
INFO  10:03:25,971 - #40 ;
INFO  10:03:25,972 - #13 print
INFO  10:03:25,973 - #43 (
INFO  10:03:25,974 - #20 g
INFO  10:03:25,974 - #44 )
INFO  10:03:25,974 - #40 ;
INFO  10:03:25,974 - #20 g
INFO  10:03:25,974 - #38 ++
INFO  10:03:25,975 - #40 ;
INFO  10:03:25,975 - #14 read
INFO  10:03:25,975 - #43 (
INFO  10:03:25,975 - #20 g
INFO  10:03:25,975 - #44 )
INFO  10:03:25,975 - #40 ;
INFO  10:03:25,975 - #48 }
INFO  10:03:25,975 - #48 }
INFO  10:03:25,977 - 

================SINTAKSNO STABLO====================


INFO  10:03:25,978 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               N
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtPrint(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         g
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtPrint]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 g
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             g
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:03:25,979 - 

================SEMANTICKA OBRADA====================


INFO  10:03:25,994 - Deklarisana konstanta 'N' na liniji 2
INFO  10:03:25,994 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  10:03:25,994 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:03:25,996 - ===================================
INFO  10:03:25,996 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:03:26,004 - Parsiranje uspesno zavrseno!
INFO  10:03:46,251 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:03:46,297 - #2 program
INFO  10:03:46,297 - #20 test
INFO  10:03:46,297 - #7 const
INFO  10:03:46,298 - #20 int
INFO  10:03:46,298 - #20 N
INFO  10:03:46,298 - #37 =
INFO  10:03:46,298 - #21 2
INFO  10:03:46,298 - #40 ;
INFO  10:03:46,299 - #20 int
INFO  10:03:46,299 - #20 g
INFO  10:03:46,299 - #40 ;
INFO  10:03:46,299 - #47 {
INFO  10:03:46,299 - #16 void
INFO  10:03:46,299 - #20 main
INFO  10:03:46,300 - #43 (
INFO  10:03:46,300 - #44 )
INFO  10:03:46,300 - #47 {
INFO  10:03:46,300 - #20 g
INFO  10:03:46,300 - #37 =
INFO  10:03:46,300 - #20 N
INFO  10:03:46,300 - #40 ;
INFO  10:03:46,300 - #13 print
INFO  10:03:46,301 - #43 (
INFO  10:03:46,301 - #20 g
INFO  10:03:46,301 - #44 )
INFO  10:03:46,301 - #40 ;
INFO  10:03:46,301 - #20 g
INFO  10:03:46,301 - #38 ++
INFO  10:03:46,301 - #40 ;
INFO  10:03:46,301 - #14 read
INFO  10:03:46,301 - #43 (
INFO  10:03:46,302 - #20 g
INFO  10:03:46,302 - #44 )
INFO  10:03:46,302 - #40 ;
INFO  10:03:46,302 - #48 }
INFO  10:03:46,302 - #48 }
INFO  10:03:46,303 - 

================SINTAKSNO STABLO====================


INFO  10:03:46,303 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           g
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               N
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtPrint(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorDesignator(
                        DesignatorSimple(
                         g
                        ) [DesignatorSimple]
                      ) [FactorDesignator]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [StmtPrint]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 g
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtRead(
            DesignatorSimple(
             g
            ) [DesignatorSimple]
          ) [StmtRead]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:03:46,304 - 

================SEMANTICKA OBRADA====================


INFO  10:03:46,316 - Deklarisana konstanta 'N' na liniji 2
INFO  10:03:46,316 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  10:03:46,317 - ===================================
INFO  10:03:46,317 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:03:46,324 - Parsiranje uspesno zavrseno!
INFO  10:04:37,857 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:04:37,905 - #2 program
INFO  10:04:37,905 - #20 test
INFO  10:04:37,905 - #7 const
INFO  10:04:37,906 - #20 int
INFO  10:04:37,906 - #20 N
INFO  10:04:37,906 - #37 =
INFO  10:04:37,907 - #21 2
INFO  10:04:37,907 - #40 ;
INFO  10:04:37,907 - #20 int
INFO  10:04:37,907 - #20 g
INFO  10:04:37,907 - #40 ;
INFO  10:04:37,908 - #20 int
INFO  10:04:37,908 - #20 niz
INFO  10:04:37,908 - #45 [
INFO  10:04:37,908 - #46 ]
INFO  10:04:37,908 - #40 ;
INFO  10:04:37,908 - #47 {
INFO  10:04:37,908 - #16 void
INFO  10:04:37,908 - #20 main
INFO  10:04:37,908 - #43 (
INFO  10:04:37,908 - #44 )
INFO  10:04:37,908 - #47 {
INFO  10:04:37,908 - #20 g
INFO  10:04:37,909 - #37 =
INFO  10:04:37,909 - #20 N
INFO  10:04:37,909 - #40 ;
INFO  10:04:37,909 - #13 print
INFO  10:04:37,910 - #43 (
INFO  10:04:37,910 - #20 g
INFO  10:04:37,910 - #44 )
INFO  10:04:37,910 - #40 ;
INFO  10:04:37,910 - #20 g
INFO  10:04:37,910 - #38 ++
INFO  10:04:37,910 - #40 ;
INFO  10:04:37,911 - #14 read
INFO  10:04:37,911 - #43 (
INFO  10:04:37,911 - #20 g
INFO  10:04:37,911 - #44 )
INFO  10:04:37,911 - #40 ;
INFO  10:04:37,911 - #20 niz
INFO  10:04:37,911 - #37 =
INFO  10:04:37,911 - #12 new
INFO  10:04:37,912 - #20 int
INFO  10:04:37,912 - #45 [
INFO  10:04:37,912 - #20 N
INFO  10:04:37,912 - #46 ]
INFO  10:04:37,912 - #40 ;
INFO  10:04:37,913 - #20 niz
INFO  10:04:37,913 - #45 [
INFO  10:04:37,913 - #21 0
INFO  10:04:37,913 - #46 ]
INFO  10:04:37,913 - #37 =
INFO  10:04:37,913 - #21 1
INFO  10:04:37,913 - #40 ;
INFO  10:04:37,914 - #48 }
INFO  10:04:37,914 - #48 }
INFO  10:04:37,915 - 

================SINTAKSNO STABLO====================


INFO  10:04:37,916 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         g
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   N
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                  StmtPrint(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [StmtPrint]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtRead(
                DesignatorSimple(
                 g
                ) [DesignatorSimple]
              ) [StmtRead]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 niz
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNewArray(
                          Type(
                           int
                          ) [Type]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   N
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [FactorNewArray]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorArray(
               niz
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       0
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [DesignatorArray]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       1
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:04:37,916 - 

================SEMANTICKA OBRADA====================


INFO  10:04:37,929 - Deklarisana konstanta 'N' na liniji 2
INFO  10:04:37,929 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  10:04:37,929 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:04:37,930 - Pristup elementu niza 'niz' na liniji 14
INFO  10:04:37,931 - ===================================
INFO  10:04:37,931 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:04:37,937 - Parsiranje uspesno zavrseno!
INFO  10:34:24,139 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:34:24,185 - #2 program
INFO  10:34:24,185 - #20 test
INFO  10:34:24,185 - #7 const
INFO  10:34:24,186 - #20 int
INFO  10:34:24,186 - #20 N
INFO  10:34:24,186 - #37 =
INFO  10:34:24,186 - #21 2
INFO  10:34:24,186 - #40 ;
INFO  10:34:24,187 - #20 int
INFO  10:34:24,187 - #20 g
INFO  10:34:24,187 - #40 ;
INFO  10:34:24,187 - #20 int
INFO  10:34:24,188 - #20 niz
INFO  10:34:24,188 - #45 [
INFO  10:34:24,188 - #46 ]
INFO  10:34:24,188 - #40 ;
INFO  10:34:24,188 - #47 {
INFO  10:34:24,188 - #16 void
INFO  10:34:24,188 - #20 main
INFO  10:34:24,188 - #43 (
INFO  10:34:24,188 - #44 )
INFO  10:34:24,188 - #47 {
INFO  10:34:24,188 - #20 g
INFO  10:34:24,188 - #37 =
INFO  10:34:24,189 - #20 N
INFO  10:34:24,189 - #40 ;
INFO  10:34:24,189 - #13 print
INFO  10:34:24,189 - #43 (
INFO  10:34:24,190 - #20 g
INFO  10:34:24,190 - #44 )
INFO  10:34:24,190 - #40 ;
INFO  10:34:24,190 - #20 g
INFO  10:34:24,190 - #38 ++
INFO  10:34:24,190 - #40 ;
INFO  10:34:24,190 - #14 read
INFO  10:34:24,190 - #43 (
INFO  10:34:24,190 - #20 g
INFO  10:34:24,190 - #44 )
INFO  10:34:24,190 - #40 ;
INFO  10:34:24,191 - #20 niz
INFO  10:34:24,191 - #37 =
INFO  10:34:24,191 - #12 new
INFO  10:34:24,191 - #20 int
INFO  10:34:24,191 - #45 [
INFO  10:34:24,192 - #20 N
INFO  10:34:24,192 - #46 ]
INFO  10:34:24,192 - #40 ;
INFO  10:34:24,192 - #20 niz
INFO  10:34:24,192 - #45 [
INFO  10:34:24,192 - #21 0
INFO  10:34:24,192 - #46 ]
INFO  10:34:24,193 - #37 =
INFO  10:34:24,193 - #21 1
INFO  10:34:24,193 - #40 ;
INFO  10:34:24,193 - #48 }
INFO  10:34:24,193 - #48 }
INFO  10:34:24,194 - 

================SINTAKSNO STABLO====================


INFO  10:34:24,195 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         g
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   N
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                  StmtPrint(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [StmtPrint]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtRead(
                DesignatorSimple(
                 g
                ) [DesignatorSimple]
              ) [StmtRead]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 niz
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNewArray(
                          Type(
                           int
                          ) [Type]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   N
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [FactorNewArray]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorArray(
               niz
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       0
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [DesignatorArray]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       1
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:34:24,195 - 

================SEMANTICKA OBRADA====================


INFO  10:34:24,206 - Deklarisana konstanta 'N' na liniji 2
INFO  10:34:24,206 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  10:34:24,206 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:34:24,206 - Pristup elementu niza 'niz' na liniji 14
INFO  10:34:24,207 - ===================================
INFO  10:34:24,207 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:34:24,213 - Parsiranje uspesno zavrseno!
INFO  10:36:01,578 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:36:01,623 - #2 program
INFO  10:36:01,624 - #20 test
INFO  10:36:01,624 - #7 const
INFO  10:36:01,625 - #20 int
INFO  10:36:01,625 - #20 N
INFO  10:36:01,625 - #37 =
INFO  10:36:01,625 - #21 2
INFO  10:36:01,625 - #40 ;
INFO  10:36:01,626 - #20 int
INFO  10:36:01,626 - #20 g
INFO  10:36:01,626 - #40 ;
INFO  10:36:01,627 - #20 int
INFO  10:36:01,627 - #20 niz
INFO  10:36:01,627 - #45 [
INFO  10:36:01,627 - #46 ]
INFO  10:36:01,627 - #40 ;
INFO  10:36:01,627 - #47 {
INFO  10:36:01,627 - #16 void
INFO  10:36:01,627 - #20 main
INFO  10:36:01,627 - #43 (
INFO  10:36:01,628 - #44 )
INFO  10:36:01,628 - #47 {
INFO  10:36:01,628 - #20 g
INFO  10:36:01,628 - #37 =
INFO  10:36:01,628 - #20 N
INFO  10:36:01,628 - #40 ;
INFO  10:36:01,628 - #13 print
INFO  10:36:01,629 - #43 (
INFO  10:36:01,629 - #20 g
INFO  10:36:01,629 - #44 )
INFO  10:36:01,629 - #40 ;
INFO  10:36:01,629 - #20 g
INFO  10:36:01,629 - #38 ++
INFO  10:36:01,629 - #40 ;
INFO  10:36:01,629 - #20 niz
INFO  10:36:01,630 - #37 =
INFO  10:36:01,630 - #12 new
INFO  10:36:01,630 - #20 int
INFO  10:36:01,630 - #45 [
INFO  10:36:01,630 - #20 N
INFO  10:36:01,630 - #46 ]
INFO  10:36:01,630 - #40 ;
INFO  10:36:01,630 - #20 niz
INFO  10:36:01,630 - #45 [
INFO  10:36:01,630 - #21 0
INFO  10:36:01,630 - #46 ]
INFO  10:36:01,631 - #37 =
INFO  10:36:01,631 - #21 1
INFO  10:36:01,631 - #40 ;
INFO  10:36:01,631 - #48 }
INFO  10:36:01,631 - #48 }
INFO  10:36:01,632 - 

================SINTAKSNO STABLO====================


INFO  10:36:01,633 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtPrint(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           g
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [StmtPrint]
              ) [StatementMulti]
              StmtDesign(
                DesignatorIncrement(
                  DesignatorSimple(
                   g
                  ) [DesignatorSimple]
                ) [DesignatorIncrement]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 niz
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNewArray(
                          Type(
                           int
                          ) [Type]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   N
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [FactorNewArray]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorArray(
               niz
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       0
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [DesignatorArray]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       1
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:36:01,634 - 

================SEMANTICKA OBRADA====================


INFO  10:36:01,640 - Deklarisana konstanta 'N' na liniji 2
INFO  10:36:01,640 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  10:36:01,640 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:36:01,640 - Pristup elementu niza 'niz' na liniji 14
INFO  10:36:01,641 - ===================================
INFO  10:36:01,641 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:36:01,648 - Parsiranje uspesno zavrseno!
INFO  10:36:26,149 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:36:26,192 - #2 program
INFO  10:36:26,193 - #20 test
INFO  10:36:26,193 - #7 const
INFO  10:36:26,193 - #20 int
INFO  10:36:26,193 - #20 N
INFO  10:36:26,194 - #37 =
INFO  10:36:26,194 - #21 2
INFO  10:36:26,194 - #40 ;
INFO  10:36:26,194 - #20 int
INFO  10:36:26,195 - #20 g
INFO  10:36:26,195 - #40 ;
INFO  10:36:26,195 - #20 int
INFO  10:36:26,195 - #20 niz
INFO  10:36:26,195 - #45 [
INFO  10:36:26,195 - #46 ]
INFO  10:36:26,195 - #40 ;
INFO  10:36:26,195 - #47 {
INFO  10:36:26,195 - #16 void
INFO  10:36:26,195 - #20 main
INFO  10:36:26,196 - #43 (
INFO  10:36:26,196 - #44 )
INFO  10:36:26,196 - #47 {
INFO  10:36:26,196 - #20 g
INFO  10:36:26,196 - #37 =
INFO  10:36:26,196 - #20 N
INFO  10:36:26,196 - #40 ;
INFO  10:36:26,197 - #13 print
INFO  10:36:26,197 - #43 (
INFO  10:36:26,197 - #20 g
INFO  10:36:26,197 - #44 )
INFO  10:36:26,197 - #40 ;
INFO  10:36:26,198 - #20 g
INFO  10:36:26,198 - #38 ++
INFO  10:36:26,198 - #40 ;
INFO  10:36:26,198 - #20 niz
INFO  10:36:26,198 - #37 =
INFO  10:36:26,198 - #12 new
INFO  10:36:26,198 - #20 int
INFO  10:36:26,198 - #45 [
INFO  10:36:26,198 - #20 N
INFO  10:36:26,198 - #46 ]
INFO  10:36:26,199 - #40 ;
INFO  10:36:26,199 - #20 niz
INFO  10:36:26,199 - #45 [
INFO  10:36:26,199 - #21 0
INFO  10:36:26,199 - #46 ]
INFO  10:36:26,199 - #37 =
INFO  10:36:26,199 - #21 1
INFO  10:36:26,199 - #40 ;
INFO  10:36:26,200 - #13 print
INFO  10:36:26,200 - #43 (
INFO  10:36:26,200 - #20 niz
INFO  10:36:26,200 - #45 [
INFO  10:36:26,200 - #21 0
INFO  10:36:26,200 - #46 ]
INFO  10:36:26,200 - #44 )
INFO  10:36:26,200 - #40 ;
INFO  10:36:26,200 - #48 }
INFO  10:36:26,200 - #48 }
INFO  10:36:26,201 - 

================SINTAKSNO STABLO====================


INFO  10:36:26,202 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         g
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   N
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                  StmtPrint(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [StmtPrint]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   niz
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNewArray(
                            Type(
                             int
                            ) [Type]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     N
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [FactorNewArray]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorArray(
                 niz
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         0
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [DesignatorArray]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         1
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorArray(
                     niz
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             0
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [DesignatorArray]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:36:26,203 - 

================SEMANTICKA OBRADA====================


INFO  10:36:26,214 - Deklarisana konstanta 'N' na liniji 2
INFO  10:36:26,214 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  10:36:26,215 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:36:26,215 - Pristup elementu niza 'niz' na liniji 14
INFO  10:36:26,215 - Pristup elementu niza 'niz' na liniji 15
INFO  10:36:26,216 - ===================================
INFO  10:36:26,216 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:36:26,222 - Parsiranje uspesno zavrseno!
INFO  10:36:42,146 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:36:42,190 - #2 program
INFO  10:36:42,190 - #20 test
INFO  10:36:42,190 - #7 const
INFO  10:36:42,191 - #20 int
INFO  10:36:42,191 - #20 N
INFO  10:36:42,191 - #37 =
INFO  10:36:42,191 - #21 2
INFO  10:36:42,191 - #40 ;
INFO  10:36:42,192 - #20 int
INFO  10:36:42,193 - #20 g
INFO  10:36:42,193 - #40 ;
INFO  10:36:42,193 - #20 int
INFO  10:36:42,193 - #20 niz
INFO  10:36:42,193 - #45 [
INFO  10:36:42,193 - #46 ]
INFO  10:36:42,193 - #40 ;
INFO  10:36:42,193 - #47 {
INFO  10:36:42,194 - #16 void
INFO  10:36:42,194 - #20 main
INFO  10:36:42,194 - #43 (
INFO  10:36:42,194 - #44 )
INFO  10:36:42,194 - #47 {
INFO  10:36:42,194 - #20 g
INFO  10:36:42,194 - #37 =
INFO  10:36:42,194 - #20 N
INFO  10:36:42,194 - #40 ;
INFO  10:36:42,195 - #13 print
INFO  10:36:42,195 - #43 (
INFO  10:36:42,195 - #20 g
INFO  10:36:42,196 - #44 )
INFO  10:36:42,196 - #40 ;
INFO  10:36:42,196 - #20 g
INFO  10:36:42,196 - #38 ++
INFO  10:36:42,196 - #40 ;
INFO  10:36:42,196 - #20 niz
INFO  10:36:42,196 - #37 =
INFO  10:36:42,196 - #12 new
INFO  10:36:42,196 - #20 int
INFO  10:36:42,196 - #45 [
INFO  10:36:42,197 - #20 N
INFO  10:36:42,197 - #46 ]
INFO  10:36:42,197 - #40 ;
INFO  10:36:42,197 - #20 niz
INFO  10:36:42,197 - #45 [
INFO  10:36:42,197 - #21 0
INFO  10:36:42,197 - #46 ]
INFO  10:36:42,197 - #37 =
INFO  10:36:42,197 - #21 1
INFO  10:36:42,197 - #40 ;
INFO  10:36:42,198 - #13 print
INFO  10:36:42,198 - #43 (
INFO  10:36:42,198 - #20 niz
INFO  10:36:42,198 - #45 [
INFO  10:36:42,198 - #21 1
INFO  10:36:42,198 - #46 ]
INFO  10:36:42,198 - #44 )
INFO  10:36:42,198 - #40 ;
INFO  10:36:42,198 - #48 }
INFO  10:36:42,198 - #48 }
INFO  10:36:42,199 - 

================SINTAKSNO STABLO====================


INFO  10:36:42,200 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         g
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   N
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                  StmtPrint(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [StmtPrint]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   niz
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNewArray(
                            Type(
                             int
                            ) [Type]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     N
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [FactorNewArray]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorArray(
                 niz
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         0
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [DesignatorArray]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         1
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorArray(
                     niz
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             1
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [DesignatorArray]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:36:42,201 - 

================SEMANTICKA OBRADA====================


INFO  10:36:42,212 - Deklarisana konstanta 'N' na liniji 2
INFO  10:36:42,212 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  10:36:42,212 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:36:42,213 - Pristup elementu niza 'niz' na liniji 14
INFO  10:36:42,213 - Pristup elementu niza 'niz' na liniji 15
INFO  10:36:42,214 - ===================================
INFO  10:36:42,214 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:36:42,219 - Parsiranje uspesno zavrseno!
INFO  10:36:58,363 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:36:58,407 - #2 program
INFO  10:36:58,407 - #20 test
INFO  10:36:58,408 - #7 const
INFO  10:36:58,408 - #20 int
INFO  10:36:58,408 - #20 N
INFO  10:36:58,409 - #37 =
INFO  10:36:58,409 - #21 2
INFO  10:36:58,409 - #40 ;
INFO  10:36:58,410 - #20 int
INFO  10:36:58,410 - #20 g
INFO  10:36:58,410 - #40 ;
INFO  10:36:58,410 - #20 int
INFO  10:36:58,411 - #20 niz
INFO  10:36:58,411 - #45 [
INFO  10:36:58,411 - #46 ]
INFO  10:36:58,411 - #40 ;
INFO  10:36:58,411 - #47 {
INFO  10:36:58,411 - #16 void
INFO  10:36:58,411 - #20 main
INFO  10:36:58,411 - #43 (
INFO  10:36:58,412 - #44 )
INFO  10:36:58,412 - #47 {
INFO  10:36:58,412 - #20 g
INFO  10:36:58,412 - #37 =
INFO  10:36:58,412 - #20 N
INFO  10:36:58,412 - #40 ;
INFO  10:36:58,413 - #13 print
INFO  10:36:58,413 - #43 (
INFO  10:36:58,413 - #20 g
INFO  10:36:58,413 - #44 )
INFO  10:36:58,413 - #40 ;
INFO  10:36:58,413 - #20 g
INFO  10:36:58,414 - #38 ++
INFO  10:36:58,414 - #40 ;
INFO  10:36:58,414 - #20 niz
INFO  10:36:58,414 - #37 =
INFO  10:36:58,414 - #12 new
INFO  10:36:58,414 - #20 int
INFO  10:36:58,414 - #45 [
INFO  10:36:58,414 - #20 N
INFO  10:36:58,414 - #46 ]
INFO  10:36:58,414 - #40 ;
INFO  10:36:58,415 - #20 niz
INFO  10:36:58,415 - #45 [
INFO  10:36:58,416 - #21 0
INFO  10:36:58,416 - #46 ]
INFO  10:36:58,416 - #37 =
INFO  10:36:58,416 - #21 1
INFO  10:36:58,416 - #40 ;
INFO  10:36:58,416 - #13 print
INFO  10:36:58,416 - #43 (
INFO  10:36:58,416 - #20 niz
INFO  10:36:58,416 - #45 [
INFO  10:36:58,416 - #21 2
INFO  10:36:58,417 - #46 ]
INFO  10:36:58,417 - #44 )
INFO  10:36:58,417 - #40 ;
INFO  10:36:58,417 - #48 }
INFO  10:36:58,417 - #48 }
INFO  10:36:58,419 - 

================SINTAKSNO STABLO====================


INFO  10:36:58,420 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         g
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   N
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                  StmtPrint(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [StmtPrint]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   niz
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNewArray(
                            Type(
                             int
                            ) [Type]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     N
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [FactorNewArray]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorArray(
                 niz
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         0
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [DesignatorArray]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         1
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorArray(
                     niz
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNumConst(
                             2
                            ) [FactorNumConst]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [DesignatorArray]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:36:58,421 - 

================SEMANTICKA OBRADA====================


INFO  10:36:58,432 - Deklarisana konstanta 'N' na liniji 2
INFO  10:36:58,432 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  10:36:58,432 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:36:58,433 - Pristup elementu niza 'niz' na liniji 14
INFO  10:36:58,433 - Pristup elementu niza 'niz' na liniji 15
INFO  10:36:58,434 - ===================================
INFO  10:36:58,434 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:36:58,439 - Parsiranje uspesno zavrseno!
INFO  10:52:27,870 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  10:52:27,917 - #2 program
INFO  10:52:27,917 - #20 test
INFO  10:52:27,917 - #7 const
INFO  10:52:27,918 - #20 int
INFO  10:52:27,918 - #20 N
INFO  10:52:27,918 - #37 =
INFO  10:52:27,918 - #21 2
INFO  10:52:27,918 - #40 ;
INFO  10:52:27,919 - #20 int
INFO  10:52:27,919 - #20 g
INFO  10:52:27,919 - #40 ;
INFO  10:52:27,919 - #20 int
INFO  10:52:27,919 - #20 niz
INFO  10:52:27,919 - #45 [
INFO  10:52:27,920 - #46 ]
INFO  10:52:27,920 - #40 ;
INFO  10:52:27,920 - #47 {
INFO  10:52:27,920 - #16 void
INFO  10:52:27,920 - #20 main
INFO  10:52:27,920 - #43 (
INFO  10:52:27,920 - #44 )
INFO  10:52:27,920 - #20 int
INFO  10:52:27,920 - #20 m
INFO  10:52:27,920 - #40 ;
INFO  10:52:27,920 - #47 {
INFO  10:52:27,921 - #20 g
INFO  10:52:27,921 - #37 =
INFO  10:52:27,921 - #20 N
INFO  10:52:27,921 - #40 ;
INFO  10:52:27,921 - #13 print
INFO  10:52:27,922 - #43 (
INFO  10:52:27,922 - #20 g
INFO  10:52:27,922 - #44 )
INFO  10:52:27,922 - #40 ;
INFO  10:52:27,922 - #20 g
INFO  10:52:27,923 - #38 ++
INFO  10:52:27,923 - #40 ;
INFO  10:52:27,923 - #20 niz
INFO  10:52:27,923 - #37 =
INFO  10:52:27,923 - #12 new
INFO  10:52:27,923 - #20 int
INFO  10:52:27,923 - #45 [
INFO  10:52:27,923 - #20 N
INFO  10:52:27,923 - #46 ]
INFO  10:52:27,923 - #40 ;
INFO  10:52:27,924 - #20 niz
INFO  10:52:27,924 - #45 [
INFO  10:52:27,924 - #21 0
INFO  10:52:27,924 - #46 ]
INFO  10:52:27,924 - #37 =
INFO  10:52:27,924 - #21 1
INFO  10:52:27,924 - #40 ;
INFO  10:52:27,924 - #48 }
INFO  10:52:27,924 - #48 }
INFO  10:52:27,925 - 

================SINTAKSNO STABLO====================


INFO  10:52:27,926 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               m
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtPrint(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           g
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [StmtPrint]
              ) [StatementMulti]
              StmtDesign(
                DesignatorIncrement(
                  DesignatorSimple(
                   g
                  ) [DesignatorSimple]
                ) [DesignatorIncrement]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 niz
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNewArray(
                          Type(
                           int
                          ) [Type]
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   N
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [FactorNewArray]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorArray(
               niz
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       0
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [DesignatorArray]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       1
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  10:52:27,927 - 

================SEMANTICKA OBRADA====================


INFO  10:52:27,940 - Deklarisana konstanta 'N' na liniji 2
INFO  10:52:27,940 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  10:52:27,940 - Deklarisan globalni niz 'niz' na liniji 4
INFO  10:52:27,941 - Deklarisana promenljiva 'm' na liniji 7
INFO  10:52:27,941 - Pristup elementu niza 'niz' na liniji 15
INFO  10:52:27,942 - ===================================
INFO  10:52:27,942 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  10:52:27,948 - Parsiranje uspesno zavrseno!
INFO  11:00:04,565 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  11:00:04,612 - #2 program
INFO  11:00:04,612 - #20 test
INFO  11:00:04,612 - #7 const
INFO  11:00:04,613 - #20 int
INFO  11:00:04,613 - #20 N
INFO  11:00:04,613 - #37 =
INFO  11:00:04,613 - #21 2
INFO  11:00:04,613 - #40 ;
INFO  11:00:04,614 - #20 int
INFO  11:00:04,614 - #20 g
INFO  11:00:04,614 - #40 ;
INFO  11:00:04,614 - #20 int
INFO  11:00:04,615 - #20 niz
INFO  11:00:04,615 - #45 [
INFO  11:00:04,615 - #46 ]
INFO  11:00:04,615 - #40 ;
INFO  11:00:04,615 - #47 {
INFO  11:00:04,615 - #16 void
INFO  11:00:04,615 - #20 main
INFO  11:00:04,615 - #43 (
INFO  11:00:04,616 - #44 )
INFO  11:00:04,616 - #20 int
INFO  11:00:04,616 - #20 m
INFO  11:00:04,616 - #40 ;
INFO  11:00:04,616 - #47 {
INFO  11:00:04,616 - #20 g
INFO  11:00:04,616 - #37 =
INFO  11:00:04,616 - #20 N
INFO  11:00:04,616 - #40 ;
INFO  11:00:04,617 - #13 print
INFO  11:00:04,617 - #43 (
INFO  11:00:04,617 - #20 g
INFO  11:00:04,618 - #44 )
INFO  11:00:04,618 - #40 ;
INFO  11:00:04,618 - #20 g
INFO  11:00:04,618 - #38 ++
INFO  11:00:04,618 - #40 ;
INFO  11:00:04,618 - #20 niz
INFO  11:00:04,618 - #37 =
INFO  11:00:04,618 - #12 new
INFO  11:00:04,618 - #20 int
INFO  11:00:04,618 - #45 [
INFO  11:00:04,618 - #20 N
INFO  11:00:04,618 - #46 ]
INFO  11:00:04,619 - #40 ;
INFO  11:00:04,619 - #20 niz
INFO  11:00:04,619 - #45 [
INFO  11:00:04,619 - #21 0
INFO  11:00:04,619 - #46 ]
INFO  11:00:04,619 - #37 =
INFO  11:00:04,619 - #21 1
INFO  11:00:04,619 - #40 ;
INFO  11:00:04,620 - #20 m
INFO  11:00:04,620 - #37 =
INFO  11:00:04,620 - #20 N
INFO  11:00:04,620 - #26 *
INFO  11:00:04,620 - #20 g
INFO  11:00:04,621 - #26 *
INFO  11:00:04,621 - #20 niz
INFO  11:00:04,621 - #45 [
INFO  11:00:04,621 - #21 0
INFO  11:00:04,621 - #46 ]
INFO  11:00:04,621 - #40 ;
INFO  11:00:04,621 - #48 }
INFO  11:00:04,622 - #48 }
INFO  11:00:04,623 - 

================SINTAKSNO STABLO====================


INFO  11:00:04,624 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               m
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         g
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   N
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                  StmtPrint(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [StmtPrint]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   niz
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNewArray(
                            Type(
                             int
                            ) [Type]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     N
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [FactorNewArray]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorArray(
                 niz
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         0
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [DesignatorArray]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         1
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               m
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermMulop(
                      TermMulop(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             N
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                        MulopMul(
                        ) [MulopMul]
                        FactorDesignator(
                          DesignatorSimple(
                           g
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermMulop]
                      MulopMul(
                      ) [MulopMul]
                      FactorDesignator(
                        DesignatorArray(
                         niz
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 0
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [DesignatorArray]
                      ) [FactorDesignator]
                    ) [TermMulop]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  11:00:04,626 - 

================SEMANTICKA OBRADA====================


INFO  11:00:04,638 - Deklarisana konstanta 'N' na liniji 2
INFO  11:00:04,638 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  11:00:04,638 - Deklarisan globalni niz 'niz' na liniji 4
INFO  11:00:04,638 - Deklarisana promenljiva 'm' na liniji 7
INFO  11:00:04,638 - Pristup elementu niza 'niz' na liniji 15
INFO  11:00:04,638 - Pristup elementu niza 'niz' na liniji 17
INFO  11:00:04,639 - ===================================
INFO  11:00:04,639 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  11:00:04,645 - Parsiranje uspesno zavrseno!
INFO  11:06:48,538 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  11:06:48,590 - #2 program
INFO  11:06:48,590 - #20 test
INFO  11:06:48,590 - #7 const
INFO  11:06:48,591 - #20 int
INFO  11:06:48,591 - #20 N
INFO  11:06:48,591 - #37 =
INFO  11:06:48,591 - #21 2
INFO  11:06:48,591 - #40 ;
INFO  11:06:48,592 - #20 int
INFO  11:06:48,592 - #20 g
INFO  11:06:48,592 - #40 ;
INFO  11:06:48,592 - #20 int
INFO  11:06:48,592 - #20 niz
INFO  11:06:48,593 - #45 [
INFO  11:06:48,593 - #46 ]
INFO  11:06:48,593 - #40 ;
INFO  11:06:48,593 - #47 {
INFO  11:06:48,593 - #16 void
INFO  11:06:48,593 - #20 main
INFO  11:06:48,593 - #43 (
INFO  11:06:48,593 - #44 )
INFO  11:06:48,593 - #20 int
INFO  11:06:48,593 - #20 m
INFO  11:06:48,594 - #40 ;
INFO  11:06:48,594 - #47 {
INFO  11:06:48,594 - #20 g
INFO  11:06:48,594 - #37 =
INFO  11:06:48,594 - #20 N
INFO  11:06:48,595 - #40 ;
INFO  11:06:48,595 - #13 print
INFO  11:06:48,596 - #43 (
INFO  11:06:48,596 - #20 g
INFO  11:06:48,596 - #44 )
INFO  11:06:48,596 - #40 ;
INFO  11:06:48,596 - #20 g
INFO  11:06:48,597 - #38 ++
INFO  11:06:48,597 - #40 ;
INFO  11:06:48,597 - #20 niz
INFO  11:06:48,597 - #37 =
INFO  11:06:48,597 - #12 new
INFO  11:06:48,597 - #20 int
INFO  11:06:48,597 - #45 [
INFO  11:06:48,597 - #20 N
INFO  11:06:48,597 - #46 ]
INFO  11:06:48,598 - #40 ;
INFO  11:06:48,599 - #20 niz
INFO  11:06:48,599 - #45 [
INFO  11:06:48,599 - #21 0
INFO  11:06:48,599 - #46 ]
INFO  11:06:48,599 - #37 =
INFO  11:06:48,599 - #21 1
INFO  11:06:48,599 - #40 ;
INFO  11:06:48,599 - #20 m
INFO  11:06:48,600 - #37 =
INFO  11:06:48,600 - #20 N
INFO  11:06:48,600 - #26 *
INFO  11:06:48,600 - #20 g
INFO  11:06:48,601 - #26 *
INFO  11:06:48,601 - #20 niz
INFO  11:06:48,601 - #45 [
INFO  11:06:48,601 - #21 0
INFO  11:06:48,601 - #46 ]
INFO  11:06:48,602 - #40 ;
INFO  11:06:48,602 - #48 }
INFO  11:06:48,602 - #48 }
INFO  11:06:48,603 - 

================SINTAKSNO STABLO====================


INFO  11:06:48,604 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               m
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         g
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   N
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                  StmtPrint(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [StmtPrint]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   niz
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNewArray(
                            Type(
                             int
                            ) [Type]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     N
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [FactorNewArray]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorArray(
                 niz
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         0
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [DesignatorArray]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorNumConst(
                         1
                        ) [FactorNumConst]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               m
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermMulop(
                      TermMulop(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             N
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                        MulopMul(
                        ) [MulopMul]
                        FactorDesignator(
                          DesignatorSimple(
                           g
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermMulop]
                      MulopMul(
                      ) [MulopMul]
                      FactorDesignator(
                        DesignatorArray(
                         niz
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorNumConst(
                                 0
                                ) [FactorNumConst]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [DesignatorArray]
                      ) [FactorDesignator]
                    ) [TermMulop]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  11:06:48,604 - 

================SEMANTICKA OBRADA====================


INFO  11:06:48,615 - Deklarisana konstanta 'N' na liniji 2
INFO  11:06:48,615 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  11:06:48,615 - Deklarisan globalni niz 'niz' na liniji 4
INFO  11:06:48,615 - Deklarisana promenljiva 'm' na liniji 7
INFO  11:06:48,616 - Pristup elementu niza 'niz' na liniji 15
INFO  11:06:48,616 - Pristup elementu niza 'niz' na liniji 17
INFO  11:06:48,616 - ===================================
INFO  11:06:48,616 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  11:06:48,622 - Parsiranje uspesno zavrseno!
INFO  11:07:43,871 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  11:07:43,938 - #2 program
INFO  11:07:43,938 - #20 test
INFO  11:07:43,938 - #7 const
INFO  11:07:43,939 - #20 int
INFO  11:07:43,939 - #20 N
INFO  11:07:43,940 - #37 =
INFO  11:07:43,940 - #21 2
INFO  11:07:43,940 - #40 ;
INFO  11:07:43,941 - #20 int
INFO  11:07:43,941 - #20 g
INFO  11:07:43,941 - #40 ;
INFO  11:07:43,942 - #20 int
INFO  11:07:43,942 - #20 niz
INFO  11:07:43,942 - #45 [
INFO  11:07:43,942 - #46 ]
INFO  11:07:43,942 - #40 ;
INFO  11:07:43,943 - #47 {
INFO  11:07:43,943 - #16 void
INFO  11:07:43,943 - #20 main
INFO  11:07:43,943 - #43 (
INFO  11:07:43,943 - #44 )
INFO  11:07:43,944 - #20 int
INFO  11:07:43,944 - #20 m
INFO  11:07:43,944 - #40 ;
INFO  11:07:43,944 - #47 {
INFO  11:07:43,945 - #20 g
INFO  11:07:43,945 - #37 =
INFO  11:07:43,945 - #20 N
INFO  11:07:43,946 - #40 ;
INFO  11:07:43,946 - #20 g
INFO  11:07:43,947 - #38 ++
INFO  11:07:43,947 - #40 ;
INFO  11:07:43,947 - #20 niz
INFO  11:07:43,947 - #37 =
INFO  11:07:43,947 - #12 new
INFO  11:07:43,947 - #20 int
INFO  11:07:43,947 - #45 [
INFO  11:07:43,947 - #20 N
INFO  11:07:43,948 - #46 ]
INFO  11:07:43,948 - #40 ;
INFO  11:07:43,948 - #20 niz
INFO  11:07:43,948 - #45 [
INFO  11:07:43,948 - #21 0
INFO  11:07:43,948 - #46 ]
INFO  11:07:43,948 - #37 =
INFO  11:07:43,949 - #21 1
INFO  11:07:43,949 - #40 ;
INFO  11:07:43,949 - #20 m
INFO  11:07:43,949 - #37 =
INFO  11:07:43,950 - #20 N
INFO  11:07:43,950 - #26 *
INFO  11:07:43,952 - #20 g
INFO  11:07:43,954 - #26 *
INFO  11:07:43,955 - #20 niz
INFO  11:07:43,955 - #45 [
INFO  11:07:43,955 - #21 0
INFO  11:07:43,955 - #46 ]
INFO  11:07:43,955 - #40 ;
INFO  11:07:43,955 - #13 print
INFO  11:07:43,955 - #43 (
INFO  11:07:43,955 - #20 m
INFO  11:07:43,955 - #44 )
INFO  11:07:43,955 - #40 ;
INFO  11:07:43,956 - #48 }
INFO  11:07:43,956 - #48 }
INFO  11:07:43,958 - 

================SINTAKSNO STABLO====================


INFO  11:07:43,961 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               m
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         g
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   N
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     niz
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNewArray(
                              Type(
                               int
                              ) [Type]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       N
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [FactorNewArray]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   niz
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           0
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 m
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermMulop(
                        TermMulop(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               N
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                          MulopMul(
                          ) [MulopMul]
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermMulop]
                        MulopMul(
                        ) [MulopMul]
                        FactorDesignator(
                          DesignatorArray(
                           niz
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   0
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [DesignatorArray]
                        ) [FactorDesignator]
                      ) [TermMulop]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     m
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  11:07:43,962 - 

================SEMANTICKA OBRADA====================


INFO  11:07:43,975 - Deklarisana konstanta 'N' na liniji 2
INFO  11:07:43,975 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  11:07:43,975 - Deklarisan globalni niz 'niz' na liniji 4
INFO  11:07:43,975 - Deklarisana promenljiva 'm' na liniji 7
INFO  11:07:43,976 - Pristup elementu niza 'niz' na liniji 14
INFO  11:07:43,976 - Pristup elementu niza 'niz' na liniji 16
INFO  11:07:43,976 - ===================================
INFO  11:07:43,977 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  11:07:43,982 - Parsiranje uspesno zavrseno!
INFO  11:08:30,842 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  11:08:30,887 - #2 program
INFO  11:08:30,887 - #20 test
INFO  11:08:30,887 - #7 const
INFO  11:08:30,888 - #20 int
INFO  11:08:30,888 - #20 N
INFO  11:08:30,888 - #37 =
INFO  11:08:30,888 - #21 2
INFO  11:08:30,888 - #40 ;
INFO  11:08:30,889 - #20 int
INFO  11:08:30,889 - #20 g
INFO  11:08:30,889 - #40 ;
INFO  11:08:30,889 - #20 int
INFO  11:08:30,890 - #20 niz
INFO  11:08:30,890 - #45 [
INFO  11:08:30,890 - #46 ]
INFO  11:08:30,890 - #40 ;
INFO  11:08:30,890 - #47 {
INFO  11:08:30,890 - #16 void
INFO  11:08:30,890 - #20 main
INFO  11:08:30,890 - #43 (
INFO  11:08:30,890 - #44 )
INFO  11:08:30,890 - #20 int
INFO  11:08:30,890 - #20 m
INFO  11:08:30,890 - #40 ;
INFO  11:08:30,891 - #20 int
INFO  11:08:30,891 - #20 k
INFO  11:08:30,891 - #40 ;
INFO  11:08:30,891 - #47 {
INFO  11:08:30,891 - #20 g
INFO  11:08:30,891 - #37 =
INFO  11:08:30,891 - #20 N
INFO  11:08:30,891 - #40 ;
INFO  11:08:30,892 - #20 g
INFO  11:08:30,892 - #38 ++
INFO  11:08:30,892 - #40 ;
INFO  11:08:30,893 - #20 k
INFO  11:08:30,893 - #37 =
INFO  11:08:30,893 - #20 g
INFO  11:08:30,893 - #40 ;
INFO  11:08:30,893 - #20 niz
INFO  11:08:30,893 - #37 =
INFO  11:08:30,893 - #12 new
INFO  11:08:30,893 - #20 int
INFO  11:08:30,893 - #45 [
INFO  11:08:30,893 - #20 N
INFO  11:08:30,893 - #46 ]
INFO  11:08:30,893 - #40 ;
INFO  11:08:30,894 - #20 niz
INFO  11:08:30,894 - #45 [
INFO  11:08:30,894 - #21 0
INFO  11:08:30,894 - #46 ]
INFO  11:08:30,894 - #37 =
INFO  11:08:30,894 - #21 1
INFO  11:08:30,894 - #40 ;
INFO  11:08:30,894 - #20 m
INFO  11:08:30,894 - #37 =
INFO  11:08:30,894 - #20 N
INFO  11:08:30,894 - #26 *
INFO  11:08:30,894 - #20 k
INFO  11:08:30,895 - #26 *
INFO  11:08:30,895 - #20 niz
INFO  11:08:30,895 - #45 [
INFO  11:08:30,895 - #21 0
INFO  11:08:30,895 - #46 ]
INFO  11:08:30,895 - #40 ;
INFO  11:08:30,895 - #13 print
INFO  11:08:30,896 - #43 (
INFO  11:08:30,896 - #20 m
INFO  11:08:30,896 - #44 )
INFO  11:08:30,896 - #40 ;
INFO  11:08:30,896 - #48 }
INFO  11:08:30,896 - #48 }
INFO  11:08:30,897 - 

================SINTAKSNO STABLO====================


INFO  11:08:30,899 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementSingle(
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           g
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     N
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementSingle]
                    StmtDesign(
                      DesignatorIncrement(
                        DesignatorSimple(
                         g
                        ) [DesignatorSimple]
                      ) [DesignatorIncrement]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       k
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 g
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     niz
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorNewArray(
                              Type(
                               int
                              ) [Type]
                              ExprOne(
                                ExprSingle(
                                  TermSingle(
                                    FactorDesignator(
                                      DesignatorSimple(
                                       N
                                      ) [DesignatorSimple]
                                    ) [FactorDesignator]
                                  ) [TermSingle]
                                ) [ExprSingle]
                              ) [ExprOne]
                            ) [FactorNewArray]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorArray(
                   niz
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           0
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [DesignatorArray]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 m
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermMulop(
                        TermMulop(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               N
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                          MulopMul(
                          ) [MulopMul]
                          FactorDesignator(
                            DesignatorSimple(
                             k
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermMulop]
                        MulopMul(
                        ) [MulopMul]
                        FactorDesignator(
                          DesignatorArray(
                           niz
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorNumConst(
                                   0
                                  ) [FactorNumConst]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [DesignatorArray]
                        ) [FactorDesignator]
                      ) [TermMulop]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     m
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  11:08:30,901 - 

================SEMANTICKA OBRADA====================


INFO  11:08:30,912 - Deklarisana konstanta 'N' na liniji 2
INFO  11:08:30,912 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  11:08:30,912 - Deklarisan globalni niz 'niz' na liniji 4
INFO  11:08:30,913 - Deklarisana promenljiva 'm' na liniji 7
INFO  11:08:30,913 - Deklarisana promenljiva 'k' na liniji 8
INFO  11:08:30,913 - Pristup elementu niza 'niz' na liniji 16
INFO  11:08:30,913 - Pristup elementu niza 'niz' na liniji 18
INFO  11:08:30,915 - ===================================
INFO  11:08:30,915 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  11:08:30,923 - Parsiranje uspesno zavrseno!
INFO  12:01:51,760 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:01:51,809 - #2 program
INFO  12:01:51,809 - #20 test
INFO  12:01:51,809 - #7 const
INFO  12:01:51,810 - #20 int
INFO  12:01:51,810 - #20 N
INFO  12:01:51,811 - #37 =
INFO  12:01:51,811 - #21 2
INFO  12:01:51,811 - #40 ;
INFO  12:01:51,811 - #20 int
INFO  12:01:51,812 - #20 g
INFO  12:01:51,812 - #40 ;
INFO  12:01:51,812 - #20 int
INFO  12:01:51,812 - #20 niz
INFO  12:01:51,812 - #45 [
INFO  12:01:51,812 - #46 ]
INFO  12:01:51,812 - #40 ;
INFO  12:01:51,812 - #47 {
INFO  12:01:51,812 - #16 void
INFO  12:01:51,812 - #20 main
INFO  12:01:51,813 - #43 (
INFO  12:01:51,813 - #44 )
INFO  12:01:51,813 - #20 int
INFO  12:01:51,813 - #20 m
INFO  12:01:51,813 - #40 ;
INFO  12:01:51,814 - #20 int
INFO  12:01:51,814 - #20 k
INFO  12:01:51,814 - #40 ;
INFO  12:01:51,814 - #47 {
INFO  12:01:51,814 - #20 g
INFO  12:01:51,814 - #37 =
INFO  12:01:51,815 - #20 N
INFO  12:01:51,815 - #40 ;
INFO  12:01:51,816 - #20 g
INFO  12:01:51,816 - #38 ++
INFO  12:01:51,816 - #40 ;
INFO  12:01:51,816 - #20 k
INFO  12:01:51,816 - #37 =
INFO  12:01:51,816 - #20 g
INFO  12:01:51,817 - #40 ;
INFO  12:01:51,817 - #20 niz
INFO  12:01:51,817 - #37 =
INFO  12:01:51,817 - #12 new
INFO  12:01:51,817 - #20 int
INFO  12:01:51,817 - #45 [
INFO  12:01:51,818 - #20 N
INFO  12:01:51,818 - #46 ]
INFO  12:01:51,818 - #40 ;
INFO  12:01:51,818 - #20 m
INFO  12:01:51,818 - #37 =
INFO  12:01:51,818 - #20 N
INFO  12:01:51,818 - #26 *
INFO  12:01:51,818 - #20 k
INFO  12:01:51,819 - #26 *
INFO  12:01:51,820 - #21 3
INFO  12:01:51,820 - #40 ;
INFO  12:01:51,820 - #13 print
INFO  12:01:51,820 - #43 (
INFO  12:01:51,820 - #20 m
INFO  12:01:51,820 - #44 )
INFO  12:01:51,820 - #40 ;
INFO  12:01:51,820 - #48 }
INFO  12:01:51,820 - #48 }
INFO  12:01:51,821 - 

================SINTAKSNO STABLO====================


INFO  12:01:51,822 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         g
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   N
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               g
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   niz
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNewArray(
                            Type(
                             int
                            ) [Type]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     N
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [FactorNewArray]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 m
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermMulop(
                        TermMulop(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               N
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                          MulopMul(
                          ) [MulopMul]
                          FactorDesignator(
                            DesignatorSimple(
                             k
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermMulop]
                        MulopMul(
                        ) [MulopMul]
                        FactorNumConst(
                         3
                        ) [FactorNumConst]
                      ) [TermMulop]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     m
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  12:01:51,823 - 

================SEMANTICKA OBRADA====================


INFO  12:01:51,834 - Deklarisana konstanta 'N' na liniji 2
INFO  12:01:51,834 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  12:01:51,835 - Deklarisan globalni niz 'niz' na liniji 4
INFO  12:01:51,835 - Deklarisana promenljiva 'm' na liniji 7
INFO  12:01:51,835 - Deklarisana promenljiva 'k' na liniji 8
INFO  12:01:51,836 - ===================================
INFO  12:01:51,836 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  12:01:51,842 - Parsiranje uspesno zavrseno!
INFO  12:02:44,872 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:02:44,917 - #2 program
INFO  12:02:44,917 - #20 test
INFO  12:02:44,917 - #7 const
INFO  12:02:44,918 - #20 int
INFO  12:02:44,918 - #20 N
INFO  12:02:44,919 - #37 =
INFO  12:02:44,919 - #21 2
INFO  12:02:44,919 - #40 ;
INFO  12:02:44,920 - #20 int
INFO  12:02:44,920 - #20 g
INFO  12:02:44,920 - #40 ;
INFO  12:02:44,920 - #20 int
INFO  12:02:44,920 - #20 niz
INFO  12:02:44,920 - #45 [
INFO  12:02:44,920 - #46 ]
INFO  12:02:44,920 - #40 ;
INFO  12:02:44,920 - #47 {
INFO  12:02:44,921 - #16 void
INFO  12:02:44,921 - #20 main
INFO  12:02:44,921 - #43 (
INFO  12:02:44,921 - #44 )
INFO  12:02:44,921 - #20 int
INFO  12:02:44,921 - #20 m
INFO  12:02:44,921 - #40 ;
INFO  12:02:44,921 - #20 int
INFO  12:02:44,922 - #20 k
INFO  12:02:44,922 - #40 ;
INFO  12:02:44,922 - #47 {
INFO  12:02:44,922 - #20 g
INFO  12:02:44,922 - #37 =
INFO  12:02:44,922 - #20 N
INFO  12:02:44,922 - #40 ;
INFO  12:02:44,923 - #20 g
INFO  12:02:44,923 - #38 ++
INFO  12:02:44,923 - #40 ;
INFO  12:02:44,923 - #20 k
INFO  12:02:44,924 - #37 =
INFO  12:02:44,924 - #20 g
INFO  12:02:44,924 - #40 ;
INFO  12:02:44,924 - #20 niz
INFO  12:02:44,924 - #37 =
INFO  12:02:44,924 - #12 new
INFO  12:02:44,924 - #20 int
INFO  12:02:44,924 - #45 [
INFO  12:02:44,924 - #20 N
INFO  12:02:44,924 - #46 ]
INFO  12:02:44,924 - #40 ;
INFO  12:02:44,924 - #20 m
INFO  12:02:44,924 - #37 =
INFO  12:02:44,925 - #21 2
INFO  12:02:44,925 - #26 *
INFO  12:02:44,925 - #21 1
INFO  12:02:44,925 - #26 *
INFO  12:02:44,926 - #21 3
INFO  12:02:44,926 - #40 ;
INFO  12:02:44,926 - #13 print
INFO  12:02:44,926 - #43 (
INFO  12:02:44,926 - #20 m
INFO  12:02:44,926 - #44 )
INFO  12:02:44,926 - #40 ;
INFO  12:02:44,926 - #48 }
INFO  12:02:44,927 - #48 }
INFO  12:02:44,929 - 

================SINTAKSNO STABLO====================


INFO  12:02:44,930 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementSingle(
                    StmtDesign(
                      DesignatorAssignment(
                        DesignatorSimple(
                         g
                        ) [DesignatorSimple]
                        AssignmentExpr(
                          ExprOne(
                            ExprSingle(
                              TermSingle(
                                FactorDesignator(
                                  DesignatorSimple(
                                   N
                                  ) [DesignatorSimple]
                                ) [FactorDesignator]
                              ) [TermSingle]
                            ) [ExprSingle]
                          ) [ExprOne]
                        ) [AssignmentExpr]
                      ) [DesignatorAssignment]
                    ) [StmtDesign]
                  ) [StatementSingle]
                  StmtDesign(
                    DesignatorIncrement(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                    ) [DesignatorIncrement]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               g
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   niz
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNewArray(
                            Type(
                             int
                            ) [Type]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     N
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [FactorNewArray]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 m
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermMulop(
                        TermMulop(
                          TermSingle(
                            FactorNumConst(
                             2
                            ) [FactorNumConst]
                          ) [TermSingle]
                          MulopMul(
                          ) [MulopMul]
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermMulop]
                        MulopMul(
                        ) [MulopMul]
                        FactorNumConst(
                         3
                        ) [FactorNumConst]
                      ) [TermMulop]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     m
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  12:02:44,932 - 

================SEMANTICKA OBRADA====================


INFO  12:02:44,942 - Deklarisana konstanta 'N' na liniji 2
INFO  12:02:44,942 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  12:02:44,943 - Deklarisan globalni niz 'niz' na liniji 4
INFO  12:02:44,943 - Deklarisana promenljiva 'm' na liniji 7
INFO  12:02:44,943 - Deklarisana promenljiva 'k' na liniji 8
INFO  12:02:44,945 - ===================================
INFO  12:02:44,945 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  12:02:44,950 - Parsiranje uspesno zavrseno!
INFO  12:10:39,393 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:10:39,444 - #2 program
INFO  12:10:39,444 - #20 test
INFO  12:10:39,444 - #7 const
INFO  12:10:39,445 - #20 int
INFO  12:10:39,445 - #20 N
INFO  12:10:39,446 - #37 =
INFO  12:10:39,446 - #21 2
INFO  12:10:39,446 - #40 ;
INFO  12:10:39,447 - #20 int
INFO  12:10:39,447 - #20 g
INFO  12:10:39,447 - #40 ;
INFO  12:10:39,448 - #20 int
INFO  12:10:39,448 - #20 niz
INFO  12:10:39,448 - #45 [
INFO  12:10:39,448 - #46 ]
INFO  12:10:39,448 - #40 ;
INFO  12:10:39,448 - #47 {
INFO  12:10:39,448 - #16 void
INFO  12:10:39,448 - #20 main
INFO  12:10:39,448 - #43 (
INFO  12:10:39,449 - #44 )
INFO  12:10:39,449 - #20 int
INFO  12:10:39,449 - #20 m
INFO  12:10:39,449 - #40 ;
INFO  12:10:39,449 - #20 int
INFO  12:10:39,450 - #20 k
INFO  12:10:39,450 - #40 ;
INFO  12:10:39,450 - #47 {
INFO  12:10:39,450 - #20 g
INFO  12:10:39,450 - #37 =
INFO  12:10:39,450 - #20 N
INFO  12:10:39,450 - #40 ;
INFO  12:10:39,451 - #20 g
INFO  12:10:39,451 - #38 ++
INFO  12:10:39,451 - #40 ;
INFO  12:10:39,451 - #20 k
INFO  12:10:39,451 - #37 =
INFO  12:10:39,452 - #20 g
INFO  12:10:39,452 - #40 ;
INFO  12:10:39,452 - #13 print
INFO  12:10:39,452 - #43 (
INFO  12:10:39,452 - #20 k
INFO  12:10:39,452 - #44 )
INFO  12:10:39,452 - #40 ;
INFO  12:10:39,452 - #20 niz
INFO  12:10:39,452 - #37 =
INFO  12:10:39,452 - #12 new
INFO  12:10:39,452 - #20 int
INFO  12:10:39,452 - #45 [
INFO  12:10:39,452 - #20 N
INFO  12:10:39,453 - #46 ]
INFO  12:10:39,453 - #40 ;
INFO  12:10:39,453 - #20 m
INFO  12:10:39,453 - #37 =
INFO  12:10:39,453 - #21 2
INFO  12:10:39,453 - #26 *
INFO  12:10:39,453 - #21 1
INFO  12:10:39,454 - #26 *
INFO  12:10:39,454 - #21 3
INFO  12:10:39,454 - #40 ;
INFO  12:10:39,454 - #13 print
INFO  12:10:39,454 - #43 (
INFO  12:10:39,454 - #20 m
INFO  12:10:39,455 - #44 )
INFO  12:10:39,455 - #40 ;
INFO  12:10:39,455 - #48 }
INFO  12:10:39,455 - #48 }
INFO  12:10:39,456 - 

================SINTAKSNO STABLO====================


INFO  12:10:39,457 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementMulti(
                  StatementMulti(
                    StatementSingle(
                      StmtDesign(
                        DesignatorAssignment(
                          DesignatorSimple(
                           g
                          ) [DesignatorSimple]
                          AssignmentExpr(
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     N
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [AssignmentExpr]
                        ) [DesignatorAssignment]
                      ) [StmtDesign]
                    ) [StatementSingle]
                    StmtDesign(
                      DesignatorIncrement(
                        DesignatorSimple(
                         g
                        ) [DesignatorSimple]
                      ) [DesignatorIncrement]
                    ) [StmtDesign]
                  ) [StatementMulti]
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       k
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 g
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementMulti]
                StmtPrint(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           k
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [StmtPrint]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   niz
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorNewArray(
                            Type(
                             int
                            ) [Type]
                            ExprOne(
                              ExprSingle(
                                TermSingle(
                                  FactorDesignator(
                                    DesignatorSimple(
                                     N
                                    ) [DesignatorSimple]
                                  ) [FactorDesignator]
                                ) [TermSingle]
                              ) [ExprSingle]
                            ) [ExprOne]
                          ) [FactorNewArray]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 m
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermMulop(
                        TermMulop(
                          TermSingle(
                            FactorNumConst(
                             2
                            ) [FactorNumConst]
                          ) [TermSingle]
                          MulopMul(
                          ) [MulopMul]
                          FactorNumConst(
                           1
                          ) [FactorNumConst]
                        ) [TermMulop]
                        MulopMul(
                        ) [MulopMul]
                        FactorNumConst(
                         3
                        ) [FactorNumConst]
                      ) [TermMulop]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     m
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  12:10:39,458 - 

================SEMANTICKA OBRADA====================


INFO  12:10:39,470 - Deklarisana konstanta 'N' na liniji 2
INFO  12:10:39,470 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  12:10:39,470 - Deklarisan globalni niz 'niz' na liniji 4
INFO  12:10:39,470 - Deklarisana promenljiva 'm' na liniji 7
INFO  12:10:39,470 - Deklarisana promenljiva 'k' na liniji 8
INFO  12:10:39,471 - ===================================
INFO  12:10:39,471 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  12:10:39,477 - Parsiranje uspesno zavrseno!
INFO  12:21:21,891 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:21:21,960 - #2 program
INFO  12:21:21,960 - #20 test
INFO  12:21:21,960 - #7 const
INFO  12:21:21,960 - #20 int
INFO  12:21:21,960 - #20 N
INFO  12:21:21,961 - #37 =
INFO  12:21:21,961 - #21 2
INFO  12:21:21,961 - #40 ;
INFO  12:21:21,962 - #20 int
INFO  12:21:21,962 - #20 g
INFO  12:21:21,962 - #40 ;
INFO  12:21:21,962 - #20 int
INFO  12:21:21,963 - #20 niz
INFO  12:21:21,963 - #45 [
INFO  12:21:21,963 - #46 ]
INFO  12:21:21,963 - #40 ;
INFO  12:21:21,963 - #47 {
INFO  12:21:21,963 - #16 void
INFO  12:21:21,963 - #20 main
INFO  12:21:21,964 - #43 (
INFO  12:21:21,964 - #44 )
INFO  12:21:21,964 - #20 int
INFO  12:21:21,964 - #20 m
INFO  12:21:21,964 - #40 ;
INFO  12:21:21,965 - #20 int
INFO  12:21:21,965 - #20 k
INFO  12:21:21,966 - #40 ;
INFO  12:21:21,966 - #47 {
INFO  12:21:21,966 - #20 g
INFO  12:21:21,966 - #37 =
INFO  12:21:21,966 - #20 N
INFO  12:21:21,966 - #40 ;
INFO  12:21:21,967 - #20 g
INFO  12:21:21,967 - #38 ++
INFO  12:21:21,967 - #40 ;
INFO  12:21:21,968 - #20 k
INFO  12:21:21,968 - #37 =
INFO  12:21:21,968 - #20 g
INFO  12:21:21,968 - #40 ;
INFO  12:21:21,968 - #13 print
INFO  12:21:21,968 - #43 (
INFO  12:21:21,968 - #20 k
INFO  12:21:21,968 - #44 )
INFO  12:21:21,969 - #40 ;
INFO  12:21:21,969 - #48 }
INFO  12:21:21,969 - #48 }
INFO  12:21:21,970 - 

================SINTAKSNO STABLO====================


INFO  12:21:21,971 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               N
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorIncrement(
                  DesignatorSimple(
                   g
                  ) [DesignatorSimple]
                ) [DesignatorIncrement]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           g
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  12:21:21,972 - 

================SEMANTICKA OBRADA====================


INFO  12:21:21,986 - Deklarisana konstanta 'N' na liniji 2
INFO  12:21:21,986 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  12:21:21,986 - Deklarisan globalni niz 'niz' na liniji 4
INFO  12:21:21,986 - Deklarisana promenljiva 'm' na liniji 7
INFO  12:21:21,987 - Deklarisana promenljiva 'k' na liniji 8
INFO  12:21:21,988 - ===================================
INFO  12:21:21,988 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  12:21:21,995 - Parsiranje uspesno zavrseno!
INFO  12:21:36,463 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:21:36,507 - #2 program
INFO  12:21:36,507 - #20 test
INFO  12:21:36,507 - #7 const
INFO  12:21:36,508 - #20 int
INFO  12:21:36,508 - #20 N
INFO  12:21:36,508 - #37 =
INFO  12:21:36,508 - #21 2
INFO  12:21:36,508 - #40 ;
INFO  12:21:36,509 - #20 int
INFO  12:21:36,509 - #20 g
INFO  12:21:36,509 - #40 ;
INFO  12:21:36,509 - #20 int
INFO  12:21:36,510 - #20 niz
INFO  12:21:36,510 - #45 [
INFO  12:21:36,510 - #46 ]
INFO  12:21:36,510 - #40 ;
INFO  12:21:36,510 - #47 {
INFO  12:21:36,511 - #16 void
INFO  12:21:36,511 - #20 main
INFO  12:21:36,511 - #43 (
INFO  12:21:36,511 - #44 )
INFO  12:21:36,511 - #20 int
INFO  12:21:36,511 - #20 m
INFO  12:21:36,511 - #40 ;
INFO  12:21:36,512 - #20 int
INFO  12:21:36,512 - #20 k
INFO  12:21:36,512 - #40 ;
INFO  12:21:36,512 - #47 {
INFO  12:21:36,512 - #20 g
INFO  12:21:36,512 - #37 =
INFO  12:21:36,513 - #20 N
INFO  12:21:36,513 - #40 ;
INFO  12:21:36,513 - #20 g
INFO  12:21:36,514 - #38 ++
INFO  12:21:36,514 - #40 ;
INFO  12:21:36,514 - #13 print
INFO  12:21:36,514 - #43 (
INFO  12:21:36,514 - #20 g
INFO  12:21:36,514 - #44 )
INFO  12:21:36,514 - #40 ;
INFO  12:21:36,514 - #48 }
INFO  12:21:36,514 - #48 }
INFO  12:21:36,515 - 

================SINTAKSNO STABLO====================


INFO  12:21:36,516 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   g
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             N
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 g
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  12:21:36,517 - 

================SEMANTICKA OBRADA====================


INFO  12:21:36,527 - Deklarisana konstanta 'N' na liniji 2
INFO  12:21:36,527 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  12:21:36,527 - Deklarisan globalni niz 'niz' na liniji 4
INFO  12:21:36,527 - Deklarisana promenljiva 'm' na liniji 7
INFO  12:21:36,527 - Deklarisana promenljiva 'k' na liniji 8
INFO  12:21:36,528 - ===================================
INFO  12:21:36,528 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  12:21:36,534 - Parsiranje uspesno zavrseno!
INFO  12:21:57,561 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:21:57,606 - #2 program
INFO  12:21:57,606 - #20 test
INFO  12:21:57,606 - #7 const
INFO  12:21:57,607 - #20 int
INFO  12:21:57,607 - #20 N
INFO  12:21:57,607 - #37 =
INFO  12:21:57,607 - #21 2
INFO  12:21:57,607 - #40 ;
INFO  12:21:57,608 - #20 int
INFO  12:21:57,608 - #20 g
INFO  12:21:57,608 - #40 ;
INFO  12:21:57,608 - #20 int
INFO  12:21:57,609 - #20 niz
INFO  12:21:57,609 - #45 [
INFO  12:21:57,609 - #46 ]
INFO  12:21:57,609 - #40 ;
INFO  12:21:57,609 - #47 {
INFO  12:21:57,609 - #16 void
INFO  12:21:57,609 - #20 main
INFO  12:21:57,609 - #43 (
INFO  12:21:57,609 - #44 )
INFO  12:21:57,609 - #20 int
INFO  12:21:57,609 - #20 m
INFO  12:21:57,609 - #40 ;
INFO  12:21:57,610 - #20 int
INFO  12:21:57,610 - #20 k
INFO  12:21:57,610 - #40 ;
INFO  12:21:57,610 - #47 {
INFO  12:21:57,610 - #20 g
INFO  12:21:57,610 - #37 =
INFO  12:21:57,611 - #20 N
INFO  12:21:57,611 - #40 ;
INFO  12:21:57,611 - #20 g
INFO  12:21:57,611 - #38 ++
INFO  12:21:57,611 - #40 ;
INFO  12:21:57,612 - #20 k
INFO  12:21:57,612 - #37 =
INFO  12:21:57,612 - #20 g
INFO  12:21:57,612 - #40 ;
INFO  12:21:57,612 - #13 print
INFO  12:21:57,612 - #43 (
INFO  12:21:57,612 - #20 g
INFO  12:21:57,612 - #44 )
INFO  12:21:57,612 - #40 ;
INFO  12:21:57,612 - #48 }
INFO  12:21:57,612 - #48 }
INFO  12:21:57,614 - 

================SINTAKSNO STABLO====================


INFO  12:21:57,615 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               N
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorIncrement(
                  DesignatorSimple(
                   g
                  ) [DesignatorSimple]
                ) [DesignatorIncrement]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           g
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  12:21:57,615 - 

================SEMANTICKA OBRADA====================


INFO  12:21:57,627 - Deklarisana konstanta 'N' na liniji 2
INFO  12:21:57,628 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  12:21:57,628 - Deklarisan globalni niz 'niz' na liniji 4
INFO  12:21:57,628 - Deklarisana promenljiva 'm' na liniji 7
INFO  12:21:57,628 - Deklarisana promenljiva 'k' na liniji 8
INFO  12:21:57,629 - ===================================
INFO  12:21:57,629 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  12:21:57,635 - Parsiranje uspesno zavrseno!
INFO  12:22:03,575 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:22:03,621 - #2 program
INFO  12:22:03,621 - #20 test
INFO  12:22:03,621 - #7 const
INFO  12:22:03,622 - #20 int
INFO  12:22:03,622 - #20 N
INFO  12:22:03,623 - #37 =
INFO  12:22:03,623 - #21 2
INFO  12:22:03,623 - #40 ;
INFO  12:22:03,623 - #20 int
INFO  12:22:03,623 - #20 g
INFO  12:22:03,624 - #40 ;
INFO  12:22:03,624 - #20 int
INFO  12:22:03,624 - #20 niz
INFO  12:22:03,624 - #45 [
INFO  12:22:03,624 - #46 ]
INFO  12:22:03,624 - #40 ;
INFO  12:22:03,624 - #47 {
INFO  12:22:03,624 - #16 void
INFO  12:22:03,624 - #20 main
INFO  12:22:03,624 - #43 (
INFO  12:22:03,625 - #44 )
INFO  12:22:03,625 - #20 int
INFO  12:22:03,625 - #20 m
INFO  12:22:03,625 - #40 ;
INFO  12:22:03,625 - #20 int
INFO  12:22:03,625 - #20 k
INFO  12:22:03,625 - #40 ;
INFO  12:22:03,625 - #47 {
INFO  12:22:03,626 - #20 g
INFO  12:22:03,626 - #37 =
INFO  12:22:03,627 - #20 N
INFO  12:22:03,627 - #40 ;
INFO  12:22:03,627 - #20 g
INFO  12:22:03,627 - #38 ++
INFO  12:22:03,627 - #40 ;
INFO  12:22:03,628 - #20 k
INFO  12:22:03,628 - #37 =
INFO  12:22:03,628 - #20 g
INFO  12:22:03,628 - #40 ;
INFO  12:22:03,628 - #13 print
INFO  12:22:03,628 - #43 (
INFO  12:22:03,628 - #20 k
INFO  12:22:03,628 - #44 )
INFO  12:22:03,628 - #40 ;
INFO  12:22:03,628 - #48 }
INFO  12:22:03,628 - #48 }
INFO  12:22:03,629 - 

================SINTAKSNO STABLO====================


INFO  12:22:03,630 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               N
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorIncrement(
                  DesignatorSimple(
                   g
                  ) [DesignatorSimple]
                ) [DesignatorIncrement]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           g
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  12:22:03,630 - 

================SEMANTICKA OBRADA====================


INFO  12:22:03,642 - Deklarisana konstanta 'N' na liniji 2
INFO  12:22:03,642 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  12:22:03,642 - Deklarisan globalni niz 'niz' na liniji 4
INFO  12:22:03,643 - Deklarisana promenljiva 'm' na liniji 7
INFO  12:22:03,644 - Deklarisana promenljiva 'k' na liniji 8
INFO  12:22:03,645 - ===================================
INFO  12:22:03,645 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  12:22:03,651 - Parsiranje uspesno zavrseno!
INFO  12:34:19,534 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:34:19,580 - #2 program
INFO  12:34:19,580 - #20 test
INFO  12:34:19,580 - #7 const
INFO  12:34:19,582 - #20 int
INFO  12:34:19,582 - #20 N
INFO  12:34:19,582 - #37 =
INFO  12:34:19,582 - #21 2
INFO  12:34:19,582 - #40 ;
INFO  12:34:19,583 - #20 int
INFO  12:34:19,583 - #20 g
INFO  12:34:19,583 - #40 ;
INFO  12:34:19,583 - #20 int
INFO  12:34:19,583 - #20 niz
INFO  12:34:19,584 - #45 [
INFO  12:34:19,584 - #46 ]
INFO  12:34:19,584 - #40 ;
INFO  12:34:19,584 - #47 {
INFO  12:34:19,584 - #16 void
INFO  12:34:19,584 - #20 main
INFO  12:34:19,584 - #43 (
INFO  12:34:19,584 - #44 )
INFO  12:34:19,584 - #20 int
INFO  12:34:19,584 - #20 m
INFO  12:34:19,584 - #40 ;
INFO  12:34:19,584 - #20 int
INFO  12:34:19,585 - #20 k
INFO  12:34:19,585 - #40 ;
INFO  12:34:19,585 - #47 {
INFO  12:34:19,585 - #20 g
INFO  12:34:19,585 - #37 =
INFO  12:34:19,585 - #20 N
INFO  12:34:19,585 - #40 ;
INFO  12:34:19,586 - #20 g
INFO  12:34:19,586 - #38 ++
INFO  12:34:19,586 - #40 ;
INFO  12:34:19,586 - #20 k
INFO  12:34:19,586 - #37 =
INFO  12:34:19,586 - #20 g
INFO  12:34:19,586 - #40 ;
INFO  12:34:19,586 - #20 k
INFO  12:34:19,587 - #38 ++
INFO  12:34:19,587 - #40 ;
INFO  12:34:19,587 - #13 print
INFO  12:34:19,587 - #43 (
INFO  12:34:19,587 - #20 k
INFO  12:34:19,587 - #44 )
INFO  12:34:19,587 - #40 ;
INFO  12:34:19,587 - #48 }
INFO  12:34:19,587 - #48 }
INFO  12:34:19,588 - 

================SINTAKSNO STABLO====================


INFO  12:34:19,589 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  12:34:19,590 - 

================SEMANTICKA OBRADA====================


INFO  12:34:19,601 - Deklarisana konstanta 'N' na liniji 2
INFO  12:34:19,601 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  12:34:19,601 - Deklarisan globalni niz 'niz' na liniji 4
INFO  12:34:19,602 - Deklarisana promenljiva 'm' na liniji 7
INFO  12:34:19,602 - Deklarisana promenljiva 'k' na liniji 8
INFO  12:34:19,603 - ===================================
INFO  12:34:19,603 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  12:34:19,608 - Parsiranje uspesno zavrseno!
INFO  12:43:35,787 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:43:35,832 - #2 program
INFO  12:43:35,832 - #20 test
INFO  12:43:35,833 - #7 const
INFO  12:43:35,833 - #20 int
INFO  12:43:35,833 - #20 N
INFO  12:43:35,834 - #37 =
INFO  12:43:35,834 - #21 2
INFO  12:43:35,834 - #40 ;
INFO  12:43:35,834 - #20 int
INFO  12:43:35,835 - #20 g
INFO  12:43:35,835 - #40 ;
INFO  12:43:35,835 - #20 int
INFO  12:43:35,835 - #20 niz
INFO  12:43:35,835 - #45 [
INFO  12:43:35,835 - #46 ]
INFO  12:43:35,835 - #40 ;
INFO  12:43:35,835 - #47 {
INFO  12:43:35,835 - #16 void
INFO  12:43:35,835 - #20 main
INFO  12:43:35,835 - #43 (
INFO  12:43:35,836 - #44 )
INFO  12:43:35,836 - #20 int
INFO  12:43:35,836 - #20 m
INFO  12:43:35,836 - #40 ;
INFO  12:43:35,836 - #20 int
INFO  12:43:35,836 - #20 k
INFO  12:43:35,836 - #40 ;
INFO  12:43:35,837 - #47 {
INFO  12:43:35,837 - #20 g
INFO  12:43:35,837 - #37 =
INFO  12:43:35,837 - #20 N
INFO  12:43:35,837 - #40 ;
INFO  12:43:35,838 - #20 g
INFO  12:43:35,838 - #38 ++
INFO  12:43:35,838 - #40 ;
INFO  12:43:35,838 - #13 print
INFO  12:43:35,838 - #43 (
INFO  12:43:35,838 - #20 g
INFO  12:43:35,838 - #44 )
INFO  12:43:35,838 - #40 ;
INFO  12:43:35,838 - #48 }
INFO  12:43:35,839 - #48 }
INFO  12:43:35,840 - 

================SINTAKSNO STABLO====================


INFO  12:43:35,841 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   g
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             N
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 g
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  12:43:35,842 - 

================SEMANTICKA OBRADA====================


INFO  12:43:35,853 - Deklarisana konstanta 'N' na liniji 2
INFO  12:43:35,853 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  12:43:35,853 - Deklarisan globalni niz 'niz' na liniji 4
INFO  12:43:35,854 - Deklarisana promenljiva 'm' na liniji 7
INFO  12:43:35,854 - Deklarisana promenljiva 'k' na liniji 8
INFO  12:43:35,854 - ===================================
INFO  12:43:35,854 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  12:43:35,861 - Parsiranje uspesno zavrseno!
INFO  12:44:49,407 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:44:49,452 - #2 program
INFO  12:44:49,452 - #20 test
INFO  12:44:49,452 - #7 const
INFO  12:44:49,453 - #20 int
INFO  12:44:49,453 - #20 N
INFO  12:44:49,453 - #37 =
INFO  12:44:49,453 - #21 2
INFO  12:44:49,453 - #40 ;
INFO  12:44:49,454 - #20 int
INFO  12:44:49,454 - #20 g
INFO  12:44:49,454 - #40 ;
INFO  12:44:49,454 - #20 int
INFO  12:44:49,454 - #20 niz
INFO  12:44:49,455 - #45 [
INFO  12:44:49,455 - #46 ]
INFO  12:44:49,455 - #40 ;
INFO  12:44:49,455 - #47 {
INFO  12:44:49,455 - #16 void
INFO  12:44:49,455 - #20 main
INFO  12:44:49,455 - #43 (
INFO  12:44:49,455 - #44 )
INFO  12:44:49,455 - #20 int
INFO  12:44:49,455 - #20 m
INFO  12:44:49,455 - #40 ;
INFO  12:44:49,456 - #20 int
INFO  12:44:49,456 - #20 k
INFO  12:44:49,456 - #40 ;
INFO  12:44:49,456 - #47 {
INFO  12:44:49,456 - #20 g
INFO  12:44:49,456 - #37 =
INFO  12:44:49,456 - #20 N
INFO  12:44:49,456 - #40 ;
INFO  12:44:49,457 - #20 g
INFO  12:44:49,457 - #38 ++
INFO  12:44:49,457 - #40 ;
INFO  12:44:49,458 - #20 k
INFO  12:44:49,458 - #37 =
INFO  12:44:49,458 - #20 g
INFO  12:44:49,458 - #40 ;
INFO  12:44:49,458 - #13 print
INFO  12:44:49,458 - #43 (
INFO  12:44:49,458 - #20 k
INFO  12:44:49,458 - #44 )
INFO  12:44:49,458 - #40 ;
INFO  12:44:49,458 - #48 }
INFO  12:44:49,459 - #48 }
INFO  12:44:49,460 - 

================SINTAKSNO STABLO====================


INFO  12:44:49,461 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementSingle(
                StmtDesign(
                  DesignatorAssignment(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                    AssignmentExpr(
                      ExprOne(
                        ExprSingle(
                          TermSingle(
                            FactorDesignator(
                              DesignatorSimple(
                               N
                              ) [DesignatorSimple]
                            ) [FactorDesignator]
                          ) [TermSingle]
                        ) [ExprSingle]
                      ) [ExprOne]
                    ) [AssignmentExpr]
                  ) [DesignatorAssignment]
                ) [StmtDesign]
              ) [StatementSingle]
              StmtDesign(
                DesignatorIncrement(
                  DesignatorSimple(
                   g
                  ) [DesignatorSimple]
                ) [DesignatorIncrement]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorAssignment(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
                AssignmentExpr(
                  ExprOne(
                    ExprSingle(
                      TermSingle(
                        FactorDesignator(
                          DesignatorSimple(
                           g
                          ) [DesignatorSimple]
                        ) [FactorDesignator]
                      ) [TermSingle]
                    ) [ExprSingle]
                  ) [ExprOne]
                ) [AssignmentExpr]
              ) [DesignatorAssignment]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  12:44:49,462 - 

================SEMANTICKA OBRADA====================


INFO  12:44:49,471 - Deklarisana konstanta 'N' na liniji 2
INFO  12:44:49,471 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  12:44:49,471 - Deklarisan globalni niz 'niz' na liniji 4
INFO  12:44:49,471 - Deklarisana promenljiva 'm' na liniji 7
INFO  12:44:49,471 - Deklarisana promenljiva 'k' na liniji 8
INFO  12:44:49,472 - ===================================
INFO  12:44:49,472 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  12:44:49,479 - Parsiranje uspesno zavrseno!
INFO  12:45:17,386 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:45:17,465 - #2 program
INFO  12:45:17,465 - #20 test
INFO  12:45:17,465 - #7 const
INFO  12:45:17,467 - #20 int
INFO  12:45:17,467 - #20 N
INFO  12:45:17,467 - #37 =
INFO  12:45:17,468 - #21 2
INFO  12:45:17,468 - #40 ;
INFO  12:45:17,469 - #20 int
INFO  12:45:17,469 - #20 g
INFO  12:45:17,469 - #40 ;
INFO  12:45:17,469 - #20 int
INFO  12:45:17,470 - #20 niz
INFO  12:45:17,470 - #45 [
INFO  12:45:17,470 - #46 ]
INFO  12:45:17,470 - #40 ;
INFO  12:45:17,470 - #47 {
INFO  12:45:17,470 - #16 void
INFO  12:45:17,471 - #20 main
INFO  12:45:17,471 - #43 (
INFO  12:45:17,471 - #44 )
INFO  12:45:17,471 - #20 int
INFO  12:45:17,471 - #20 m
INFO  12:45:17,471 - #40 ;
INFO  12:45:17,472 - #20 int
INFO  12:45:17,472 - #20 k
INFO  12:45:17,473 - #40 ;
INFO  12:45:17,473 - #47 {
INFO  12:45:17,473 - #20 g
INFO  12:45:17,473 - #37 =
INFO  12:45:17,473 - #20 N
INFO  12:45:17,473 - #40 ;
INFO  12:45:17,474 - #20 g
INFO  12:45:17,475 - #38 ++
INFO  12:45:17,475 - #40 ;
INFO  12:45:17,475 - #20 k
INFO  12:45:17,475 - #37 =
INFO  12:45:17,475 - #20 N
INFO  12:45:17,475 - #40 ;
INFO  12:45:17,475 - #20 k
INFO  12:45:17,475 - #38 ++
INFO  12:45:17,476 - #40 ;
INFO  12:45:17,476 - #13 print
INFO  12:45:17,476 - #43 (
INFO  12:45:17,476 - #20 k
INFO  12:45:17,476 - #44 )
INFO  12:45:17,476 - #40 ;
INFO  12:45:17,476 - #48 }
INFO  12:45:17,477 - #48 }
INFO  12:45:17,478 - 

================SINTAKSNO STABLO====================


INFO  12:45:17,481 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             N
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  12:45:17,482 - 

================SEMANTICKA OBRADA====================


INFO  12:45:17,492 - Deklarisana konstanta 'N' na liniji 2
INFO  12:45:17,492 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  12:45:17,492 - Deklarisan globalni niz 'niz' na liniji 4
INFO  12:45:17,492 - Deklarisana promenljiva 'm' na liniji 7
INFO  12:45:17,492 - Deklarisana promenljiva 'k' na liniji 8
INFO  12:45:17,493 - ===================================
INFO  12:45:17,494 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  12:45:17,502 - Parsiranje uspesno zavrseno!
INFO  12:45:41,082 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:45:41,126 - #2 program
INFO  12:45:41,126 - #20 test
INFO  12:45:41,126 - #7 const
INFO  12:45:41,127 - #20 int
INFO  12:45:41,127 - #20 N
INFO  12:45:41,128 - #37 =
INFO  12:45:41,128 - #21 2
INFO  12:45:41,128 - #40 ;
INFO  12:45:41,128 - #20 int
INFO  12:45:41,129 - #20 niz
INFO  12:45:41,129 - #45 [
INFO  12:45:41,129 - #46 ]
INFO  12:45:41,129 - #40 ;
INFO  12:45:41,129 - #47 {
INFO  12:45:41,129 - #16 void
INFO  12:45:41,129 - #20 main
INFO  12:45:41,129 - #43 (
INFO  12:45:41,129 - #44 )
INFO  12:45:41,130 - #20 int
INFO  12:45:41,130 - #20 m
INFO  12:45:41,130 - #41 ,
INFO  12:45:41,130 - #20 g
INFO  12:45:41,130 - #40 ;
INFO  12:45:41,130 - #20 int
INFO  12:45:41,130 - #20 k
INFO  12:45:41,130 - #40 ;
INFO  12:45:41,130 - #47 {
INFO  12:45:41,131 - #20 g
INFO  12:45:41,131 - #37 =
INFO  12:45:41,131 - #20 N
INFO  12:45:41,131 - #40 ;
INFO  12:45:41,131 - #20 g
INFO  12:45:41,132 - #38 ++
INFO  12:45:41,132 - #40 ;
INFO  12:45:41,132 - #13 print
INFO  12:45:41,132 - #43 (
INFO  12:45:41,132 - #20 g
INFO  12:45:41,132 - #44 )
INFO  12:45:41,132 - #40 ;
INFO  12:45:41,132 - #48 }
INFO  12:45:41,132 - #48 }
INFO  12:45:41,133 - 

================SINTAKSNO STABLO====================


INFO  12:45:41,134 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             N
              NumConst(
               2
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarMulti(
                VarSingle(
                  VarNormal(
                   m
                  ) [VarNormal]
                ) [VarSingle]
                VarNormal(
                 g
                ) [VarNormal]
              ) [VarMulti]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   g
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             N
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 g
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  12:45:41,134 - 

================SEMANTICKA OBRADA====================


INFO  12:45:41,146 - Deklarisana konstanta 'N' na liniji 2
INFO  12:45:41,146 - Deklarisan globalni niz 'niz' na liniji 4
INFO  12:45:41,146 - Deklarisana promenljiva 'm' na liniji 7
INFO  12:45:41,146 - Deklarisana promenljiva 'g' na liniji 7
INFO  12:45:41,146 - Deklarisana promenljiva 'k' na liniji 8
INFO  12:45:41,147 - ===================================
INFO  12:45:41,147 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  12:45:41,154 - Parsiranje uspesno zavrseno!
INFO  12:46:11,728 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  12:46:11,771 - #2 program
INFO  12:46:11,771 - #20 test
INFO  12:46:11,771 - #7 const
INFO  12:46:11,771 - #20 int
INFO  12:46:11,771 - #20 N
INFO  12:46:11,772 - #37 =
INFO  12:46:11,772 - #21 2
INFO  12:46:11,772 - #40 ;
INFO  12:46:11,773 - #20 int
INFO  12:46:11,773 - #20 g
INFO  12:46:11,773 - #41 ,
INFO  12:46:11,773 - #20 k
INFO  12:46:11,773 - #40 ;
INFO  12:46:11,773 - #20 int
INFO  12:46:11,773 - #20 niz
INFO  12:46:11,774 - #45 [
INFO  12:46:11,774 - #46 ]
INFO  12:46:11,774 - #40 ;
INFO  12:46:11,774 - #47 {
INFO  12:46:11,774 - #16 void
INFO  12:46:11,774 - #20 main
INFO  12:46:11,774 - #43 (
INFO  12:46:11,774 - #44 )
INFO  12:46:11,774 - #20 int
INFO  12:46:11,774 - #20 m
INFO  12:46:11,774 - #40 ;
INFO  12:46:11,775 - #47 {
INFO  12:46:11,775 - #20 g
INFO  12:46:11,775 - #37 =
INFO  12:46:11,775 - #20 N
INFO  12:46:11,775 - #40 ;
INFO  12:46:11,776 - #20 g
INFO  12:46:11,776 - #38 ++
INFO  12:46:11,776 - #40 ;
INFO  12:46:11,776 - #20 k
INFO  12:46:11,776 - #37 =
INFO  12:46:11,776 - #20 g
INFO  12:46:11,776 - #40 ;
INFO  12:46:11,776 - #20 k
INFO  12:46:11,776 - #38 ++
INFO  12:46:11,777 - #40 ;
INFO  12:46:11,777 - #13 print
INFO  12:46:11,777 - #43 (
INFO  12:46:11,777 - #20 k
INFO  12:46:11,777 - #44 )
INFO  12:46:11,777 - #40 ;
INFO  12:46:11,777 - #48 }
INFO  12:46:11,777 - #48 }
INFO  12:46:11,778 - 

================SINTAKSNO STABLO====================


INFO  12:46:11,779 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarMulti(
            GlobalVarSingle(
              GlobalVarNormal(
               g
              ) [GlobalVarNormal]
            ) [GlobalVarSingle]
            GlobalVarNormal(
             k
            ) [GlobalVarNormal]
          ) [GlobalVarMulti]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               m
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  12:46:11,780 - 

================SEMANTICKA OBRADA====================


INFO  12:46:11,789 - Deklarisana konstanta 'N' na liniji 2
INFO  12:46:11,790 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  12:46:11,790 - Deklarisana globalna promenljiva 'k' na liniji 3
INFO  12:46:11,790 - Deklarisan globalni niz 'niz' na liniji 4
INFO  12:46:11,790 - Deklarisana promenljiva 'm' na liniji 7
INFO  12:46:11,791 - ===================================
INFO  12:46:11,791 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  12:46:11,798 - Parsiranje uspesno zavrseno!
INFO  13:02:08,130 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  13:02:08,181 - #2 program
INFO  13:02:08,181 - #20 test
INFO  13:02:08,181 - #7 const
INFO  13:02:08,182 - #20 int
INFO  13:02:08,182 - #20 N
INFO  13:02:08,183 - #37 =
INFO  13:02:08,183 - #21 2
INFO  13:02:08,183 - #40 ;
INFO  13:02:08,183 - #20 int
INFO  13:02:08,184 - #20 g
INFO  13:02:08,184 - #40 ;
INFO  13:02:08,184 - #20 int
INFO  13:02:08,184 - #20 niz
INFO  13:02:08,184 - #45 [
INFO  13:02:08,184 - #46 ]
INFO  13:02:08,184 - #40 ;
INFO  13:02:08,185 - #47 {
INFO  13:02:08,185 - #16 void
INFO  13:02:08,185 - #20 main
INFO  13:02:08,185 - #43 (
INFO  13:02:08,185 - #44 )
INFO  13:02:08,185 - #20 int
INFO  13:02:08,185 - #20 m
INFO  13:02:08,185 - #40 ;
INFO  13:02:08,185 - #20 int
INFO  13:02:08,186 - #20 k
INFO  13:02:08,186 - #40 ;
INFO  13:02:08,186 - #47 {
INFO  13:02:08,186 - #20 g
INFO  13:02:08,186 - #37 =
INFO  13:02:08,186 - #20 N
INFO  13:02:08,186 - #40 ;
INFO  13:02:08,187 - #20 g
INFO  13:02:08,187 - #38 ++
INFO  13:02:08,187 - #40 ;
INFO  13:02:08,187 - #20 k
INFO  13:02:08,187 - #37 =
INFO  13:02:08,187 - #20 g
INFO  13:02:08,187 - #40 ;
INFO  13:02:08,187 - #20 k
INFO  13:02:08,187 - #38 ++
INFO  13:02:08,187 - #40 ;
INFO  13:02:08,187 - #13 print
INFO  13:02:08,187 - #43 (
INFO  13:02:08,188 - #20 k
INFO  13:02:08,188 - #44 )
INFO  13:02:08,188 - #40 ;
INFO  13:02:08,188 - #48 }
INFO  13:02:08,188 - #48 }
INFO  13:02:08,190 - 

================SINTAKSNO STABLO====================


INFO  13:02:08,191 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  13:02:08,193 - 

================SEMANTICKA OBRADA====================


INFO  13:02:08,203 - Deklarisana konstanta 'N' na liniji 2
INFO  13:02:08,203 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  13:02:08,203 - Deklarisan globalni niz 'niz' na liniji 4
INFO  13:02:08,204 - Deklarisana promenljiva 'm' na liniji 7
INFO  13:02:08,204 - Deklarisana promenljiva 'k' na liniji 8
INFO  13:02:08,205 - ===================================
INFO  13:02:08,205 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  13:02:08,211 - Parsiranje uspesno zavrseno!
INFO  13:02:26,500 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  13:02:26,544 - #2 program
INFO  13:02:26,544 - #20 test
INFO  13:02:26,544 - #7 const
INFO  13:02:26,545 - #20 int
INFO  13:02:26,545 - #20 N
INFO  13:02:26,545 - #37 =
INFO  13:02:26,545 - #21 2
INFO  13:02:26,546 - #40 ;
INFO  13:02:26,546 - #20 int
INFO  13:02:26,546 - #20 g
INFO  13:02:26,546 - #40 ;
INFO  13:02:26,546 - #20 int
INFO  13:02:26,547 - #20 niz
INFO  13:02:26,547 - #45 [
INFO  13:02:26,547 - #46 ]
INFO  13:02:26,547 - #40 ;
INFO  13:02:26,547 - #47 {
INFO  13:02:26,547 - #16 void
INFO  13:02:26,547 - #20 main
INFO  13:02:26,547 - #43 (
INFO  13:02:26,547 - #44 )
INFO  13:02:26,547 - #20 int
INFO  13:02:26,547 - #20 m
INFO  13:02:26,548 - #41 ,
INFO  13:02:26,548 - #20 k
INFO  13:02:26,548 - #40 ;
INFO  13:02:26,548 - #47 {
INFO  13:02:26,548 - #20 g
INFO  13:02:26,548 - #37 =
INFO  13:02:26,548 - #20 N
INFO  13:02:26,549 - #40 ;
INFO  13:02:26,549 - #20 g
INFO  13:02:26,549 - #38 ++
INFO  13:02:26,549 - #40 ;
INFO  13:02:26,549 - #20 k
INFO  13:02:26,550 - #37 =
INFO  13:02:26,550 - #20 g
INFO  13:02:26,550 - #40 ;
INFO  13:02:26,550 - #20 k
INFO  13:02:26,550 - #38 ++
INFO  13:02:26,550 - #40 ;
INFO  13:02:26,550 - #13 print
INFO  13:02:26,550 - #43 (
INFO  13:02:26,550 - #20 k
INFO  13:02:26,550 - #44 )
INFO  13:02:26,550 - #40 ;
INFO  13:02:26,550 - #48 }
INFO  13:02:26,551 - #48 }
INFO  13:02:26,551 - 

================SINTAKSNO STABLO====================


INFO  13:02:26,552 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
              VarNormal(
               k
              ) [VarNormal]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  13:02:26,553 - 

================SEMANTICKA OBRADA====================


INFO  13:02:26,560 - Deklarisana konstanta 'N' na liniji 2
INFO  13:02:26,560 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  13:02:26,560 - Deklarisan globalni niz 'niz' na liniji 4
INFO  13:02:26,561 - Deklarisana promenljiva 'm' na liniji 7
INFO  13:02:26,561 - Deklarisana promenljiva 'k' na liniji 7
INFO  13:02:26,562 - ===================================
INFO  13:02:26,563 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  13:02:26,569 - Parsiranje uspesno zavrseno!
INFO  13:24:25,601 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  13:24:25,646 - #2 program
INFO  13:24:25,647 - #20 test
INFO  13:24:25,647 - #7 const
INFO  13:24:25,648 - #20 int
INFO  13:24:25,648 - #20 nula
INFO  13:24:25,648 - #37 =
INFO  13:24:25,649 - #21 0
INFO  13:24:25,649 - #40 ;
INFO  13:24:25,649 - #20 int
INFO  13:24:25,650 - #20 x
INFO  13:24:25,650 - #40 ;
INFO  13:24:25,650 - #47 {
INFO  13:24:25,651 - #16 void
INFO  13:24:25,651 - #20 main
INFO  13:24:25,651 - #43 (
INFO  13:24:25,651 - #44 )
INFO  13:24:25,651 - #47 {
INFO  13:24:25,651 - #20 x
INFO  13:24:25,651 - #37 =
INFO  13:24:25,651 - #21 0
INFO  13:24:25,652 - #40 ;
INFO  13:24:25,652 - #48 }
INFO  13:24:25,653 - #48 }
INFO  13:24:25,653 - 

================SINTAKSNO STABLO====================


INFO  13:24:25,654 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclEps(
      ) [ProgramDeclEps]
      PartConstDeclaration(
        ConstDeclaration(
          Type(
           int
          ) [Type]
          ConstSingle(
            ConstPart(
             nula
              NumConst(
               0
              ) [NumConst]
            ) [ConstPart]
          ) [ConstSingle]
        ) [ConstDeclaration]
      ) [PartConstDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarNormal(
           x
          ) [GlobalVarNormal]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid6(
        MethodVoidName(
         main
        ) [MethodVoidName]
        StatementSingle(
          StmtDesign(
            DesignatorAssignment(
              DesignatorSimple(
               x
              ) [DesignatorSimple]
              AssignmentExpr(
                ExprOne(
                  ExprSingle(
                    TermSingle(
                      FactorNumConst(
                       0
                      ) [FactorNumConst]
                    ) [TermSingle]
                  ) [ExprSingle]
                ) [ExprOne]
              ) [AssignmentExpr]
            ) [DesignatorAssignment]
          ) [StmtDesign]
        ) [StatementSingle]
      ) [MethodVoid6]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  13:24:25,655 - 

================SEMANTICKA OBRADA====================


INFO  13:24:25,673 - Deklarisana konstanta 'nula' na liniji 2
INFO  13:24:25,673 - Deklarisana globalna promenljiva 'x' na liniji 3
INFO  13:24:25,675 - ===================================
INFO  13:24:25,675 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  13:24:25,681 - Parsiranje uspesno zavrseno!
INFO  13:25:53,391 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  13:25:53,442 - #2 program
INFO  13:25:53,442 - #20 test
INFO  13:25:53,442 - #7 const
INFO  13:25:53,443 - #20 int
INFO  13:25:53,443 - #20 N
INFO  13:25:53,443 - #37 =
INFO  13:25:53,443 - #21 2
INFO  13:25:53,444 - #40 ;
INFO  13:25:53,444 - #20 int
INFO  13:25:53,444 - #20 g
INFO  13:25:53,444 - #40 ;
INFO  13:25:53,445 - #20 int
INFO  13:25:53,445 - #20 niz
INFO  13:25:53,445 - #45 [
INFO  13:25:53,445 - #46 ]
INFO  13:25:53,445 - #40 ;
INFO  13:25:53,445 - #47 {
INFO  13:25:53,445 - #16 void
INFO  13:25:53,445 - #20 main
INFO  13:25:53,446 - #43 (
INFO  13:25:53,446 - #44 )
INFO  13:25:53,446 - #20 int
INFO  13:25:53,446 - #20 m
INFO  13:25:53,446 - #41 ,
INFO  13:25:53,446 - #20 k
INFO  13:25:53,446 - #40 ;
INFO  13:25:53,446 - #47 {
INFO  13:25:53,446 - #20 g
INFO  13:25:53,446 - #37 =
INFO  13:25:53,447 - #20 N
INFO  13:25:53,447 - #40 ;
INFO  13:25:53,447 - #20 g
INFO  13:25:53,447 - #38 ++
INFO  13:25:53,448 - #40 ;
INFO  13:25:53,448 - #20 k
INFO  13:25:53,448 - #37 =
INFO  13:25:53,448 - #20 g
INFO  13:25:53,448 - #40 ;
INFO  13:25:53,448 - #20 k
INFO  13:25:53,448 - #38 ++
INFO  13:25:53,448 - #40 ;
INFO  13:25:53,448 - #13 print
INFO  13:25:53,448 - #43 (
INFO  13:25:53,448 - #20 k
INFO  13:25:53,449 - #44 )
INFO  13:25:53,449 - #40 ;
INFO  13:25:53,449 - #48 }
INFO  13:25:53,449 - #48 }
INFO  13:25:53,450 - 

================SINTAKSNO STABLO====================


INFO  13:25:53,451 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarMulti(
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
              VarNormal(
               k
              ) [VarNormal]
            ) [VarMulti]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  13:25:53,453 - 

================SEMANTICKA OBRADA====================


INFO  13:25:53,467 - Deklarisana konstanta 'N' na liniji 2
INFO  13:25:53,468 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  13:25:53,468 - Deklarisan globalni niz 'niz' na liniji 4
INFO  13:25:53,468 - Deklarisana promenljiva 'm' na liniji 7
INFO  13:25:53,468 - Deklarisana promenljiva 'k' na liniji 7
INFO  13:25:53,469 - ===================================
INFO  13:25:53,469 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  13:25:53,475 - Parsiranje uspesno zavrseno!
INFO  13:33:07,170 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  13:33:07,236 - #2 program
INFO  13:33:07,236 - #20 test
INFO  13:33:07,236 - #7 const
INFO  13:33:07,237 - #20 int
INFO  13:33:07,237 - #20 N
INFO  13:33:07,238 - #37 =
INFO  13:33:07,238 - #21 2
INFO  13:33:07,238 - #40 ;
INFO  13:33:07,239 - #20 int
INFO  13:33:07,239 - #20 g
INFO  13:33:07,240 - #40 ;
INFO  13:33:07,240 - #20 int
INFO  13:33:07,240 - #20 k
INFO  13:33:07,240 - #40 ;
INFO  13:33:07,240 - #20 int
INFO  13:33:07,240 - #20 niz
INFO  13:33:07,240 - #45 [
INFO  13:33:07,241 - #46 ]
INFO  13:33:07,241 - #40 ;
INFO  13:33:07,241 - #47 {
INFO  13:33:07,241 - #16 void
INFO  13:33:07,241 - #20 main
INFO  13:33:07,241 - #43 (
INFO  13:33:07,241 - #44 )
INFO  13:33:07,241 - #20 int
INFO  13:33:07,241 - #20 m
INFO  13:33:07,242 - #40 ;
INFO  13:33:07,242 - #47 {
INFO  13:33:07,242 - #20 g
INFO  13:33:07,243 - #37 =
INFO  13:33:07,243 - #20 N
INFO  13:33:07,243 - #40 ;
INFO  13:33:07,244 - #20 g
INFO  13:33:07,244 - #38 ++
INFO  13:33:07,244 - #40 ;
INFO  13:33:07,244 - #20 k
INFO  13:33:07,245 - #37 =
INFO  13:33:07,245 - #20 g
INFO  13:33:07,245 - #40 ;
INFO  13:33:07,245 - #20 k
INFO  13:33:07,245 - #38 ++
INFO  13:33:07,246 - #40 ;
INFO  13:33:07,246 - #13 print
INFO  13:33:07,246 - #43 (
INFO  13:33:07,246 - #20 k
INFO  13:33:07,246 - #44 )
INFO  13:33:07,246 - #40 ;
INFO  13:33:07,246 - #48 }
INFO  13:33:07,246 - #48 }
INFO  13:33:07,247 - 

================SINTAKSNO STABLO====================


INFO  13:33:07,248 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclMulti(
          ProgramDeclEps(
          ) [ProgramDeclEps]
          PartConstDeclaration(
            ConstDeclaration(
              Type(
               int
              ) [Type]
              ConstSingle(
                ConstPart(
                 N
                  NumConst(
                   2
                  ) [NumConst]
                ) [ConstPart]
              ) [ConstSingle]
            ) [ConstDeclaration]
          ) [PartConstDeclaration]
        ) [ProgramDeclMulti]
        PartVarDeclaration(
          GlobalVarDeclaration(
            Type(
             int
            ) [Type]
            GlobalVarSingle(
              GlobalVarNormal(
               g
              ) [GlobalVarNormal]
            ) [GlobalVarSingle]
          ) [GlobalVarDeclaration]
        ) [PartVarDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             k
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclSingle(
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               m
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclSingle]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  13:33:07,249 - 

================SEMANTICKA OBRADA====================


INFO  13:33:07,262 - Deklarisana konstanta 'N' na liniji 2
INFO  13:33:07,263 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  13:33:07,263 - Deklarisana globalna promenljiva 'k' na liniji 4
INFO  13:33:07,263 - Deklarisan globalni niz 'niz' na liniji 5
INFO  13:33:07,264 - Deklarisana promenljiva 'm' na liniji 8
INFO  13:33:07,265 - ===================================
INFO  13:33:07,265 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  13:33:07,274 - Parsiranje uspesno zavrseno!
INFO  13:33:20,580 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  13:33:20,659 - #2 program
INFO  13:33:20,660 - #20 test
INFO  13:33:20,660 - #7 const
INFO  13:33:20,661 - #20 int
INFO  13:33:20,661 - #20 N
INFO  13:33:20,662 - #37 =
INFO  13:33:20,662 - #21 2
INFO  13:33:20,662 - #40 ;
INFO  13:33:20,663 - #20 int
INFO  13:33:20,663 - #20 g
INFO  13:33:20,663 - #40 ;
INFO  13:33:20,663 - #20 int
INFO  13:33:20,664 - #20 niz
INFO  13:33:20,664 - #45 [
INFO  13:33:20,664 - #46 ]
INFO  13:33:20,664 - #40 ;
INFO  13:33:20,664 - #47 {
INFO  13:33:20,664 - #16 void
INFO  13:33:20,664 - #20 main
INFO  13:33:20,665 - #43 (
INFO  13:33:20,665 - #44 )
INFO  13:33:20,665 - #20 int
INFO  13:33:20,665 - #20 m
INFO  13:33:20,665 - #40 ;
INFO  13:33:20,666 - #20 int
INFO  13:33:20,666 - #20 k
INFO  13:33:20,666 - #40 ;
INFO  13:33:20,666 - #47 {
INFO  13:33:20,667 - #20 g
INFO  13:33:20,667 - #37 =
INFO  13:33:20,667 - #20 N
INFO  13:33:20,667 - #40 ;
INFO  13:33:20,668 - #20 g
INFO  13:33:20,668 - #38 ++
INFO  13:33:20,668 - #40 ;
INFO  13:33:20,669 - #20 k
INFO  13:33:20,669 - #37 =
INFO  13:33:20,669 - #20 g
INFO  13:33:20,669 - #40 ;
INFO  13:33:20,669 - #20 k
INFO  13:33:20,669 - #38 ++
INFO  13:33:20,670 - #40 ;
INFO  13:33:20,670 - #13 print
INFO  13:33:20,670 - #43 (
INFO  13:33:20,670 - #20 k
INFO  13:33:20,670 - #44 )
INFO  13:33:20,670 - #40 ;
INFO  13:33:20,671 - #48 }
INFO  13:33:20,671 - #48 }
INFO  13:33:20,672 - 

================SINTAKSNO STABLO====================


INFO  13:33:20,674 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  13:33:20,675 - 

================SEMANTICKA OBRADA====================


INFO  13:33:20,687 - Deklarisana konstanta 'N' na liniji 2
INFO  13:33:20,687 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  13:33:20,687 - Deklarisan globalni niz 'niz' na liniji 5
INFO  13:33:20,688 - Deklarisana promenljiva 'm' na liniji 8
INFO  13:33:20,688 - Deklarisana promenljiva 'k' na liniji 9
INFO  13:33:20,690 - ===================================
INFO  13:33:20,690 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  13:33:20,696 - Parsiranje uspesno zavrseno!
INFO  13:35:26,182 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  13:35:26,257 - #2 program
INFO  13:35:26,257 - #20 test
INFO  13:35:26,257 - #7 const
INFO  13:35:26,258 - #20 int
INFO  13:35:26,258 - #20 N
INFO  13:35:26,259 - #37 =
INFO  13:35:26,259 - #21 2
INFO  13:35:26,259 - #40 ;
INFO  13:35:26,260 - #20 int
INFO  13:35:26,260 - #20 g
INFO  13:35:26,260 - #40 ;
INFO  13:35:26,261 - #20 int
INFO  13:35:26,261 - #20 niz
INFO  13:35:26,261 - #45 [
INFO  13:35:26,261 - #46 ]
INFO  13:35:26,261 - #40 ;
INFO  13:35:26,261 - #47 {
INFO  13:35:26,262 - #16 void
INFO  13:35:26,262 - #20 main
INFO  13:35:26,262 - #43 (
INFO  13:35:26,262 - #44 )
INFO  13:35:26,262 - #20 int
INFO  13:35:26,262 - #20 m
INFO  13:35:26,263 - #40 ;
INFO  13:35:26,263 - #20 int
INFO  13:35:26,263 - #20 k
INFO  13:35:26,263 - #40 ;
INFO  13:35:26,263 - #47 {
INFO  13:35:26,264 - #20 g
INFO  13:35:26,264 - #37 =
INFO  13:35:26,264 - #20 N
INFO  13:35:26,264 - #40 ;
INFO  13:35:26,265 - #20 g
INFO  13:35:26,266 - #38 ++
INFO  13:35:26,266 - #40 ;
INFO  13:35:26,266 - #20 k
INFO  13:35:26,266 - #37 =
INFO  13:35:26,266 - #20 g
INFO  13:35:26,266 - #40 ;
INFO  13:35:26,266 - #20 k
INFO  13:35:26,267 - #38 ++
INFO  13:35:26,267 - #40 ;
INFO  13:35:26,267 - #13 print
INFO  13:35:26,267 - #43 (
INFO  13:35:26,267 - #20 k
INFO  13:35:26,267 - #44 )
INFO  13:35:26,267 - #40 ;
INFO  13:35:26,267 - #48 }
INFO  13:35:26,268 - #48 }
INFO  13:35:26,269 - 

================SINTAKSNO STABLO====================


INFO  13:35:26,273 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  13:35:26,273 - 

================SEMANTICKA OBRADA====================


INFO  13:35:26,289 - Deklarisana konstanta 'N' na liniji 2
INFO  13:35:26,289 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  13:35:26,289 - Deklarisan globalni niz 'niz' na liniji 5
INFO  13:35:26,290 - Deklarisana promenljiva 'm' na liniji 8
INFO  13:35:26,290 - Deklarisana promenljiva 'k' na liniji 9
INFO  13:35:26,292 - ===================================
INFO  13:35:26,292 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  13:35:26,302 - Parsiranje uspesno zavrseno!
INFO  13:44:09,493 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  13:44:09,540 - #2 program
INFO  13:44:09,540 - #20 test
INFO  13:44:09,540 - #7 const
INFO  13:44:09,541 - #20 int
INFO  13:44:09,541 - #20 N
INFO  13:44:09,542 - #37 =
INFO  13:44:09,542 - #21 2
INFO  13:44:09,542 - #40 ;
INFO  13:44:09,542 - #20 int
INFO  13:44:09,543 - #20 g
INFO  13:44:09,543 - #40 ;
INFO  13:44:09,543 - #20 int
INFO  13:44:09,543 - #20 niz
INFO  13:44:09,543 - #45 [
INFO  13:44:09,543 - #46 ]
INFO  13:44:09,543 - #40 ;
INFO  13:44:09,543 - #47 {
INFO  13:44:09,543 - #16 void
INFO  13:44:09,543 - #20 main
INFO  13:44:09,544 - #43 (
INFO  13:44:09,544 - #44 )
INFO  13:44:09,544 - #20 int
INFO  13:44:09,544 - #20 m
INFO  13:44:09,544 - #40 ;
INFO  13:44:09,544 - #20 int
INFO  13:44:09,545 - #20 k
INFO  13:44:09,545 - #40 ;
INFO  13:44:09,545 - #47 {
INFO  13:44:09,545 - #20 g
INFO  13:44:09,545 - #37 =
INFO  13:44:09,545 - #20 N
INFO  13:44:09,545 - #40 ;
INFO  13:44:09,546 - #20 g
INFO  13:44:09,546 - #38 ++
INFO  13:44:09,546 - #40 ;
INFO  13:44:09,546 - #20 k
INFO  13:44:09,546 - #37 =
INFO  13:44:09,546 - #20 g
INFO  13:44:09,546 - #40 ;
INFO  13:44:09,547 - #20 k
INFO  13:44:09,547 - #38 ++
INFO  13:44:09,547 - #40 ;
INFO  13:44:09,547 - #13 print
INFO  13:44:09,547 - #43 (
INFO  13:44:09,547 - #20 k
INFO  13:44:09,547 - #44 )
INFO  13:44:09,547 - #40 ;
INFO  13:44:09,547 - #48 }
INFO  13:44:09,547 - #48 }
INFO  13:44:09,548 - 

================SINTAKSNO STABLO====================


INFO  13:44:09,550 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  13:44:09,550 - 

================SEMANTICKA OBRADA====================


INFO  13:44:09,562 - Deklarisana konstanta 'N' na liniji 2
INFO  13:44:09,562 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  13:44:09,562 - Deklarisan globalni niz 'niz' na liniji 5
INFO  13:44:09,563 - Deklarisana promenljiva 'm' na liniji 8
INFO  13:44:09,563 - Deklarisana promenljiva 'k' na liniji 9
INFO  13:44:09,564 - ===================================
INFO  13:44:09,564 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  13:44:09,571 - Parsiranje uspesno zavrseno!
INFO  13:45:47,562 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  13:45:47,608 - #2 program
INFO  13:45:47,608 - #20 test
INFO  13:45:47,608 - #7 const
INFO  13:45:47,609 - #20 int
INFO  13:45:47,609 - #20 N
INFO  13:45:47,609 - #37 =
INFO  13:45:47,610 - #21 2
INFO  13:45:47,610 - #40 ;
INFO  13:45:47,611 - #20 int
INFO  13:45:47,611 - #20 g
INFO  13:45:47,611 - #40 ;
INFO  13:45:47,611 - #20 int
INFO  13:45:47,612 - #20 niz
INFO  13:45:47,612 - #45 [
INFO  13:45:47,612 - #46 ]
INFO  13:45:47,612 - #40 ;
INFO  13:45:47,612 - #47 {
INFO  13:45:47,612 - #16 void
INFO  13:45:47,612 - #20 main
INFO  13:45:47,612 - #43 (
INFO  13:45:47,612 - #44 )
INFO  13:45:47,612 - #20 int
INFO  13:45:47,612 - #20 m
INFO  13:45:47,612 - #40 ;
INFO  13:45:47,613 - #20 int
INFO  13:45:47,613 - #20 k
INFO  13:45:47,613 - #40 ;
INFO  13:45:47,613 - #47 {
INFO  13:45:47,613 - #20 g
INFO  13:45:47,613 - #37 =
INFO  13:45:47,614 - #20 N
INFO  13:45:47,614 - #40 ;
INFO  13:45:47,614 - #20 g
INFO  13:45:47,615 - #38 ++
INFO  13:45:47,615 - #40 ;
INFO  13:45:47,615 - #20 k
INFO  13:45:47,615 - #37 =
INFO  13:45:47,615 - #20 g
INFO  13:45:47,615 - #40 ;
INFO  13:45:47,615 - #20 k
INFO  13:45:47,615 - #38 ++
INFO  13:45:47,615 - #40 ;
INFO  13:45:47,615 - #13 print
INFO  13:45:47,616 - #43 (
INFO  13:45:47,616 - #20 k
INFO  13:45:47,616 - #44 )
INFO  13:45:47,616 - #40 ;
INFO  13:45:47,616 - #48 }
INFO  13:45:47,616 - #48 }
INFO  13:45:47,617 - 

================SINTAKSNO STABLO====================


INFO  13:45:47,618 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  13:45:47,619 - 

================SEMANTICKA OBRADA====================


INFO  13:45:47,634 - Deklarisana konstanta 'N' na liniji 2
INFO  13:45:47,634 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  13:45:47,634 - Deklarisan globalni niz 'niz' na liniji 5
INFO  13:45:47,635 - Deklarisana promenljiva 'm' na liniji 8
INFO  13:45:47,635 - Deklarisana promenljiva 'k' na liniji 9
INFO  13:45:47,635 - ===================================
INFO  13:45:47,636 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  13:45:47,642 - Parsiranje uspesno zavrseno!
INFO  19:48:19,812 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  19:48:19,861 - #2 program
INFO  19:48:19,861 - #20 test
INFO  19:48:19,861 - #7 const
INFO  19:48:19,862 - #20 int
INFO  19:48:19,862 - #20 N
INFO  19:48:19,862 - #37 =
INFO  19:48:19,862 - #21 2
INFO  19:48:19,862 - #40 ;
INFO  19:48:19,863 - #20 int
INFO  19:48:19,863 - #20 g
INFO  19:48:19,863 - #40 ;
INFO  19:48:19,863 - #20 int
INFO  19:48:19,863 - #20 niz
INFO  19:48:19,863 - #45 [
INFO  19:48:19,864 - #46 ]
INFO  19:48:19,864 - #40 ;
INFO  19:48:19,864 - #47 {
INFO  19:48:19,864 - #16 void
INFO  19:48:19,864 - #20 main
INFO  19:48:19,864 - #43 (
INFO  19:48:19,864 - #44 )
INFO  19:48:19,864 - #20 int
INFO  19:48:19,864 - #20 m
INFO  19:48:19,864 - #40 ;
INFO  19:48:19,865 - #20 int
INFO  19:48:19,865 - #20 k
INFO  19:48:19,865 - #40 ;
INFO  19:48:19,865 - #47 {
INFO  19:48:19,865 - #20 g
INFO  19:48:19,865 - #37 =
INFO  19:48:19,866 - #20 N
INFO  19:48:19,866 - #40 ;
INFO  19:48:19,867 - #20 g
INFO  19:48:19,867 - #38 ++
INFO  19:48:19,867 - #40 ;
INFO  19:48:19,867 - #20 k
INFO  19:48:19,867 - #37 =
INFO  19:48:19,867 - #20 g
INFO  19:48:19,868 - #40 ;
INFO  19:48:19,868 - #20 k
INFO  19:48:19,868 - #38 ++
INFO  19:48:19,868 - #40 ;
INFO  19:48:19,868 - #13 print
INFO  19:48:19,868 - #43 (
INFO  19:48:19,868 - #20 k
INFO  19:48:19,868 - #44 )
INFO  19:48:19,868 - #40 ;
INFO  19:48:19,868 - #48 }
INFO  19:48:19,869 - #48 }
INFO  19:48:19,869 - 

================SINTAKSNO STABLO====================


INFO  19:48:19,870 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  19:48:19,871 - 

================SEMANTICKA OBRADA====================


INFO  19:48:19,881 - Deklarisana konstanta 'N' na liniji 2
INFO  19:48:19,881 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  19:48:19,882 - Deklarisan globalni niz 'niz' na liniji 5
INFO  19:48:19,882 - Deklarisana promenljiva 'm' na liniji 8
INFO  19:48:19,882 - Deklarisana promenljiva 'k' na liniji 9
INFO  19:48:19,883 - ===================================
INFO  19:48:19,883 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  19:48:19,889 - Parsiranje uspesno zavrseno!
INFO  20:19:01,512 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:19:01,556 - #2 program
INFO  20:19:01,556 - #20 test
INFO  20:19:01,556 - #7 const
INFO  20:19:01,557 - #20 int
INFO  20:19:01,557 - #20 N
INFO  20:19:01,557 - #37 =
INFO  20:19:01,557 - #21 2
INFO  20:19:01,557 - #40 ;
INFO  20:19:01,558 - #20 int
INFO  20:19:01,558 - #20 g
INFO  20:19:01,558 - #40 ;
INFO  20:19:01,558 - #20 int
INFO  20:19:01,559 - #20 niz
INFO  20:19:01,559 - #45 [
INFO  20:19:01,559 - #46 ]
INFO  20:19:01,559 - #40 ;
INFO  20:19:01,559 - #47 {
INFO  20:19:01,559 - #16 void
INFO  20:19:01,559 - #20 main
INFO  20:19:01,559 - #43 (
INFO  20:19:01,559 - #44 )
INFO  20:19:01,559 - #20 int
INFO  20:19:01,559 - #20 m
INFO  20:19:01,559 - #40 ;
INFO  20:19:01,560 - #20 int
INFO  20:19:01,560 - #20 k
INFO  20:19:01,560 - #40 ;
INFO  20:19:01,560 - #47 {
INFO  20:19:01,560 - #20 g
INFO  20:19:01,560 - #37 =
INFO  20:19:01,561 - #20 N
INFO  20:19:01,561 - #40 ;
INFO  20:19:01,561 - #20 g
INFO  20:19:01,561 - #38 ++
INFO  20:19:01,561 - #40 ;
INFO  20:19:01,561 - #20 k
INFO  20:19:01,562 - #37 =
INFO  20:19:01,562 - #20 g
INFO  20:19:01,562 - #40 ;
INFO  20:19:01,562 - #20 k
INFO  20:19:01,562 - #38 ++
INFO  20:19:01,562 - #40 ;
INFO  20:19:01,562 - #13 print
INFO  20:19:01,562 - #43 (
INFO  20:19:01,562 - #20 k
INFO  20:19:01,562 - #44 )
INFO  20:19:01,562 - #40 ;
INFO  20:19:01,563 - #48 }
INFO  20:19:01,563 - #48 }
INFO  20:19:01,564 - 

================SINTAKSNO STABLO====================


INFO  20:19:01,565 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:19:01,566 - 

================SEMANTICKA OBRADA====================


INFO  20:19:01,580 - Deklarisana konstanta 'N' na liniji 2
INFO  20:19:01,580 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:19:01,580 - Deklarisan globalni niz 'niz' na liniji 5
INFO  20:19:01,580 - Deklarisana promenljiva 'm' na liniji 8
INFO  20:19:01,581 - Deklarisana promenljiva 'k' na liniji 9
INFO  20:19:01,582 - ===================================
INFO  20:19:01,582 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:19:01,587 - Print na liniji 15!
INFO  20:19:01,588 - Parsiranje uspesno zavrseno!
INFO  20:20:10,107 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:20:10,193 - #2 program
INFO  20:20:10,193 - #20 test
INFO  20:20:10,193 - #7 const
INFO  20:20:10,195 - #20 int
INFO  20:20:10,195 - #20 N
INFO  20:20:10,196 - #37 =
INFO  20:20:10,196 - #21 2
INFO  20:20:10,196 - #40 ;
INFO  20:20:10,197 - #20 int
INFO  20:20:10,197 - #20 g
INFO  20:20:10,197 - #40 ;
INFO  20:20:10,198 - #20 int
INFO  20:20:10,198 - #20 niz
INFO  20:20:10,198 - #45 [
INFO  20:20:10,198 - #46 ]
INFO  20:20:10,198 - #40 ;
INFO  20:20:10,199 - #47 {
INFO  20:20:10,199 - #16 void
INFO  20:20:10,200 - #20 main
INFO  20:20:10,200 - #43 (
INFO  20:20:10,200 - #44 )
INFO  20:20:10,200 - #20 int
INFO  20:20:10,200 - #20 m
INFO  20:20:10,200 - #40 ;
INFO  20:20:10,200 - #20 int
INFO  20:20:10,201 - #20 k
INFO  20:20:10,201 - #40 ;
INFO  20:20:10,201 - #47 {
INFO  20:20:10,201 - #20 g
INFO  20:20:10,201 - #37 =
INFO  20:20:10,201 - #20 N
INFO  20:20:10,201 - #40 ;
INFO  20:20:10,202 - #20 g
INFO  20:20:10,203 - #38 ++
INFO  20:20:10,203 - #40 ;
INFO  20:20:10,203 - #20 k
INFO  20:20:10,204 - #37 =
INFO  20:20:10,204 - #20 g
INFO  20:20:10,204 - #40 ;
INFO  20:20:10,204 - #20 k
INFO  20:20:10,204 - #38 ++
INFO  20:20:10,204 - #40 ;
INFO  20:20:10,204 - #13 print
INFO  20:20:10,204 - #43 (
INFO  20:20:10,205 - #20 k
INFO  20:20:10,205 - #44 )
INFO  20:20:10,205 - #40 ;
INFO  20:20:10,205 - #48 }
INFO  20:20:10,205 - #48 }
INFO  20:20:10,207 - 

================SINTAKSNO STABLO====================


INFO  20:20:10,209 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:20:10,210 - 

================SEMANTICKA OBRADA====================


INFO  20:20:10,226 - Deklarisana konstanta 'N' na liniji 2
INFO  20:20:10,226 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:20:10,226 - Deklarisan globalni niz 'niz' na liniji 5
INFO  20:20:10,227 - Deklarisana promenljiva 'm' na liniji 8
INFO  20:20:10,227 - Deklarisana promenljiva 'k' na liniji 9
INFO  20:20:10,229 - ===================================
INFO  20:20:10,229 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:20:10,236 - Print na liniji 15!
INFO  20:20:10,237 - Parsiranje uspesno zavrseno!
INFO  20:20:35,249 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:20:35,292 - #2 program
INFO  20:20:35,292 - #20 test
INFO  20:20:35,293 - #7 const
INFO  20:20:35,293 - #20 int
INFO  20:20:35,293 - #20 N
INFO  20:20:35,294 - #37 =
INFO  20:20:35,294 - #21 2
INFO  20:20:35,294 - #40 ;
INFO  20:20:35,294 - #20 int
INFO  20:20:35,295 - #20 g
INFO  20:20:35,295 - #40 ;
INFO  20:20:35,295 - #20 int
INFO  20:20:35,295 - #20 niz
INFO  20:20:35,295 - #45 [
INFO  20:20:35,295 - #46 ]
INFO  20:20:35,295 - #40 ;
INFO  20:20:35,295 - #47 {
INFO  20:20:35,296 - #16 void
INFO  20:20:35,296 - #20 main
INFO  20:20:35,296 - #43 (
INFO  20:20:35,296 - #44 )
INFO  20:20:35,296 - #20 int
INFO  20:20:35,296 - #20 m
INFO  20:20:35,296 - #40 ;
INFO  20:20:35,296 - #20 int
INFO  20:20:35,296 - #20 k
INFO  20:20:35,296 - #40 ;
INFO  20:20:35,296 - #47 {
INFO  20:20:35,297 - #20 g
INFO  20:20:35,297 - #37 =
INFO  20:20:35,297 - #20 N
INFO  20:20:35,297 - #40 ;
INFO  20:20:35,297 - #20 g
INFO  20:20:35,298 - #38 ++
INFO  20:20:35,298 - #40 ;
INFO  20:20:35,298 - #20 k
INFO  20:20:35,298 - #37 =
INFO  20:20:35,298 - #20 g
INFO  20:20:35,298 - #40 ;
INFO  20:20:35,298 - #20 k
INFO  20:20:35,298 - #38 ++
INFO  20:20:35,298 - #40 ;
INFO  20:20:35,298 - #13 print
INFO  20:20:35,298 - #43 (
INFO  20:20:35,299 - #21 5
INFO  20:20:35,299 - #44 )
INFO  20:20:35,299 - #40 ;
INFO  20:20:35,299 - #48 }
INFO  20:20:35,299 - #48 }
INFO  20:20:35,300 - 

================SINTAKSNO STABLO====================


INFO  20:20:35,301 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorNumConst(
                   5
                  ) [FactorNumConst]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:20:35,302 - 

================SEMANTICKA OBRADA====================


INFO  20:20:35,315 - Deklarisana konstanta 'N' na liniji 2
INFO  20:20:35,315 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:20:35,315 - Deklarisan globalni niz 'niz' na liniji 5
INFO  20:20:35,315 - Deklarisana promenljiva 'm' na liniji 8
INFO  20:20:35,315 - Deklarisana promenljiva 'k' na liniji 9
INFO  20:20:35,316 - ===================================
INFO  20:20:35,316 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:20:35,321 - Factor num const 5 na liniji 15!
ERROR 20:20:35,321 - Print na liniji 15!
INFO  20:20:35,322 - Parsiranje uspesno zavrseno!
INFO  20:20:43,359 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:20:43,414 - #2 program
INFO  20:20:43,415 - #20 test
INFO  20:20:43,415 - #7 const
INFO  20:20:43,416 - #20 int
INFO  20:20:43,416 - #20 N
INFO  20:20:43,416 - #37 =
INFO  20:20:43,416 - #21 2
INFO  20:20:43,417 - #40 ;
INFO  20:20:43,417 - #20 int
INFO  20:20:43,418 - #20 g
INFO  20:20:43,418 - #40 ;
INFO  20:20:43,418 - #20 int
INFO  20:20:43,419 - #20 niz
INFO  20:20:43,419 - #45 [
INFO  20:20:43,419 - #46 ]
INFO  20:20:43,419 - #40 ;
INFO  20:20:43,419 - #47 {
INFO  20:20:43,419 - #16 void
INFO  20:20:43,419 - #20 main
INFO  20:20:43,419 - #43 (
INFO  20:20:43,420 - #44 )
INFO  20:20:43,420 - #20 int
INFO  20:20:43,420 - #20 m
INFO  20:20:43,420 - #40 ;
INFO  20:20:43,420 - #20 int
INFO  20:20:43,420 - #20 k
INFO  20:20:43,421 - #40 ;
INFO  20:20:43,421 - #47 {
INFO  20:20:43,421 - #20 g
INFO  20:20:43,421 - #37 =
INFO  20:20:43,421 - #20 N
INFO  20:20:43,423 - #40 ;
INFO  20:20:43,424 - #20 g
INFO  20:20:43,425 - #38 ++
INFO  20:20:43,425 - #40 ;
INFO  20:20:43,425 - #20 k
INFO  20:20:43,425 - #37 =
INFO  20:20:43,425 - #20 g
INFO  20:20:43,426 - #40 ;
INFO  20:20:43,426 - #20 k
INFO  20:20:43,426 - #38 ++
INFO  20:20:43,426 - #40 ;
INFO  20:20:43,428 - #13 print
INFO  20:20:43,428 - #43 (
INFO  20:20:43,428 - #20 k
INFO  20:20:43,428 - #44 )
INFO  20:20:43,428 - #40 ;
INFO  20:20:43,428 - #48 }
INFO  20:20:43,429 - #48 }
INFO  20:20:43,430 - 

================SINTAKSNO STABLO====================


INFO  20:20:43,431 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:20:43,433 - 

================SEMANTICKA OBRADA====================


INFO  20:20:43,446 - Deklarisana konstanta 'N' na liniji 2
INFO  20:20:43,446 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:20:43,446 - Deklarisan globalni niz 'niz' na liniji 5
INFO  20:20:43,446 - Deklarisana promenljiva 'm' na liniji 8
INFO  20:20:43,446 - Deklarisana promenljiva 'k' na liniji 9
INFO  20:20:43,447 - ===================================
INFO  20:20:43,447 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:20:43,454 - Print na liniji 15!
INFO  20:20:43,455 - Parsiranje uspesno zavrseno!
INFO  20:20:53,672 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:20:53,718 - #2 program
INFO  20:20:53,718 - #20 test
INFO  20:20:53,718 - #7 const
INFO  20:20:53,719 - #20 int
INFO  20:20:53,719 - #20 N
INFO  20:20:53,719 - #37 =
INFO  20:20:53,719 - #21 2
INFO  20:20:53,719 - #40 ;
INFO  20:20:53,720 - #20 int
INFO  20:20:53,720 - #20 g
INFO  20:20:53,720 - #40 ;
INFO  20:20:53,720 - #20 int
INFO  20:20:53,720 - #20 niz
INFO  20:20:53,720 - #45 [
INFO  20:20:53,721 - #46 ]
INFO  20:20:53,721 - #40 ;
INFO  20:20:53,721 - #47 {
INFO  20:20:53,721 - #16 void
INFO  20:20:53,721 - #20 main
INFO  20:20:53,721 - #43 (
INFO  20:20:53,721 - #44 )
INFO  20:20:53,721 - #20 int
INFO  20:20:53,721 - #20 m
INFO  20:20:53,721 - #40 ;
INFO  20:20:53,721 - #20 int
INFO  20:20:53,722 - #20 k
INFO  20:20:53,722 - #40 ;
INFO  20:20:53,722 - #47 {
INFO  20:20:53,722 - #20 g
INFO  20:20:53,722 - #37 =
INFO  20:20:53,722 - #20 N
INFO  20:20:53,722 - #40 ;
INFO  20:20:53,723 - #20 g
INFO  20:20:53,723 - #38 ++
INFO  20:20:53,723 - #40 ;
INFO  20:20:53,724 - #20 k
INFO  20:20:53,724 - #37 =
INFO  20:20:53,724 - #20 g
INFO  20:20:53,724 - #40 ;
INFO  20:20:53,724 - #20 k
INFO  20:20:53,724 - #38 ++
INFO  20:20:53,724 - #40 ;
INFO  20:20:53,724 - #13 print
INFO  20:20:53,724 - #43 (
INFO  20:20:53,725 - #20 g
INFO  20:20:53,725 - #44 )
INFO  20:20:53,725 - #40 ;
INFO  20:20:53,725 - #48 }
INFO  20:20:53,725 - #48 }
INFO  20:20:53,727 - 

================SINTAKSNO STABLO====================


INFO  20:20:53,728 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:20:53,731 - 

================SEMANTICKA OBRADA====================


INFO  20:20:53,741 - Deklarisana konstanta 'N' na liniji 2
INFO  20:20:53,741 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:20:53,741 - Deklarisan globalni niz 'niz' na liniji 5
INFO  20:20:53,742 - Deklarisana promenljiva 'm' na liniji 8
INFO  20:20:53,742 - Deklarisana promenljiva 'k' na liniji 9
INFO  20:20:53,743 - ===================================
INFO  20:20:53,743 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:20:53,748 - Print na liniji 15!
INFO  20:20:53,749 - Parsiranje uspesno zavrseno!
INFO  20:21:02,271 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:21:02,315 - #2 program
INFO  20:21:02,315 - #20 test
INFO  20:21:02,315 - #7 const
INFO  20:21:02,316 - #20 int
INFO  20:21:02,316 - #20 N
INFO  20:21:02,317 - #37 =
INFO  20:21:02,317 - #21 2
INFO  20:21:02,317 - #40 ;
INFO  20:21:02,317 - #20 int
INFO  20:21:02,317 - #20 g
INFO  20:21:02,318 - #40 ;
INFO  20:21:02,318 - #20 int
INFO  20:21:02,318 - #20 niz
INFO  20:21:02,318 - #45 [
INFO  20:21:02,318 - #46 ]
INFO  20:21:02,318 - #40 ;
INFO  20:21:02,318 - #47 {
INFO  20:21:02,318 - #16 void
INFO  20:21:02,318 - #20 main
INFO  20:21:02,318 - #43 (
INFO  20:21:02,319 - #44 )
INFO  20:21:02,319 - #20 int
INFO  20:21:02,319 - #20 m
INFO  20:21:02,319 - #40 ;
INFO  20:21:02,319 - #20 int
INFO  20:21:02,319 - #20 k
INFO  20:21:02,319 - #40 ;
INFO  20:21:02,320 - #47 {
INFO  20:21:02,320 - #20 g
INFO  20:21:02,320 - #37 =
INFO  20:21:02,320 - #20 N
INFO  20:21:02,320 - #40 ;
INFO  20:21:02,321 - #20 g
INFO  20:21:02,321 - #38 ++
INFO  20:21:02,321 - #40 ;
INFO  20:21:02,321 - #13 print
INFO  20:21:02,321 - #43 (
INFO  20:21:02,322 - #20 g
INFO  20:21:02,322 - #44 )
INFO  20:21:02,322 - #40 ;
INFO  20:21:02,322 - #48 }
INFO  20:21:02,322 - #48 }
INFO  20:21:02,323 - 

================SINTAKSNO STABLO====================


INFO  20:21:02,324 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   g
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             N
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 g
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:21:02,325 - 

================SEMANTICKA OBRADA====================


INFO  20:21:02,335 - Deklarisana konstanta 'N' na liniji 2
INFO  20:21:02,336 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:21:02,336 - Deklarisan globalni niz 'niz' na liniji 5
INFO  20:21:02,336 - Deklarisana promenljiva 'm' na liniji 8
INFO  20:21:02,336 - Deklarisana promenljiva 'k' na liniji 9
INFO  20:21:02,337 - ===================================
INFO  20:21:02,337 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:21:02,342 - Print na liniji 15!
INFO  20:21:02,343 - Parsiranje uspesno zavrseno!
INFO  20:21:30,379 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:21:30,430 - #2 program
INFO  20:21:30,430 - #20 test
INFO  20:21:30,430 - #7 const
INFO  20:21:30,431 - #20 int
INFO  20:21:30,431 - #20 N
INFO  20:21:30,431 - #37 =
INFO  20:21:30,431 - #21 2
INFO  20:21:30,432 - #40 ;
INFO  20:21:30,432 - #20 int
INFO  20:21:30,433 - #20 g
INFO  20:21:30,433 - #40 ;
INFO  20:21:30,433 - #20 int
INFO  20:21:30,434 - #20 niz
INFO  20:21:30,434 - #45 [
INFO  20:21:30,434 - #46 ]
INFO  20:21:30,434 - #40 ;
INFO  20:21:30,434 - #47 {
INFO  20:21:30,434 - #16 void
INFO  20:21:30,434 - #20 main
INFO  20:21:30,434 - #43 (
INFO  20:21:30,434 - #44 )
INFO  20:21:30,435 - #20 int
INFO  20:21:30,435 - #20 m
INFO  20:21:30,435 - #40 ;
INFO  20:21:30,435 - #20 int
INFO  20:21:30,435 - #20 k
INFO  20:21:30,435 - #40 ;
INFO  20:21:30,435 - #47 {
INFO  20:21:30,436 - #20 g
INFO  20:21:30,436 - #37 =
INFO  20:21:30,436 - #20 N
INFO  20:21:30,436 - #40 ;
INFO  20:21:30,437 - #20 g
INFO  20:21:30,437 - #38 ++
INFO  20:21:30,437 - #40 ;
INFO  20:21:30,437 - #13 print
INFO  20:21:30,437 - #43 (
INFO  20:21:30,437 - #20 g
INFO  20:21:30,437 - #44 )
INFO  20:21:30,437 - #40 ;
INFO  20:21:30,438 - #48 }
INFO  20:21:30,438 - #48 }
INFO  20:21:30,439 - 

================SINTAKSNO STABLO====================


INFO  20:21:30,440 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   g
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             N
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 g
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:21:30,440 - 

================SEMANTICKA OBRADA====================


INFO  20:21:30,450 - Deklarisana konstanta 'N' na liniji 2
INFO  20:21:30,450 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:21:30,450 - Deklarisan globalni niz 'niz' na liniji 5
INFO  20:21:30,451 - Deklarisana promenljiva 'm' na liniji 8
INFO  20:21:30,451 - Deklarisana promenljiva 'k' na liniji 9
INFO  20:21:30,452 - ===================================
INFO  20:21:30,452 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:21:30,457 - Print na liniji 15!
INFO  20:21:30,458 - Parsiranje uspesno zavrseno!
INFO  20:26:20,383 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:26:20,465 - #2 program
INFO  20:26:20,466 - #20 test
INFO  20:26:20,466 - #7 const
INFO  20:26:20,468 - #20 int
INFO  20:26:20,468 - #20 N
INFO  20:26:20,469 - #37 =
INFO  20:26:20,469 - #21 2
INFO  20:26:20,469 - #40 ;
INFO  20:26:20,470 - #20 int
INFO  20:26:20,470 - #20 g
INFO  20:26:20,470 - #40 ;
INFO  20:26:20,470 - #20 int
INFO  20:26:20,471 - #20 niz
INFO  20:26:20,471 - #45 [
INFO  20:26:20,471 - #46 ]
INFO  20:26:20,471 - #40 ;
INFO  20:26:20,471 - #47 {
INFO  20:26:20,471 - #16 void
INFO  20:26:20,471 - #20 main
INFO  20:26:20,472 - #43 (
INFO  20:26:20,472 - #44 )
INFO  20:26:20,472 - #20 int
INFO  20:26:20,472 - #20 m
INFO  20:26:20,472 - #40 ;
INFO  20:26:20,472 - #20 int
INFO  20:26:20,473 - #20 k
INFO  20:26:20,473 - #40 ;
INFO  20:26:20,473 - #47 {
INFO  20:26:20,473 - #20 g
INFO  20:26:20,473 - #37 =
INFO  20:26:20,474 - #20 N
INFO  20:26:20,474 - #40 ;
INFO  20:26:20,475 - #20 g
INFO  20:26:20,476 - #38 ++
INFO  20:26:20,476 - #40 ;
INFO  20:26:20,476 - #13 print
INFO  20:26:20,476 - #43 (
INFO  20:26:20,476 - #20 g
INFO  20:26:20,476 - #44 )
INFO  20:26:20,477 - #40 ;
INFO  20:26:20,477 - #48 }
INFO  20:26:20,477 - #48 }
INFO  20:26:20,479 - 

================SINTAKSNO STABLO====================


INFO  20:26:20,480 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   g
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             N
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 g
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:26:20,483 - 

================SEMANTICKA OBRADA====================


INFO  20:26:20,497 - Deklarisana konstanta 'N' na liniji 2
INFO  20:26:20,498 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:26:20,498 - Deklarisan globalni niz 'niz' na liniji 5
INFO  20:26:20,498 - Deklarisana promenljiva 'm' na liniji 8
INFO  20:26:20,499 - Deklarisana promenljiva 'k' na liniji 9
INFO  20:26:20,500 - ===================================
INFO  20:26:20,500 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:26:20,507 - Factor num const N na liniji 11!
ERROR 20:26:20,507 - Factor num const g na liniji 15!
ERROR 20:26:20,507 - Print na liniji 15!
INFO  20:26:20,508 - Parsiranje uspesno zavrseno!
INFO  20:26:36,659 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:26:36,706 - #2 program
INFO  20:26:36,706 - #20 test
INFO  20:26:36,706 - #7 const
INFO  20:26:36,707 - #20 int
INFO  20:26:36,707 - #20 N
INFO  20:26:36,707 - #37 =
INFO  20:26:36,707 - #21 2
INFO  20:26:36,707 - #40 ;
INFO  20:26:36,708 - #20 int
INFO  20:26:36,708 - #20 g
INFO  20:26:36,708 - #40 ;
INFO  20:26:36,708 - #20 int
INFO  20:26:36,709 - #20 niz
INFO  20:26:36,709 - #45 [
INFO  20:26:36,709 - #46 ]
INFO  20:26:36,709 - #40 ;
INFO  20:26:36,709 - #47 {
INFO  20:26:36,709 - #16 void
INFO  20:26:36,709 - #20 main
INFO  20:26:36,709 - #43 (
INFO  20:26:36,709 - #44 )
INFO  20:26:36,709 - #20 int
INFO  20:26:36,709 - #20 m
INFO  20:26:36,709 - #40 ;
INFO  20:26:36,710 - #20 int
INFO  20:26:36,710 - #20 k
INFO  20:26:36,710 - #40 ;
INFO  20:26:36,710 - #47 {
INFO  20:26:36,710 - #20 g
INFO  20:26:36,710 - #37 =
INFO  20:26:36,710 - #20 N
INFO  20:26:36,711 - #40 ;
INFO  20:26:36,711 - #20 g
INFO  20:26:36,712 - #38 ++
INFO  20:26:36,712 - #40 ;
INFO  20:26:36,712 - #13 print
INFO  20:26:36,712 - #43 (
INFO  20:26:36,712 - #20 g
INFO  20:26:36,712 - #44 )
INFO  20:26:36,712 - #40 ;
INFO  20:26:36,712 - #48 }
INFO  20:26:36,713 - #48 }
INFO  20:26:36,714 - 

================SINTAKSNO STABLO====================


INFO  20:26:36,715 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   g
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             N
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 g
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:26:36,716 - 

================SEMANTICKA OBRADA====================


INFO  20:26:36,727 - Deklarisana konstanta 'N' na liniji 2
INFO  20:26:36,727 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:26:36,727 - Deklarisan globalni niz 'niz' na liniji 5
INFO  20:26:36,727 - Deklarisana promenljiva 'm' na liniji 8
INFO  20:26:36,727 - Deklarisana promenljiva 'k' na liniji 9
INFO  20:26:36,728 - ===================================
INFO  20:26:36,728 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:26:36,735 - Factor num const N na liniji 11!
ERROR 20:26:36,735 - Factor num const g na liniji 15!
ERROR 20:26:36,735 - Print na liniji 15!
INFO  20:26:36,736 - Parsiranje uspesno zavrseno!
INFO  20:26:47,238 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:26:47,283 - #2 program
INFO  20:26:47,283 - #20 test
INFO  20:26:47,283 - #7 const
INFO  20:26:47,283 - #20 int
INFO  20:26:47,283 - #20 N
INFO  20:26:47,284 - #37 =
INFO  20:26:47,284 - #21 2
INFO  20:26:47,284 - #40 ;
INFO  20:26:47,284 - #20 int
INFO  20:26:47,285 - #20 g
INFO  20:26:47,285 - #40 ;
INFO  20:26:47,285 - #20 int
INFO  20:26:47,285 - #20 niz
INFO  20:26:47,285 - #45 [
INFO  20:26:47,285 - #46 ]
INFO  20:26:47,285 - #40 ;
INFO  20:26:47,285 - #47 {
INFO  20:26:47,285 - #16 void
INFO  20:26:47,286 - #20 main
INFO  20:26:47,286 - #43 (
INFO  20:26:47,286 - #44 )
INFO  20:26:47,286 - #20 int
INFO  20:26:47,286 - #20 m
INFO  20:26:47,286 - #40 ;
INFO  20:26:47,286 - #20 int
INFO  20:26:47,286 - #20 k
INFO  20:26:47,286 - #40 ;
INFO  20:26:47,286 - #47 {
INFO  20:26:47,287 - #20 g
INFO  20:26:47,287 - #37 =
INFO  20:26:47,287 - #20 N
INFO  20:26:47,287 - #40 ;
INFO  20:26:47,288 - #20 g
INFO  20:26:47,288 - #38 ++
INFO  20:26:47,288 - #40 ;
INFO  20:26:47,288 - #13 print
INFO  20:26:47,288 - #43 (
INFO  20:26:47,288 - #20 g
INFO  20:26:47,289 - #44 )
INFO  20:26:47,289 - #40 ;
INFO  20:26:47,289 - #48 }
INFO  20:26:47,289 - #48 }
INFO  20:26:47,290 - 

================SINTAKSNO STABLO====================


INFO  20:26:47,291 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   g
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             N
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 g
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:26:47,293 - 

================SEMANTICKA OBRADA====================


INFO  20:26:47,305 - Deklarisana konstanta 'N' na liniji 2
INFO  20:26:47,305 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:26:47,305 - Deklarisan globalni niz 'niz' na liniji 5
INFO  20:26:47,306 - Deklarisana promenljiva 'm' na liniji 8
INFO  20:26:47,306 - Deklarisana promenljiva 'k' na liniji 9
INFO  20:26:47,307 - ===================================
INFO  20:26:47,307 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:26:47,312 - factorDesignator N na liniji 11!
ERROR 20:26:47,312 - factorDesignator g na liniji 15!
ERROR 20:26:47,312 - Print na liniji 15!
INFO  20:26:47,313 - Parsiranje uspesno zavrseno!
INFO  20:27:34,188 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:27:34,232 - #2 program
INFO  20:27:34,232 - #20 test
INFO  20:27:34,232 - #7 const
INFO  20:27:34,233 - #20 int
INFO  20:27:34,233 - #20 N
INFO  20:27:34,233 - #37 =
INFO  20:27:34,234 - #21 2
INFO  20:27:34,234 - #40 ;
INFO  20:27:34,234 - #20 int
INFO  20:27:34,234 - #20 g
INFO  20:27:34,234 - #40 ;
INFO  20:27:34,235 - #20 int
INFO  20:27:34,235 - #20 niz
INFO  20:27:34,235 - #45 [
INFO  20:27:34,235 - #46 ]
INFO  20:27:34,235 - #40 ;
INFO  20:27:34,235 - #47 {
INFO  20:27:34,235 - #16 void
INFO  20:27:34,235 - #20 main
INFO  20:27:34,235 - #43 (
INFO  20:27:34,235 - #44 )
INFO  20:27:34,236 - #20 int
INFO  20:27:34,236 - #20 m
INFO  20:27:34,236 - #40 ;
INFO  20:27:34,236 - #20 int
INFO  20:27:34,236 - #20 k
INFO  20:27:34,236 - #40 ;
INFO  20:27:34,236 - #47 {
INFO  20:27:34,236 - #20 g
INFO  20:27:34,237 - #37 =
INFO  20:27:34,237 - #20 N
INFO  20:27:34,237 - #40 ;
INFO  20:27:34,238 - #20 g
INFO  20:27:34,238 - #38 ++
INFO  20:27:34,238 - #40 ;
INFO  20:27:34,238 - #13 print
INFO  20:27:34,238 - #43 (
INFO  20:27:34,238 - #20 g
INFO  20:27:34,238 - #44 )
INFO  20:27:34,238 - #40 ;
INFO  20:27:34,238 - #48 }
INFO  20:27:34,238 - #48 }
INFO  20:27:34,239 - 

================SINTAKSNO STABLO====================


INFO  20:27:34,241 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementSingle(
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   g
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             N
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementSingle]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 g
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:27:34,242 - 

================SEMANTICKA OBRADA====================


INFO  20:27:34,256 - Deklarisana konstanta 'N' na liniji 2
INFO  20:27:34,256 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:27:34,256 - Deklarisan globalni niz 'niz' na liniji 5
INFO  20:27:34,256 - Deklarisana promenljiva 'm' na liniji 8
INFO  20:27:34,256 - Deklarisana promenljiva 'k' na liniji 9
INFO  20:27:34,258 - ===================================
INFO  20:27:34,258 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:27:34,264 - factorDesignator N na liniji 11!
ERROR 20:27:34,264 - Obj != null N na liniji 11!
ERROR 20:27:34,264 - factorDesignator g na liniji 15!
ERROR 20:27:34,264 - Obj != null g na liniji 15!
ERROR 20:27:34,264 - Print na liniji 15!
INFO  20:27:34,265 - Parsiranje uspesno zavrseno!
INFO  20:28:01,710 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:28:01,766 - #2 program
INFO  20:28:01,766 - #20 test
INFO  20:28:01,766 - #7 const
INFO  20:28:01,767 - #20 int
INFO  20:28:01,767 - #20 N
INFO  20:28:01,768 - #37 =
INFO  20:28:01,768 - #21 2
INFO  20:28:01,768 - #40 ;
INFO  20:28:01,769 - #20 int
INFO  20:28:01,770 - #20 g
INFO  20:28:01,770 - #40 ;
INFO  20:28:01,770 - #20 int
INFO  20:28:01,771 - #20 niz
INFO  20:28:01,771 - #45 [
INFO  20:28:01,771 - #46 ]
INFO  20:28:01,771 - #40 ;
INFO  20:28:01,771 - #47 {
INFO  20:28:01,772 - #16 void
INFO  20:28:01,772 - #20 main
INFO  20:28:01,772 - #43 (
INFO  20:28:01,772 - #44 )
INFO  20:28:01,772 - #20 int
INFO  20:28:01,772 - #20 m
INFO  20:28:01,772 - #40 ;
INFO  20:28:01,772 - #20 int
INFO  20:28:01,773 - #20 k
INFO  20:28:01,773 - #40 ;
INFO  20:28:01,773 - #47 {
INFO  20:28:01,773 - #20 g
INFO  20:28:01,773 - #37 =
INFO  20:28:01,773 - #20 N
INFO  20:28:01,773 - #40 ;
INFO  20:28:01,774 - #20 g
INFO  20:28:01,775 - #38 ++
INFO  20:28:01,775 - #40 ;
INFO  20:28:01,775 - #20 k
INFO  20:28:01,775 - #37 =
INFO  20:28:01,775 - #20 g
INFO  20:28:01,775 - #40 ;
INFO  20:28:01,775 - #20 k
INFO  20:28:01,775 - #38 ++
INFO  20:28:01,776 - #40 ;
INFO  20:28:01,776 - #13 print
INFO  20:28:01,776 - #43 (
INFO  20:28:01,776 - #20 k
INFO  20:28:01,776 - #44 )
INFO  20:28:01,776 - #40 ;
INFO  20:28:01,776 - #48 }
INFO  20:28:01,776 - #48 }
INFO  20:28:01,777 - 

================SINTAKSNO STABLO====================


INFO  20:28:01,779 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:28:01,780 - 

================SEMANTICKA OBRADA====================


INFO  20:28:01,791 - Deklarisana konstanta 'N' na liniji 2
INFO  20:28:01,791 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:28:01,791 - Deklarisan globalni niz 'niz' na liniji 5
INFO  20:28:01,792 - Deklarisana promenljiva 'm' na liniji 8
INFO  20:28:01,792 - Deklarisana promenljiva 'k' na liniji 9
INFO  20:28:01,793 - ===================================
INFO  20:28:01,793 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:28:01,799 - factorDesignator N na liniji 11!
ERROR 20:28:01,799 - Obj != null N na liniji 11!
ERROR 20:28:01,799 - factorDesignator g na liniji 13!
ERROR 20:28:01,799 - Obj != null g na liniji 13!
ERROR 20:28:01,799 - factorDesignator k na liniji 15!
ERROR 20:28:01,799 - Print na liniji 15!
INFO  20:28:01,800 - Parsiranje uspesno zavrseno!
INFO  20:29:18,385 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:29:18,432 - #2 program
INFO  20:29:18,433 - #20 test
INFO  20:29:18,433 - #7 const
INFO  20:29:18,434 - #20 int
INFO  20:29:18,434 - #20 N
INFO  20:29:18,435 - #37 =
INFO  20:29:18,435 - #21 2
INFO  20:29:18,435 - #40 ;
INFO  20:29:18,436 - #20 int
INFO  20:29:18,436 - #20 g
INFO  20:29:18,436 - #40 ;
INFO  20:29:18,436 - #20 int
INFO  20:29:18,437 - #20 niz
INFO  20:29:18,437 - #45 [
INFO  20:29:18,437 - #46 ]
INFO  20:29:18,437 - #40 ;
INFO  20:29:18,437 - #47 {
INFO  20:29:18,437 - #16 void
INFO  20:29:18,438 - #20 main
INFO  20:29:18,438 - #43 (
INFO  20:29:18,438 - #44 )
INFO  20:29:18,438 - #20 int
INFO  20:29:18,438 - #20 m
INFO  20:29:18,438 - #40 ;
INFO  20:29:18,438 - #20 int
INFO  20:29:18,439 - #20 k
INFO  20:29:18,439 - #40 ;
INFO  20:29:18,439 - #47 {
INFO  20:29:18,439 - #20 g
INFO  20:29:18,439 - #37 =
INFO  20:29:18,440 - #20 N
INFO  20:29:18,440 - #40 ;
INFO  20:29:18,440 - #20 g
INFO  20:29:18,441 - #38 ++
INFO  20:29:18,441 - #40 ;
INFO  20:29:18,441 - #20 k
INFO  20:29:18,441 - #37 =
INFO  20:29:18,441 - #20 g
INFO  20:29:18,441 - #40 ;
INFO  20:29:18,441 - #20 k
INFO  20:29:18,441 - #38 ++
INFO  20:29:18,441 - #40 ;
INFO  20:29:18,442 - #13 print
INFO  20:29:18,442 - #43 (
INFO  20:29:18,442 - #20 k
INFO  20:29:18,442 - #44 )
INFO  20:29:18,442 - #40 ;
INFO  20:29:18,442 - #48 }
INFO  20:29:18,442 - #48 }
INFO  20:29:18,443 - 

================SINTAKSNO STABLO====================


INFO  20:29:18,445 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:29:18,446 - 

================SEMANTICKA OBRADA====================


INFO  20:29:18,457 - Deklarisana konstanta 'N' na liniji 2
INFO  20:29:18,457 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:29:18,457 - Deklarisan globalni niz 'niz' na liniji 5
INFO  20:29:18,458 - Deklarisana promenljiva 'm' na liniji 8
INFO  20:29:18,458 - Deklarisana promenljiva 'k' na liniji 9
INFO  20:29:18,459 - ===================================
INFO  20:29:18,459 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:29:18,461 - getVarConst N
ERROR 20:29:18,465 - getVarConst N
ERROR 20:29:18,465 - getVarConst g
ERROR 20:29:18,465 - getVarConst k
ERROR 20:29:18,465 - Print na liniji 15!
INFO  20:29:18,466 - Parsiranje uspesno zavrseno!
INFO  20:30:47,922 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:30:47,965 - #2 program
INFO  20:30:47,965 - #20 test
INFO  20:30:47,965 - #7 const
INFO  20:30:47,966 - #20 int
INFO  20:30:47,966 - #20 N
INFO  20:30:47,966 - #37 =
INFO  20:30:47,966 - #21 2
INFO  20:30:47,966 - #40 ;
INFO  20:30:47,967 - #20 int
INFO  20:30:47,967 - #20 g
INFO  20:30:47,967 - #40 ;
INFO  20:30:47,967 - #20 int
INFO  20:30:47,968 - #20 niz
INFO  20:30:47,968 - #45 [
INFO  20:30:47,968 - #46 ]
INFO  20:30:47,968 - #40 ;
INFO  20:30:47,968 - #47 {
INFO  20:30:47,968 - #16 void
INFO  20:30:47,968 - #20 main
INFO  20:30:47,968 - #43 (
INFO  20:30:47,968 - #44 )
INFO  20:30:47,968 - #20 int
INFO  20:30:47,968 - #20 m
INFO  20:30:47,968 - #40 ;
INFO  20:30:47,969 - #20 int
INFO  20:30:47,969 - #20 k
INFO  20:30:47,969 - #40 ;
INFO  20:30:47,969 - #47 {
INFO  20:30:47,969 - #20 g
INFO  20:30:47,969 - #37 =
INFO  20:30:47,970 - #20 N
INFO  20:30:47,970 - #40 ;
INFO  20:30:47,970 - #20 g
INFO  20:30:47,970 - #38 ++
INFO  20:30:47,970 - #40 ;
INFO  20:30:47,971 - #20 k
INFO  20:30:47,971 - #37 =
INFO  20:30:47,971 - #20 g
INFO  20:30:47,971 - #40 ;
INFO  20:30:47,971 - #20 k
INFO  20:30:47,971 - #38 ++
INFO  20:30:47,971 - #40 ;
INFO  20:30:47,971 - #13 print
INFO  20:30:47,971 - #43 (
INFO  20:30:47,971 - #20 k
INFO  20:30:47,971 - #44 )
INFO  20:30:47,971 - #40 ;
INFO  20:30:47,972 - #48 }
INFO  20:30:47,972 - #48 }
INFO  20:30:47,973 - 

================SINTAKSNO STABLO====================


INFO  20:30:47,973 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:30:47,975 - 

================SEMANTICKA OBRADA====================


INFO  20:30:47,987 - Deklarisana konstanta 'N' na liniji 2
INFO  20:30:47,988 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:30:47,988 - Deklarisan globalni niz 'niz' na liniji 5
INFO  20:30:47,988 - Deklarisana promenljiva 'm' na liniji 8
INFO  20:30:47,988 - Deklarisana promenljiva 'k' na liniji 9
INFO  20:30:47,989 - ===================================
INFO  20:30:47,989 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:30:47,990 - getVarConst N
ERROR 20:30:47,990 - noObj N
ERROR 20:30:47,994 - getVarConst N
ERROR 20:30:47,994 - noObj N
ERROR 20:30:47,994 - getVarConst g
ERROR 20:30:47,995 - noObj g
ERROR 20:30:47,995 - getVarConst k
ERROR 20:30:47,995 - noObj k
ERROR 20:30:47,995 - Print na liniji 15!
INFO  20:30:47,995 - Parsiranje uspesno zavrseno!
INFO  20:32:42,393 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:32:42,443 - #2 program
INFO  20:32:42,443 - #20 test
INFO  20:32:42,443 - #7 const
INFO  20:32:42,444 - #20 int
INFO  20:32:42,444 - #20 N
INFO  20:32:42,444 - #37 =
INFO  20:32:42,445 - #21 2
INFO  20:32:42,445 - #40 ;
INFO  20:32:42,446 - #20 int
INFO  20:32:42,446 - #20 g
INFO  20:32:42,446 - #40 ;
INFO  20:32:42,446 - #20 int
INFO  20:32:42,447 - #20 niz
INFO  20:32:42,447 - #45 [
INFO  20:32:42,447 - #46 ]
INFO  20:32:42,447 - #40 ;
INFO  20:32:42,447 - #47 {
INFO  20:32:42,447 - #16 void
INFO  20:32:42,447 - #20 main
INFO  20:32:42,447 - #43 (
INFO  20:32:42,448 - #44 )
INFO  20:32:42,448 - #20 int
INFO  20:32:42,448 - #20 m
INFO  20:32:42,448 - #40 ;
INFO  20:32:42,448 - #20 int
INFO  20:32:42,448 - #20 k
INFO  20:32:42,449 - #40 ;
INFO  20:32:42,449 - #47 {
INFO  20:32:42,449 - #20 g
INFO  20:32:42,449 - #37 =
INFO  20:32:42,449 - #20 N
INFO  20:32:42,449 - #40 ;
INFO  20:32:42,450 - #20 g
INFO  20:32:42,450 - #38 ++
INFO  20:32:42,450 - #40 ;
INFO  20:32:42,451 - #20 k
INFO  20:32:42,451 - #37 =
INFO  20:32:42,451 - #20 g
INFO  20:32:42,451 - #40 ;
INFO  20:32:42,451 - #20 k
INFO  20:32:42,451 - #38 ++
INFO  20:32:42,451 - #40 ;
INFO  20:32:42,451 - #13 print
INFO  20:32:42,451 - #43 (
INFO  20:32:42,451 - #20 k
INFO  20:32:42,452 - #44 )
INFO  20:32:42,452 - #40 ;
INFO  20:32:42,452 - #48 }
INFO  20:32:42,452 - #48 }
INFO  20:32:42,453 - 

================SINTAKSNO STABLO====================


INFO  20:32:42,454 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:32:42,455 - 

================SEMANTICKA OBRADA====================


INFO  20:32:42,465 - Deklarisana konstanta 'N' na liniji 2
INFO  20:32:42,465 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:32:42,465 - Deklarisan globalni niz 'niz' na liniji 5
INFO  20:32:42,466 - Deklarisana promenljiva 'm' na liniji 8
INFO  20:32:42,466 - Deklarisana promenljiva 'k' na liniji 9
INFO  20:32:42,466 - ===================================
INFO  20:32:42,467 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:32:42,469 - getVarConst N
ERROR 20:32:42,469 - localSymbols N
ERROR 20:32:42,473 - getVarConst N
ERROR 20:32:42,473 - localSymbols N
ERROR 20:32:42,473 - getVarConst g
ERROR 20:32:42,473 - localSymbols N
ERROR 20:32:42,473 - localSymbols g
ERROR 20:32:42,473 - getVarConst k
ERROR 20:32:42,473 - localSymbols N
ERROR 20:32:42,473 - localSymbols g
ERROR 20:32:42,473 - localSymbols niz
ERROR 20:32:42,473 - localSymbols main
ERROR 20:32:42,473 - Print na liniji 15!
INFO  20:32:42,474 - Parsiranje uspesno zavrseno!
INFO  20:33:27,184 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:33:27,227 - #2 program
INFO  20:33:27,227 - #20 test
INFO  20:33:27,227 - #7 const
INFO  20:33:27,228 - #20 int
INFO  20:33:27,228 - #20 N
INFO  20:33:27,229 - #37 =
INFO  20:33:27,229 - #21 2
INFO  20:33:27,229 - #40 ;
INFO  20:33:27,230 - #20 int
INFO  20:33:27,230 - #20 g
INFO  20:33:27,230 - #40 ;
INFO  20:33:27,230 - #20 int
INFO  20:33:27,230 - #20 niz
INFO  20:33:27,230 - #45 [
INFO  20:33:27,231 - #46 ]
INFO  20:33:27,231 - #40 ;
INFO  20:33:27,231 - #47 {
INFO  20:33:27,231 - #16 void
INFO  20:33:27,231 - #20 main
INFO  20:33:27,231 - #43 (
INFO  20:33:27,231 - #44 )
INFO  20:33:27,231 - #20 int
INFO  20:33:27,231 - #20 m
INFO  20:33:27,231 - #40 ;
INFO  20:33:27,232 - #20 int
INFO  20:33:27,232 - #20 k
INFO  20:33:27,232 - #40 ;
INFO  20:33:27,232 - #47 {
INFO  20:33:27,232 - #20 g
INFO  20:33:27,232 - #37 =
INFO  20:33:27,232 - #20 N
INFO  20:33:27,233 - #40 ;
INFO  20:33:27,233 - #20 g
INFO  20:33:27,234 - #38 ++
INFO  20:33:27,234 - #40 ;
INFO  20:33:27,234 - #20 k
INFO  20:33:27,234 - #37 =
INFO  20:33:27,234 - #20 g
INFO  20:33:27,234 - #40 ;
INFO  20:33:27,234 - #20 k
INFO  20:33:27,234 - #38 ++
INFO  20:33:27,234 - #40 ;
INFO  20:33:27,234 - #13 print
INFO  20:33:27,234 - #43 (
INFO  20:33:27,234 - #20 k
INFO  20:33:27,235 - #44 )
INFO  20:33:27,235 - #40 ;
INFO  20:33:27,235 - #48 }
INFO  20:33:27,236 - #48 }
INFO  20:33:27,237 - 

================SINTAKSNO STABLO====================


INFO  20:33:27,240 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:33:27,241 - 

================SEMANTICKA OBRADA====================


INFO  20:33:27,255 - Deklarisana konstanta 'N' na liniji 2
INFO  20:33:27,255 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:33:27,255 - Deklarisan globalni niz 'niz' na liniji 5
INFO  20:33:27,256 - Deklarisana promenljiva 'm' na liniji 8
INFO  20:33:27,256 - Deklarisana promenljiva 'k' na liniji 9
INFO  20:33:27,256 - ===================================
INFO  20:33:27,256 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:33:27,258 - 
getVarConst N
ERROR 20:33:27,262 - 
getVarConst N
ERROR 20:33:27,262 - 
getVarConst g
ERROR 20:33:27,263 - 
getVarConst k
ERROR 20:33:27,263 - Print na liniji 15!
INFO  20:33:27,263 - Parsiranje uspesno zavrseno!
INFO  20:33:39,702 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:33:39,751 - #2 program
INFO  20:33:39,751 - #20 test
INFO  20:33:39,752 - #7 const
INFO  20:33:39,752 - #20 int
INFO  20:33:39,752 - #20 N
INFO  20:33:39,753 - #37 =
INFO  20:33:39,753 - #21 2
INFO  20:33:39,753 - #40 ;
INFO  20:33:39,753 - #20 int
INFO  20:33:39,754 - #20 g
INFO  20:33:39,754 - #40 ;
INFO  20:33:39,754 - #20 int
INFO  20:33:39,754 - #20 niz
INFO  20:33:39,754 - #45 [
INFO  20:33:39,754 - #46 ]
INFO  20:33:39,755 - #40 ;
INFO  20:33:39,755 - #47 {
INFO  20:33:39,755 - #16 void
INFO  20:33:39,755 - #20 main
INFO  20:33:39,755 - #43 (
INFO  20:33:39,755 - #44 )
INFO  20:33:39,755 - #20 int
INFO  20:33:39,755 - #20 m
INFO  20:33:39,756 - #40 ;
INFO  20:33:39,756 - #20 int
INFO  20:33:39,756 - #20 k
INFO  20:33:39,756 - #40 ;
INFO  20:33:39,756 - #47 {
INFO  20:33:39,757 - #20 g
INFO  20:33:39,757 - #37 =
INFO  20:33:39,757 - #20 N
INFO  20:33:39,757 - #40 ;
INFO  20:33:39,758 - #20 g
INFO  20:33:39,758 - #38 ++
INFO  20:33:39,759 - #40 ;
INFO  20:33:39,759 - #20 k
INFO  20:33:39,759 - #37 =
INFO  20:33:39,759 - #20 g
INFO  20:33:39,759 - #40 ;
INFO  20:33:39,759 - #20 k
INFO  20:33:39,759 - #38 ++
INFO  20:33:39,759 - #40 ;
INFO  20:33:39,759 - #13 print
INFO  20:33:39,759 - #43 (
INFO  20:33:39,760 - #20 k
INFO  20:33:39,760 - #44 )
INFO  20:33:39,760 - #40 ;
INFO  20:33:39,760 - #48 }
INFO  20:33:39,761 - #48 }
INFO  20:33:39,762 - 

================SINTAKSNO STABLO====================


INFO  20:33:39,764 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:33:39,764 - 

================SEMANTICKA OBRADA====================


INFO  20:33:39,774 - Deklarisana konstanta 'N' na liniji 2
INFO  20:33:39,774 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:33:39,774 - Deklarisan globalni niz 'niz' na liniji 5
INFO  20:33:39,775 - Deklarisana promenljiva 'm' na liniji 8
INFO  20:33:39,775 - Deklarisana promenljiva 'k' na liniji 9
INFO  20:33:39,775 - ===================================
INFO  20:33:39,775 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:33:39,777 - getVarConst N
ERROR 20:33:39,781 - getVarConst N
ERROR 20:33:39,781 - getVarConst g
ERROR 20:33:39,782 - getVarConst k
ERROR 20:33:39,782 - Print na liniji 15!
INFO  20:33:39,782 - Parsiranje uspesno zavrseno!
INFO  20:34:05,264 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:34:05,314 - #2 program
INFO  20:34:05,314 - #20 test
INFO  20:34:05,315 - #7 const
INFO  20:34:05,316 - #20 int
INFO  20:34:05,316 - #20 N
INFO  20:34:05,317 - #37 =
INFO  20:34:05,317 - #21 2
INFO  20:34:05,317 - #40 ;
INFO  20:34:05,318 - #20 int
INFO  20:34:05,318 - #20 g
INFO  20:34:05,318 - #40 ;
INFO  20:34:05,319 - #20 int
INFO  20:34:05,319 - #20 niz
INFO  20:34:05,319 - #45 [
INFO  20:34:05,319 - #46 ]
INFO  20:34:05,319 - #40 ;
INFO  20:34:05,319 - #47 {
INFO  20:34:05,319 - #16 void
INFO  20:34:05,319 - #20 main
INFO  20:34:05,319 - #43 (
INFO  20:34:05,320 - #44 )
INFO  20:34:05,320 - #20 int
INFO  20:34:05,320 - #20 m
INFO  20:34:05,320 - #40 ;
INFO  20:34:05,320 - #20 int
INFO  20:34:05,320 - #20 k
INFO  20:34:05,321 - #40 ;
INFO  20:34:05,321 - #47 {
INFO  20:34:05,321 - #20 g
INFO  20:34:05,321 - #37 =
INFO  20:34:05,321 - #20 N
INFO  20:34:05,321 - #40 ;
INFO  20:34:05,322 - #20 g
INFO  20:34:05,322 - #38 ++
INFO  20:34:05,322 - #40 ;
INFO  20:34:05,322 - #20 k
INFO  20:34:05,322 - #37 =
INFO  20:34:05,323 - #20 g
INFO  20:34:05,323 - #40 ;
INFO  20:34:05,323 - #20 k
INFO  20:34:05,323 - #38 ++
INFO  20:34:05,323 - #40 ;
INFO  20:34:05,323 - #13 print
INFO  20:34:05,323 - #43 (
INFO  20:34:05,323 - #20 k
INFO  20:34:05,323 - #44 )
INFO  20:34:05,324 - #40 ;
INFO  20:34:05,324 - #48 }
INFO  20:34:05,324 - #48 }
INFO  20:34:05,325 - 

================SINTAKSNO STABLO====================


INFO  20:34:05,326 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:34:05,327 - 

================SEMANTICKA OBRADA====================


INFO  20:34:05,338 - Deklarisana konstanta 'N' na liniji 2
INFO  20:34:05,338 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:34:05,338 - Deklarisan globalni niz 'niz' na liniji 5
INFO  20:34:05,339 - Deklarisana promenljiva 'm' na liniji 8
INFO  20:34:05,339 - Deklarisana promenljiva 'k' na liniji 9
INFO  20:34:05,340 - ===================================
INFO  20:34:05,340 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:34:05,342 - getVarConst N
ERROR 20:34:05,348 - getVarConst N
ERROR 20:34:05,348 - getVarConst g
ERROR 20:34:05,348 - getVarConst k
ERROR 20:34:05,348 - currentMethod Symbols 
ERROR 20:34:05,348 - Print na liniji 15!
INFO  20:34:05,349 - Parsiranje uspesno zavrseno!
INFO  20:39:00,622 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:39:00,680 - #2 program
INFO  20:39:00,680 - #20 test
INFO  20:39:00,680 - #7 const
INFO  20:39:00,681 - #20 int
INFO  20:39:00,681 - #20 N
INFO  20:39:00,682 - #37 =
INFO  20:39:00,682 - #21 2
INFO  20:39:00,682 - #40 ;
INFO  20:39:00,683 - #20 int
INFO  20:39:00,683 - #20 g
INFO  20:39:00,683 - #40 ;
INFO  20:39:00,684 - #20 int
INFO  20:39:00,684 - #20 niz
INFO  20:39:00,684 - #45 [
INFO  20:39:00,684 - #46 ]
INFO  20:39:00,684 - #40 ;
INFO  20:39:00,684 - #47 {
INFO  20:39:00,684 - #16 void
INFO  20:39:00,685 - #20 main
INFO  20:39:00,685 - #43 (
INFO  20:39:00,685 - #44 )
INFO  20:39:00,685 - #20 int
INFO  20:39:00,685 - #20 m
INFO  20:39:00,685 - #40 ;
INFO  20:39:00,686 - #20 int
INFO  20:39:00,686 - #20 k
INFO  20:39:00,686 - #40 ;
INFO  20:39:00,686 - #47 {
INFO  20:39:00,687 - #20 g
INFO  20:39:00,687 - #37 =
INFO  20:39:00,687 - #20 N
INFO  20:39:00,687 - #40 ;
INFO  20:39:00,688 - #20 g
INFO  20:39:00,688 - #38 ++
INFO  20:39:00,688 - #40 ;
INFO  20:39:00,688 - #20 k
INFO  20:39:00,688 - #37 =
INFO  20:39:00,688 - #20 g
INFO  20:39:00,688 - #40 ;
INFO  20:39:00,689 - #20 k
INFO  20:39:00,689 - #38 ++
INFO  20:39:00,689 - #40 ;
INFO  20:39:00,689 - #13 print
INFO  20:39:00,689 - #43 (
INFO  20:39:00,689 - #20 k
INFO  20:39:00,689 - #44 )
INFO  20:39:00,689 - #40 ;
INFO  20:39:00,689 - #48 }
INFO  20:39:00,689 - #48 }
INFO  20:39:00,691 - 

================SINTAKSNO STABLO====================


INFO  20:39:00,692 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:39:00,693 - 

================SEMANTICKA OBRADA====================


INFO  20:39:00,708 - Deklarisana konstanta 'N' na liniji 2
INFO  20:39:00,708 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:39:00,709 - Deklarisan globalni niz 'niz' na liniji 5
INFO  20:39:00,709 - Deklarisana promenljiva 'm' na liniji 8
INFO  20:39:00,709 - Deklarisana promenljiva 'k' na liniji 9
INFO  20:39:00,710 - ===================================
INFO  20:39:00,710 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:39:00,712 - getVarConst N
ERROR 20:39:00,716 - getVarConst N
ERROR 20:39:00,716 - getVarConst g
ERROR 20:39:00,716 - getVarConst k
ERROR 20:39:00,716 - Print na liniji 15!
INFO  20:39:00,717 - Parsiranje uspesno zavrseno!
INFO  20:39:39,897 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:39:39,939 - #2 program
INFO  20:39:39,939 - #20 test
INFO  20:39:39,939 - #7 const
INFO  20:39:39,940 - #20 int
INFO  20:39:39,940 - #20 N
INFO  20:39:39,941 - #37 =
INFO  20:39:39,941 - #21 2
INFO  20:39:39,941 - #40 ;
INFO  20:39:39,941 - #20 int
INFO  20:39:39,942 - #20 g
INFO  20:39:39,942 - #40 ;
INFO  20:39:39,942 - #20 int
INFO  20:39:39,942 - #20 niz
INFO  20:39:39,942 - #45 [
INFO  20:39:39,942 - #46 ]
INFO  20:39:39,942 - #40 ;
INFO  20:39:39,942 - #47 {
INFO  20:39:39,942 - #16 void
INFO  20:39:39,942 - #20 main
INFO  20:39:39,942 - #43 (
INFO  20:39:39,943 - #44 )
INFO  20:39:39,943 - #20 int
INFO  20:39:39,943 - #20 m
INFO  20:39:39,943 - #40 ;
INFO  20:39:39,943 - #20 int
INFO  20:39:39,943 - #20 k
INFO  20:39:39,943 - #40 ;
INFO  20:39:39,943 - #47 {
INFO  20:39:39,944 - #20 g
INFO  20:39:39,944 - #37 =
INFO  20:39:39,944 - #20 N
INFO  20:39:39,944 - #40 ;
INFO  20:39:39,945 - #20 g
INFO  20:39:39,945 - #38 ++
INFO  20:39:39,945 - #40 ;
INFO  20:39:39,945 - #20 k
INFO  20:39:39,945 - #37 =
INFO  20:39:39,945 - #20 g
INFO  20:39:39,945 - #40 ;
INFO  20:39:39,945 - #20 k
INFO  20:39:39,945 - #38 ++
INFO  20:39:39,946 - #40 ;
INFO  20:39:39,946 - #13 print
INFO  20:39:39,946 - #43 (
INFO  20:39:39,946 - #20 k
INFO  20:39:39,946 - #44 )
INFO  20:39:39,946 - #40 ;
INFO  20:39:39,946 - #48 }
INFO  20:39:39,947 - #48 }
INFO  20:39:39,947 - 

================SINTAKSNO STABLO====================


INFO  20:39:39,948 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:39:39,949 - 

================SEMANTICKA OBRADA====================


INFO  20:39:39,962 - Deklarisana konstanta 'N' na liniji 2
INFO  20:39:39,962 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:39:39,962 - Deklarisan globalni niz 'niz' na liniji 5
INFO  20:39:39,963 - Deklarisana promenljiva 'm' na liniji 8
INFO  20:39:39,963 - Deklarisana promenljiva 'k' na liniji 9
INFO  20:39:39,964 - ===================================
INFO  20:39:39,964 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
ERROR 20:39:39,969 - Print na liniji 15!
INFO  20:39:39,970 - Parsiranje uspesno zavrseno!
INFO  20:40:27,731 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:40:27,795 - #2 program
INFO  20:40:27,796 - #20 test
INFO  20:40:27,796 - #7 const
INFO  20:40:27,797 - #20 int
INFO  20:40:27,797 - #20 N
INFO  20:40:27,798 - #37 =
INFO  20:40:27,798 - #21 2
INFO  20:40:27,798 - #40 ;
INFO  20:40:27,799 - #20 int
INFO  20:40:27,800 - #20 g
INFO  20:40:27,800 - #40 ;
INFO  20:40:27,800 - #20 int
INFO  20:40:27,800 - #20 niz
INFO  20:40:27,801 - #45 [
INFO  20:40:27,801 - #46 ]
INFO  20:40:27,801 - #40 ;
INFO  20:40:27,801 - #47 {
INFO  20:40:27,801 - #16 void
INFO  20:40:27,801 - #20 main
INFO  20:40:27,801 - #43 (
INFO  20:40:27,802 - #44 )
INFO  20:40:27,802 - #20 int
INFO  20:40:27,802 - #20 m
INFO  20:40:27,802 - #40 ;
INFO  20:40:27,802 - #20 int
INFO  20:40:27,803 - #20 k
INFO  20:40:27,803 - #40 ;
INFO  20:40:27,803 - #47 {
INFO  20:40:27,804 - #20 g
INFO  20:40:27,804 - #37 =
INFO  20:40:27,805 - #20 N
INFO  20:40:27,805 - #40 ;
INFO  20:40:27,806 - #20 g
INFO  20:40:27,807 - #38 ++
INFO  20:40:27,807 - #40 ;
INFO  20:40:27,808 - #20 k
INFO  20:40:27,808 - #37 =
INFO  20:40:27,808 - #20 g
INFO  20:40:27,808 - #40 ;
INFO  20:40:27,808 - #20 k
INFO  20:40:27,808 - #38 ++
INFO  20:40:27,809 - #40 ;
INFO  20:40:27,809 - #13 print
INFO  20:40:27,809 - #43 (
INFO  20:40:27,809 - #20 k
INFO  20:40:27,809 - #44 )
INFO  20:40:27,809 - #40 ;
INFO  20:40:27,810 - #48 }
INFO  20:40:27,810 - #48 }
INFO  20:40:27,811 - 

================SINTAKSNO STABLO====================


INFO  20:40:27,813 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVarNormal(
             g
            ) [GlobalVarNormal]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVarArray(
           niz
          ) [GlobalVarArray]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:40:27,815 - 

================SEMANTICKA OBRADA====================


INFO  20:40:27,825 - Deklarisana konstanta 'N' na liniji 2
INFO  20:40:27,826 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:40:27,826 - Deklarisan globalni niz 'niz' na liniji 5
INFO  20:40:27,826 - Deklarisana promenljiva 'm' na liniji 8
INFO  20:40:27,827 - Deklarisana promenljiva 'k' na liniji 9
INFO  20:40:27,828 - ===================================
INFO  20:40:27,828 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  20:40:27,837 - Parsiranje uspesno zavrseno!
INFO  20:48:35,260 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  20:48:35,327 - #2 program
INFO  20:48:35,328 - #20 test
INFO  20:48:35,328 - #7 const
INFO  20:48:35,329 - #20 int
INFO  20:48:35,329 - #20 N
INFO  20:48:35,329 - #37 =
INFO  20:48:35,329 - #21 2
INFO  20:48:35,329 - #40 ;
INFO  20:48:35,330 - #20 int
INFO  20:48:35,330 - #20 g
INFO  20:48:35,330 - #40 ;
INFO  20:48:35,331 - #20 int
INFO  20:48:35,331 - #20 niz
INFO  20:48:35,331 - #45 [
INFO  20:48:35,331 - #46 ]
INFO  20:48:35,331 - #40 ;
INFO  20:48:35,331 - #47 {
INFO  20:48:35,332 - #16 void
INFO  20:48:35,332 - #20 main
INFO  20:48:35,332 - #43 (
INFO  20:48:35,332 - #44 )
INFO  20:48:35,332 - #20 int
INFO  20:48:35,332 - #20 m
INFO  20:48:35,333 - #40 ;
INFO  20:48:35,333 - #20 int
INFO  20:48:35,333 - #20 k
INFO  20:48:35,334 - #40 ;
INFO  20:48:35,334 - #47 {
INFO  20:48:35,334 - #20 g
INFO  20:48:35,334 - #37 =
INFO  20:48:35,335 - #20 N
INFO  20:48:35,335 - #40 ;
INFO  20:48:35,336 - #20 g
INFO  20:48:35,336 - #38 ++
INFO  20:48:35,336 - #40 ;
INFO  20:48:35,337 - #20 k
INFO  20:48:35,337 - #37 =
INFO  20:48:35,337 - #20 g
INFO  20:48:35,337 - #40 ;
INFO  20:48:35,337 - #20 k
INFO  20:48:35,338 - #38 ++
INFO  20:48:35,338 - #40 ;
INFO  20:48:35,338 - #13 print
INFO  20:48:35,338 - #43 (
INFO  20:48:35,338 - #20 k
INFO  20:48:35,338 - #44 )
INFO  20:48:35,338 - #40 ;
INFO  20:48:35,338 - #48 }
INFO  20:48:35,339 - #48 }
INFO  20:48:35,340 - 

================SINTAKSNO STABLO====================


INFO  20:48:35,342 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclMulti(
    ProgramDeclMulti(
      ProgramDeclMulti(
        ProgramDeclEps(
        ) [ProgramDeclEps]
        PartConstDeclaration(
          ConstDeclaration(
            Type(
             int
            ) [Type]
            ConstSingle(
              ConstPart(
               N
                NumConst(
                 2
                ) [NumConst]
              ) [ConstPart]
            ) [ConstSingle]
          ) [ConstDeclaration]
        ) [PartConstDeclaration]
      ) [ProgramDeclMulti]
      PartVarDeclaration(
        GlobalVarDeclaration(
          Type(
           int
          ) [Type]
          GlobalVarSingle(
            GlobalVar(
              VarNormal(
               g
              ) [VarNormal]
            ) [GlobalVar]
          ) [GlobalVarSingle]
        ) [GlobalVarDeclaration]
      ) [PartVarDeclaration]
    ) [ProgramDeclMulti]
    PartVarDeclaration(
      GlobalVarDeclaration(
        Type(
         int
        ) [Type]
        GlobalVarSingle(
          GlobalVar(
            VarArray(
             niz
            ) [VarArray]
          ) [GlobalVar]
        ) [GlobalVarSingle]
      ) [GlobalVarDeclaration]
    ) [PartVarDeclaration]
  ) [ProgramDeclMulti]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid4(
        MethodVoidName(
         main
        ) [MethodVoidName]
        VarDeclMulti(
          VarDeclSingle(
            VarDeclaration(
              Type(
               int
              ) [Type]
              VarSingle(
                VarNormal(
                 m
                ) [VarNormal]
              ) [VarSingle]
            ) [VarDeclaration]
          ) [VarDeclSingle]
          VarDeclaration(
            Type(
             int
            ) [Type]
            VarSingle(
              VarNormal(
               k
              ) [VarNormal]
            ) [VarSingle]
          ) [VarDeclaration]
        ) [VarDeclMulti]
        StatementMulti(
          StatementMulti(
            StatementMulti(
              StatementMulti(
                StatementSingle(
                  StmtDesign(
                    DesignatorAssignment(
                      DesignatorSimple(
                       g
                      ) [DesignatorSimple]
                      AssignmentExpr(
                        ExprOne(
                          ExprSingle(
                            TermSingle(
                              FactorDesignator(
                                DesignatorSimple(
                                 N
                                ) [DesignatorSimple]
                              ) [FactorDesignator]
                            ) [TermSingle]
                          ) [ExprSingle]
                        ) [ExprOne]
                      ) [AssignmentExpr]
                    ) [DesignatorAssignment]
                  ) [StmtDesign]
                ) [StatementSingle]
                StmtDesign(
                  DesignatorIncrement(
                    DesignatorSimple(
                     g
                    ) [DesignatorSimple]
                  ) [DesignatorIncrement]
                ) [StmtDesign]
              ) [StatementMulti]
              StmtDesign(
                DesignatorAssignment(
                  DesignatorSimple(
                   k
                  ) [DesignatorSimple]
                  AssignmentExpr(
                    ExprOne(
                      ExprSingle(
                        TermSingle(
                          FactorDesignator(
                            DesignatorSimple(
                             g
                            ) [DesignatorSimple]
                          ) [FactorDesignator]
                        ) [TermSingle]
                      ) [ExprSingle]
                    ) [ExprOne]
                  ) [AssignmentExpr]
                ) [DesignatorAssignment]
              ) [StmtDesign]
            ) [StatementMulti]
            StmtDesign(
              DesignatorIncrement(
                DesignatorSimple(
                 k
                ) [DesignatorSimple]
              ) [DesignatorIncrement]
            ) [StmtDesign]
          ) [StatementMulti]
          StmtPrint(
            ExprOne(
              ExprSingle(
                TermSingle(
                  FactorDesignator(
                    DesignatorSimple(
                     k
                    ) [DesignatorSimple]
                  ) [FactorDesignator]
                ) [TermSingle]
              ) [ExprSingle]
            ) [ExprOne]
          ) [StmtPrint]
        ) [StatementMulti]
      ) [MethodVoid4]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  20:48:35,343 - 

================SEMANTICKA OBRADA====================


INFO  20:48:35,359 - Deklarisana konstanta 'N' na liniji 2
INFO  20:48:35,360 - Deklarisana globalna promenljiva 'g' na liniji 3
INFO  20:48:35,360 - Deklarisan globalni niz 'niz' na liniji 5
INFO  20:48:35,361 - Deklarisana promenljiva 'm' na liniji 8
INFO  20:48:35,361 - Deklarisana promenljiva 'k' na liniji 9
INFO  20:48:35,362 - ===================================
INFO  20:48:35,362 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  20:48:35,371 - Parsiranje uspesno zavrseno!
INFO  21:04:51,841 - Kompajliranje ulaznog fajla C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.mj
INFO  21:04:51,886 - #2 program
INFO  21:04:51,886 - #20 test
INFO  21:04:51,886 - #47 {
INFO  21:04:51,887 - #16 void
INFO  21:04:51,887 - #20 main
INFO  21:04:51,887 - #43 (
INFO  21:04:51,887 - #44 )
INFO  21:04:51,887 - #47 {
INFO  21:04:51,887 - #48 }
INFO  21:04:51,887 - #48 }
INFO  21:04:51,888 - 

================SINTAKSNO STABLO====================


INFO  21:04:51,888 - Program(
  ProgName(
   test
  ) [ProgName]
  ProgramDeclEps(
  ) [ProgramDeclEps]
  MethodDeclSingle(
    MethodVoidDeclaration(
      MethodVoid7(
        MethodVoidName(
         main
        ) [MethodVoidName]
      ) [MethodVoid7]
    ) [MethodVoidDeclaration]
  ) [MethodDeclSingle]
) [Program]
INFO  21:04:51,888 - 

================SEMANTICKA OBRADA====================


INFO  21:04:51,898 - ===================================
INFO  21:04:51,898 - Generisanje MJ bajtkoda: C:\Users\Anja\Desktop\PP1 projekat\workspace\MJCompiler\test\program.obj
INFO  21:04:51,904 - Parsiranje uspesno zavrseno!
