program MJProgram
	// int x + ;  // sintaksna greska A1
	int y;
	const int nula = 0;
	const int jedan = 1;
	const int pet = 5;

	int niz[];
	char nizch[];
{
	// int sum(int z, int d + )  // sintaksna greska B1
	// {
	// 	return z + d;
	// }
	
	void main()
		int bodovi;
		bool bt;
	 {
		print(1);
		print(2);
		sum(1, 2);
		
		if (bodovi > 1) {
			bodovi = 1;
		}
		
		bodovi = 0;
		bodovi++;
		// bodovi = bodovi + jedan + ; // sintaksna greska A2
		bodovi = bodovi * pet;
		bodovi--;
		print(bodovi); 
		
		niz = new int[3];
		niz[nula] = jedan;
		niz[1] = 2;
		niz[niz[jedan]] = niz[niz[0]] * 3;
		bodovi = niz[2]/niz[0];
		print(bodovi); 
		print(niz[2]);
		
		nizch = new char[3];
		nizch[0] = 'a';
		nizch[jedan] = 'b';
		nizch[pet - 3] = 'c';
		print(nizch[1]);
		print(nizch[jedan * 2]);
		
		bodovi = bodovi + (pet * jedan - 1) * bodovi - (3 % 2 + 3 * 2 - 3); 
		print(bodovi);
		
		read(bodovi);
		bt = true;
		
		print(bt ? bodovi : bodovi + 10);
		print(false ? bodovi + 20 : bodovi + 30);
		// print(bodovi > 10 ? '+' : '-');
	}
}